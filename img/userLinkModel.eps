%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 44754-timeUserTagLDA.pptx.pdf
%%Creator: Adobe Acrobat 10.1.13
%%For: huangwaleking
%%CreationDate: 1/7/15, 11:51 AM
%%BoundingBox: 0 0 683 265
%%HiResBoundingBox: 0 0 682.0225 264.6247
%%CropBox: 0 0 682.0225 264.6247
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 972 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2015-01-07T03:45:37Z"
   xmp:CreatorTool="pdftopdf filter"
   xmp:ModifyDate="2015-01-07T11:49:37+08:00"
   xmp:MetadataDate="2015-01-07T11:49:37+08:00"
   pdf:Producer="Mac OS X 10.10.1 Quartz PDFContext"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:95ded8de-ac56-3343-bd2d-ae6304f5fd45"
   xmpMM:InstanceID="uuid:84ebc250-b965-0544-9781-2ba52b6ff7fd">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">timeUserTagLDA.pptx</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -264.625 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 264.625 li
682.023 264.625 li
682.023 0 li
cp
clp
gsave
-10.9124 506.514 mo
781.088 506.514 li
781.088 -105.486 li
-10.9124 -105.486 li
-10.9124 506.514 li
clp
-94.6214 -69.4862 mo
865.378 -69.4862 li
865.378 470.514 li
-94.6214 470.514 li
-94.6214 -69.4862 li
false sop
0 0 0 0 cmyk
ef
2 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
216.102 79.476 mo
216.102 59.5937 232.22 43.476 252.102 43.476 cv
271.985 43.476 288.102 59.5937 288.102 79.476 cv
288.102 99.3582 271.985 115.476 252.102 115.476 cv
232.22 115.476 216.102 99.3582 216.102 79.476 cv
cp
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: LWYAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /LWYAAA+Calibri
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000051c6670
676d00000000000005d80000091a676c7966000000000000344000001d66
686561640000000000000ef400000036686865610000000000000f2c0000
0024686d74780000000000000f50000000686c6f63610000000000000fb8
000000366d6178700000000000000ff0000000206e616d65000000000000
101000000020707265700000000000001030000024106764697200000000
00000000000000000000079e0000fe930000000000000000000000000050
006a0073008000800086008d009300bf00db006200830093009900a000a6
00a900b000c100c900d70000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe79056d
000c03b7000600130000fffaffedfea6ffedfeb8050e000600130000fffa
ffedfe93050e00130420000600130000fffaffedff10ffee050e00130420
000600130000fffaffeefe93ff10feb80612000a050e0006000d02d2fffa
fff301fdfffa023f0006000dff36fffafff302870006000f0000fffafff1
079efeaffea700000000000000000000000000500051005a005b005c005d
006000610062006400680069006a006b006c006d006e00680069006e0060
0067006e00660068005f00610063006400660068006a006b006c006d006e
006f0070006f00720074007500760076007000720073007400750076006f
007000710072007300750077007700780079007a007b007c007d007b007c
007d00770079007a007c0078007a007c007d0078007d007e007f00800081
0082007e007f00810082007e007f00800081008200830084008500860087
008800890083008400850086008700880089008300840085008600870088
008900890086008700880089008a008b008c008d008e008f008a008b008c
008d008e008f008a008b008c008d008e008f008d008a008b008c008d008e
008f0090009000910092009300940095009600980099009b009c00900091
00920093009400950096009700980099009a009e009f00a6009000910095
0098009f009000910096009700bc00c600b500ae00af00b6006800690063
006a006f00700071006f0070007100720066006c006d00700079007c007f
00830086008700880089008a0074007500760077007a007b007c007d007e
008200850086008a0088008900830078007b008200830086008700880089
00760079007a007c007d007e0083008500880089008a0073007400750077
007a007d00880089008a008b008c008d008e00900094008b008c008d0091
0092009300940095008c008d00910095008f009000910092009300940095
008b008c008d008e008f009000910092009300940095008b008c008d008e
008f00900091009200930096009700980099009c0096009700980099009a
009b009c00960099009a009c0096009700980099009a009b009c00970098
0099009a009b009c009700980099009a009b009c0096009d00a000a1009d
009e009f00a000a100a2009d009f00a000a1009f00a2009d009e009f00a0
00a100a2009d009e00a000a1009d009e00a000a2009d00a300a400a500a6
00a700a300a400a600a700a300a400a500a600a700a600a300a700a800a9
00aa00ab00ac00ac00a800a900aa00ab00ac00a800a900aa00ab00ac00a8
00aa00ab00ac00ae00ad00ae00af00b000b100b200b300b400b500b600b7
00b800ad00ae00ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700b800b300ae00af
00b000b200b500b600b700b800b900ba00bb00bc00be00c000c100c200c2
00b900ba00bb00bc00bd00be00bf00c000c100c200c400ba00bb00be00bf
00c000c200c300c400b900ba00bf00c000c200c600c700c900ca00cb00cc
00cf00c500c700ce00c500c700c800cf00d000d200d300d7010d00d000d1
00e900d000fd00d005e4000e0041000005ba009c009c005e005e4047645f
5e5d5c5b5a59585554535251504f4e4d4c4b4a494847464544434241403f
3e3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b0042651582320b00d4423
5921212d2c20204518684420b001602045b04676688a4560442d2c01b10b
0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b028
2370b10228453ab10200080d2d2c2045b00325456164b050515845441b21
21592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0
008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a0345
8a8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c
4b525845441b2121592d2c01b005251023208af500b0016023edec2d2c01
b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b0
01600110203c003c2d2c20b001610110203c003c2d2c00b00743b006430b
2d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621b
b200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f
2b59b002602d2c0c6423648bb84000626023212d2c452345602345602345
6023766818b08062202d2cb00426b00426b00425b0042545234520b00326
6062636820b0032661658a2344442d2c2045b0005458b040442045b04061
441b2121592d2c45b1302f4523456160b0016069442d2c4b5158b02f2370
b01423421b2121592d2c4b515820b0032545695358441b2121591b212159
2d2c45b01443b0006063b0016069442d2cb02f45442d2c452320458a6044
2d2c45234560442d2c4b235158b90033ffe0b134201bb333003400594444
2d2cb0164358b00326458a586466b01f601b64b020606620581b21b04059
b001615923586559b02923442310b029e01b2121212121592d2cb0164358
b004254564b020606620581b21b04059b0016123586559b0292344b00425
b00725082058021b0359b0052510b004252046b0042523423cb0072510b0
06252046b00425b0016023423c2058011b0059b0052510b00425b029e0b0
072510b00625b029e0b00425b00725082058021b0359b00425b003254348
b00625b00325b0016043481b2159212121212121212d2cb0164358b00425
4564b020606620581b21b04059b0016123581b6559b0292344b00525b008
25082058021b0359b0042510b005252046b0042523423cb00425b0072508
b0072510b006252046b00425b0016023423c2058011b0059b0042510b005
25b029e0b02920456544b0072510b00625b029e0b00525b0082508205802
1b0359b00525b003254348b00425b0072508b00625b00325b0016043481b
2159212121212121212d2c02b00425202046b004252342b0052508b00325
4548212121212d2c02b0032520b0042508b0022543482121212d2c452320
451820b00050205823652359236820b040505821b04059235865598a6044
2d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b21
21592d2c4b53234b515a58381b2121592d2cb000214b5458381b2121592d
2cb002435458b0462b1b21212121592d2cb002435458b0472b1b21212159
2d2cb002435458b0482b1b21212121592d2cb002435458b0492b1b212121
592d2c208a08234b538a4b515a5823381b2121592d2c0020b200400325b0
062649618b3812342d2c014623466023466123201020468a61b8ff80628a
b140408a704560683a2d2c208a2349648a2353583c1b21592d2c4b52587d
1b7a592d2cb012004b014b54422d2cb1020042b123018851b1400188535a
58b910000020885458b202010243604259b12401885158b9200000408854
58b2020202436042b12401885458b2022002436042004b014b5258b20208
02436042591bb940000080885458b202040243604259b94000008063b801
00885458b202080243604259b94000010063b80200885458b20210024360
4259b94000020063b80400885458b202400243604259595959592d2c4518
68234b51582320452064b04050587c59688a6059442d2cb00016b00225b0
022501b001233e00b002233eb10102060cb00a236542b00b234201b00123
3f00b002233fb10102060cb006236542b0072342b00116012d2c20b82000
628a6023622d2cb0072558001b0159b0042510b00325b0022520b8ffff54
5821cd1bed5921b006255cb006255a58b0092b5920b005254ab0042547b0
04254760b0062547b0806361b00225b0005558b00325b00725496359b008
2558001b0159b00425b0062549b009255cb009255a58b0092b59b0072546
b0806361b0032520b0005558631b2159612320b0005558b080631b21b080
59b0592bb006255c586959b00425202010b00048233ab0062658001b0159
b0052658b003252f598a12233221212d2cb00625b00a2587b00625b00925
4ab0005358b00625b00a251bb00925b0072559b00225b00225070cb00525
6323b00625636020b94000040063535821b00426b00426b00a1bb9400004
0063655158b0042665b0042665b00a1bb00426b00426b000b00325b00325
0b0d0ab0092eb00725b007250b0d0ab00b2eb00525b0052507595920b000
5558b00525b0052587b00725b007250bb0092510b00b25b0092620b8ffff
545821cd1bed59b00525b0052507b00825b00b254923b00625b0062587b0
0a2510b00b25c15920b00051b800522378b00161b00225b00725b0072507
b00a25b00d254961b08062b00525b005250bb00a252338b00625b0062587
b00825b008250bb00a2510b00b25c4b00625b0062507b00925b00c2549b0
032554b8ffa723792121212121212121212121212d2c23b0005458b94000
00001bb900004000598ab0005458b9400000001bb90000400059b05b2b2d
2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a080d8ab0
005458b9400000001bb90000400059b05b2b2d2cb00426b00426080db004
26b00426080db05b2b2d2c204569442d00000001000000059eb88df7cb11
5f0f3cf50019080000000000bbeb7ccc00000000c787a88bfbfafd8b09ec
07b600000009000200000000000000010000079efdda00000aa0fbfafaa0
09ec00010000000000000000000000000000001a040e0000042800ac035d
00ac06d700ac052a00ac052200aa03d5005c0434006003fb005d01d60085
03a3009901d6009906640099043400990438005a0434009902ca00990321
00510434009405b8003503290059048a00610392001804410060046c0028
040e0048000000a10120016e021b02b6034103f00487052805a1063b067e
075f07f0087e0915098e0a540ae40bbc0c1b0cb70d210d7e0e000eb30000
00010000001a0120001000c3000700020010002f00650000119001820004
00010000000100120001000000000006000e00005949524357472b43616c
69627269b2090320b80284b40918014a20b80283b40918014a20b80282b4
0918014a20b80281b40918014a20b80280b40918014a20b8027fb4091801
4a20b8027eb40918014a20b8027db40918014a20b8027cb40918014a20b8
027bb40918014a20b8027ab40918014a20b80279b40918014a20b80278b4
0918014a20b80277b40918014a20b80276b40918014a20b80275b4091801
4a20b80274b40918014a20b80273b40918014a20b80271b40918014a20b8
0270b40918014a20b8026fb40918014a20b8026eb40918014a20b8026db4
0918014a20b8026cb40918014a20b8026bb40918014a20b8026ab4091801
4a20b80269b40918014a20b80268b40918014a20b80267b40918014a20b8
0266b40918014a20b80265b40918014a20b80264b40918014a20b80263b4
0918014a20b80262b40918014a20b80261b40918014a20b80260b4091801
4a20b8025fb40918014a20b8025eb40918014a20b8025db40918014a20b8
025cb40918014a20b8025bb40918014a20b8025ab40918014a20b80259b4
0918014a20b80258b40918014a20b80257b40918014a20b80256b4091801
4a20b80255b40918014a20b80254b40918014a20b80253b40918014a20b8
0252b40918014a20b80251b40918014a20b80250b40918014a20b8024fb4
0918014a20b8024eb40918014a20b8024db40918014a20b8024cb4091801
4a20b8024bb40918014a20b8024ab40918014a20b80249b40918014a20b8
0248b40918014a20b80247b40918014a20b80246b40918014a20b80245b4
0918014a20b80244b40918014a20b80243b40918014a20b80242b4091801
4a20b80241b40918014a20b80240b40918014a20b8023fb40918014a20b8
023eb40918014a20b8023db40918014a20b8023cb40918014a20b8023bb4
0918014a20b8023ab40918014a20b80239b40918014a20b80238b4091801
4a20b80237b40918014a20b80236b40918014a20b80235b40918014a20b8
0234b40918014a20b80233b40918014a20b80232b40918014a20b80231b4
0918014a20b80230b40918014a20b8022fb40918014a20b8022eb4091801
4a20b8022db40918014a20b8022cb40918014a20b8022bb40918014a20b8
022ab40918014a20b80229b40918014a20b80228b40918014a20b80227b4
0918014a20b80226b40918014a20b80225b40918014a20b80224b4091801
4a20b80223b40918014a20b80222b40918014a20b80221b40918014a20b8
0220b40918014a20b8021fb40918014a20b8021eb40918014a20b8021db4
0918014a20b8021cb40918014a20b8021bb40918014a20b8021ab4091801
4a20b80219b40918014a20b80218b40918014a20b80217b40918014a20b8
0216b40918014a20b80215b40918014a20b80214b40918014a20b80213b4
0918014a20b80212b40918014a20b80211b40918014a20b80210b4091801
4a20b8020fb40918014a20b8020eb40918014a20b8020db40918014a20b8
020cb40918014a20b8020bb40918014a20b8020ab40918014a20b80209b4
0918014a20b80208b40918014a20b80207b40918014a20b80206b4091801
4a20b80205b40918014a20b80204b40918014a20b80203b40918014a20b8
0202b40918014a20b80201b40918014a20b80200b40918014a20b801ffb4
0918014a20b801feb40918014a20b801fdb40918014a20b801fcb4091801
4a20b801fbb40918014a20b801fab40918014a20b801f9b40918014a20b8
01f8b40918014a20b801f7b40918014a20b801f6b40918014a20b801f5b4
0918014a20b801f4b40918014a20b801f3b40918014a20b801f2b4091801
4a20b801f1b40918014a20b801f0b40918014a20b801efb40918014a20b8
01eeb40918014a20b801edb40918014a20b801ecb40918014a20b801ebb4
0918014a20b801eab40918014a20b801e9b40918014a20b801e8b4091801
4a20b801e7b40918014a20b801e6b40918014a20b801e5b40918014a20b8
01e4b40918014a20b801e3b40918014a20b801e2b40918014a20b801e1b4
0918014a20b801e0b40918014a20b801dfb40918014a20b801deb4091801
4a20b801ddb40918014a20b801dcb40918014a20b801dbb40918014a20b8
01dab40918014a20b801d9b40918014a20b801d8b40918014a20b801d7b4
0918014a20b801d6b40918014a20b801d5b40918014a20b801d4b4091801
4a20b801d3b40918014a20b801d2b40918014a20b801d1b40918014a20b8
01d0b40918014a20b801cfb40918014a20b801ceb40918014a20b801cdb4
0918014a20b801ccb40918014a20b801cbb40918014a20b801cab4091801
4a20b801c9b40918014a20b801c8b40918014a20b801c7b40918014a20b8
01c6b40918014a20b801c5b40918014a20b801c4b40918014a20b801c3b4
0918014a20b801c2b40918014a20b801c1b40918014a20b801c0b4091801
4a20b801bfb40918014a20b801beb40918014a20b801bdb40918014a20b8
01bcb40918014a20b801bbb40918014a20b801bab40918014a20b801b9b4
0918014a20b801b8b40918014a20b801b7b40918014a20b801b6b4091801
4a20b801b5b40918014a20b801b4b40918014a20b801b3b40918014a20b8
01b2b40918014a20b801b1b40918014a20b801b0b40918014a20b801afb4
0918014a20b801aeb40918014a20b801adb40918014a20b801acb4091801
4a20b801abb40918014a20b801aab40918014a20b801a9b40918014a20b8
01a8b40918014a20b801a7b40918014a20b801a6b40918014a20b801a5b4
0918014a20b801a4b40918014a20b801a3b40918014a20b801a2b4091801
4a20b801a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8
019eb40918014a20b8019db40918014a20b8019cb40918014a20b8019bb4
0918014a20b8019ab40918014a20b80199b40918014a20b80198b4091801
4a20b80197b40918014a20b80196b40918014a20b80195b40918014a20b8
0194b40918014a20b80193b40918014a20b80192b40918014a20b80191b4
0918014a20b80190b40918014a20b8018fb40918014a20b8018eb4091801
4a20b8018db40918014a20b8018cb40918014a20b8018bb40918014a20b8
018ab40918014a20b80189b40918014a20b80188b40918014a20b80187b4
0918014a20b80186b40918014a20b80185b40918014a20b80184b4091801
4a20b80183b40918014a20b80182b40918014a20b80181b40918014a20b8
0180b40918014a20b8017fb40918014a20b8017eb40918014a20b8017db4
0918014a20b8017cb40918014a20b8017bb40918014a20b8017ab4091801
4a20b80179b40918014a20b80178b40918014a20b80177b40918014a20b8
0176b40918014a20b80175b40918014a20b80174b40918014a20b80173b4
0918014a20b80172b40918014a20b80171b40918014a20b80170b4091801
4a20b8016fb40918014a20b8016eb40918014a20b8016db40918014a20b8
016cb40918014a20b8016bb40918014a20b8016ab40918014a20b80169b4
0918014a20b80168b40918014a20b80167b40918014a20b80166b4091801
4a20b80165b40918014a20b80164b40918014a20b80163b40918014a20b8
0162b40918014a20b80161b40918014a20b80160b40918014a20b8015fb4
0918014a20b8015eb40918014a20b8015db40918014a20b8015cb4091801
4a20b8015bb40918014a20b8015ab40918014a20b80159b40918014a20b8
0158b40918014a20b80157b40918014a20b80156b40918014a20b80155b4
0918014a20b80154b40918014a20b80153b40918014a20b80152b4091801
4a20b80150b40918014a20b8014fb40918014a20b8014eb40918014a20b8
014cb40918014a20b8014bb40918014a20b8014ab40918014a20b80149b4
0918014a20b80148b40918014a20b80147b40918014a20b80146b4091801
4a20b80145b40918014a20b80144b40918014a20b80143b30918014ab802
84b21e3e1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b2
1e3e1fb8027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e
1fb8027bb21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb8
0277b21d431fb80276b21d431fb80275b21d411fb80274b21d431fb80273
b21d431fb80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d
421fb8026eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451f
b8026ab21c451fb80269b21c451fb80268b21c451fb80267b21c451fb802
66b21c441fb80265b21c451fb80264b21c451fb80263b21c451fb80262b2
1c451fb80261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c44
1fb8025db21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb8
0259b21c451fb80258b21c451fb80257b21c451fb80256b21c451fb80255
b21c451fb80254b21c451fb80253b21c451fb80252b21c451fb80251b21c
451fb80250b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451f
b8024cb21c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb802
48b21b4a1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b2
1b4c1fb80243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b49
1fb8023fb21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8
023bb21b4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237
b21b4c1fb80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b
4a1fb80232b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1f
b8022eb21b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb802
2ab21b4c1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b2
1b491fb80225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b
1fb80221b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8
021db21b4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219
b21a4e1fb80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a
4e1fb80214b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1f
b80210b21a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb802
0cb21a4e1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b2
1a4f1fb80207b21a4f1fb80206b219501fb80205b219511fb80204b21951
1fb80203b219501fb80202b219511fb80201b219511fb80200b219511fb8
01ffb219511fb801feb219501fb801fdb219511fb801fcb219511fb801fb
b219511fb801fab219501fb801f9b219511fb801f8b219511fb801f7b219
511fb801f6b219511fb801f5b218541fb801f4b218531fb801f3b218541f
b801f2b218541fb801f1b218541fb801f0b218531fb801efb218541fb801
eeb218541fb801edb218541fb801ecb218531fb801ebb218531fb801eab2
18541fb801e9b218541fb801e8b218541fb801e7b218541fb801e6b21853
1fb801e5b218541fb801e4b218531fb801e3b218541fb801e2b218541fb8
01e1b218541fb801e0b218531fb801dfb218531fb801deb218541fb801dd
b218541fb801dcb218541fb801dbb218541fb801dab218531fb801d9b218
541fb801d8b218541fb801d7b217571fb801d6b217561fb801d5b217561f
b801d4b217571fb801d3b217571fb801d2b217571fb801d1b217571fb801
d0b217561fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb2
17571fb801cbb217571fb801cab217561fb801c9b217561fb801c8b21757
1fb801c7b217571fb801c6b217571fb801c5b217571fb801c4b217571fb8
01c3b217561fb801c2b217571fb801c1b217571fb801c0b217571fb801bf
b217561fb801beb217561fb801bdb217571fb801bcb217571fb801bbb217
571fb801bab217571fb801b9b217571fb801b8b217561fb801b7b217571f
b801b6b217571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801
b2b2165b1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2
165b1fb801adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e
1fb801a9b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb8
01a5b2165b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1
b2165b1fb801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db216
3f1fb8019cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1f
b80198b2163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb801
94b2163e1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2
165b1fb8018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f
1fb8018bb2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb8
0187b2165b1fb80186b215611fb80185b215621fb80184b215621fb80183
b215661fb80182b215661fb80181b215551fb80180b215451fb8017fb215
361fb8017eb215361fb8017db215611fb8017cb215621fb8017bb215621f
b8017ab215641fb80179b215661fb80178b215661fb80177b215661fb801
76b215661fb80175b215661fb80174b215661fb80173b215451fb80172b2
15621fb80171b215621fb80170b215631fb8016fb215641fb8016eb21566
1fb8016db215661fb8016cb215661fb8016bb215661fb8016ab215661fb8
0169b215621fb80168b215621fb80167b215611fb80166b215641fb80165
b215641fb80164b215661fb80163b215661fb80162b215661fb80161b215
661fb80160b215661fb8015fb215661fb8015eb215551fb8015db215451f
b8015cb215451fb8015bb215361fb8015ab215611fb80159b215621fb801
58b215621fb80157b215631fb80156b215641fb80155b215661fb80154b2
15661fb80153b215661fb80152b215661fb80151b214401fb80150b21455
1fb8014fb214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8
014bb214401fb8014ab214411fb80149b214401fb80148b214401fb80147
b214411fb80146b2147e1fb80145b214871fb80144b2147f1fb80143b214
801fb80142b212461fb80141b212461fb80140b212461fb8013fb212461f
b8013eb212441fb8013db212461fb8013cb211591fb8013bb211591fb801
3ab2115b1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2
115a1fb80135b2115b1fb80134b2115b1fb80133b2112c1fb80132b21147
1fb80131b211551fb80130b211571fb8012fb211571fb8012eb211581fb8
012db211591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129
b2115b1fb80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211
561fb80124b211561fb80123b211571fb80122b211581fb80121b211591f
b80120b2115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb801
1cb2115b1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2
105e1fb80117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f
1fb80113b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8
010fb2105f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010b
b2105e1fb8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b210
5f1fb80106b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1f
b80102b2105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631f
fd0f641ffc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f
641ff50f641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641f
ee0f641fed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f
641fe60e671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681f
df0e681fde0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d
6b1fd70d311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1f
d00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d
6d1fc80d6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311f
c10d311f40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731f
ba0c741fb90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c
741fb20c741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1f
ab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b
7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f
9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b
7e1f940b7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f
8d0aa51f8c0aa71f8503251f8403381f8301381f8255805581ab80557f55
7d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557b
ab7a557955775578ab7755ba028600660285403c5576ab75550475147574
7503f47501ab750144750130750102007510752075030c7455725573ab72
55007250728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ff
c0407c720d104671556f5570ab6f556e666d556a03251f6938675568ab67
556638645565ab645563386255613860555f385d555eab5d555c385a555b
ab5a55593858555703251f5638545555ab54555338515552ab51554f384e
554e03251f4d384b554cab4b554a38485549ab4855473846554503381f00
1c101c201c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b0400
1bb01bc01b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf
18024018292c460f17cf17df17ef1704134017292e460016101620160315
b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d16
2326460f15010f151f1502451f15010011e011f0110315bf10cf10020f0f
010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d
1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02
553f0b4f0b02400b3f4346400b2d30460003012001010001100120010308
b8ffc0b301151f46b80100b316010501b80190b154532b2b4bb80800524b
b008505bb00188b02553b00188b040515ab00688b000555a5b58b101018e
59b101024354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a0
1d594bb0805358b0401d594bb0ff5358b0001db1160042592b5e7375732b
2b745e732b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b
5e732b7374755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73
737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff028400640283
0064028200640281006402800064027f0064027e0064027d0064027c0064
027b0064027a006402790064027800640277006402760064027500640274
0064027300640271006402700064026f0064026e0064026d0064026c0064
026b0064026a006402690064026800640267006402660064026500640264
006402630064026200640261006402600064025f0064025e0064025d0064
025c0064025b0064025a0064025900640258006402570064025600640255
00640254006402530064025200640251006402500064024f0064024e0064
024d0064024c0064024b0064024a00640249006402480064024700640246
0064024500640244006402430064024200640241006402400064023f0064
023e0064023d0064023c0064023b0064023a006402390064023800640237
006402360064023500640234006402330064023200640231006402300064
022f0064022e0064022d0064022c0064022b0064022a0064022900640228
006402270064022600640225006402240064022300640222006402210064
02200064021f0064021e0064021d0064021c0064021b0064021a00640219
006402180064021700640216006402150064021400640213006402120064
0211006402100064020f0064020e0064020d0064020c0064020b0064020a
00640209006402080064020700640206006402050064020441ff00640203
006402020064020100640200006401ff006401fe006401fd006401fc0064
01fb006401fa006401f9006401f8006401f7006401f6006401f5006401f4
006401f3006401f2006401f1006401f0006401ef006401ee006401ed0064
01ec006401eb006401ea006401e9006401e8006401e7006401e6006401e5
006401e4006401e3006401e2006401e1006401e0006401df006401de0064
01dd006401dc006401db006401da006401d9006401d8006401d7006401d6
006401d5006401d4006401d3006401d2006401d1006401d0006401cf0064
01ce006401cd006401cc006401cb006401ca006401c9006401c8006401c7
006401c6006401c5006401c4006401c3006401c2006401c1006401c00064
01bf006401be006401bd006401bc006401bb006401ba006401b9006401b8
006401b7006401b6006401b5006401b4006401b3006401b2006401b10064
01b0006401af006401ae006401ad006401ac006401ab006401aa006401a9
006401a8006401a7006401a6006401a5006401a4006401a3006401a20064
01a1006401a00064019f0064019e0064019d0064019c0064019b0064019a
006401990064019800640197006401960064019500640194006401930064
019200640191006401900064018f0064018e0064018d0064018c0064018b
0064018a0064018900640188006401870064018600640185006441800184
006401830064018200640181006401800064017f0064017e0064017d0064
017c0064017b0064017a0064017900640178006401770064017600640175
00640174006401730064017200640171006401700064016f0064016e0064
016d0064016c0064016b0064016a00640169006401680064016700640166
0064016500640164006401630064016200640161006401600064015f0064
015e0064015d0064015c0064015b0064015a006401590064015800640157
0064015600640155006401540064015300640152006401500064014f0064
014e0064014c0064014b0064014a00640149006401480064014700640146
00640145006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[7527 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 6008 20 <00010059000002d703b7002b003bb90010fff040160c0d014c26100c0d01
4c2f0001003409440902092511b80102b319480f27b80102b1054b003fed
323fed32012f5dcd5d31302b2b25140e02232122263535343e0237012122
2635343e023321321e021515140e02070121321e0202d706080e08fdd615
1b04080e0a018dfe7f101304090d0902040b110c0704080e0afe7501a608
0d090646131b11071c21220e16161910026a2125121b1107060e1611200e
18171a10fd9607101b00>LWYAAA+Calibri AddT42Char 
1 5288 18 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>LWYAAA+Calibri AddT42Char 
1 3774 13 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>LWYAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>LWYAAA+Calibri AddT42Char 
LWYAAA+Calibri /CharStrings get begin
/g20 20 def
/g18 18 def
/g13 13 def
end
LWYAAA+Calibri /Encoding get
dup 33 /g20 put
dup 34 /g18 put
dup 35 /g13 put
pop
end
%ADOEndSubsetFont
/IEGHWD+Calibri /LWYAAA+Calibri findfont ct_VMDictPut/IEGHWD+Calibri*1 [33{/.notdef}rp /g20 /g18 /g13 220{/.notdef}rp]IEGHWD+Calibri nfIEGHWD+Calibri*1 [20 0 0 -20 0 0 ]msf241.391 87.476 mo(!)shIEGHWD+Calibri*1 [13.3333 0 0 -13.3333 0 0 ]msf249.291 92.476 mo("#)[7.00526 0 ]xsh%ADOBeginSubsetFont: JIWAAA+SimSun-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (JIWAAA+SimSun)%%Title: (JIWAAA+SimSun Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /JIWAAA+SimSun def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-8 -145 1000 859} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 4 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 2 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B5EE31F4> |1 <001C60D8A8C9B7A73D40> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /JIWAAA+SimSun-Identity-H /Identity-H 0 [/JIWAAA+SimSun] ct_ComposeFont pop end end
%ADOEndSubsetFont
/IEGHWE+SimSun /JIWAAA+SimSun-Identity-H findfont ct_VMDictPutIEGHWE+SimSun [13.3333 0 0 -13.3333 0 0 ]msf263.302 81.476 mo(\000\001)sh192.559 23.9247 mo
192.559 23.5498 li
415.575 23.5498 li
415.674 23.5498 415.77 23.5898 415.84 23.6597 cv
415.91 23.7295 415.95 23.826 415.95 23.9247 cv
415.95 234.296 li
415.95 234.395 415.91 234.491 415.84 234.561 cv
415.77 234.631 415.674 234.671 415.575 234.671 cv
192.559 234.671 li
192.46 234.671 192.363 234.631 192.293 234.561 cv
192.224 234.491 192.184 234.395 192.184 234.296 cv
192.184 23.9247 li
192.184 23.826 192.224 23.7295 192.293 23.6597 cv
192.363 23.5898 192.46 23.5498 192.559 23.5498 cv
192.559 23.9247 li
192.934 23.9247 li
192.934 233.921 li
415.2 233.921 li
415.2 24.2999 li
192.559 24.2999 li
192.559 23.9247 li
192.934 23.9247 li
192.559 23.9247 li
f
288.109 78.476 mo
329.472 78.7798 li
329.457 80.7798 li
288.095 80.476 li
288.109 78.476 li
f
324.702 74.7445 mo
330.665 79.7885 li
324.628 84.7443 li
324.702 74.7445 li
ef
416.579 239.787 mo
371.742 239.787 li
371.742 234.671 li
386.797 234.671 li
386.797 238.805 li
413.96 238.805 li
413.96 234.671 li
415.575 234.671 li
415.674 234.671 415.77 234.631 415.84 234.561 cv
415.91 234.491 415.95 234.395 415.95 234.296 cv
415.95 200.187 li
430.651 200.187 li
430.651 219.495 li
416.579 219.495 li
416.579 239.787 li
415.2 233.921 mo
413.96 233.921 li
413.96 204.768 li
386.797 204.768 li
386.797 233.921 li
371.742 233.921 li
371.742 200.187 li
415.2 200.187 li
415.2 233.921 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[59.5636 0 0 40.2545 360.503 24.511 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 182 
/H 123 
/M[182 0 0 -123 0 123 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 182 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 182 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 182 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 182 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcNdjJ,~>

%%EndBinary
grestore
np
415.575 234.671 mo
413.96 234.671 li
413.96 233.921 li
415.2 233.921 li
415.2 200.187 li
415.95 200.187 li
415.95 234.296 li
415.95 234.395 415.91 234.491 415.84 234.561 cv
415.77 234.631 415.674 234.671 415.575 234.671 cv
386.797 234.671 mo
371.742 234.671 li
371.742 233.921 li
386.797 233.921 li
386.797 234.671 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[44.8364 0 0 35.0182 360.503 29.7473 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 137 
/H 107 
/M[137 0 0 -107 0 107 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 137 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 137 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 137 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 137 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcOg2T`<^FWW7VNJcNC_aT&OFdK"k!JcLu7nGe@Fq>c*IJcLB&l2[7Pi;]PPJcLB&_>qFP\Gs_P
JcLB&RK2UPOT4nPJcLB&JcP<@P5j_FS,h@FJcLB&m/WIPj8YbPJcLB&`;mXP]DoqPJcLB&SH.gPPQ1+P
JcLB&JcPECO8nMFR/hg=JcO!p\,X>F_#T&eJcMSHhuB/Fkl?;8JcLB&qZ)HPnc+aPJcOU,JcPNFN;r;F
Q2lL:JcO*s[/\,F^&W`bJcM\Kh#ErFjoBu5JcLB&rW%ZPo`'sPJcLB&ec;iPbl>-PJcLB&XoR#PV#T<P
JcLB&L&h2PK)b`JL]E#,JcOU,K)bTFMu\G0JcOI(WrLEFZiG[XJcN%Udf66Fg]2p+JcLW-qYu0Irr7ZP
JcLB&huKPPf)MiPJcLB&\,a_PY5d#PJcLB&O9"nPLB%2PJcLB&JcOs6SH%FFJcLB&JcOg2T`<^FWW7VN
JcNC_aT&OFdK"k!JcLu7nGe@Fq>c*IJcLB&l2[7Pi;]PPJcLB&_>qFP\Gs_PJcLB&RK2UPOT4nPJcLB&
JcP<@P5j_FS,h@FJcLB&m/WIPj8YbPJcLB&`;mXP]DoqPJcLB&SH.gPPQ1+PJcLB&JcPECO8nMFR/hg=
JcO!p\,X>F_#T&eJcMSHhuB/Fkl?;8JcLB&qZ)HPnc+aPJcOU,JcPNFN;r;FQ2lL:JcO*s[/\,F^&W`b
JcM\Kh#ErFjoBu5JcLB&rW%ZPo`'sPJcLB&ec;iPbl>-PJcLB&XoR#PV#T<PJcLB&L&h2PK)b`JL]E#,
JcOU,K)bTFMu\G0JcOI(WrLEFZiG[XJcN%Udf66Fg]2p+JcLW-qYu0Irr7ZPJcLB&huKPPf)MiPJcLB&
\,a_PY5d#PJcLB&O9"nPLB%2PJcLB&JcOs6SH%FFJcLB&JcOg2T`<^FWW7VNJcNC_aT&OFdK"k!JcLu7
nGe@Fq>c*IJcLB&l2[7Pi;]PPJcLB&_>qFP\Gs_PJcLB&RK2UPOT4nPJcLB&JcP<@P5j_FS,h@FJcLB&
m/WIPj8YbPJcLB&`;mXP]DoqPJcLB&SH.gPPQ1+PJcLB&JcPECO8nMFR/hg=JcO!p\,X>F_#T&eJcMSH
huB/Fkl?;8JcLB&qZ)HPnc+aPJcOU,JcPNFN;r;FQ2lL:JcO*s[/\,F^&W`bJcM\Kh#ErFjoBu5JcLB&
rW%ZPo`'sPJcLB&ec;iPbl>-PJcLB&XoR#PV#T<PJcLB&L&h2PK)b`JL]E#,JcOU,K)bTFMu\G0JcOI(
WrLEFZiG[XJcN%Udf66Fg]2p+JcLW-qYu0Irr7ZPJcLB&huKPPf)MiPJcLB&\,a_PY5d#PJcLB&O9"nP
LB%2PJcLB&JcOs6SH%FFJcLB&JcOg2T`<^FWW7VNJcNC_aT&OFdK"k!JcLu7nGe@Fq>c*IJcLB&l2[7P
i;]PPJcLB&_>qFP\Gs_PJcLB&RK2UPOT4nPJcLB&JcP<@P5j_FS,h@FJcLB&m/WIPj8YbPJcLB&`;mXP
]DoqPJcLB&SH.gPPQ1+PJcLB&JcPECO8nMFR/hg=JcO!p\,X>F_#T&eJcMSHhuB/Fkl?;8JcLB&qZ)HP
nc+aPJcOU,JcPNFN;r;FQ2lL:JcO*s[/\,F^&W`bJcM\Kh#ErFjoBu5JcLB&rW%ZPo`'sPJcLB&ec;iP
bl>-PJcLB&XoR#PV#Pr~>

%%EndBinary
grestore
np
413.96 238.805 mo
386.797 238.805 li
386.797 234.671 li
413.96 234.671 li
413.96 238.805 li
413.96 233.921 mo
386.797 233.921 li
386.797 204.768 li
413.96 204.768 li
413.96 233.921 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[27.8182 0 0 34.6909 375.557 25.4928 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 85 
/H 106 
/M[85 0 0 -106 0 106 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 85 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 85 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 85 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 85 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
nGn.@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcP<@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN7[q#U-gquPmZJcLB&iW/rYqZ?]sqZ-Np!!<'!
^AricN;s(^!<N<)r<3-&rrW3$r;cftrrW0%rrW0#QN2U;[f?U5!<N?+"U=r2"9o#4!s8?#!s/Q-"TAQ.
"9\f.!<MTgJcLB&i;aDi!<N?,#71_F$k!CK#6b22r;d$&!sAf5rWi]5"p>#0!<L1?JcL]/#QXu/"U>AD
&.oHd&J,BZ#R1D5!W`?)"9o,=rX8u<#R1D6!<J_kJcN1Y&ci"8":#8D&f)<%)&Eqt$j[%?rW3Q4"pbVI
&.oH`$jd+@!WhlmnGn.@JcP3=,ln&L"pkbQ(`a_B+<DF9&.AgJ"9S`0#R_.U'c%Ms%grUG!s/M8!.k3=
!#>S9!X&`9&JlK5-RgGj+WD.-$O6h<":k\C%2'Ep)]BJ)%LE=A!WeGaJcNXf-34,K"UGPO)^6^`0J>"+
+WD+*$3p_=#R_1Y)BKtA)ANek#6Y)/kQ$27JcP*:-34/M"UP\T*[WHo2)R-@-Qj6=%1*7E#n.C_*?cUM
*>fCt#Qt51^AricPlMEt!WrW6&/QH<0K(pO2_lp0*>T;"$OI(G%MKa&,UF]X)A<Pc"Tndk!.k3b!%%^J
!sT)E(a1@a2`a#\2(p@$)A<Sg$4@@Y)^$FR,p4-@%1*1?!UKf<!.k46!%%^J!sT,F)'UOc2`j)^2_lp1
*Z#Ct$k*[^*$HXV-6X<C%LE:@!Q+nh!0I6k!<N?-$P=7#.PWhA3]T,81G1(!)AE_m%M9Hr+t"cd+rh=-
#mCD3RK.p>\c=&X!WrW7&K)`@0JtdK2`<HF.O6&P'+b]f(EF\I-mp2Y'b1NR!s.lkJcLB&irCD,!WrW7
&K)`?0/GID2)I'B/12S[()%;p(`ahK-mp2Y'b1NR!s-FBJcLc1$3:21"q)"[+=A`q)_s3)0eb74.3ouR
().K$*[<$\-R'NF%LE:@!M0:C!4Dk9!<N?-$P=3u-S-o)0`<U=/Lr1m*>oY1)BU4Q.46;Z'b1NR!s/#o
nGn.@JcP6>$ipD3"q)"[+!rKi/hR&Q(+_!e.4$,X)B'S<,q(2i+rh=-#mCD3])[E_R/e!'!WrW7&JuT:
.P*,#-mpAk.k<(t,TmU=*?HCO.4HVg*#/qi"Tndg!.k3f!%%^J!sT,F(`t%R.k2qn,U=]b.Ouqq,U"9R
,UY#j-R'NF%LE:@!U'N8!.k4:!%%^J!sT,F(`t%Q.Oc\g+WqsT-n6\q-RC#`-7C>n-mBWG%LE:@!P\Vd
!0mNs!<N?-$P=3t,q1;l,Tn-K+!N$F.4Znu-mpAj.P*(u,9.F.#mCD3Q2lL:^&TJ\!WrW7&JuT9-n-Mg
*ZH":+!W-_/1`;$.P!)&/1De`'b1NR!s.`gJcLB&k5Zh0!WrW7&JuT9-n-Je*>oY1)^$CT/1iJ+/hSe1
/h&%c'b1NR!s-:>JcLo5%KQV5"q)"[+!i<`-6X?F(DRZ$*$H[[/het61,:R;.O6#L%LE:@!La"?!4i.W
!<N?-$P=3t,q(/g+<)(/&el3),UtE$1GgsH1bgO-*>K%j"Tnep!.k3&!94&+!<N?-$P=3t,q(/f+;tq+
&.oWq+X\ir1c@<Q2DZp3*>T+k"U"o+!W<#r!Rh%#!0$sc!<N?-$P=3t,q(/\,p4'=%h9'^(EFbO0JtgN
3]JrK-6<p5$3gV7o)YomJcN4Z-34/M"q)"[+!i<`,p+!<%L`aV',i#B0/P[N4?>AR-QX$6$3p_:oE,!m
oDjICJcP6>-34/M"q)"Z*[E*\,Tdj9%13FN&/H94/2K7I4?GGT-Qa*8$O?q?rWN-$r<*6*!WiB'bQ*4p
R/e!'!WrW7&/QB4-70rY(D.&^#RV"R)'KVA0K(sR3]8W=*u>Is#m^b@"pXu/#R1M<"pG,2!Wf%rJcNXf
.00JP"ptnW*?ldU+rqF1$O?tC$4djl,qLf13B/iJ-6<s8%1<ON$4.":#7:_C$4-tC"U"l-!VueJ!.k4:
!&su\!sJuA'cS8?,9Rp?%giOG"pbVM(a(1Y1Gq!D.jQ,N&Io6[%LigS$4."G$OdIR$OI%A!s/MN!.k39
!"o;6!X/l>',V`3*uu13%1*4B"XXE[%MTg)-nR)*/12S['bLuf&.oKc%LigS$k<g\&.]0U"p=u.!N?'N
!58FE!<E6)#7M.Y)&jM4'bCcZ"o\WP#7D(X)^-LU-mg,Y(_[Jm&JGim'+k`b%M'-b'GD&g$O6h;!<E0#
JcLB&k5Z%o!<N?-$4RR^()@Vt%LNCCrW=GM#Rh7Z)BL"E*ul+3&J,Nf'c.Z%'G1lf&JGor().>i#mLJ5
!S.7&!0@0i!<E9+#7:qP&eY`c$O6\9"9&?J!sJr=%hf]q)&O,&&J#Ba'GhW)(`!bt&ebus)&O,%%LE=B
!WfD'JcN=]%fl\4"9f&<$k3XS$4$e<!r`3F!X&]5$OmXZ&ePZb%1E^Y'Gq`-)&F#$',26#)]BM,%giOE
!<N:T!.k40!"Ar0!X&Z3#RLeC#6b53quI**!sJo9$4@7M$iUJL%1j3k)]Te7().Gt(`OJ7(_dJg#6Y)/
g&Q^)M?!b[!WiH,rWNf9"9S],!<E0#!<E6("9f#-#8mdR$kO*j*$$";(D[c&)B9e<)&3\j#6Y)/YlK@U
Z2jn*rrW*#!!<-#r;Zs$!<N<)qud];"pYMH'H%l3*?,k4(E"/5*uu77"V;%H"9JVu!.k3&!9sR`!W<*!
!Vufp!W<'=!s8]3$4dgg*$-.@)]9M4*?QCF)AWkl#6Y)/c2`FrOoY@[pAb0nqZ.W;!X&]6%MK[!*ZlFD
*#ot@+X%pH((^iY"9JV#!.k3H!"/f/!sJu?&f2K.+!:J'$m-W:+WhU;&./XF!Wi/uJcLB&blA[`!<WK2
$kX6n*ZlLI+!;[L+sA!F'FtNT!s/MO!.k3&!;-=!!<NB/$4dde*$-4#+:B>9*ul+2%LE=A!Wf8#JcMDC
$3:21"UPVM'c@r2rZ2Ok+!)C>'bCcZ"Tnc+!!%TNJcNjl$3:/0":#8D&eu3#r#5t](_mYn$3gV7!<LaO
JcLB&n,Naq!WrT3$P!a^(&SgR'b_/h$O?n<!WfA&JcM5>#lt&."9f&<%1WsI&I8pX$jm7E"9JT(!J:B(
!5\^A!<E6)"U>>@$iCD=$OR1F"U"l-!S@C(!.k49!!`N*!WrQ/"pb)4#mU\>"U"o/!W`>*!.k37!!WH)
!WiH,"T8N'"9JZ-!r`5m!.k3&!6YBA!WE0!"8r<#!Qb=n!.k4A!;$;`!.k3<!;ure!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!:^&@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3C!.Y~>

%%EndBinary
grestore
np
413.96 234.671 mo
386.797 234.671 li
386.797 233.921 li
413.96 233.921 li
413.96 234.671 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[27.8182 0 0 1.30909 375.557 29.7473 ]ct
snap_to_device
<<
/T 1
/W 85 
/H 4 
/M[85 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
0 0 0 1 cmyk
%ADOBeginSubsetFont: LWYAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IEGHWD+Calibri gcheck setglobal} if
1 1078 4 <000100acfffa047e0511003d0085b3270f0f14b8ffe8b310014d14b8ffe8
b30f014d14b8ffe8b30d014d14b8fff0b30c014d14b8ffe8b30b014d14b8
0211401e1e0a2e2e321810014d32180f014d32180d014d32100c014d3218
0b014d32b802114010001e38520a2e0f270419225119550654003f3f3f12
17393f012fd4e12b2b2b2b2b32113310e12b2b2b2b2b322f33313025140e
022323222e0227012626272316161511140e0223222e0235113436333332
1e0217011e03173326263511343e0233321e0215047e0d151a0d371a2723
2315fe6820411c02020208131f18181f12082c1a521d271f1d11013a1d36
32311801020108131f191620120847141c12080b1d322702e0397d3b4896
4afcf3070d070505070d0704aa28220a17291ffdc83463605d2f4fab4f02
be070c090404090c0700>IEGHWD+Calibri AddT42Char 
IEGHWD+Calibri /CharStrings get begin
/g4 4 def
end
IEGHWD+Calibri /Encoding get
dup 36 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IEGHWD+Calibri*1 [33{/.notdef}rp /g20 /g18 /g13 /g4 219{/.notdef}rp]IEGHWD+Calibri nfIEGHWD+Calibri*1 [16 0 0 -16 0 0 ]msf393.346 224.481 mo($)shIEGHWD+Calibri*1 [10.6667 0 0 -10.6667 0 0 ]msf403.674 228.481 mo(")shIEGHWE+SimSun [10.6667 0 0 -10.6667 0 0 ]msf409.278 228.481 mo(\000\001)shgrestore
gsave
-10.9124 -69.4862 mo
781.088 -69.4862 li
781.088 470.514 li
-10.9124 470.514 li
-10.9124 -69.4862 li
330.635 79.8027 mo
330.635 59.9205 346.753 43.8027 366.635 43.8027 cv
386.518 43.8027 402.635 59.9205 402.635 79.8027 cv
402.635 99.6851 386.518 115.803 366.635 115.803 cv
346.753 115.803 330.635 99.6851 330.635 79.8027 cv
eclp
406.76 121.641 mo
326.578 121.641 li
326.578 83.1432 li
329.457 80.7798 li
329.457 80.7798 li
329.457 80.7795 li
330.635 79.8126 li
330.641 99.69 346.757 115.803 366.635 115.803 cv
386.518 115.803 402.635 99.6851 402.635 79.8027 cv
402.635 59.9205 386.518 43.8027 366.635 43.8027 cv
346.766 43.8027 330.657 59.8998 330.635 79.7636 cv
326.578 76.332 li
326.578 41.7865 li
406.76 41.7865 li
406.76 121.641 li
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[80.8364 0 0 80.5091 315.339 142.656 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 247 
/H 246 
/M[247 0 0 -246 0 246 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 247 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 247 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 247 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 247 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcP?A
JcLB&JcLB&JcLB&VuYr\p&K[EJcLB&JcLB&JcLB&b5h>=klUV\i;eH0JcLB&JcLB&JcLB&li?n`r;um!
qul]squls#quZ`raoI"nJcLB&JcLB&JcLc1quQcurWE0'rWW<+rWiB-p^-m)rs/N-rWW<)rWE-$quO)'
nc47AJcLB&JcLB&JcNF`r;lm!'*A=>"9er5"pYD>#mq"I$OdFQ%K-e7&,ctM%1N^S$O[:K#m^eA"pP57
"9\Z+rrW*!MZA>/JcLB&JcLB&JcOO*r;df<!WrN-"9eu7#RC_D$OdIS%hK<b&ebrn'c$]`r"o>J)ANu$
'GD)k&.f?^%1EUO#m^b@"pG,4!s8T+r;lEgJcLB&JcLB&JcLB&JcPWIrW3!"*!6<H"U52;#mq%L%M'-a
',;9!(`=52*$$(A+!:8#*ZlIF*??+=)AsA.'bh;o&.]6[$OR1G#6k>7!s8T+r;kONJcLB&JcLB&JcLB&
RK3<f'ES=<!sAc3#7(VD$k3^Z&el)t)&j&**ZlLK,:"Q^-R^Dm.Ot9F+t>&k.4?Pj,pX]Z+<MUD)As>+
'G:rf%1ERM#R:P;"9S],r;jY5nc47AJcLB&JcLB&JcNjlr;e2G!WrQ/"pYD@$OmUY',;<$)]^"D,:+Zb
.P!)'0/,+91GgpG2>T3F2)R3I1GU[=0.ne+.4?Mg+s7sJ)A!`$'G:rf%1<LK#6k>7!s/Q'!L<_;!.k3&
!.k3&!.k45!<*!H!WiH,"U52<$4ICU&el-")]g+H,pt,m/hf"92)[BR3]fGe4[)(pq*6>m5<_7o4Zkee
3&``P1GLO7.k)hl+s7mF)&<o!&.K$T#R:P;"9S],rW2osJcLB&JcLB&JcLB&K`M)Q-isJQ"9f#9$4ICU
',;?&*?ZRR-n?l'1,LmK3]oPi5X@_(6q'R77n<8D-q?cs7R]^46:!k#4Zb\a2Dd0B/Li.p+s.gD(DRPo
%L`[M"pG,3!Wr?%iW+Q1JcLB&JcLB&JcMPG+9;KE!WrQ/"pbMD%M09g(`OM>,UY&n0JbRG3]oSk6:2)K
7Rp!@8kViO9hkU^q+pra-r!E09M7uL84Q-<6UF%%4?>DY1+t4/-R9iV)]0;&&.K!R#6k>7!s8H&a8kc2
JcLB&JcLB&JcLB&ci>Nr!<N<)"9f#9$4RLY'c7l2+seWg0/>CE4$>eo6UaL98kViP:/=Y^;,R9ioMb`e
r_X&":JX_[9M7uK7n#c_5sILn2`*6A.juYd*Z>h/&J#9W#R1G8!s8H&T)aHCJcLB&JcLB&JcP3=-ij>M
!WrQ0#71bJ&/,iu*?c^W/2/k<3BTMl6q0^=92&)V:f1(f;cEZprDiDhrDihr,u[`?;,C(a9h\2O7n#d2
5!1h`1+t.+,Tn*F()%5g$O?t@"9S`)!JLN*!.k3&!.k3&!0$sc!<E6'!sAf5#n.:a&JZ-&+=&<b0/GLI
4[;>&7nH?J:/=_b;H$Oo<E9$!q,d8lqH*Vr,umrE<)Z[l:esh[91_WA69dRm2DQm7-R0]P(DIGk$OI%A
"9S`)!U9Z:!.k3&!.k3&!.k3O!<*!F!WrQ0#7:kM&eu9)+XJTj1,_-U5XRt28k_uU;,U=l<)lq!<`f9%
i`Q.\,Z[rG<E)mp;G^.`9M.fD69dRl2)-[3,p40E'bLo`#mUV:!s8H&ciEV:JcLB&JcLB&JcLB&fDtmO
+T_`K"U>>B%h]Wr*[2s^0/PXM5=.e08k_uV;,U=l<E<0"=8H%[=o2>"=!LaH<E)mp;,9q\8k2<:5!(\Z
0.J:l*>oS)%L`XK"U"o/!<K%tJcLB&JcLB&JcLB&o`--9!<N?+"U>>B%h]Wr*[<'a0f:sS5t"489MSD]
;cHas<rQ1u=P-dS=;k7B<`W4"<)QRi:/"5L6pNjp1b^F-+s%U:&d]$U#mUV:!WiB'Mu\G0JcLB&JcLB&
PQ:[`%KZ_9#71bJ&f)B-,:G-!&2lU76:OO>:/=_c<)lt"=',<%crp9K+'2NE<E3!r;,9nZ84>j/3]/WC
-R'TL'bLo`#R1D6!r`5j!.k3&!.k3&!.k3&!3lMH!<E6("9o,>%M9En*[<'b1,h9Z6UsaB:Jk"g<E3($
=8c7q=jgIO=<L[H<`N*t;G^+^8Oc'33]8]D-R'QK'G1c]#R(>5!W`>Q!:g,A!.k3&!.k3&!.k4-!$;4B
!WiK.#7:nO'H%o8-S7)44$Z2(8ki)Y;cHat=',?&a]\ICrE(%@=&r=#;c-=a8k2654#SfE-6X?G'+bQY
#6b22rW0,$JcLB&JcLB&JcLB&qZ%W;!<N?+"pbSI',MW3-S-u14$Z2(92/5\;cQk!=8c76=oMM5='&F&
<)ZXi9hIoC5<:Y40InFl)]'+s$O?q>!s/K(OoU(6JcLB&JcLB&RK+-)!<N<*"U>AD&Jc9-,qCZ,3^6#&
928:e;H-Xs=',B'[TWT3**60A<Dudk9hIoC4utMR.3ouQ'bCf]#6b22!<MloJcLB&JcLB&JcLB&[f@HM
!<N?+"pk\K',Vc8.5!G;5!qh59i+_e<E<1&=BOlla'&CD**63B<Dudl9hIlA4ZG5L-mBWI'+YHV"p>#0
!<LsUnc47AJcLB&JcLB&JcOg2)?Bj?!sJo:%1s?p+XS`q3'BSt8ki,[<)lt#r`Hm;n6,`m)cp*A<Dudk
9h@c>4?"uF,p4*@&If$O"Tnf,!O;]W!.k3&!.k3&!.k1h!<E6("9o,>%hfd$,UtK+4$Z5+9M\Pc<E<3#
=K#@-=BJX+<`N'q&l21l6pE^i0.8"b(_R;d#R(>4rW/AdJcLB&JcLB&JcMDC)$'a>!sJo9%1s<o+X\it
3Bff#928>_<E<3#=JT(>=BJX+<`E!p:.n)E4ZG2J,p4*?&.AjL"9S]+!W2qL!.k3&!.k3&!.k3`!#kq>
!WrT2$4[[c*@!!e2EX8p8ki,\<*!(%=BOTd^0)CW=BAR(<)QOe8OYm*2(p@%*#9.r$3p_:!W`>\!:g,A
!.k3&!.k3&!.k47!#bk=!X&Z4$P*ph+!rNp3Bfi%9M\Pc<E<1'=LMAq=W1CE=&r=";,9hT69R:_.jQ/Q
'+P?S"Tnf,!Oi&\!.k3&!.k3&!/:IU!<N<*'a=sQ&JZ6.-n[A=5t4IA;,^Iq='/Rm=TDPA=BJX*<)ZUf
8OYm*1bC't)ANbj#R1D5!<J\jJcLB&JcLB&JcMPG)$'d@"9o/A&f2Q5.PWkF6V'mH;H-Xt='/T$=e/\6
=BJX*<E)gj91M<22D6L'*#9+p#mLM6!<E1P!.k3&!.k3&!.k3e!#Ye<!WrT2$4[^d*[N?n3Bor(9i+bg
<``C*gf_*h(g'mA<`Dsn9h@`:3&)p/*>]:s#mLM7!WhB_nc47AJcLB&JcLB&JcP0<)$'a>!sJo;%hom(
-S72;5t4LC;,gOs='/S/=lEL#=BJX*<Duai8ju!+1Fsgn(_[Ad#6Y,1!P8>`!.k3&!.k3&!/gg_!<E6(
"UGJH'Fu**-ndJA6V'mH;H-[u=BL_hqcO_;=BAO&;GTqU5s$qV-6F*=%LNFE!s/Lr!.k3&!.k3&!.k3L
!#P_;!WrT3$P4$l+t53)5"%t::fC@p='/Ss=dN8*=BJX*<Du^f84,Nu0.7t^'FtQV"Tec-!JLN*!.k3&
!.k3&!6"pS!<E6("UGMJ(*"PK1-%Qf8kr5_<EE:)elf:]r`Bk9<Duah8OPa$0I\.a'FtQV"Tnf,klC8S
JcLB&JcLB&JcLB&nGj@+!<N?,#Rh:\*@*-k3^?/-:Jt.m='/S)=kd'p=BJX)<)HC_76`ad.O#fH%grXH
!s/M<!.k3&!.k3&!.k33!"8l/!WrT3$kX6q,V1_Y3^H80:Jt1n='/Ra=nYu6=BJX*<)QLb7R&mg.O,oJ
%grUG!s/M!!.k3&!.k3&!.k3O!#>S:!sJr=&JcB4/2TFT7nc`X<E<1'=RTCU=V"V:=&r9u:J4/B3AN*0
*#/Yh$O6h;!We,XJcLB&JcLB&JcNjl'`e@<"UGMK(*+\P1cn#p9i+bg='/SP=fkgB=BJX*<Du^e7mT0k
.jH#K%grUF!s&Gi!:g,A!.k3&!.k3&!.k4C!#5M9!sJr<&/H94/2TIU852r[<EE:)V-2AP'j+O=<Du^f
7mT0l.jH#K%grUF!s&G?!.k3&!.k3&!.k36!"T)2!sJo;&/H93/2TFT8507b<*!(&=GU,M=VY%@=&i0q
9LhB01+ORg'b:WV"9JT)VuVDLJcLB&JcLB&Y5f:<!<NB/$P*sl,V1c76:agJ<*!(&=R'%K=UJ85=&i0q
9LhB01(#KT)\`bh"p=u.!K@)2!.k3&!.k3&!6bEX!<E6)#7:tV*$Zsi4$lJ4;,gRt=BNgNW*'j;=BAL$
:eXAF3\i-.)A<Se"p=u.!V$0\!.k3&!.k3&!.k3&!;HO/!<E6)"pthS)^6dg4$lJ4;,gRt=BM8"dTI8d
=BAL$:eXAE3ADs+)&!Gc"p4o-`W1SjJcLB&JcLB&PlMEt!WrW5%20X'.Pa%N7nliZ<`f<'KN[\F'NeI=
<Du^f7R/pe-m0?>$j["=!Wf>%JcLB&JcLB&JcN(V'EJ7;"UGML)'C=^3C$).:fC@q=BO]gM-1$b=BAL$
:eM6e5;t5C*u>Lt#6b21!K[;5!.k3&!.k3&!7(WZ!<E9+#Rh:]+"&^$5XnFD;cQn$=NO^A=VOt?=&i0p
91;$&/gVMR&.8^G!W`>o!:g,A!.k3&!.k3&!.k4J!#,G7!X&`9&/H95/iGm^92AJd='/Rq=jC.`=BJX)
;GTnQ4Z+c9*#/qj"p=u.aT-nmJcLB&JcLB&QiIj%!X&]7%MTm./N#[Z8l&>b='/R-=b9f@=VFn><`N$m
8OGQq.j>lF%1*1?!WfG(JcLB&JcLB&JcN1Y'*/.:"UPVO)Bp[f4@;\8;H6b"=Q3J;=TV],<Y/5-9h7Q2
1+==_&e#$L!s&Fd!.k3&!.k3&!.k4!!##A6!sJo<&JuW>0fhWl9i4kj='3FETNMq1=&r9t9Lh?-0..eW
&.8^G!W`>r!:g,A!.k3&!.k3&!.k4L!"o;6":#8F(*4eU3']u-;,gRt=IE=7=V=h<<`;gf76WU],TIO/
$3gS6!R(Oq!.k3&!.k3&!1Ns$!<N?-#n@Xh,V:o<78$HU<``E#=b9f==VFn>=&i0p8jkcu.j>lF%1!+>
!WfP+JcLB&JcLB&JcN:\'*/+9"UGML)'UOd4@;_:;H6e#=Pm85=VFn>=&i-n8O>Hm-m0?=$O6e9!<JJd
JcLB&JcLB&JcO:#&ci%:#7D(Z+"/j(5tFaK<**1(_HEF4&m/7:<)H@[5W:>C*>K(l"p4o-q#KscJcLB&
JcLB&JcLB&'*&%7!sT&A'HADO2a9c*;,gRt=I*+1=V=h<<`;gf76NLZ,8q4)#R(;2!RCat!.k3&!.k3&
!1j0'!<E9*#Rh=`+tGK56q^?T<``Du=b9f9=V4b;<Du[b6T[%P+;b[u#6Y)/ZN,RWJcLB&JcLB&\c<?D
!X&]7&/H<70fhWm:/Y(n=BO?]Jm&(U&m/7:<DcI\5WCDD*>K%j"p4o-QiM^<JcLB&JcLB&f)QEa!WrT3
%29a,/N5m`9Mnbi=BN=@RTU8*=&r9s91;!$/0YuF$j["<!<N)unc47AJcLB&JcLB&K)blP&-;t>$P=4!
.Pj1T8l/Ge='1Yh`*![S=&i0p8O>Kn-m'6:$3gV7!RUn!!.k3&!.k3&!2'<(!<N?,#n@[j-87GG85<&_
='5,uJm%#7&m/7:<DcI\5W:;@)\`_e"Tnc+[K(mZJcLB&JcLB&]DrNE!X/f;&fMrF2*OK';,gRu=P6i/
=o2>6=BAO%:eO2=1FaOb&ISgH!We_iJcLB&JcLB&JcOI(&HMq8"ptkV+"/j*6V:-Q<EE;8=dN8'=BAL#
:.RZ20.%\S%LE:@!<N0"nc47AJcLB&JcLB&K`D/T!X0#=$kjR*/N5ma9i=tm=HH\&=V4b<<`Dpi7Qr[[
+rLt##6Y)/df=t"JcLB&JcLB&U&Yc+!WrW6&/QE;1H\&u:fLIs=S#[I=l!3m=BAL$:J!o70de"W%LE=A
!Wfe2JcLB&JcLB&JcNOc&HMn6":,GM)^I$q5Y+XJ<EE;R=b9fP=V4b<=&`$k7mAm_+rM"%#6Y)/S,e-@
JcLB&JcLB&gAhfd!WrW6&/QH=1He0";,gRu=LqY#=V=h<<`;dd6T["M*Yo7m"Tnc+!:g,A!.k3&!.k3&
!/COW!<NE1%1<gg,qh5D85<)`='1Jc^KD+M=&i-m7mAm`,8q1'#6Y)/eGt1$JcLB&JcLB&U]:u-!WrW6
&/QH=1d+9$;,gRu=RfOG=kd'k=BAO%:eF,;1+++X%g`CA!<Kb3JcLB&JcLB&JcNRd&-2h8#RqFd,qh5D
8PW2b='3sTJm%eM&6N"6;GBYG2Cp$i&dnpI!WekmJcLB&JcLB&JcOU,&HMq8"ptkW+=T*078-QX='/S7
=d)u"=BJU':eF):0de"W%LE:@!<</l!.k3&!.k3&!.k3-!!WH*":#>K)[RcB3'g)1;H?k$N*3hs&6N"6
;GBYG2Cp$i&ISgH!WgmQJcLB&JcLB&JcMYJ&-2e6"UP\T+"/p-78$HV<`ncmJm$c0&6N"7;c$(R3\Vm$
'Fb<O!Wfn5JcLB&JcLB&JcNXf&-2h8#7D._,:ti>85<&_='3mRJm%_K&6N"6;GBVE2(Kge&./UD!Weqo
JcLB&JcLB&JcOX-%flb9#S%Ri-S[\N92JSg=LD:o=UnP8<`;dc69-\F)\WVc"9AQ)oDjICJcLB&JcLB&
MZ="`!WrW6&/ZQ@#<"e:9i=tm=Gg7n=V+\:<DcFY4YnN/((U]T!s&GU!.k3&!.k3&!.k3K!"]/4":,DL
*$m:"6:t$P<`iJk=b9f.=V+\:<`;aa5rUA?)A3D_"9JV;!.k3&!.k3&!.k3h!"]/3!sJuA(*=t^4[r+B
<EE;L=b9fI=V"V8<)?4U4#&*''b(EP!WetpJcLB&JcLB&JcO^/&-2h8#7D+],:ti?85<)a='2h4O')ln
=&i-m7mAj]+W(at!sSi/!VQMF!.k3&!.k3&!/pma!<NE1%29g10foP,92JSg=GU+k=V+\;<`;dd69-\E
)\NPa"9JVX!.k3&!.k3&!.k3M!"]/3!sT)C(Eb1b5"A=F<EE;g=b9f,=V"V9<DcFY4>SB,'b1NR!s-+9
JcLB&JcLB&JcNai&-2h8#7D._,VD&C8P`8c=BNmPJm%VH&6N"6;bfkK2Cp$h&./UD!Wf%rJcLB&JcLB&
JcOa0%fl_7#RqIg-SdeP9Mnbj=L)(h=UJ83<)?1S3\Mcu'*J^K"9JVu!.k3&!.k3&!.k32!"/f.!sK#B
(Eb4c5=YiO;H6e#LKV,i%p2n5;+sDA1FO:Z%L<4?!S[U+!.k3&!.k3&!3-#1!<NB.$P=:%/iZ0h:K(:r
=R'%@=k$Rc=BAO%:.RW./0PiA$3gS5!Pe\e!.k3&!.k3&!6,!L!<NB0%29d00fqcr;,gV!buoX$mo^0'
<`Dmf69-\E)\NPa"9JV"!.k3&!.k3&!.k41!"T)4"UP\T+"B*27nll]='2_1N*-Hh=&i*k76E=R*<d,d
#R(81p],mGJcLB&JcLB&NrTRh!WrW6&K)cE2aL#2"&i6&=GBtf=V"V9<DlR^5;ar6(CpfU!s.0WJcLB&
JcLB&JcMhO%fl_7#7M7b,qqAI92JSg=Qin>=jpLb=BJU&:J!i3/gD5G$O-\7!Pnbf!.k3&!.k3&!65'M
!<NB0%2Bp41-J'#;,p\"bZTO#mTC'&=&`$i6p!(L*"r_c"9JV#!.k3&!.k3&!.k42!"T)4"UP\U+=]65
85<&`='2\0Mcg<f=&i-m7QiOU"s+Kh#Qt20q#H!HJcLB&JcLB&O8o^j!<WN5&K)fF3'g,3;ZTp$KNY`d
%p2n6;bfkJ2Cfpe%g`CA!Sma-!.k3&!.k3&!3?/2!<NB/$kaL*0KMQo;,gV!k?3C>d9-u^<`Djd69$PA
)%d2[!s/M?!.k3&!.k3&!.k3l!"T)3":,GN*@N[*78-TZ='3XKJm%JD%p2n4;+j;<0I7YN$jQn:!N#jK
!.k3&!.k3&!9=+j!<NE2%Mg-92*ON*;H6e#Y??`c#?Y&-;G9MB1']0I'Fb<N!Wi,tJcLB&JcLB&JcLl4
%06P7$4n$u/2ogc:K(9o=G'ba=V"V9<`2[_5;Xi3((LWS!Wh-XJcLB&JcLB&JcMnQ%fl_6"q)"],VD)D
8l/Jf=QWb<=jU:]=B8?r8O,3c+W(as"TneB!.k3&!.k3&!.k3m!"T)3":#>J)^[7#6q^BV='3UJJm%GC
%p2k3:eF&7/gD5G$3gS5!N,pL!.k3&!.k3&!9F1k!<NB/%29g21-J'";H6e#Y$$Ta#$=r+;+j;<#V[PD
&dnpH!Wi/uJcLB&JcLB&JcLo5%KQV6#S%Rk.5X4Y:/Y(n!*FkVZrmoA=&i*k76E=Q*>8hd"9JV]!.k3&
!.k3&!.k3Q!"T)4"UP\U+=f?885<)a=BO]gJm$H'%p2n5;GBVE1FX@[%1!(<!Q+nh!.k3&!.k3&!6G3N
!<WK4&/ZTC2aL#2<*!,C=b9fC=V"V9<`;aa5;ao5((LWS!Wf2!JcLB&JcLB&JcOp5%fl\5"ptq[,;(uC
8l/Jf=KP_^=Tqo.;botM#W=4W(CpfU!s/9!JcLB&JcLB&JcLr6%fl_6"q)%^,qqAJ92SYi=Fs\^=V"V8
<)?1R3%Z<l&./UD!<M*YJcLB&JcLB&JcMqR%fl_7#7M7c-8@SN9Mnek=QN\;=jL4]=BAHu91(]m,T77&
"p4l,_uPAhJcLB&JcLB&aoDqQ!X&`:'HJPV4[r.D<EE;E=b9fB=V"V9<DcCW3\Vj!&dnmG!Wf5"JcLB&
JcLB&JcOp5%fl_7#RqLi-o4%V9i=tm=KP_^=Tqo/<DcFY#s0jg*"r_c"9JW%!.k3&!.k3&!.k36!"T)3
"UGSQ+"9$17nuu`=BL/XZWRf@=&i-m76E=Q*>8hd"9JV^!.k3&!.k3&!.k3R!"T)3"UGSR+=]6585<)a
=BOZfJm$E&%p2n5;GBVD1FO:Y%1!(<!Q4ti!.k3&!.k3&!6P9P!<WK3%i6?=2F'f/;c["&a]X3ulWFa#
=&r3o7m8aY*Yf+i"9JV&!.k3&!.k3&!.k45!"K#3"UP\U+Y5Q<8P`8c=KGY]=Tqo0<`;a`#sU9r*u,7k
"9JW%!.k3&!.k3&!.k36!"T)4"UP_W+tY`>8P`;d=BU5YZWRf@=B8?q83\s]+;PFm"Te__!.k3&!.k3&
!.k3S!"T)2!sT)D(a:Ok6:t'R='4NdJm$E&%p2q7;boqL2Cfmc%g`CA!Q4ti!.k3&!.k3&!6Y?Q!<E9,
$4n("/iZ0i:fLLuaB=*tlWFa#=B8?r8O,0a+;YOp"Tne(!.k3&!.k3&!.k46!"T)2!sT)E)'^ao6:t'R
='2P,LKOa^<`;dc#s^F#+VtXq"Tnf'!.k3&!.k3&!.k37!"]/3!sT)E)'^ao6VC6T='/UW=gD0?=B8Bs
8O59d+VtXq"Tne`!.k3&!.k3&!.k3S!"T)2!sT)E)'^ao6VC6T='4NdJm$B%%Tlb2:J!i2/0Pf?#mCD3
_uPAhJcLB&JcLB&b5`%R!<WN5&K)iH3C?G9<**2C=b9fA=UnP7<)6(O2_6*h&.&LB!N6!M!.k3&!.k3&
!9X=m!<E9,$5".$/ic9l:fLLuXBC<]"B\](:ItjY2_6*g%g`CA!W2qL!.k3&!.k3&!0[Bo!<E9,$5".#
/ic9l:fLLu=b9e^=UnP7<)6(O2_6*g%g`CA!T3s0!.k3&!.k3&!3ZA5!<E9,$5".#/ic6j:fLLujB7(;
c<1WZ<`Djd5W:5;(CpfU!s-=?JcLB&JcLB&JcNso%fl\5"ptnZ,;(uC8l/Jg=NFWs=mB-"=B8?r8O,0a
+VtXq"Tne(!.k3&!.k3&!.k46!"T)2!sT)D)'^^m6:t'R='2P,Lfjm`=B8?r8-qO>.j,W=#mCD3quD<K
JcLB&JcLB&P5l-p!<WK4&/ZTC3'g,4<*!+(Jm#E_%p2q7;bfkJ2(B^a%LE:?!T3s0!.k3&!.k3&!3Q;3
!<WK3%i?H@2aL#2;c[#]=b9f&=V"V:<`;aa5;ao4((LTQ!Wg4>JcLB&JcLB&JcNpn%KQY8#nIgq/2fab
:K(:raB=*tlWFa#=&r6p7m8aY*Yf.j"9JV&!.k3&!.k3&!.k45!"T)3"UP\T+=f?885E/b=BM\.Lfjm`
=&i-m7gV@8-ls*4#Qt20quD<KJcLB&JcLB&OoQ!n!X/i>(*>"`5=\II<`iIU=gM6A=BAL#9h%9$-QNm1
#6Y)/huJ?/JcLB&JcLB&XoJt5!X&c<'cne\5"A@G<``Db=b9f&=V"V9<DlLZ4>A0&'+>*K!Wg4>JcLB&
JcLB&JcNpn%fl_7#RqIg-o4"U9i=tm=NO]t=mK3$=BAL"9LLrr,o[I)#6P#.VuVDLJcLB&JcLB&jo>nm
!X&`:'-&>R4@Mq@<EE;)=bp2a=BAI!91'"H0-hGK$O-\7!W2qL!.k3&!.k3&!0R<m!<N?.$PFC)0KVZr
;,p\"Jm#E_%p2k3:eF&7/gD5G$3gS5!T3s0!.k3&!.k3&!3Q;4!<E9,$P=:&00)Bm:fLLuj]R1<cWL`[
<`Djd5rU>=(_@#X!s-:>JcLB&JcLB&JcNpn%fl\5"ptnZ+tYc@8l/Jf=NO]t=mT9%=BJU&:Im`/.j,W=
#mCA2VZ;;KJcLB&JcLB&jT#bk!sJuA(Ek=f5Y4aM<`lJ,M-1$b=&r6p7m728.3B97#R(81qZ)3JJcLB&
JcLB&OT5jl!X/l?(*>"`5=\II<`]9'K3>Qa%p2n5;GBVD1++(V%1!(<!T*m/!.k3&!.k3&!3H53!<NB0
%29j31He3%;H6e#k#m:=crgl]=&i*k6p!+M*"r_c"9JVA!.k3&!.k3&!.k3m!"T)3":#>K*%!C%78-QY
='3UJJm%GC%p2n4:eF)80-hGJ$O-\6!N,pL!.k3&!.k3&!9F1k!<N?-$PF@'00)Bm:fLLuY$$Ta#$=o*
:J!i2#;%,:&./UD!VueJ!.k3&!.k3&!0I6k!<E9,$4n(!/N5se:K1?p=G'ba=V"V9<`;aa5;ar6(CpfU
!s.6YJcLB&JcLB&JcMkP%flb9#nIgp.lBO^:/b1p=Q`h==j^@_=BAL#9h%9%-ls*4#Qt20_>o/fJcLB&
JcLB&a8c_O!X/i='cnbZ4[r.D<EE;G=b9fD=V"V9<DcFX4#&'%'+>*K!Wf.uJcLB&JcLB&JcOj3%fl_7
#7M7c-8@SM9Mnek=Kbkb=U/&0<)?1R3A(O^)A*>]!s/N"!.k3&!.k3&!.k34!"Ar1!sT,F)C-pq6:t'R
!EN<U=ghHD=BJU&:J!f1/0PiA$3gS5h#N$,JcLB&JcLB&WrNY2!sK#C(a1Fg5Y+[L<``De=b9f)=V"V9
<DlO]4u=]1((LTR!Wg+;JcLB&JcLB&JcNgk%fl_8#S%Ul.5O.W9i=tm=Njp"=mfE'=BAL"9LV&u-QNm1
#6Y)/V#Z)IJcLB&JcLB&irBSj!X&`:'-&>R4%)_=<**2+=c6Dg=B8Bt8jYNk,R,/"$O-_8!Vl_I!.k3&
!.k3&!07*g!<N?-$P=:%/iZ0i:BONr=BL;\[oj5D=&r6p83f'a+W(at"Tne\!.k3&!.k3&!.k3N!"T)4
"UP\U+=f<685<&`='4]iJm$Q*%p2n5;GBVD1FX@[%LE:@!Pe\e!.k3&!.k3&!6,!L!<NE1%2Bp41-A!!
;,p\"buoX$mo^0'=&`!h6TQnJ*"r_c"9JV"!.k3&!.k3&!.k41!"T)3":#>J)^R-t6V:0S<`lV0NEHTj
=B8?r8O59e,8gXs$3gS6!VcYH!.k3&!.k3&!0.$e!<E9,$4n$u/2faa"AVlr='15\\60>E=&i-m7QrXY
*u5@n"Tne[!.k3&!.k3&!.k3M!"T)4"UGSQ*[ig-78-QY='4`jJm$T+%p2n4:eO2<0d[kS%1!(<!P\Vd
!.k3&!.k3&!6"pK!<NB/$kjR+002Hm:fLItc<5a%nQ?E*=&r6q8O59e,8h($"p=u.UB#lGJcLB&JcLB&
i;aDi!WrW6&/ZQA2F'f.;cQn$ZWW;k$WpJ1;GBVE1asL^%g31B!s&Gs!.k3&!.k3&!.k30!!rZ-"UPYR
*[id+"[u*^<EE:Y=h.ZG=B8Bt91(`o-6*^/#Qt20g&Q^)JcLB&JcLB&VuRA0!X&`:',r2M3C6;5;c["&
lrepCel`Pd=&r6p83f*b+rLt#"p=u.^&W`bJcLB&JcLB&_uL>L!<WN5&/QK?2*ON);H6e#crks'nlZK*
=&i*k76NFU*u5=m"Tne!!.k3&!.k3&!.k4.!"T)3"UGPO*@ER'6VC6T<`l_3OBE#p=&r6q8O>Ej,o[L+
#6G#0!VHGE!.k3&!.k3&!/gg_!<NB/$P=7$/I+4"85<)`='1>_]3,\I=&i-m7Qr[[+W(at"p4o-f`6U(
JcLB&JcLB&VZ78/!<WK3%i-691H\*";,gRum9,$DfNAbf=B8Bt91(cq-QNm1#R(81]E!N`JcLB&JcLB&
_>k,J!X&`:',r2L3'p24;cZt%dTM0)oN;`-=&i-n83f'a+rLt##6Y)/TE'QDJcLB&JcLB&h>e)f!WrW6
&/QH=1d4B';,p\"[TS_q%Tlb2:eO2=1+41Z%LE:@rrM`lJcLB&JcLB&JcLW-"p"c/#RqIf#pq;d6:t$P
<``C^=hRrL=BAL#:.RZ0/gM>J$jQn:!S7='!.k3&!.k3&!2TZ,!<NB.$P=4!.lBL[9i4nl=RTCE=k[!j
=BJU';+sDA1FXC]%giLC!Wfn5JcLB&JcLB&JcNRd&-2k:#n@Xi-87JJ8l&Ad='3sTJm%eM&6N"6;bfnM
3%cHq'+>-L!WekmJcLB&JcLB&JcOR+&-2h8#7D+]+tPT97SQ`[='2t8PZ\T#=B8Bu9LV*#.3KE<$3gS6
!V-5B!.k3&!.k3&!/LUY!<E9+#n@=X*@EO%6V:-Q<``C`=he)N=BAL$:.RZ10-qPN%1!+=!S%1%!.k3&
!.k3&!2BN+!<NB/$P=7#.lBL[9Mnbj=BP,sJm$l3&Qi.9<)?4V4YnQ1(D$oX!s/M6!.k3&!.k3&!.k3c
!"f54!sJu@'ceVT3^QD6;cZt%eldT-pfS/1=&i-n83o3f,o[L,#Qt20S,e-@JcLB&JcLB&g&M]c!X&`9
&K)`B2*OK';,gRu=M%_%=VFn=<`Dmg6p*7S+;YRr"p4o-!!)QiJcLB&JcLB&JcLN*!s&E)"UtbJ'HJMR
3C-53;H6e#OBKD&&6N"6;GBYH2_H?p'+>-M!WgaMJcLB&JcLB&JcMJE&HMq9#7D+\+=]0178$HV<``Dq
=b9f5=V4b;<Du[c6T[%O*u5@o"p4o-[fD![JcLB&JcLB&]`8WF!<WK2%29a-/iQ$c9i=tm=P-c.=o2>6
=BJU';+sGC2(Tsj&e#!K!We_iJcLB&JcLB&JcOF'&HMq9"ptnX+"/m+6V:-Q<EE;9=dW>(=BAL#:.RZ2
0IIkU%g`CA!Wi6"nc47AJcLB&JcLB&KE2#Q&-E(A%20X)/2f[]9Mnbi=BLbi`*![S=&r6r911m!.NoZA
$O6e9!RUn!!.k3&!.k3&!1s6(!<N?-$4djl-87GG85<&_='/T!=b9f8=V=h=<`Dpj7mApb,odU/#mCD4
!OVoZ!.k3&!.k3&!4i.B!<NB/$P=4!.Pj1T8l&Ad='43[Jm&%T&Qi+7;GKeM3\`$)(D$oY"9JUk!.k3&
!.k3&!.k4%!"o;6!sJu?'H8;L2EsZ);,gRt=MS(/=V=h<<`;gf76NIX+rV(&#R(;2!W)lf!.k3&!.k3&
!.k3&!##>5!X&]7%i-360KDEi:/Y(n=BLkla&s$W=B8Bu9h.H-/gVJP%LE=A!WgUIJcLB&JcLB&JcM>A
&ci"8":,DK)'LIc4@De;;cQn$q,r;PjB3*t=BAL#:.[c50dn+[&.8^G!WfS,JcLB&JcLB&JcN:\&ci%9
"pkbR)^I!n5"/.A;cZt%hH>G5'3SF=<Du[c6p*:V+rV('#R(;2!L<_;!.k3&!.k3&!7Lo\!<NB.$4dmn
-8.>D7nli[<``D@=e8b/=BAO&:eX>C2D$0o'b1NS!s/Mu!:g,A!.k3&!.k3&!.k4M!##A6!sAl<&JuW>
1-.`n:/Y(n=BLtob#o?Z=&r9t9h.H/0IInX&.8^G!WgLFJcLB&JcLB&JcM5>'*/.:"UPVO)Bp[g4@De;
;H6e#=T)BS=m&p$=BJU';GKeM3\i--)%m>`"Tnc+YQ07TJcLB&JcLB&[/^j@!X&]7%i$'1/N,d]92AJd
='/Sa=bTu[=BJW9<DlUb6p*:V,9%:*#mCD4!L!M8!.k3&!.k3&!7:c\!<E6)#7D(Z*[WO"5=S=C;cZt%
=N=R==VFn>=&i0p91;$&/L;AO%giLD!Whronc47AJcLB&JcLB&JcPZJ'*/+9"UGMK(a(4]3C-/0;,gRt
=I`O>=VOt?=&i0q9L_6*0.%_V&.8^G!W`>E!.k3&!.k3&!.k3;!#,G8!sJu?',i#D1-.`m9i4kj='/UW
=mB-'=BAO&;+sJF3ADp)(_I/^"Tnf,XT3qQJcLB&JcLB&ZN([?!<NB.#n@Xg,:bQ46V1$M<*!(&j]RCB
"^"i,<)H@!83o9l.3TQB%1*1?!WeA_JcLB&JcLB&JcO'r'EJ49":#8E'c\JM2*F;u:/Y%l='3UJV-+L7
=&r9t9h7T41FjXg'FkER"9JT)o)S=]JcLB&JcLB&JcLB&p])!/!<WH0$P4'o,qV#<6qU3P<E<1'TNTZF
'NeF;<)HC^6Td1V,9.F/$3p\8!<L4@JcLB&JcLB&JcM#8&HMq8"UGMK(EOnU2EjN$:Jt0o<``CW=mfE,
=BAO&;,0\M4>eZ8*>T1o#6Y)/!NH-O!.k3&!.k3&!3ZA:!<N?,#Rh:^+"&^#5"/(>;H6b!=QrtJ=UJ85
=&r9u:.[f92$to]*>T1o#6b22!K@)2!.k3&!.k3&!6Y?W!<E6("UPVN(`t+Y2a0Z&:Jt.m='3aNW`^'=
=BAO&;,0\M4Z+i=*Z#Cs#R(;3!Ug$Z!.k3&!.k3&!.k3&!;-=-!<E6)"pk_P)'C=\2a0Z&:/Y%l='/S$
=k6^j=BJX*<)HC^6Tm=[-6<s8$j["=!Wg1=JcLB&JcLB&JcLo5%KQS3"9o/B',_o@0/l'_#>.`g<*!(&
=Gg8Q=Vb+A=&r9t9h@]82D-<u(_I/^"p4o-!N,pL!.k3&!.k3&!3?/9!<E6)"pthR)'C=\2a0W$:/Otk
='/Sm=clhs=BJX);c-7[6Td4Y-6=!/&e,-O"9JT)M?&5.JcLB&JcLB&`rHkU!<NB.$4[^e+=Ag#4[Ve8
;,gOs=BO$TY?Cj,'N\:5:eXDH4>e];*Z,M!#mLM6!<MNenc47AJcLB&JcLB&JcP<@'EJ49"9o/B',_o?
/iGgZ852oZ<EK0%W`e(Z(Kad@<`N'p9LhE21bC!p(D.)_"p=u.!Pe\e!.k3&!.k3&!0$sc!<E9*"pk_O
(`t(5/i>aX7nc`W<E<1'=H?V[=Vk1B=&r9u:J4/C3\r<5*Z#Cs#mLM6!<JqqJcLB&JcLB&JcM_L(BFO=
"9o/A&f;Z9/2TFS7S?NT<*!(&=S#[]=VFn>=&i3s:.dr?3AN*1*>]:r#R1A6!W`=V!.k3&!.k3&!.k3g
!#P_;!X&]6%2'Ht,V(W15Xe:?;,^Ir='/SX=gV<K=BJX*<Du^g8OPa%0e+Cf((^l["Tnf,!U'OS!.k3&
!.k3&!.k3&!:9b'!<E6)"pk\M(*"PK0fV?b8PN#[<E<1'=Kblc=Vt7C=&r9u:J=;H4Z4uB+r_7.$j["=
!W`>7!.k3&!.k3&!.k3-!!WH)!X&]5$kEma)^6[`2EX;r92AGb<`f9&Q!+)h)-C!B<`N*r:.n&B4#JW<
+;tq)$O?n<!W`=o!.k3&!.k3&!.k3H!#Ye<!WrT3$P*pi+=A`t3^H2,:/Oqi<``C*q,s4j)-C!B<`N'p
9h@`;3AW34*uGY$$3p_:!W`=R!.k3&!.k3&!.k3c!#bk=!WrT2$4[^d*[N<l3'K`$9MeVd<``@)=Pm8m
=W1CE=&r=#;GTtV6Tm@_.O,rM&e,0Q"9S]+!TX7O!.k3&!.k3&!.k3&!9jJ%!<E6(":#8C&f2N3.53YB
5t4IA;,^Iq='/S4=m&re=;Y+?<)ZUf8ju!,2(g:#)\iqn#mLM7!W`>3!.k3&!.k3&!.k3)!!30%!Z2"B
"pk\L'cJ2B/MfCO6qC!I;H-Xs='/Rs=oMM'<u4n;;c-=`84,R#1+X^n)&*Sh#R1D5!<JVhJcLB&JcLB&
JcMDC*!$'A"9f&=%hfd$,UtK,4@)G/9i+bf<``@)=BVG&r`C%><`N*s:eaMM5W^hV.3fiL&e56R"Tnf,
!W2qL!.k3&!.k3&!.k3^!#u"?!WrT2$4RR_)^-R\1H@Ze84u`U;cQk"='/Se=i+>@=;k7B<`E!p:.n)D
4ZG2J-6O3A&.AjL"Tnf,!T*nJ!.k3&!.k3&!.k3&!9=,#!<E6("9o/@&/6!',UtK+4$Z5+9M\Ma<E<1&
=BN7>mofWl)cp*A<Duai9LqQ93]/Q>,97U7%grXI"9S]+!ODcX!.k3&!.k3&!.k1l!!!$#!WiK.#RV%S
()nDE/M]:K6:OO@:Jt+k<``B%=Kks-=9qu0<`E!p:J==m76s$p0e4Om)ANhn$3p_:!W`=e!.k3&!.k3&
!.k3>!#GY:!WrT1#n.@Z)'1"O/i5RP6:XXB:f7Ep<E<1&r`HO1r`C.A<`W0u;,9kW7RB6t1G'su*>fG#
$OI"?!s/K(pAfdFJcLB&JcLB&JcN1Y*<?0B!sAc5$4[X`)BU7T0JtmU6UsaC:Jk%i<`W<#=R]J:=oMME
='&F&<)ZXi9M%]?4ukGQ.3orP'bLl^#6b53!W`>U!:g,A!.k3&!.k3&!.k4-!$2.A!WrT1#n%7W(E=SF
.kikB5=7q59i"Vb<)lt#=8c7B=nu5!=<:OF<`N*s;,9kW7RB:"2(pF*+<)(/%LWOH"9S]+!Nc?R!.k3&
!.k3&!.k4H!$D:C!WrQ/#7:nO'Gqi7-S-u13^5u$8PDlU;H$Rr<``B%=N+GA=;"\:<`N*t;G^+]8OYs0
3AiK@-4M+<(D@;f#mUV9!WiB'O8sk4JcLB&JcLB&PQ29r!<N?+"pbSG&JZ0(+t"or2%M`36:FI=:/=_c
<)lt"=',?&bZXmH+]h`G<`N*s;,9nZ84>g-3A`E?-6X?G'G(]\#6b54!W`>l!.k3&!.k3&!.k3&!3ZAI
!<E6'!sJl7$P!a`)'0tL.kih@4[DJ+8k_uV;H$Op<`W:'r)io#fNJ/Tr`:.A<`N*t;,C"]8Oc'44?,/N
.jcD[(_dPk$4$h=!s8H&e,]%>JcLB&JcLB&JcLB&fDm2u!<N?+"U>>A%M9En*?lg\0/GRL5=.e092/2Y
;H$Op<E<.%=8Q+W=o2>$=!UjJ<`N*u;c-@d9M.iE69[Ii1+k%&+WM=6&Io0S"pG)1!W`>"!.k3&!.k3&
!.k3&!:p3i!@%XJ"9f#:$P!a`(`abG.5!A63B]Vp7S-3H:/Fec;cHas<`]3$pK6ofpfRJr*`c<A<E)mp
;,9q\8k;B<5Wh%a0eFe!+<244&Io0T"pY;7!s/K(M#`,-JcLB&JcLB&NWB%Z#Qb)2"U>>A%M9Wo(`OPA
-S$i+2`a)f6UjU=9MJ;Z;,U=l<)lrt<r?%c=Su8"<[:[F<)cdo;,C%_91h`D69m[o2DQm7-6aKM(DIDi
$OI%A"9S`)!UB`;!.k3&!.k3&!.k3L!<*!C!WrQ/#71bI&/,ft*[)gY/2/n>3^#_p77TpA9MJ;Z;,U9l
;uTbq<W#ni=8Z+u<@1[E;c?Rk:f'n]9M.iF6pa+#3ArZH/1;bd*>oV+&.JsP"pG,3!r`5F!:g,A!.k3&
!.k3&!.k3u!<*!H!WrQ/"pbPF%h]To)]p7N.4m502E<l`5sn(284lNK9hnJ\;,L4hr_r\nr)NVnr_j5'
;Gg:f:JOVX91h`E)FQnW5!(_^1+t1,,p=<J(DIGk$jm7E"U"o/rW/YlJcLB&JcLB&JcLB&lN$nb-3=8P
"U55=$P!^]()\)6+seWg0/>@C3BTJj6:=7484cEH9MJ5Vr_NJhqGI2f.8N`7:/+GV91hcH7R][25Wq1h
2Dd-@.juYe*ZGq2&eGK[#mUY;!s8W(!J1<'!.k3&!.k3&!/:LQ!<<0L!s8Z0#7(YF%M9?i)&jV?,UY&m
0/5:A3''/c5=%V(77Kd;84cBF9(u!X8gd2%84Q-=6pj:,5<_1j3&WQI/hAFu,9\*I(_m\q%L`[M#6b54
!Wr?%irFZ2JcLB&JcLB&JcMGDrW*o=!WrQ/"pYGB$k<j_'c7i0+!MsX.4[#)1,KCs2`Wo]4[)(q5X@_'
r^6TOr^/&"6:!k$5!D+k3]K&U1GLO7.k)ej+Wh[B(DRPo%L`[N#6k>7!s/Q'!Q>'0!.k3&!.k3&!.k3&
!6G6>!@%XJ!sAc3#71_G%M06e()Rr0+!DjT-RgPs/hf"81Gq'K2`UdsqDo<N3B/uW2Dm<I1,1F7/1N%p
,U4EQ&KD]+()%8j%1ERM#6k>7!s/Q'!LEe<!.k3&!.k3&!.k41!<*!D!WiH+"9eu7#RUqK%M06e'c.`,
*?H=I,:+Za-n6_u/1iJ,pb*gD/hJV).Ocbn-6sfZ+<DL@)&F#$&J,E\$OR.E"pG,3!s8E%p],mGJcLB&
JcLB&JcLB&qZ-Tr+9DTH!sAc3#7(VC$OdLU&J>cm()Ro-*$$(B+<_mP,9ut/+<r*T+X%sM*ZZ1<)&O,(
'+tlf%L`^P#R:P;"U"o0!Wr?%f`6U(JcLB&JcLB&JcM&9rW3!"$j-V8"U52:#RLhG%1WgX&.oNg'GV>u
(Dmu,)>G*i)&X8.(D[`#'GD)k&.T-X$OR1G#6kA9"9S`-!rW/2!:g,A!.k3&!.k3&!.k3a!;urt!YPS;
"9er5#6tM@$47.L%1NdX&,m.=&cNFA&J>Wd%hB-[%1EXQ$4."E#6kA9"9J]."9&B#!K7#1!.k3&!.k3&
!.k4%!;lls!riB%"TJZ*#6+r.#lY/0$MY#.$N:A3#lb/0#6+l,"TAN&!rN)c!.k3&!.k3&!.k3&!.k4=
!;cfq!r`<$"T8Mq#5n`("TAN%!rE#B!.k3&!.k3&!.k3&!/:LP!WE,s!q$0f!r;qu!:g,A!.k3&!.k3&
!.k3O!8mnR!.k3&!.k3&!.k3&!.k3a!;$<@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!:g,A
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!4i/\~>

%%EndBinary
grestore
np
326.578 83.1432 mo
326.578 76.332 li
330.635 79.7636 li
330.635 79.777 330.635 79.7894 330.635 79.8027 cv
330.635 79.8064 330.635 79.809 330.635 79.8126 cv
329.457 80.7795 li
329.457 80.7798 li
326.578 83.1432 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[4.58182 0 0 7.2 315.339 181.275 ]ct
snap_to_device
<<
/T 1
/W 14 
/H 22 
/M[14 0 0 -22 0 22 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
-94.6214 470.514 mo
865.269 470.514 li
865.269 -69.4862 li
-94.6214 -69.4862 li
-94.6214 470.514 li
clp
gsave
-10.9124 506.514 mo
781.088 506.514 li
781.088 -105.486 li
-10.9124 -105.486 li
-10.9124 506.514 li
clp
330.635 79.8028 mo
330.635 59.9206 346.753 43.8028 366.635 43.8028 cv
386.518 43.8028 402.635 59.9206 402.635 79.8028 cv
402.635 99.6851 386.518 115.803 366.635 115.803 cv
346.753 115.803 330.635 99.6851 330.635 79.8028 cv
cp
false sop
0 0 0 .807065 cmyk
ef
.75 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
330.635 79.8028 mo
330.635 59.9206 346.753 43.8028 366.635 43.8028 cv
386.518 43.8028 402.635 59.9206 402.635 79.8028 cv
402.635 99.6851 386.518 115.803 366.635 115.803 cv
346.753 115.803 330.635 99.6851 330.635 79.8028 cv
cp
0 0 0 1 cmyk
@
0 0 0 0 cmyk
%ADOBeginSubsetFont: LWYAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IEGHWD+Calibri gcheck setglobal} if
1 5576 19 <00010035fffa058403bc004500deb90047ffc0403d0f014d38080c014d29
380137080c014d252e01262101262001261f01261e01261d01271c012804
012903013a3b013b3a013b2d013c2c01102015014d10b8ffe0b310014d10
b8ffe0400a0d014d10200c014d100fb8ffe0b310014d0fb8ffe0400c0d01
4d0f200c014d0f414910b8ffe040200f014d3f104f106f107f1004104012
164810334925493a902c012c200f014d2cb8ffc04010131648672c772c02
452c012c174c094c003f3fd55d5d2b2b5dc43f3fcd2b5d2b3f012f2b2b2b
2f2b2b2b2b3130005d5d5d5d015d5d5d5d5d5d5d5d5d2b5d2b2b01140607
010e0323222e0227032707030e0323222e022701262635343e0233321e02
17131737133e0333321e0217131737133e0333321e0205840405fef7030d
17281e1f2a190c03bd0202af030d1a291e1f27190c03fef9050408132017
1c22120803d90202c70209121f19181f120802d70201d6020913211a181d
1107039f07140ffca90b0e080304080e0a028d0909fd730b0e080304080e
0a03570f1407090b070203070d09fd1a090902e6090d070303070c08fd18
090902e6090d070302080a00>IEGHWD+Calibri AddT42Char 
IEGHWD+Calibri /CharStrings get begin
/g19 19 def
end
IEGHWD+Calibri /Encoding get
dup 37 /g19 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IEGHWD+Calibri*1 [33{/.notdef}rp /g20 /g18 /g13 /g4 /g19 218{/.notdef}rp]IEGHWD+Calibri nfIEGHWD+Calibri*1 [28 0 0 -28 0 0 ]msf347.615 87.6533 mo(%)shIEGHWD+Calibri*1 [18.6667 0 0 -18.6667 0 0 ]msf367.631 94.6533 mo("#)[9.80734 0 ]xshIEGHWE+SimSun [18.6667 0 0 -18.6667 0 0 ]msf387.245 94.6533 mo(\000\001)sh2 lw
216.257 173.142 mo
216.257 153.26 232.375 137.142 252.257 137.142 cv
272.139 137.142 288.257 153.26 288.257 173.142 cv
288.257 193.024 272.139 209.142 252.257 209.142 cv
232.375 209.142 216.257 193.024 216.257 173.142 cv
cp
0 0 0 1 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: LWYAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IEGHWD+Calibri gcheck setglobal} if
1 4892 17 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>IEGHWD+Calibri AddT42Char 
IEGHWD+Calibri /CharStrings get begin
/g17 17 def
end
IEGHWD+Calibri /Encoding get
dup 38 /g17 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IEGHWD+Calibri*1 [33{/.notdef}rp /g20 /g18 /g13 /g4 /g19 /g17 217{/.notdef}rp]IEGHWD+Calibri nfIEGHWD+Calibri*1 [20 0 0 -20 0 0 ]msf241.542 181.142 mo(&)shIEGHWD+Calibri*1 [13.3333 0 0 -13.3333 0 0 ]msf249.364 186.142 mo("#)[7.00525 0 ]xshIEGHWE+SimSun [13.3333 0 0 -13.3333 0 0 ]msf263.375 186.142 mo(\000\001)sh456.179 251.568 mo
447.015 251.568 li
447.015 220.477 li
430.651 220.477 li
430.651 219.495 li
456.179 219.495 li
456.179 251.568 li
425.742 251.568 mo
416.579 251.568 li
416.579 239.787 li
425.742 239.787 li
425.742 251.568 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[40.2545 0 0 32.7273 405.339 12.7292 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 123 
/H 100 
/M[123 0 0 -100 0 100 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLr6J,~>

%%EndBinary
grestore
np
425.742 239.787 mo
416.579 239.787 li
416.579 219.495 li
430.651 219.495 li
430.651 220.477 li
425.742 220.477 li
425.742 239.787 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[14.7273 0 0 20.9455 405.339 24.511 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 45 
/H 64 
/M[45 0 0 -64 0 64 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 45 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 45 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 45 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 45 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
iW+Q1JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcOd1JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&jT'f~>

%%EndBinary
grestore
np
447.015 251.568 mo
425.742 251.568 li
425.742 239.787 li
430.651 239.787 li
430.651 220.477 li
447.015 220.477 li
447.015 251.568 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[21.9273 0 0 31.7455 414.503 12.7292 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 67 
/H 97 
/M[67 0 0 -97 0 97 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 67 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 67 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 67 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 67 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
l2ZD9JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMGD
qZ6<hqZ6TpJcP'9WrW)!rW<'"p]16nrW<$!p&K[ET)eikrrW-$rrW0#qZ-WsrrW*#!!<-#L&d>9"9AN)
!sJQ+"U"o/!W`?#!!E<'!WrT("U,#2!s/K(PlQI;rrEQ1"9f#9#mgkB"U"o.!WE'0!<E6("U55=#m^b?
"9S]+UB#lGp&H?=!<N?,#7:kK%1ERL"p=u.!<<-$!WrT2#n%1O$k!=F"9JT)Z2fIVkPuk/!WrT2$4[U[
&ePT]#R(;3!<<-$!sAi9%1j*a&J#6U"p4o-^]8rdgAhfd!<NB.#n7I](Ddf!%LNFD!r`34!WrT4%1j3i
(D[Yp$O6e:!<LLHJcO$q&HMn7"U>DH'c@u2)AWno#R(>0!>,A9#7D%V)&jP7(D7/`"Tnc+h#N$,^AoS]
!<WK3%20U"+<_dE'FtKR!s/K(!X/i<&f2Q2+WhU;%giLD!WhTeJcN%U-34/M"pkeT)^-IP+WM7/$3gS6
!<N?,#n@Xf+<r-U*>]:q#6Y)/q#H!HUAuD;!X&]7&/H92-70uZ(_I,["9JT*!sJuA'cS>D-7'`O"VM4K
"Te^\!0mNs!<NB/$P4*r,Ub&e+;ke"#6Y)A!<N?-$4dmm,:=ld+;tn%#R(81Q2l[?"9AQ,#7D[e(EXqP
.4-/T'+>*K!W`?)"ptnW*@*$^-QsBB%1!+=!Mf^I!;HO@!<NB/$P=3u-7UJm+W;"&#6Y)/!WrW6&/QB6
.4Q_i)\`_e"Te_1!.k49!%%^J":#;H(a(.T.OQAX'+>*K!W`?)"ptnX*[N6b-mBTE%1!+=!Pe\e!9sRU
!%%^J":#;H(a(.T.OQAX'+>*K!W`?)"ptnX*[N6b-mBTE%1!+=!Oi&\!9F2-!<NB/$P=3u-7UJm+W;"&
#6Y)/!WrW6&/QB6.4Q_i)\`_e"Te_D!.k4&!%%^J":#;H(a(.T.OQAX'+>*K!W`?)"ptnX*[N6b-mBTE
%1!+=!Rh%#!6G3f!<NB/$P=3u-7UJm+W;"&#6Y)/!WrW6&/QB6.4Q_i)\`_e"Te_`!.k3_!%%^J":#;H
(a(.T.OQAX'+>*K!W`?)"ptnX*[N6b-mBTE%1!+=!Ug#?!3H5J!<NB/$P=3u-7UJm+W;"&#6Y)/!WrW6
&/QB6.4Q_i)\`_e"Te`'!.k3C!#u"@":#;H(a(.T.OQAX'+>*K!W`?)"ptnX*[N6A.OZJ['Fb<O!We5[
OT5jl!X&`9&JuW;.Oleh)A<nq#6Y)/!WrW6&/QB6.4Q_i)\`_e"Te^n!.t7O!@7dM#7D+\+=8Qf-mBTE
%1!(<!<N?-$P=3t-7LDm+r_4*#R(81VuVDLoDg3=!X&`9&JuT:.Ounk)\`_e"Tnf-":#;H(`t(S.OZJZ
'+G3N!Wf_0JcOp5-34/M"ptnX+!rHf.3ffI%LE=A!WrQ1$kaF#-RpSn+W;"&#6Y)/_uPAhfDm6!!WrW6
&/QB6.Ouqo*Z#@q#6Y,3"UPVP)BgIX.OQ>V&e#!J!Wg^LJcNpn-34,L"ptkV*@*'a.OH8U&e,-O"U52>
&/H61-n6\n*uGRt#6Y)/huJ?/]Ds8Z!<WK3%M]s..4Zns+rh=/$jd1G$4[[c+!i?c.3orN&./UD!Wh]h
JcMnQ,ln&M#RqFc+X\cj.4$&R'G(]^%1X!d*$HXY.OZM]'b1NR!s&H#!.k3C!#u"@":#;H(`t%R.k2nk
*Z5\*&J>`n)^$CS.Oc\L+;tn&#R(;2nc47AVuS+E!<WN5%i$'.-RpVq-6aKM)&F,-*$6CQ.4HVh*>]7p
#6Y)/!.k3>!#GY:!X/i=&fDc:-n6\p-6jWT*ZcCH,UNpJ.46A_)&!Jd"p4o-NrY(<#QXu0"ptkU)^$"E
-n-Sn-RC#_,:"Q^-R^>f+<)(-$O6e9!Ls.A!;lg)!<E9+#Rh:\)^$CRr[7aor$Dk#-RL)]*#9+q#mCD4
!NH-O!:9ao!<N?-#n7I^)]p7LqBc[u,pXWU)]'+r#mLM6!<K\1JcO[.%06J2"9o/A&JZ0'+!Dj,,7YnA
+<MR@'bLl^#6Y,0!Q>%j!71]T!<E6)"pk\L',DH)*$,#"%36E,(`!br$jd.A!s/MO!.k3e!"/f.!sAf6
$OmX['GgT_$Pa?g&.T'R"p>#0!T*m/!3uS4!<E6)"U>>A$k<dZrXfPM%h9!U#mUV:!s/K(m/V_<UAtT$
!<N?+"U>;>$N(8:$4-tC"U"o/rW2iqJcM#8#lt&.!WrQ/"U521#6Y58"U,#3!s/N)!J^Z.!<3*!!r`<$
"TAN&!r`4b!.k4B!;urp!rN(l!.k41!;HSp!.k3&!9sQ9!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k49!.k3&!.k3&!.k3&!.k3&!.k3&!.k3X!.Y~>

%%EndBinary
grestore
np
430.651 239.787 mo
425.742 239.787 li
425.742 220.477 li
430.651 220.477 li
430.651 239.787 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[5.56364 0 0 19.9636 414.503 24.511 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 17 
/H 61 
/M[17 0 0 -61 0 61 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 17 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 17 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 17 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 17 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&kPtS`^B"97huM[8!<E8;!!30%!pK^;!!30%
"2Fm<!<E;n!7(WH!<NA=!!30&"T&2=!!30&"Mb!=!<ND>!!30&"N^Z=!!30&"Mb!=!<NDP!:Kmh!<ND>
!!30&"PWq=!!30&"Mb!=!<NDb!8RVV!<ND>!!30&"RQ3=!!30&"Mb!=!<NDt!6Y?D!<ND>!!E<(!rr><
!!30&"2k3<!!30%"2Fm<!<E;I!:p0k!<U"9!<E7P~>

%%EndBinary
grestore
np
0 0 0 1 cmyk
%ADOBeginSubsetFont: LWYAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IEGHWD+Calibri gcheck setglobal} if
1 1388 5 <000100aaffed04790514002b0099401d602d01201810014d20100f014d20
100d014d200a0c014d20180b014d20b802104011004015014d004013014d
004011014d0016b8ffe8b310014d16b8fff0b30f014d16b8fff0b30d014d
16b8fff6b30c014d16b8ffe8b30b014d16ba0210000affc0b315014d0ab8
ffc0400913014d0a265210521bb80129b10556003fed3f3f012f2b2be12b
2b2b2b2bd42b2b2be12b2b2b2b2b31305d01140e0223222e023511343e02
33321e021511141e0233323e023511343e0233321e021504794580b8756b
b07e440814201a182213082c5375494b75512b081421191821130901de76
b980423e79b6770323080c070505070c08fcf25a86592d2c588257031708
0c070505070c0800>IEGHWD+Calibri AddT42Char 
IEGHWD+Calibri /CharStrings get begin
/g5 5 def
end
IEGHWD+Calibri /Encoding get
dup 39 /g5 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IEGHWD+Calibri*1 [33{/.notdef}rp /g20 /g18 /g13 /g4 /g19 /g17 /g5 216{/.notdef}rp]IEGHWD+Calibri nfIEGHWD+Calibri*1 [16 0 0 -16 0 0 ]msf431.575 240.244 mo(')shIEGHWE+SimSun [16 0 0 -16 0 0 ]msf441.841 240.244 mo(\000\001)sh9.47556 79.8781 mo
9.47556 59.9958 25.5933 43.8781 45.4755 43.8781 cv
65.3578 43.8781 81.4755 59.9958 81.4755 79.8781 cv
81.4755 99.7603 65.3578 115.878 45.4755 115.878 cv
25.5933 115.878 9.47556 99.7603 9.47556 79.8781 cv
cp
0 0 0 0 cmyk
ef
9.47556 79.8781 mo
9.47556 59.9958 25.5933 43.8781 45.4755 43.8781 cv
65.3578 43.8781 81.4755 59.9958 81.4755 79.8781 cv
81.4755 99.7603 65.3578 115.878 45.4755 115.878 cv
25.5933 115.878 9.47556 99.7603 9.47556 79.8781 cv
cp
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: LWYAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IEGHWD+Calibri gcheck setglobal} if
1 6198 21 <00020061ffed046103ca004400590048b20c2036bb01f90045002501bcb5
45162f2f004fb8020a400f162a49200c114aed1b4a54ed114d3bb80102b1
074d003fed3fed3fed1239393f012fe1c4392f1239e110e1393931302514
0e0423222e02270e0323222e0235343e0233321e02173e03373e0333321e
0215140e04071e0333323e0233321e0201342e0223220e0215141e023332
3e02350461070d182424142546372606133c4f6037648e592a3467966340
705638091113090504030a111911181f12080a121a1d221201121f261512
1e17110605060502fe7d2740532d3f59391a143455423b5b3d204d1f1e0c
0a0705122d4b3a2b48351d4a82b26674ba84472950774f486a4727040205
040203080c0710435b6b6f692c55673913070607050e1901805e8655273c
637e424783653d3661834d00>IEGHWD+Calibri AddT42Char 
IEGHWD+Calibri /CharStrings get begin
/g21 21 def
end
IEGHWD+Calibri /Encoding get
dup 40 /g21 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IEGHWD+Calibri*1 [33{/.notdef}rp /g20 /g18 /g13 /g4 /g19 /g17 /g5 /g21 215{/.notdef}rp]IEGHWD+Calibri nfIEGHWD+Calibri*1 [32 0 0 -32 0 0 ]msf36.6416 92.6781 mo(\()shIEGHWE+SimSun [32 0 0 -32 0 0 ]msf54.7978 92.6781 mo(\000\001)sh487.052 80.1061 mo
486.052 80.1061 li
486.052 59.6711 502.617 43.1067 523.052 43.106 cv
543.486 43.1067 560.051 59.6711 560.052 80.1061 cv
560.051 100.541 543.486 117.106 523.052 117.106 cv
502.617 117.106 486.052 100.541 486.052 80.1061 cv
487.052 80.1061 li
488.052 80.1061 li
488.052 89.7742 491.968 98.5179 498.303 104.855 cv
504.64 111.19 513.383 115.106 523.052 115.106 cv
532.72 115.106 541.463 111.19 547.8 104.855 cv
554.136 98.5179 558.051 89.7742 558.052 80.1061 cv
558.051 70.438 554.136 61.6944 547.8 55.3574 cv
541.463 49.022 532.72 45.1067 523.052 45.106 cv
513.384 45.1067 504.64 49.022 498.303 55.3574 cv
491.968 61.6944 488.052 70.438 488.052 80.1061 cv
487.052 80.1061 li
f
%ADOBeginSubsetFont: JIWAAA+SimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/JIWAAA+SimSun 1 GetGlyphDirectory3 <001C60D8A8C9B5EE310277DDBB2832A4374EC2AAD2FECEA46BF9EA3676379DDD5FEE9D3C0583EDC09520AC08CDEEFF1B03E42756D1A368F45077545FE53C018C807BFB2DB47A5B197A5CCDFEE5D3BDE6AA63BF8F9BAFB034788A06D4186353C2C12A92E7B4A8D11B53687F1458E271D6647C0DC4B1B5FD9D73D3DDC1A1367EF8556F5929FBA370E4513ACBCA26152B556629E0BB9E446730A0DC5CD20CD1C58DC128516C6BFD944345F77CA038F5D32FA9322751011285B67BE69E> |!endend end
%ADOEndSubsetFont
IEGHWE+SimSun [28 0 0 -28 0 0 ]msf508.065 91.1153 mo(\000\003)sh%ADOBeginSubsetFont: LWYAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IEGHWD+Calibri gcheck setglobal} if
1 2882 10 <00010099fffa037c057100340095400c3f3601293101314012014d31b8ff
d0b40f10014c31b8ffe0b30d014d31b8ffeab30c014d31b8ffe0b30b014d
31bb02270022000cfff0b40f10014c0cb8fff0b30d014d0cb8fff6b30c01
4d0cb8ffe8b30b014d0cb801f8401a162d2d00400f014d00400c014d0016
220b0528491c46114c054c003f3f3f3f123939012fc42b2b392f10f12b2b
2b2b32e02b2b2b2b2b31305d5d25140e0223222e02270111140e0223222e
023511343e0233321e021511013e0333321e021514060701011616037c08
13221a1b23180f06fe840812201918201307071320181920120801540812
192218192215090d0ffeba016e0d0b1a080c080403070d0901f2fe0d080b
080404080b080538080c080404080c08fcd201760a0d090303070b090c18
10febafe25111500>IEGHWD+Calibri AddT42Char 
IEGHWD+Calibri /CharStrings get begin
/g10 10 def
end
IEGHWD+Calibri /Encoding get
dup 41 /g10 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IEGHWD+Calibri*1 [33{/.notdef}rp /g20 /g18 /g13 /g4 /g19 /g17 /g5 /g21 /g10 214{/.notdef}rp]IEGHWD+Calibri nfIEGHWD+Calibri*1 [18.6667 0 0 -18.6667 0 0 ]msf536.065 98.1153 mo(\))shIEGHWE+SimSun [18.6667 0 0 -18.6667 0 0 ]msf544.551 98.1153 mo(\000\001)sh474.162 31.5691 mo
474.162 31.194 li
580.511 31.194 li
580.611 31.194 580.705 31.2331 580.776 31.3039 cv
580.846 31.3748 580.886 31.4689 580.886 31.5691 cv
580.886 123.36 li
580.886 123.459 580.846 123.556 580.776 123.626 cv
580.706 123.695 580.609 123.736 580.511 123.736 cv
474.162 123.736 li
474.063 123.736 473.966 123.695 473.897 123.626 cv
473.827 123.556 473.787 123.459 473.787 123.36 cv
473.787 31.5691 li
473.787 31.4702 473.827 31.3737 473.897 31.3039 cv
473.966 31.2339 474.063 31.194 474.162 31.194 cv
474.162 31.5691 li
474.537 31.5691 li
474.537 122.986 li
580.136 122.986 li
580.136 31.944 li
474.162 31.944 li
474.162 31.5691 li
474.537 31.5691 li
474.162 31.5691 li
f
589.378 131.786 mo
549.778 131.786 li
549.778 123.736 li
559.924 123.736 li
559.924 130.15 li
579.233 130.15 li
579.233 123.736 li
580.511 123.736 li
580.609 123.736 580.706 123.695 580.776 123.626 cv
580.846 123.556 580.886 123.459 580.886 123.36 cv
580.886 96.7684 li
589.378 96.7684 li
589.378 131.786 li
580.136 122.986 mo
579.233 122.986 li
579.233 99.0593 li
559.924 99.0593 li
559.924 122.986 li
549.778 122.986 li
549.778 105.693 li
552.299 103.06 554.436 100.054 556.096 96.7684 cv
580.136 96.7684 li
580.136 122.986 li
549.778 102.705 mo
549.778 96.7684 li
553.839 96.7684 li
552.689 98.8887 551.326 100.877 549.778 102.705 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[40.2545 0 0 35.6727 538.539 132.511 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 123 
/H 109 
/M[123 0 0 -109 0 109 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&ScF9~>

%%EndBinary
grestore
np
549.778 105.693 mo
549.778 102.705 li
551.326 100.877 552.689 98.8887 553.839 96.7684 cv
556.096 96.7684 li
554.436 100.054 552.299 103.06 549.778 105.693 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[6.87273 0 0 9.49091 538.539 158.693 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 21 
/H 29 
/M[21 0 0 -29 0 29 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 21 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 21 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 21 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 21 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
_>rs&ec>(;m/Op&m/R(c_uT0(e,\q;m/Op&m/R"a`W5B*dK&e;m/Op&m/Qq_a8kT,ciEY;m/Op&m/Qk]
aoLf.c2dM;m/Op&m/Qe[bQ.#0bQ.A;m/Op&m/Q_Yc2d52aoM5;m/Op&m/QYWciEG4a8l);m/Op&m/QSU
dK&Y6`W5r;m/Op&m/QMSe,\k8_uTf;m/MS~>

%%EndBinary
grestore
np
580.511 123.736 mo
579.233 123.736 li
579.233 122.986 li
580.136 122.986 li
580.136 96.7684 li
580.886 96.7684 li
580.886 123.36 li
580.886 123.459 580.846 123.556 580.776 123.626 cv
580.706 123.695 580.609 123.736 580.511 123.736 cv
559.924 123.736 mo
549.778 123.736 li
549.778 122.986 li
559.924 122.986 li
559.924 123.736 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[31.7455 0 0 27.4909 538.539 140.693 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 97 
/H 84 
/M[97 0 0 -84 0 84 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 97 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 97 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 97 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 97 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&g]48PqYuBPJcO=$Y5e+nO8sk4c2b9Pm/NCPJcNgk]`7*nScF?B^];:PhZ'DPJcN=]b5^)nX8mhP
Z2i;Pd/UEPJcMhOf`0(n\c@<^U]B<P_Z.FPJcM>Ak5W'na8gelpAgidj8Zjn`;kJiR/lOP\,XYPJcLr6
nc,indf=t"MZEPPWW1ZPJcLH(s8Shni;eH0JcP]KT`=3UJcLB&o`1Zbmf7q>JcP3=T`=]cJcLB&k5_1T
r;_ELJcO^/U]:>nK`H])f`8&Pp]#gFJcOR+VuQVnM#`,-eGucPoDamPJcO'r[K#UnQN2U;`rNdPjo:nP
JcNRd_uJTnV#Z)I\H'ePfDhoPJcN(VdJqSnZN,RWWrUfPaoApPJcMSHhuCRn_#T&eSH.gP]DoqPJcPNF
TE+$P^Al.PJcM2=lMn?nbQ*4pOoY%PYlE/PJcL]/q#@>ng&Q^)KE2&PUAs0PJcLB&quEDikQ$27JcPHD
T`=H\JcLB&mJrp[p&K[EJcOs6T`=rjJcLB&huKPPrr7ZPJcOI(WrMhnJcLB&g]48PqYuBPJcO=$Y5e+n
O8sk4c2b9Pm/NCPJcNgk]`7*nScF?B^];:PhZ'DPJcN=]b5^)nX8mhPZ2i;Pd/UEPJcMhOf`0(n\c@<^
U]B<P_Z.FPJcM>Ak5W'na8gelpAgidj8Zjn`;kJiR/lOP\,XYPJcLr6nc,indf=t"MZEPPWW1ZPJcLH(
s8Shni;eH0JcP]KT`=3UJcLB&o`1Zbmf7q>JcP3=T`=]cJcLB&k5_1Tr;_ELJcO^/U]:>nK`H])f`8&P
p]#gFJcOR+VuQVnM#`,-eGucPoDamPJcO'r[K#UnQN2U;`rNdPjo:nPJcNRd_uJTnV#Z)I\H'ePfDhoP
JcN(VdJqSnZN,RWWrUfPaoApPJcMSHhuCRn_#T&eSH.gP]DoqPJcPNFTE+$P^Al.PJcM2=lMn?nbQ*4p
OoY%PYlE/PJcL]/q#@>ng&Q^)KE2&PUAs0PJcLB&quEDikQ$27JcPHDT`=H\JcLB&mJrp[p&K[EJcOs6
T`=rjJcLB&huKPPrr7ZPJcOI(WrMhnJ,~>

%%EndBinary
grestore
np
579.233 130.15 mo
559.924 130.15 li
559.924 123.736 li
579.233 123.736 li
579.233 130.15 li
579.233 122.986 mo
559.924 122.986 li
559.924 99.0593 li
579.233 99.0593 li
579.233 122.986 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[19.9636 0 0 31.7454 548.684 134.147 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 61 
/H 97 
/M[61 0 0 -97 0 97 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
l2ZD9JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&q#L9mp]1-k
TE']Hr;lm!r;lltr;liur;i8cOT>C^rrW*#!!<'!!W`?(qZ?g"rW/&[l2\-j"9AN)!sJQ+$3UG5!W`<'
!WrQ/rWWQ1"9S],!<MTgJcNLb'EJ49"9eu8#mgkB"p>#0!WrQ/#71;8"pbG;"9JW*j8ac3aT*Fa!<N?,
#7:kK%1ERL"pG,4"U55>$k<aV$jm7D!s/K(gAlg*df:Kk!<WK1$4ROZ&ePT^#mUY=#71eL&JGfj&.JsO
"9S]+d/\auh>e]"!<N?-#n7I](Ddi#%h&aM#RV"P'G_N&().;g#R(;3!QP1l!9aD+!<E6)#7D(X)&sV7
(D@;f$OdLW'c@u3*#]S*%1*4@!Wft7JcP?A+TVTF"UPVO(`a_B*ubt.%h9*_()e5:+WqaA&e53P!s/M0
!.k4K!$M@E!sJuA'cS;A,U+9J'bV,m()n>>,U4HQ(_R8a"Tnf,W;q\R"9AQ+"pu=](*+VI-RBoV(`!l(
)]p7M,pXTP((^lZ"Tnc+T)auR%KQV5"q(tY*[E0`-mToT&K2Q-+!W'Y,pOHK'+P?R"9JUg!1Ns*!<N?-
$P=3t-7UMq-R0`T+!;dS-RL)])[@,i$O?n<!<J&XV#VS<!WrW7&JuT:.kN;$-6sc[,UOld,U"0E&e,-O
!s/N&!.k3S!"K#2!sT,F(a(1W0.ne*./kS'-mp;b*>fG"$3gV7!<MfmJcN=]*WZ<E"q)"[+=Jfq0eb42
.k<(u-R0ZM'FtQV"9SZ*kl?;8_Z1\X!WrW7&K)`?0/>@?1,(@6/1Dkf)\inl#R(;3!T!g.!6kKN!<N?-
$P=7".53UX2@_Q!0J+[t*>]:s#mCD4!Rh%#!7q2X!<N?-$P=7#.PWj\3=[u*0eFar)\`bh"p=u.!Qb?,
!.k4G!#kq?!sT,F)'UOc2`a#^3B&`G-Qj9>$j["=!<K(uK)blP)?L!F$P=7#.l'(G4?P\b1G1$s(_I/^
"9JT)SH+WL$3:21"q)"\+tGE.&3E!:4#f#K-Qj9>$j["=!<JAaQN.^#!WrW7&K)cB1,h6U4#o5U/gqk]
"qqFP"p4o-M#a4L$3:21"q)"\+Y#3(r\tHJ2)6g7,TRX3$O6e:!<E0#JcMhO$3:21"q)"\+Xo'$r\Y3C
1,1C3-6O3@%LNCC!W`>q!.k3Y!$)(A!sT,F)'C=[1,C[?0J>%1.juV`(_R8a"Tnf,li;V;^Ao;U!WrW7
&JuW=/MJk3/M&D&/1W.r+WM70$j["=!Wh<]JcNmm*ruEF"q)"[+=A]m/hAG!-R^Dn.OZSc)\ikk#6Y)/
!SRO*!7LoW!<N?-$P=3t-S$c".45$=%ONSQ.46A_)&!Jd"p=u.ciAXth#JPu!WrW7&JuT:.P*%s,9S$L
+seWd.4-8[(D.&]"Tnf,`rL\kk5ZV*!WrW7&JuT9.Olkn+<2:=*?c^W.4?Jc)\ikk#6Y)/]`<WanGj^5
!WrW7&/QB5-n-Mg*Z5b1)''kH-n-Mg*Z,P"#mCD4!OMiY!;ca>!<N?-$4msn,:=ib+WD11',;?)+seTa
,p=3B%giOE!Wf;$L&_;V!WrTH#nIai+XA<W*Z5Y'%hTKm*?ldV,p=6E&I\mI!WeqoO8o^j!WiN3%20R"
+X%pH().>j$k3a^)''kF+s7jA&I\pK!s&Fh!1Em(!<E6)#7M.Y)BBh;(D@8d$471P'Gqf2$6L9,((gr\
"Tnc+o`0RD])X#U!<N?-$4RU_(`4#%%gr[K#71bK',DH()&Eqs$O6e9!<MKdJcN^h+TVTG"U>DF&J>]g
%h&aK"U,)9$P!a^'GM/k$jd+@!W`>\!.k3r!$D:C!X&Z4$4I@Q$k!=F"U"o1"U>AC%M''[$jd.B!s/MS
!.k4&!"Ar0!X&Z3#RLeC#6k;5rW33)"U55=rX&i8#6b22!<LCEJcO^/$ipD2!sAc3"pG/5!s8H&%0?V7
"U5/9"pG,3!W`><!.k48!!30%!rE*"!rN*!!riB%"9\f/!W`>1!.k4A!<*#t!rW0!!;urr!r`5$!.k4I
!;Z`l!;QYg!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!9sQ9!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!65(i~>

%%EndBinary
grestore
np
579.233 123.736 mo
559.924 123.736 li
559.924 122.986 li
579.233 122.986 li
579.233 123.736 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[19.9636 0 0 1.30909 548.684 140.693 ]ct
snap_to_device
<<
/T 1
/W 61 
/H 4 
/M[61 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
0 0 0 1 cmyk
%ADOBeginSubsetFont: LWYAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IEGHWD+Calibri gcheck setglobal} if
1 322 1 <000100acfffa03f8051400330062401131100b014d30180b014d2f100b01
4d210ab8ffe8b310014d0ab8fff0b30f014d0ab8fff0b30d014d0ab8fff6
b30c014d0ab8ffe8b30b014d0ab80211400c152752210a101b5210550555
003f3f3f1239393f012fe12b2b2b2b2b3231302b2b2b25140e0223222626
270111140e0223222e023511343e0233321e021511013e0333321e021514
06070101161603f80714221b232c1607fe24081421191822140808142218
1921140801ca061017211a1a2013070d12fe5301ce11071c080d08050610
0a0287fd79070d070505070d0704da080c070505070c08fdc1023f090c07
0405080c070d1a17fdfffd9a1a13>IEGHWD+Calibri AddT42Char 
IEGHWD+Calibri /CharStrings get begin
/g1 1 def
end
IEGHWD+Calibri /Encoding get
dup 42 /g1 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IEGHWD+Calibri*1 [33{/.notdef}rp /g20 /g18 /g13 /g4 /g19 /g17 /g5 /g21 /g10 /g1 213{/.notdef}rp]IEGHWD+Calibri nfIEGHWD+Calibri*1 [16 0 0 -16 0 0 ]msf565.749 118.873 mo(*)shIEGHWE+SimSun [16 0 0 -16 0 0 ]msf574.061 118.873 mo(\000\001)sh600.272 129.398 mo
559.822 81.0267 li
@
559.065 87.9164 mo
559.052 80.1061 li
566.736 81.5013 li
cp
ef
600.272 129.398 mo
561.319 172.595 li
@
560.82 165.682 mo
560.516 173.486 li
568.247 172.379 li
cp
ef
488.516 173.486 mo
403.446 80.6874 li
@
403.004 87.6043 mo
402.635 79.8028 li
410.375 80.8469 li
cp
ef
8.51934 173.281 mo
8.51934 153.398 24.74 137.281 44.7493 137.281 cv
64.7585 137.281 80.9792 153.398 80.9792 173.281 cv
80.9792 193.163 64.7585 209.281 44.7493 209.281 cv
24.74 209.281 8.51934 193.163 8.51934 173.281 cv
cp
0 0 0 0 cmyk
ef
8.51934 173.281 mo
8.51934 153.399 24.74 137.281 44.7492 137.281 cv
64.7585 137.281 80.9791 153.399 80.9791 173.281 cv
80.9791 193.163 64.7585 209.281 44.7492 209.281 cv
24.74 209.281 8.51934 193.163 8.51934 173.281 cv
cp
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: LWYAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IEGHWD+Calibri gcheck setglobal} if
1 6510 22 <00010018fe98034803bc0036003cb32a050a25bb0221001d000a01f7b314
141d2fb801f9400d001d32492a0520490f4f17054c003f333f3f12393f01
2fd4e112392fe110e1113939313001140e02071e0315140e0223222e0235
342e0627263633321e02171e03173e0335343633321e0203482a5c916705
0704010812201818201307070c1119253549320d1f3b1c24160b04344a32
180441603f1f2830191e1106039d73e1e5eb7b2d57544f23080b06030306
0b08497d76738094b3da82211503080b098ae9ba892859b4b7ba60100f03
080c>IEGHWD+Calibri AddT42Char 
IEGHWD+Calibri /CharStrings get begin
/g22 22 def
end
IEGHWD+Calibri /Encoding get
dup 43 /g22 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IEGHWD+Calibri*1 [33{/.notdef}rp /g20 /g18 /g13 /g4 /g19 /g17 /g5 /g21 /g10 /g1 /g22 212{/.notdef}rp]IEGHWD+Calibri nfIEGHWD+Calibri*1 [32 0 0 -32 0 0 ]msf37.8152 186.081 mo(+)shIEGHWE+SimSun [32 0 0 -32 0 0 ]msf52.0964 186.081 mo(\000\001)sh80.9792 173.281 mo
107.529 173.281 li
@
102.729 168.281 mo
108.729 173.281 li
102.729 178.281 li
cp
ef
108.742 173.281 mo
108.742 153.398 124.86 137.281 144.742 137.281 cv
164.625 137.281 180.742 153.398 180.742 173.281 cv
180.742 193.163 164.625 209.281 144.742 209.281 cv
124.86 209.281 108.742 193.163 108.742 173.281 cv
cp
0 0 0 0 cmyk
ef
108.742 173.281 mo
108.742 153.399 124.86 137.281 144.742 137.281 cv
164.625 137.281 180.742 153.399 180.742 173.281 cv
180.742 193.163 164.625 209.281 144.742 209.281 cv
124.86 209.281 108.742 193.163 108.742 173.281 cv
cp
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: LWYAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IEGHWD+Calibri gcheck setglobal} if
1 6908 24 <00010028fff2043d03b700470047bf000f01dd002600150209001f000e01
bf400c3935391f391f39002a390f26b80103b42f481a4c40b80104b1074d
003fed3f3fed3232012fc439392f2f113910e110e1d4e1313025140e0423
222e03123721160e0823222e0235343e043523222635343e023321321e02
151406232306141e0333323633321e02043d080d1a242a172f513e2a1503
0ffec003141f28110b090e121b121c2111060f18281f1195101204080d09
03a7090d0904131097080c161d21111c430606070503561e200d0b080613
3c6fb7010abaa2febe8128130b07030203070a0509283780aee79b232312
1b110808111b122323a1e298582d0c11050d1600>IEGHWD+Calibri AddT42Char 
IEGHWD+Calibri /CharStrings get begin
/g24 24 def
end
IEGHWD+Calibri /Encoding get
dup 44 /g24 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IEGHWD+Calibri*1 [33{/.notdef}rp /g20 /g18 /g13 /g4 /g19 /g17 /g5 /g21 /g10 /g1 /g22 /g24 211{/.notdef}rp]IEGHWD+Calibri nfIEGHWD+Calibri*1 [32 0 0 -32 0 0 ]msf130.539 186.081 mo(,)shIEGHWD+Calibri*1 [21.3333 0 0 -21.3333 0 0 ]msf148.226 194.081 mo(")shIEGHWE+SimSun [21.3333 0 0 -21.3333 0 0 ]msf159.434 194.081 mo(\000\001)sh180.742 173.281 mo
215.042 173.16 li
@
210.26 178.177 mo
216.242 173.156 li
210.225 168.177 li
cp
ef
.75 lw
95.4035 7.35904 mo
452.658 7.35904 li
452.658 258.888 li
95.4035 258.888 li
cp
@
0 0 0 0 cmyk
%ADOBeginSubsetFont: LWYAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IEGHWD+Calibri gcheck setglobal} if
1 4348 15 <00020099fe9403d503ca002a003d0080b53f3f0121360ab8fff0b30d014d
0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0ab801f840
17152b200d014d2b120c014d2b180f10014c2b180b014d2bb8020a400900
150a363521040530b80105b6264a1b49104f39b80105b1054d003fed3f3f
3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d01140e022322
2e022711140e0223222e023511343e0233321e0215153e0333321e020734
2e0223220e020711161633323e0203d53363925e28444140240812201918
20130706121c14151b1207294c4d512d628a5728ae15335640203e404627
447a433e59371a01e976bc834710223423fe3e080c080404080c0804e909
0b080303080b09792a3e29154c84af754581643c13294331fe9a53583c64
7c00>IEGHWD+Calibri AddT42Char 
IEGHWD+Calibri /CharStrings get begin
/g15 15 def
end
IEGHWD+Calibri /Encoding get
dup 45 /g15 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IEGHWD+Calibri*1 [33{/.notdef}rp /g20 /g18 /g13 /g4 /g19 /g17 /g5 /g21 /g10 /g1 /g22 /g24 /g15 210{/.notdef}rp]IEGHWD+Calibri nfIEGHWD+Calibri*1 [28 0 0 -28 0 0 ]msf428.841 40.1684 mo(-)shIEGHWD+Calibri*1 [18.6667 0 0 -18.6667 0 0 ]msf443.552 47.1684 mo("#)[9.80734 0 ]xshIEGHWE+SimSun [18.6667 0 0 -18.6667 0 0 ]msf463.166 47.1684 mo(\000\001)sh2 lw
288.257 173.142 mo
340.456 106.213 li
0 0 0 1 cmyk
@
341.447 113.073 mo
341.194 105.267 li
333.562 106.923 li
cp
ef
487.052 80.1061 mo
403.835 79.8071 li
@
408.617 84.8243 mo
402.635 79.8028 li
408.653 74.8244 li
cp
ef
600.272 129.398 mo
600.272 109.516 616.39 93.3979 636.272 93.3979 cv
656.155 93.3979 672.272 109.516 672.272 129.398 cv
672.272 149.28 656.155 165.398 636.272 165.398 cv
616.39 165.398 600.272 149.28 600.272 129.398 cv
cp
0 0 0 0 cmyk
ef
600.272 129.398 mo
600.272 109.516 616.39 93.3979 636.272 93.3979 cv
656.155 93.3979 672.272 109.516 672.272 129.398 cv
672.272 149.28 656.155 165.398 636.272 165.398 cv
616.39 165.398 600.272 149.28 600.272 129.398 cv
cp
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: JIWAAA+SimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/JIWAAA+SimSun 1 GetGlyphDirectory2 <001C60D8A8C9B5EE310294472D827A8C091983C861FAB16EFA31B6C000DA6343C945B6A8402C4004F5A1FEBBDF35AAE3BD2759C0377BCD561F7FD75C61A63667BC925FF4EF48AC8254C034A3232BF4467BB08C05BD6E2799400548F9B2B18EA450E0F302CB6372A7D26F08CA5C3F062987737AB1AEF456837FC595D08E61C18611C178D641B98C25076289B077C5EAAD3C8D82E2C3E841BF19F22D395F4BA4C487DAFAB6BE9D3C5EC2AC7A6C7B23605862FFB1513DBF06C0A0C68B076C1DEE79036C14838FA7BBB1D750FC987CB77A14CC257079F2CAA9FC929E9AD3F8BF13E84A22CB> |!endend end
%ADOEndSubsetFont
IEGHWE+SimSun [32 0 0 -32 0 0 ]msf620.516 142.198 mo(\000\002\000\001)[32 0 ]xsh114.471 79.476 mo
114.471 59.5937 130.588 43.476 150.471 43.476 cv
170.353 43.476 186.471 59.5937 186.471 79.476 cv
186.471 99.3582 170.353 115.476 150.471 115.476 cv
130.588 115.476 114.471 99.3582 114.471 79.476 cv
cp
@
%ADOBeginSubsetFont: LWYAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IEGHWD+Calibri gcheck setglobal} if
1 6722 23 <00030060ffed03e105780013001e00290036b11e1fb8020bb20a1429b802
1cb7000a1edb1f1f0519b80101b20f4724b80102b1054d003fed3fed1239
2fed012fddf1c510f1c53130011402060623222626023534123636333216
1612072e0323220e0207151e0333323e023703e14076a9696aa4713a3f75
a96a69a5713bae042141654747654323030220416749496743200202bdc1
feefae504ca7010abfc10110ae504ca8fef67774b67e43417db776807bc3
86474686c27d>IEGHWD+Calibri AddT42Char 
IEGHWD+Calibri /CharStrings get begin
/g23 23 def
end
IEGHWD+Calibri /Encoding get
dup 46 /g23 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IEGHWD+Calibri*1 [33{/.notdef}rp /g20 /g18 /g13 /g4 /g19 /g17 /g5 /g21 /g10 /g1 /g22 /g24 /g15 /g23 209{/.notdef}rp]IEGHWD+Calibri nfIEGHWD+Calibri*1 [28 0 0 -28 0 0 ]msf138.324 87.6533 mo(.)shIEGHWD+Calibri*1 [18.6667 0 0 -18.6667 0 0 ]msf153.213 94.6533 mo(")shIEGHWE+SimSun [18.6667 0 0 -18.6667 0 0 ]msf163.02 94.6533 mo(\000\001)sh81.4755 79.8781 mo
113.276 79.5168 li
@
108.533 84.571 mo
114.476 79.5031 li
108.419 74.5716 li
cp
ef
186.471 79.476 mo
214.896 79.476 li
@
210.096 74.476 mo
216.096 79.476 li
210.096 84.476 li
cp
ef
%ADOBeginSubsetFont: LWYAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IEGHWD+Calibri gcheck setglobal} if
1 2318 8 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>IEGHWD+Calibri AddT42Char 
1 4650 16 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>IEGHWD+Calibri AddT42Char 
1 576 2 <000100ac0000034b0514001a0048b90015ffe8b310014d15b8fff0b30f01
4d15b8fff0b30d014d15b8fff6b30c014d15b8ffe8b30b014d15b80211b4
00090f5215b8012bb10654003fed3f012fcde12b2b2b2b2b313025140e02
232122263511343e0233321e02151121321e02034b04090d09fdc4172908
1422181921140801d0090d09044b141b13091f2704ae080c070505070c08
fba109111c00>IEGHWD+Calibri AddT42Char 
1 2640 9 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
2900>IEGHWD+Calibri AddT42Char 
1 732 3 <000100acfffa062b050e003c00ac4010603e703e020d3030172f2f0a2e18
181ab8ffe8b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b3
0c014d1ab8ffe8b30b014d1ab80211401e24310c0c0a1810014d0a100f01
4d0a100d014d0a0a0c014d0a180b014d0aba02110000ffc040190b014d00
2436510b18170d2f18312e061f28511f5512550555003f3f3f3f12173911
333f012fd42be12b2b2b2b2b32113310e12b2b2b2b2b32113311393d2f33
33113331305d25140e0223222e02351123010e0323222e0227012311140e
0223222e02351134363333321e02170133013e033333321e0215062b0814
1f191721130802fe33030b151d14151e140b02fe47010814201918201307
2c1b68203024180901770501860b1a1f26196d0f1b130c1a080c07050507
0c080467fb94070a070304070a06046cfb99080c070505070c0804a62a24
0c1a281bfc5703a61e2a190b09131d15>IEGHWD+Calibri AddT42Char 
1 4064 14 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>IEGHWD+Calibri AddT42Char 
1 2016 7 <00020060ffed039c056d00260039008b401f3f3b010b1b39100d014d390a
0c014d391010014d39100f014d39180b014d39bb01f90000002fffe0b30d
014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d2fb8ffe8
b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a34b80104
b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b2b
323931305d25140e0223222e023535060623222e0235343e023332161711
343e0233321e021503262623220e0215141e0233323e0237039c07111c14
151c120847995b638c57283262915f4f834007141f1819201209a6437d44
3f58371915345641213d40462719080c070404070c08774d564d83b16274
bb84474543020b070d070505070d07fd4553573c627c404482653d122a43
3100>IEGHWD+Calibri AddT42Char 
1 3190 11 <00010099fffa013e057100150040b73f174f176f170300b8fff0b30d014d
00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00b801f8b4
0a1046054c003f3f012fe12b2b2b2b31305d25140e0223222e023511343e
0233321e0215013e0812201918201307071320181920120819080b080404
080b080538080c080404080c0800>IEGHWD+Calibri AddT42Char 
IEGHWD+Calibri /CharStrings get begin
/g8 8 def
/g16 16 def
/g2 2 def
/g9 9 def
/g3 3 def
/g14 14 def
/g7 7 def
/g11 11 def
end
IEGHWD+Calibri /Encoding get
dup 47 /g8 put
dup 48 /g16 put
dup 49 /g2 put
dup 50 /g9 put
dup 51 /g3 put
dup 52 /g14 put
dup 53 /g7 put
dup 54 /g11 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IEGHWD+Calibri*1 [33{/.notdef}rp /g20 /g18 /g13 /g4 /g19 /g17 /g5 /g21 /g10 /g1 /g22 /g24 /g15 /g23 /g8 /g16 /g2 /g9 /g3 /g14 /g7 /g11 201{/.notdef}rp]IEGHWD+Calibri nfIEGHWD+Calibri*1 [28 0 0 -28 0 0 ]msf76.946 -16.8361 mo("&/)sh116.541 -16.8361 mo(012#\)345/6)[9.76077 11.7712 6.4261 14.711 12.7289 23.9399 14.7642 14.711 13.9328 0 ]xshIEGHWE+SimSun [28 0 0 -28 0 0 ]msf245.712 -16.8361 mo(\000\001)sh488.516 173.486 mo
488.516 153.604 504.633 137.486 524.516 137.486 cv
544.398 137.486 560.516 153.604 560.516 173.486 cv
560.516 193.368 544.398 209.486 524.516 209.486 cv
504.633 209.486 488.516 193.368 488.516 173.486 cv
cp
@
IEGHWE+SimSun [28 0 0 -28 0 0 ]msf508.869 184.495 mo(\000\003)shIEGHWD+Calibri*1 [18.6667 0 0 -18.6667 0 0 ]msf536.869 191.495 mo(-)shIEGHWE+SimSun [18.6667 0 0 -18.6667 0 0 ]msf546.676 191.495 mo(\000\001)shgrestore
grestore
gsave
-10.9124 -69.4862 mo
781.088 -69.4862 li
781.088 470.514 li
-10.9124 470.514 li
-10.9124 -69.4862 li
290.797 353.4 mo
290.797 333.517 306.915 317.4 326.797 317.4 cv
346.679 317.4 362.797 333.517 362.797 353.4 cv
362.797 373.282 346.679 389.4 326.797 389.4 cv
306.915 389.4 290.797 373.282 290.797 353.4 cv
eclp
333.451 395.241 mo
286.979 395.241 li
286.979 315.387 li
366.833 315.387 li
366.833 377.896 li
353.688 377.896 li
359.579 371.431 363.172 362.835 363.172 353.4 cv
363.172 333.31 346.887 317.025 326.797 317.025 cv
306.708 317.025 290.422 333.31 290.422 353.4 cv
290.797 353.4 li
290.797 353.4 li
290.422 353.4 li
290.422 373.489 306.708 389.774 326.797 389.775 cv
329.07 389.775 331.294 389.566 333.451 389.167 cv
333.451 395.241 li
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[80.5091 0 0 80.5091 275.739 -130.944 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 246 
/H 246 
/M[246 0 0 -246 0 246 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 246 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 246 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 246 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 246 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&K)gK'
JcLB&JcLB&JcMkPjoP#QJcLB&JcLB&JcLB&JcO7"p]9U\q#T.KJcLB&JcLB&JcLB&JcPQGqZ6Trr<)s#
p'(?squcm!qZ4D2JcLB&JcLB&JcLB&SH/QgrW<'$rri<)rs&H-r<WE0q?d*+rWiH-rWW<)rWE-$qZ3Jm
JcLB&JcLB&JcLB&^]=95rrW0%&-N.?"pP;<#RLhF$O[@O%1W:Hq@EQ8'b(T\$k!FM$4-tD#6tG:"U"r1
!s/N(!rW.T!.k3&!.k3&!.k3&!94(X!?)"@!s8Z/"U52:#RLhG$k3[W&.oKe',2,q(&f!H(]G0g'bqDs
'+toi&.]6[$k!CK#m^b?"U,#2!s/Q&!U0T9!.k3&!.k3&!.k3+!;uou!Z_=E!sAc3#7(VC$OmRV&/#Wj
'c.]))B0Y:*?H:Ep`LY#+!)ID*#fe6(`*r&'+tlf%LigR#m^b?"U"r1!s/Q'!R(Oq!.k3&!.k3&!.k3N
!;upC!WiH,"U52;#mq(M%hK?f'c.]**$$+D+sS?Z-7:2j.4QetqC<a>.Ocbn-RL)`+sA$L*#fb3().An
%h9!U#m^b?"U"o0!Wr?%YQ07TJcLB&JcLB&JcNsorW+;H!WrQ/"pYD@$OmRW&el)u)BBnB+s\K`.4Zr%
0/,+91GgpG2>T612&.r(1,:R;/hJS'-mp;c+Wh^D)&F#$$kX!Z$jm:G"pG,3!s8E%P5p17JcLB&JcLB&
JcP3=rW+AJ!WrQ."pYD@$k3a\'G_Q**?ZOP-RgPt0/57>2E*WW4$5Yh5!M:,5USc\5!;%k4$#A]2Dm9G
0J4n+-RBu\*ZQ%6'bV&f$jm:G"pG,3!Wr?%oDjICJcLB&JcLB&JcLo5rW*B.!WrQ/"pbPD%M06m'c.c.
+!N!Z.P3;/1c@<S4$>en5sdq,77Ka:8,Z!X8c;1.7n6$<779L169mau4?>G\1bpa;.ju_h+<DI='b_/h
$jm:G"p>#1!r`5O!.k3&!.k3&!.k3&!4)\)!@S!O!sJl6#n%1Q&eu3%*[)dV.P3;/2)dQY5!VD$77Kd<
8P2WL9MJ7\:B+,d:]=*>9he;T91hfI7n,p869mau3]K#R0J4k(,pFEN(`!br%L`[M"pG,3!WiB'\H%3]
JcLB&JcLB&JcO:#rW+AJ!sAc3#RUtM&JQ$"*[)dW.kWP52`a&c5sn(284cHJ9hnJ[:f1*g;Y*id;@uc'
:f'q_9h\2P8Ol3;69m[q(-"0,0.\P!+s.a@'bV#d$OI%A"9S],rW/MhJcLB&JcLB&JcLB&p&P'm,m"/O
"U>;@%1j0g)&sbE-n?r+2E<i_5sn(28P;`O:/=\`;H$Nn<;fhf<rH%t<%([D;Gg:f:JOVW8k;E>69dRn
2`!-=.4$,Y)Aa)"%LWRJ"p>#0!W`?"!.k3&!.k3&!.k3&!1<id!>>M:"9f#:$P!a_(E4G?-7UW'2)u72
5=.b.8P;`P:Jand;cH^r<W,tp=8#bl=8l5K<E3!t;c6Lj:ej_X8Ou9;5Wq.e1G::-,Tn'D'bV#c$4$h=
!s/N)!T!g.!.k3&!.k3&!.k3_!<*!E!WrQ/#71bJ&JZ-&+=&?e0f:pQ5=.e/8kVlS:f1+h<)lq!<rH+l
=RTAj=8l5D<E)pr;Gg4b9M.iF6U3dq2DQm7-6XBI((q,d$4$h=!s8H&_#T&eJcLB&JcLB&JcOO*,67fH
!sAc4#n%4T'cA#8-7UW(2`j2h77TsD:/=_b;cHat<rH+s=QEW]=T2A(<`W4"*E5s7:ej_X84>m14?,/O
.jlP_)AWts$jm7E"9S`)!M]XH!.k3&!.k3&!.k4L!$hRG!WiH-#71bJ&JZ0)+t"lp1cRT_6UjX@:/Fec
<)cju<``B#=P-dS=T2AD<`W4";c6Fe9M.fD5s@=f0eFdu*ubt.%h&dM"U"o/rrIcQJcLB&JcLB&JcMGD
rW*o=!sAf6$Om[_)''nK/29"C5!_V.92/2Z;H*d!<E<1&r)h<Kr)b.E=&r@%<)ZXj:/"5K69dOj1+aq#
*uYn-%h&aL"U"l.!<M9^JcLB&JcLB&JcLB&_#PSY!<N?+"U>AD&/5s%+t"or2EF#g7S-9K:f:4k<E<1&
rE/5ci`Z4^+BMWF<`N*s;,9nY7moU)2`!'8,9Ig>&e59T"p>#0!<L4@JcLB&JcLB&JcLB&iW/rY*!-3G
#71eL',V]4-7gl04$Q)%8k`#X;cHat=',?&`EE1CrE(.C=&r=#;c-=b91VH94?##I-mKcN'G1c]#6b54
!W`>$!.k3&!.k3&!.k3(!<3'>!WrQ0#R_+T()nAB.kihA5=7q59i"Vb<)lt#=8l=6=oMM<='&F&;c6Fe
91VH94?##H-R'NI'+Y<V#mLP8!W`=Z!.k3&!.k3&!.k3I!#u"?!WrT2#n.@Z)'1%P0/P[Q6:XXB:Jk%j
<`W<$=T2I6=oMMD='&F&<)QOf91VH94#SfD,p4-B&e56S"U"o/!<MKdJcLB&JcLB&JcLB&`rI([!<N?+
"pbSH&f2N3-S7,64[MV19i+_d<E<1&r`IrYela%r=BAR)<E)jm:.n)E5<:YT.3orP'G(ZZ"pG)1!<LFF
JcLB&JcLB&JcLB&k5ZG%!<N?,#71hN'cJ/?.krqE5t+@=:Jk%j<``B%=M%`-=oMM?=&r=#;G^([7RB9u
1G'st*#9.s$4$e;!r`5(!.k3&!.k3&!.k3-!!WH)!X&Z4$5F$`(EF\J/i5UR6qC!I;,^Iq='&L+W*0+%
$s-J0<)QOe8OYp-2D>Ri,T[g;%h&^J"9S]+!K[;5!.k3&!.k3&!36)>!<E6("9o,?&/6!(,qC]/4[MY2
:/Fkg<``@)=S5h$=oMM@=&r=";,9kV6pE[f/ghe]((gu^#6b22!<MZiJcLB&JcLB&JcLB&bQ&R_!<N?,
#71hO(*"MH/i5US77g3M;H-Xt='/SR=jC1L=;Y+?<)ZXh8k)*/2_Z^,*Z,P#$O6h<!W`>M!.k3&!.k3&
!.k3&!:0\(!<E6("U>AE',Vc9.krtG6:X[D;,^Iq='/S1=mK3/=BJX*<E)jm9LqQ93AW66+;tq*$O?q>
!W`>.!.k3&!.k3&!.k32!"/f.!X&Z4$P*pi+=7IJ1HI`g8PN#Z<*!*"=IE:s=BJX*<Duai&P>MY4>ec@
+rh@1$jd+@!WiCe!.k3&!.k3&!.k3S!#Ye<!X&]6$kO-m+Xf!$4@)J1:/Otj<``C*mTHMlr`Bt<<`Dsm
9LqN73&)m.*>]=u$3p\9!W`>p!.k3&!.k3&!.k3&!71]_!<N<*"pk_N(EF_M0fM9a85)iX<*!(&=Njpg
=W(=D=&r=";,'YO5WU\P-6F*=%LNFE!s/K(f)UC&JcLB&JcLB&JcP9?(]a[?":#8D&f;Z9/2K:N77p<P
;cQk"=BMY-j]NI'=BAR)<)QLb7m]<q/ghb['FtQW"Tnf,!Or,]!.k3&!.k3&!0R<m!<N?,#7:qS)':1W
1cmum#>7ij<*!(&=H$D_=;Ft=<DlXe84,O!0I\1b'b:ZX"Tnf,!LWq>!.k3&!.k3&!4)YA!<N?,#7:tU
)B^C\2EX;s9MeYf<``C*kZOZ`(g'mA<`N'q:.[i<3&)m-*#0"n#R(;3!<MurJcLB&JcLB&JcLB&e,U9c
!WrT2$P*pi+Xf$'4[Ve8:fC@p='/SF=i"5W=BJX*<)QI`76`df.jQ)M&I\pK!s/K(gAlg*JcLB&JcLB&
JcPEC('+I="U>DG'H85F0K;6a8PW,^<EE:)VHMeZ(Kad@<`Dsm91D3.1Fsdl(D.&]"p4o-!PADa!.k3&
!.k3&!1!Tu!<N?,#7D%W)^6ad3'Ti(:/Y%l!`rK+Kj"CX(Kad@<`N'p9LhE21b9po(D.&]"Tnf,!M'4B
!.k3&!.k3&!4MqD!<N?,#7D%W*$Qjf3C$&,:Jt.m='/Sb=e/\2=BJX);c$.Y69@"U,p!j7$j["=!W`?#
!.k3&!.k3&!.k3&!8%8e!<E9*#7D%W)^?gf3^?/-:Jt1n='/SA=hIlP=BJX);c-7[69I+W,p!j7$j["=
!Wh-XJcLB&JcLB&JcLB&p])$0!<NB/$4djj+t>?/5t=RE;cQk"=J8mO=VY%@=&i3s9h7W62(^*q(D.&]
"Tnf,^AricJcLB&JcLB&RK+-)!<NB.$4dgi+t>?/5t=UF;cQn$=BSdY=nu28=BJX*<)H@\6Td4X,oma4
$j["=!WeqoJcLB&JcLB&JcNC_'`e=:"9o2C'H//F1-.]k9MeYf='/S]=d`D.=BJX*<)H@]6Td1V,oma4
$O6h;!<E1P!.k3&!.k3&!.k4+!#5M8!X&]6%20X'.5<hJ7nc`X<EE:)]ihjJ'j+R><`Dpj8OGTs/0l2M
%grUF!W`>]!.k3&!.k3&!.k3&!;ca1!<N?,#n7Lb+=Js(5XnFD;cQn$=IiUF=VOt><`Dpj84#Bo.jGuI
%giLD!W`>>!.k3&!.k3&!.k3A!#,G8!sJr=&JuT;0K;9d92JPe='/T%=b9fK=VOt><`Dpj84#?n.O#cE
%LE=A!W`=t!.k3&!.k3&!.k3b!#,G7!sJo;&/QB70/l*a92AJd='/SY=d<,&=BJX*<)H=Z5rp_L+W1n%
#R(;2!WdrSJcLB&JcLB&JcO[.'EJ49":#8E(*+\Q2EaK$:K(7p=BN+:Zrn)F=BAO%:eXAE3%ua&(_I/^
"Tnf,jT'l4JcLB&JcLB&JcPcM'*/.;"pkbR)^?mj4@;_9;H6e#=IE=?=VOt?=&i0q91D-)0.%_U&.8^G
!W`>A!.k3&!.k3&!.k3D!##A7!sJr>',i&E1HRop:/Y%l=BP<#Jm%VH'3J@<<Du[d76WR\,TIO0$3gV7
!N#jK!.k3&!.k3&!5SXK!<E9+#Rh:^+=Js)5tF^I<*!(&ele,<%Tlh7<DlUb6Td1U,8q4)":556!We&V
JcLB&JcLB&JcOa0&ci%:#7;"X*[WO"5=S=C<*!(&[99_:'3J=:<)QI_696kN+;ke##R(;2!U'N8!.k3&
!.k3&!.k1`!<N?-#n@Xh,V:o<78$HU<EE:f=jC.`=BAO&;,'PG3%u^$(D$rZ"9JT)aT-nmJcLB&JcLB&
UAtr.!<WK2$kaF%.Pj1S8l&>b='/Ss=b9fD=V=h<<`Dmg7Qr^^,odX0$3gS6!N?'N!.k3&!.k3&!5edL
!<NB/$P4*r-o!bK852u^<`iJQ=cQVm=BJX);bp"R4>\Q4#9"3a#R(;2!K$l/!.k3&!.k3&!9=+m!<N?-
#n@[j,q_,@7SHZY<``D/=fkg>=BJX);GKeM3\`$)(D.#["9JVh!.k3&!.k3&!.k3)!!30%!tPP@$kaI&
.lBIX92JPf='1Vgb?5H[=B8Bu9h.H-/gVMQ%LE=A!WgIEJcLB&JcLB&JcMVI&ci%:#7D(Z+"/j)6:jpM
<EE:)nQCHHl<+a%=&r6r91;!$/0YuF$j["=!<K8%JcLB&JcLB&JcNdj&ci%9"UPYQ*$m3r5Y"OG<*!+'
crl6/#?Y&-;GKeM3XIPi*u>Ir#6Y)/Mu\G0JcLB&JcLB&k5Z+q!<NB0$kaF%.l9CX92JPf='2Y/W`]s:
=B8Bu9h.H-/gVJO%LE:@!WhZgJcLB&JcLB&JcLQ+"9AQ+"ptbL(*4hX3^QD5;H6e#O'0P,&Qi+8;c$+U
4Z"Z4)%d8^"9JVK!.k3&!.k3&!.k3L!"o;5!sJr>',r2K2Es]+;,gRu=RK=D=m&p"=BAL#:.[c50IInW
%giLC!WfG(JcLB&JcLB&JcNjl&HMq9"q(tY+=T*/6qU9S<``DJ=bp2a=BJU';+qBf5;k&;)A<Mb"Te]*
NrXb3JcLB&JcLB&kl;:r!<WK3%MTm/0/u6g:/Y(n=KGZ'=V4b;<`;dd6T[%O*u>Iq"p4o-mf7q>JcLB&
JcLB&M#[_\!X&`9&K(p!.l9CX92JSg='1Gb`E<dT=&i-n83f*d,T@F,#R(81!RLgu!.k3&!.k3&!3-#2
!<E9+#n@[j-87GH8PW2a='4ckJm%2<&Qi+8<)?4V4>SH0(_@#Y!s/M-!.k3&!.k3&!.k3n!"f55":#;H
)'URg5"84C<**1(b?9O%!a&N(%T6%m5r^MD*#&hf"Tnc+OT9t5JcLB&JcLB&lMqLt!<WK3%M^!30fhZo
:K(:q=K5N#=V4b<<`Dpi76NIW+W(au"p=u.nGn.@JcLB&JcLB&MZ="`!X&`9&fDlE#W=n;9i4nl=BLJa
_c[OQ=&r6q8O>Ej-6*^/#R(;2d/\auJcLB&JcLB&X8ih5!<WK3%M^!30fhZo:K(:q=Qrt?=lWWs=BJX(
;+sGB1b'Xc&./UD!WfS,JcLB&JcLB&JcO!p&-2h8#7D+]+tPW:7nll]='3OHK381V%p)e1:J!l50-qSP
%1!+=!KmG7!.k3&!.k3&!:0[s!<WK3%M^!20fhZo:fCCr=K#As=V+\:<)H=X4Z"W2(D$oX!s/Mp!.k3&
!.k3&!.k31!"&`.":#;H(a1Ce4p=GN;H6e#LfqPs&6N"7;botN3%cKr'+G3M!WgaMJcLB&JcLB&JcMnQ
&-2h9#RqIf-87JI8l&Ad='4WgJm%#7&6Mt4;+sDA1FXC]%giLC!<KP-JcLB&JcLB&JcO'r&-2h7"ptnX
+=]337SQ`[='3IFJlr[g=BAO%:.RW//L25I$jQn:!L*S9!.k3&!.k3&!:Bgu!<NB/$kjR*/iZ0h:K(:q
=Jf5o=V"V8<)?4U4>J<+'b1NR!s/#oJcLB&JcLB&JcLf2$NU>5#nIdn-o3tS9ES-k='12[^KD+M=&i-n
7mAm_+rLt#"p4o-eGt1$JcLB&JcLB&Y5f+7!X&`9&K)cE2aBo/;cQn$j]R1<hcULm=B8Bt8jbWn-6*^/
#Qt20[/bdYJcLB&JcLB&cN"IV!X/i='HJMT4$uY;<*!,>=b9fU=V+\:<DcFZ4u=`3(CpfV!s&Fg!.k3&
!.k3&!.k4?!"]/3!sT)D(Eb1b5"87E<EE:u=eAh.=BAO%:J!i3/gM>J$O6e9!VQMF!.k3&!.k3&!0@0i
!<NB/$kaI(/iZ0h:K%<q='1/Z]ibkJ=&`!h6p*4P*>K"h"Te_U!.k3&!.k3&!.k3T!"T)3"UGSQ*[id+
78$KW='4KcJm$o4&6N"6;GK_H2(Kge&./UD!<KY0JcLB&JcLB&JcO0u&-2e6"ptnY+Y,E77nur^='3@C
Jm&%T&6N%8;bp"P3A2Ws&e#!J!WeVfJcLB&JcLB&JcP<@&-2h8#7M4a,VM/E8l&De=BM>$SQQJ*=&`$j
76E=R*Yf.j"Te`!!.k3&!.k3&!.k35!"K#2"UGPP*[id+78-QY<rc?T=hIlK=BAL#:.IN,.j5]?$3gS5
!S@C(!.k3&!.k3&!3uS9!<E9+$4dpr.lKU^:/Y(n=Q3J8=km-k=BJU':eF&70-hGK$O6e9!Or,]!.k3&
!.k3&!7CiY!<NB.$PF@'/ic6j:fCCs=Me3m=o2>4=BAL"9LV'!-QNm1#Qt20QiM^<JcLB&JcLB&nc01$
!X&c<'HJPU4@Mq@<**1q=e&V*=BAL#:.IN+.NfN<#mCD3p],mGJcLB&JcLB&OoQ!n!sJuA(*>"_5"A=F
<EE:S=h@fJ=BJU&:J!i3/L),F$O-\7!SII)!.k3&!.k3&!4)Y:!<E9,$4n(!/N5se:K(:r=Q*D7=k[!h
=BAI!911iq-6*[-#6Y)/\H%3]JcLB&JcLB&df9mZ!X&`:&fW,N3^ZP:<*!,:=b9fQ=V"V9<DlO\4YnK-
'b1KQ!We\hJcLB&JcLB&JcPBB%fl_7#RqIg-o*qS9i4nl=J/fd=V"V9<`;aa5W1,9(CpiV!s/2tJcLB&
JcLB&JcLu7&-2k:#nIdo.Q'F\:/Y+o=BU5Y\QKGF<`Dmf69-YC)%d5\!s/MW!.k3&!.k3&!.k3X!"T)3
!sT)D(a:Oj5tOjN<`n6^Jm$c0%p2n5;+j;=0I@bQ$jQn:!P/8_!.k3&!.k3&!7UuZ!<N?.$PFC)002Hn
:fLLu^KH.kq,n51=&i-m7QiOU*Yf+i"9JUm!.k3&!.k3&!.k4C!"T)3":#AL*@EU)78-QY='2(tRTU/'
=&r6p83\s]+;YOp"Tnf%!.k3&!.k3&!.k38!"f55"UGSQ+"9$17nll]='/U.Jm#Td%p2k2:J!i2/Ku#C
$3gS5!S[U+!.k3&!.k3&!42_:!<WK3%i6B>2F'f/;c["&hcYP6fNA_e=&`!h6THeF)A3D^!s/M8!.k3&
!.k3&!.k4$!"T)2!sT)D)'^^m6:t'R<`m(=Jm%kO%p2n5;+sD?0d[kR$jQn:!Lj(@!.k3&!.k3&!;-=&
!<N?-$PF@'002Hn:fLLuSlqIa%p2n5;GBVD1FO:Y%1!(<!W)kK!.k3&!.k3&!0mNp!<NB/$kjU-0fqft
;,p\"r`OhU\60>E=&r6p7mAj\*u5=m"Te_Z!.k3&!.k3&!.k3Y!"T)3":,GN*@N^,7SQc\='4<^Jm$].
%Tlb1:J!f0.j5]>#mCD3])[E_JcLB&JcLB&eGp*\!X/i>(*>"`5=\II<``D;=b9fN=V"V8<)?1R3%Z<l
&./UD!<J\jJcLB&JcLB&JcPHD%flb9#nIgp.lKX`:K(:r=IrZ_=V"V9<)?4T3A2Wr&ISdF!<N)uJcLB&
JcLB&JcM&9%KQY8$4n$u/N5se:K1@srE4_T[oj5D=&i*k6p!(K)\NM`!s/MY!.k3&!.k3&!.k3Z!"T)2
!sT)E)'^ao6:t'R<`n0\Jm$].%p2n5;+sD@0ddqS$jQn:!PADa!.k3&!.k3&!7h,\!<N?-$PF@'002Hn
;,gV!]ifqipK8#/=&i-m7QiOU*>Aqg"9JUo!.k3&!.k3&!.k4E!"T)3!s]2H)^R1"6qgHX='2"rQrsr%
=B8<p7m8aY*Yf+i"9JW%!.k3&!.k3&!.k3:!"T)3":#>K*%!C&78-TZ='5E(Jm#Qc%p2q7;bfkJ2(B[`
%LE:?!Sd[,!.k3&!.k3&!4Dk<!<NB/$ks^01-J*$;H6e#h-#>4f3&Vd=B8?r83f'`+;PIo"Tne<!.k3&
!.k3&!.k4%!"T)3":,GN*[ig-7SQc\='3.=Jm%eM%Tlb1:J!i2/0Pf?#mCD3S,e-@JcLB&JcLB&p&GU(
!X&c<'cne\5"A@G<``Co=dN8$=B8Bt8jPBf+rCju"Tnf'!.k3&!.k3&!.k3:!"T)3":,JP+"B*37nuu`
=BPN)Jm#Nb%p2n4:eF&6/Ku#C$3^M4!Sma-!.k3&!.k3&!4Dk<!<NE1%Mg-92*XW,;c["&h-#>4el`Mc
=&`!g69-YC)%[,Z!s&G9!.k3&!.k3&!.k4%!"T)3"UPYS+=f<785E/b=BN7>Jm%eM%p2n4:eF)8/gD5G
$3gS5!M'4B!.k3&!.k3&!;6C'!<NE2%i-9<2F'f/;c["&SQV:^%p2n4;+j8:0-hGJ$O-\6!W<"M!.k3&
!.k3&!1!Tq!<NE2%i6?=2F'i0;c["&rE4_T[TO,C=&`$i6TQkG)A*>]!s&GY!.k3&!.k3&!.k3Z!"T)4
"UP\U+Y,H98P`8c=BOB^Jm$Z-%p2n5;+j8;0-hGJ$O-\6!PJJb!.k3&!.k3&!7h,\!<WK3%i6B>2F'i0
;c["&]ifqip/qo.=&i*j6TQkG)A*>]!s&Fn!.k3&!.k3&!.k4E!"T)4"UP\U+Y,H98P`8c=BM+sQWXi$
=&i*j6TQkG)A*>]!s&H$!.k3&!.k3&!.k3:!"T)3"UP\U+=f?88P`8c=BPN)Jm#Nb%p2n4;+j8;0-hGJ
$O-\6!Sma-!.k3&!.k3&!4Dk<!<NE2%i-9<2F'f/;c["&h-#>4el`Mc=&`$i6THeF)A*>]!s&G9!.k3&
!.k3&!.k4%!"T)3"UPYS+=f?885E/b=BN7>Jm%eM%p2n4:eF)8/gM;H$3gS5!M'4B!.k3&!.k3&!;6C'
!<NE2%Mg0:2*XW-;c["&SQV:^%p2n4:eF)8/gD5G$3gS5!W<"M!.k3&!.k3&!1!Tq!<NE1%M^'82*XT+
;c["&rE4_T[TO,C=&`!g69$SB)%[,Z!s&GY!.k3&!.k3&!.k3Z!"T)3":,JP*[rp07nuu`=BOB^Jm$Z-
%p2k3:eF&6/Ku#C$3^M4!PJJb!.k3&!.k3&!7h,\!<NB0%29j31Hn9';H?k$]ifqip/ql-<`;dc5rU><
(_6oV!s+nlJcLB&JcLB&JcPKE%fl_7#7V@f-o4"U9i=tm=IiT^=V"V:<`;dc5W1,9(CpfU!s/<"JcLB&
JcLB&JcM):%fl_7#7M7c-SdeQ9i=tm=T)BS=gqNE=BJU&:.RT,.NfK:#mCA2g]2p+JcLB&JcLB&[K$g=
!X&`:&fW/P4%)b><EE;Y=b9f.=V"V:<`;a`5;Xf2'b1KQ!Wfq6JcLB&JcLB&JcO@%%fl_6"q)%^,qh;I
92S\j=M7jh=nc&0=BAL#9h%<&-ls*4#Qt20S,e-@JcLB&JcLB&p&GU(!<WN5&K)iH3C?G9<**1m=dW>&
=BAL#9h%6#-QNm0#6Y)/quD<KJcLB&JcLB&Q2hEr!<WN5&/ZTC3'p56<*!-"=b9ec=V"V9<DcFY4#&'%
'+>*K!Wh'VJcLB&JcLB&JcN1Y%KQY8#nIgq/2fab:K(:rh-#>4f3&Vd=&`$i6TQkG)A3D^!s/M9!.k3&
!.k3&!.k4$!"T)3"UPYS+=]6585<)a='31>Jm%hN%p2k3:eF&6/gD5G$3gS5!Ls.A!.k3&!.k3&!;-=&
!<NB0%2Bp51Hn9&;H6e#SlqF`%Tlb1:J!i2/0PiA$3^M4qZ)3JJcLB&JcLB&PlM<q!X&`:'-/GU4@MqA
<EE<%=b9ed=V"V9<`;aa5;ao5((U]T!Wh$UJcLB&JcLB&JcN1Y%fl_6#7D.`,qqAJ92SYi=Pd24=kHjf
=BAL#9h.B'.3935#Qt20])[E_JcLB&JcLB&eGp*\!<WN5&K)fG3C6>7<*!,8=b9fO=V"V9<DcFY4>J9(
'FY3L!WebjJcLB&JcLB&JcPEC%KQY8$4n$t/2ojd:K(:rSlqIa%p2n4;+j;<0I7YN$O6b8!W)kK!.k3&
!.k3&!0dHq!<NE2%Mg-92*XT+;H?k$=]p>Z\60>E<`Dmf69$PA)%d2[!s&GW!.k3&!.k3&!.k3X!"T)3
":,GN*@EU*7SQc\='4?_Jm$`/%Tc\0:Im`/.j5]>#mCD3\c@<^JcLB&JcLB&e,U![!X&`:&fW,N4%)_=
<**2:=b9fP=V"V9<DlO]4u=]0'b1KQ!We_iJcLB&JcLB&JcPEC%fl_6"ptq[,;(rB8l/Jf=J&`b=V"V9
<DcFY4>A0&'+G0L!Wi,tJcLB&JcLB&JcLu7&-2k:#nIgq.lKX`:/b1p=BU5Y\QKGF<`Dmf6THeF)A3D^
!s/MW!.k3&!.k3&!.k3W!"T)3"UGSQ*[rm.7SQc\='4B`Jm$f1%p2q7;botN2_6-i&./UD!P&2^!.k3&
!.k3&!7LoY!<NB/$kjU-0fqcs;,gV!^fc7lqH4>2=&i-m7m8aY*u5=m"Te^m!.k3&!.k3&!.k4B!"]/4
!sT,F)'^an6:t'Q<`iIt=drP)=BAL"9LV&u-QEg0#Qt20q#H!HJcLB&JcLB&OoQ!n!sJuA(Ek:d5=eOI
<``CT=h7`H=B8Bt8jYNk,T7:'"p=u.f`6U(JcLB&JcLB&Z2bC9!X/i>'cnbY4[r+B<EE;]=b9f2=V"V9
<`;aa5W1/:(D$oW!s,n3JcLB&JcLB&JcO4!%fl_7#7M4a,qh;H92JSg=M\-l=o2>4=BAL#9h%9%-ls*5
#R(81QiM^<JcLB&JcLB&nc04%!<WN5&/ZTB2aBo/;cZt%U04!h%p2k3:eO/:0I7YO$jQn:!VcYH!.k3&
!.k3&!0I6k!<WK3%Mg-81He3%;H6cu=G'bh=V+\:<`;db5rUA>(_@#Y!s/MU!.k3&!.k3&!.k3U!"T)3
":#>K*%!@#6VC6T<`n?aJm$l3%p2n5;GBVD1asL^%LE:@!Oi&\!.k3&!.k3&!7:cX!<N?-$P=7#/N5pc
:/b1p=Mn9n=o;D5=B8Bt91(`o-6*[-#6Y)/QN2U;JcLB&JcLB&n,Nt"!sJu@(*=t]4[r+B<EE:t=e8b-
=BAL$:.RW//0YrD$O-\7!VZSG!.k3&!.k3&!0@0i!<NB/$kjU,0KMQn:fIHr=G0hj=V"V9<DcFY4YnN/
((LWS!s-sQJcLB&JcLB&JcN"T&-2h7"ptqZ+tPW;7nur^='4NdJm$o4%p2k2:eF&70-qPN$jQn:!O_u[
!.k3&!.k3&!7(WU!<NE2%M^$51-A!!;,gV!`*%[pr`Ke7=&i-n7mAm^+W(at"p4o-Q2lL:JcLB&JcLB&
mf3n"!X&`:&fN#J3'g,3;cZt%V-0En%p2k3:eO2=1++(W%L<4>!VHGE!.k3&!.k3&!07*g!<E9,$4dpq
.Ps=Y9`n6m='12[^KD+M=&r6p83o3f,8q1&#6Y)/eGt1$JcLB&JcLB&XoK"6!X/i='HAGR3^ZM9<*!+'
k#m:=hcULm=&i*k76NIV*u5@n"Tnc+[/bdYJcLB&JcLB&c2\CV!X&]8&K)cD2Es]+;H6e#``[mr&Qr4;
<`;dc69-\F*"rbe"9JUg!.k3&!.k3&!.k4<!"]/5"UPYR*[`[(6q^?U<`iJ%=eSt0=BAL#9h%<(.j5`@
$3gS6!V?AD!.k3&!.k3&!0$sc!<NB/$kaI'/N5ou85<&_='18]_-%=O=&r9s8jbWn-63d0#R(81df=t"
JcLB&JcLB&XT/q6!WrT4%i-681-@rt:fLIt=Qin>=lEKp=BAL#9h.E+/0YrD$O6e9!ODcX!.k3&!.k3&
!6bES!<NB/$kaI(/iQ$d:/Y(n=NFWt=TDP8=B8?s8jbZp-QNp3#mCD3!L!M8!.k3&!.k3&!:0[t!<N?-
$4dmo.5O(T92JSg=BMP*UKJ.1=&i-m7mAm_+rM"$#6Y)/nc47AJcLB&JcLB&MZ="`!X&c;',r2L#<+n=
:/Y(n=Gg8!=V4b;<`;ge6T["M*Yf.k"Tnc+dK"k!JcLB&JcLB&WrN_4!WrW6%i6<:1-@rt:fLIs=R'%@
=l`]t=BJX);,'PF2Cp$i&e#!J!WfP+JcLB&JcLB&JcNpn&-2h8#RqFd,V:r?7nur^='3UJKinIZ=&of0
:J*u80de"W%LE:@!<J;_JcLB&JcLB&JcP'9&HMq8"ptkV+"/m+6qU9S<``D(=f,=6=BJX(;+sGC2(Tph
&dnpI!WhcjJcLB&JcLB&JcLW-"p"c.#Rh=a$6q,\5=\FF<**1(NEO5'&Qi+7;botO3A;d#'b1NR!s&GL
!.k3&!.k3&!.k3M!"f55!sT&B(*4hX3^ZJ7;cQn$lrepCk#i9u=&r9s91;!#.NoW@$O6e9!NuKT!.k3&
!.k3&!6>-P!<NB/$kaF%.lBL[9Me\h=BNgNLKOa^=&i-n$qNWC0-qSP%LE:@!<J5]JcLB&JcLB&JcP!7
&HMq8"UPYR*@<F"5tFaK<EE;)=f>I8=BAL$:J*u91+==^&.8^G!Wh]hJcLB&JcLB&JcLQ+"9AQ,#7CqP
(a(7`4@De<;cZt%O'0P,&m/7:<)H=Y5;k)<)A<Pc"Tnc+c2`FrJcLB&JcLB&VZ7>1!WrT3%20[+/N5m`
9Mnbi=BP#pJm%;?&Qi+7;GKeM3A;g%((U`V!s/M*!.k3&!.k3&!.k3j!"o;6"9o2D(*4hX3^QD5;H6e#
=O:3.=U/&1<`;de6p(f5.NoZA$jQn:!<J/[JcLB&JcLB&JcOp5&ci"7":,DK)'LLe4@Dh<;cZt%YZ\#0
&m/7:<)H=Z5;t2?*#&kh"Tnf,li;V;JcLB&JcLB&K`D/T!Wrr:#n@Xh,q_,@7SHZY<``Cd=j'q\=BJX)
;GKbL3\`!((D$oX"9JVI!.k3&!.k3&!.k3H!"o;6":#;G(EY%Z3C-22;H6e#=RoUH=mK3'=BAL$:J+#;
1b'Xd&e#$L!s&G'!.k3&!.k3&!.k3h!##A6!sJr=&fDiB1H\#s:K(7p=BO$TNEHTj=&r9s9L_3(/L1Q@
'FkER!s/L\!.k3&!.k3&!.k42!"o;6!sT&A'HAAM2EjQ&:fCCr=L2/5=V=h=<`Dpj7mK'g-QX$7$O6e9
!U0T9!.k3&!.k3&!.k1`!<NB/$4mso-8.>D7nccZ<``Cg=jC.`=BJX);GKeM4#/6.(_R5_"Tnc+aT-nm
JcLB&JcLB&U&Yi-!<WK1$kX=!.5<kM85<&^<``Dr=b9fF=VFn>=&i-o8jkg!/0c)I%1*1?!Wf5"JcLB&
JcLB&JcNUe'*/.:"UPVO)Bp[f4@;\8;H6e#=OpW;=UnP9=&r6r91D*'/gVMQ%g34D"9JUZ!.k3&!.k3&
!.k4/!##A7"9o2D'c\JN2*F?":Jt1o=BN%8Yuq`B=&r9s9Lh?-0IIqY&ISgH!W`>b!.k3&!.k3&!.k3&
!#>P7!<E6)#7D(Y*@<Bt5=S:B;cQn$=IE=>=VFn=<`Dpj7mT0j.3KH?$j["=!Wg:@JcLB&JcLB&JcMDC
'EJ4:"UGMK(EY%Z3']u-:fCCr=BPB%Jm%YI'3J=:<)HC]69?tQ+rV+(#mCD4!ModJ!.k3&!.k3&!58FH
!<N?,#RqCa+Xo-+5t=UG<*!(&fiaPB&Qi+8<)QI_6Td1V,9%=,$3gV7!W`=U!.k3&!.k3&!.k4,!##A7
!sT&@',i&E1-.]l9i4kj='3%:[942G=&r=!:.do;2(^*p((U`W"9JT)j8ac3JcLB&JcLB&JcP]K'EJ49
"9o2C'H88I1HRoo9i4kj='1tqeQESg=&r=!:.do<2D-<t((^iY"Tnc+_Z58gJcLB&JcLB&S,a6(!<NB/
$4djk,V1c76V1!L<*!(&r)nVSp/r)3=&r=!:J+&>2_QL"(D.&]"Tnf,U&]cFJcLB&JcLB&])WQH!<WK1
$P4'o,qLo96V1!L<*!(&=Pd2J=VY%?<`N$n8jtp&0..hY&e#'M!s/K'JcLB&JcLB&JcLB&g&Mig!WrT3
$kO0p,qUu:6V1!L<*!(&=MJ"L=VY%?<`Dsm8jts'0IS%]&e,-O!s/K(i;eH0JcLB&JcLB&JcPQG'`e@<
"UGMK(EOkS2*=5t9i4kj='/Ru=k[!o=BJX*<)QLa76`^b-m0B@%1*4A!W`>;!.k3&!.k3&!.k3<!#5M9
!sJr=&JlK7/N#XX852r\<EE:)Jm%tR(0F[?<`Dsl8jtp&0IS%]'+P<Q"9JT)T)aHCJcLB&JcLB&\,[9F
!<N?,#Rh:]*[NBq4@2S5:fC@q=BOQcSQQ_1=BAO&;,0_O4uY/D+;kh&$3gV7!<N-!JcLB&JcLB&JcLB&
f)QTf!<N?,#Rh:]*[NBp4$lJ3:fC@p='/SC=h\#S=BJX)<)H@]6p<O_-m0B@%LNCC!W`>X!.k3&!.k3&
!.k3&!;-=.!<E6("pbVL(EOkR1cmun9M\Pd<``C*VHMeZr`Bk9<Du^g84,Nu0..k['+P?S"9SZ*]E!N`
JcLB&JcLB&PlMEt!<N?-#Rh:]*@*-k3^?/-:Jq<p<``C*LKPHs=BJX*<Du^f84#Er/g_YX'+P<R"9SZ*
RfJ$?JcLB&JcLB&ZiCgA!<N?,#Rh:\*$Zsh3Bor):/Oqi=8l=c=e]%8=BJX*<)QLb7R9*m/L;GT&e,-O
"9SZ*q#H!HJcLB&JcLB&JcO7"(]aX=!sJr=&/?0/.53\E6qL*L;cQk"=BN[J`**(A'j"C7;,0_P5WU\P
,p!j8%1*4A!s&GU!.k3&!.k3&!.k3&!:^%+!<E6("UGJH'cS;E0/bpZ7nc]V<*!(&=K>Tc=Vt7C=&r="
:eaML4ub8H,97O3$jd+@!W`>3!.k3&!.k3&!.k35!"K#1!WrT2$P*ph+=8Zs3sn8C8kr5^<E<1'=HZhd
=92K('N@t+9LqK52D6L')\rtn#R1D5!<JMeJcLB&JcLB&JcN"T)$'a>!sJo:%MK[#,qLf35=A(;:f:7n
='/Sl=f>I@=BJX*<Duai8k)*.1bL-u)AE\i#R(;3!<MinJcLB&JcLB&JcLB&cN"ja!<N?+#71hO(E=YK
0K2-]7nZWT<)lt#=BNmPb$"^G(KXX:;G^%X6pE[e/0u>S'+PBT"Tnf,!S%1%!.k3&!.k3&!.k4;!#bk=
!X&]6$kO-m+X\m!3^?,*9i+_e<``@)=L))p=W1CE=&r=";,0bS69I.[.3fiL&e,0Q"9S]+!OMiY!.k3&
!.k3&!/pma!<E6)"UGJH'H%B&,qC]05!qh5:/Oqi<`f9&T32M'=BAO'<)QLc844"R3]&E9+WD.-$jd+@
!s/K(P5p17JcLB&JcLB&WrO"<!<N?,#7:qR(E=VI0/YgV77g3L;H-Xs=8l=p=g(sI=BJX+<`E!o9hIlA
4?"uE,T[g:%grXH"9JT)n,S%?JcLB&JcLB&JcNpn)?Bj?!sAf7$kO-l+=8Wp3'BSt8kr2\<)m"$r`IcT
d9.Gk=BAR)<Duaj9LqQ93A`?:+rh@2%13=D!s/K(ciAXtJcLB&JcLB&JcP!7rW*i;"9o,>%MKX!,:G0$
3^6#'928>_<*!(%r`Ha7nlbro)HTs>;c6Cb8OYm,2D?U,*uPb($jd+@!s/K(Y5j.SJcLB&JcLB&LB%GX
!<N?,('b0U&JZ3+,qC].4$Z5+9M\Ma<*!%$r`HC-r`B_5=&r=";G^([7RB6t1G'st$QKrq%LWOG"9JW*
!KI/3!.k3&!.k3&!2]`9!<E6("9o,>%hfa!+t"rt3'BPs8PDoW;cHat=8l>#=h%W6=<(CD<`N'r:eaPP
6U!Le/h&"d)&*Vj#mUV9!W`>f!.k3&!.k3&!.k3&!6"s;!?2(B"U>AD&/6!',:P6$3B]\u8PDoW;cHat
=',B'i*"f;rE((A<`W0u;,BtZ7mfL%2)$O,+<)(.%LNIG"9S]+!QtIp!.k3&!.k3&!.k41!$2.A!WrQ0
#R_+T()e8@.PEV=5!h_19MSG_<)lt#=8c7>=o;G%=<(CD<`N*t;,9nY7mfL&2DHa0+WM:3%h&aK"Tni*
!NH-O!.k3&!.k3&!.k4M!?D4D"U>>B%hfa!+=/Nk2*!fd77^'H:f:4k<E<1&rE.$Ar`C(?=&r@%<)QOg
9M.cA5<CbX/12V^)&*Vk$3p_<"9S]+!Jg`-!.k3&!.k3&!2'<4!<E6("9f#;%1j3j*$HXZ0/P[P5t"79
9i"Va<)j$#<``B$=NjqH=<UaI<`W4";c-@d91_Q=4utSV/12Y`)&3_m$O?q>!s/K(jT'l4JcLB&JcLB&
JcNOcrW+&A!sAf6$4RO\(`X\G.PES;4?u8'8PDlU;,U@n<EB*#r)iAikZRgc,?IrI<`N*t;G^+^8k298
4ZPAR/12Y`)ANkp$OI%A!s/N)!Q>%j!.k3&!.k3&!.k4+!$_LF!WiH-"pbPF&JQ'%+=/Hh1,_0W5t"48
9MSD];H$Op<`]3$qcM`YqcEu&=&r@%+B;B>;G^.`91VK<5<Ln]0.S@n*>oS)%LWRJ"U"o/!<JqqJcLB&
JcLB&JcLB&q>_fB!<N<)"U55?%1j3i)]p=R/2/n?4?l/$84lQN:Jk"g<)lq!<rH+p=R]Jf=T2AH<`W4#
<)Z[l:ej_X8Oc'44ZPDU/h&(i*>oS)%L`XK"U"o/rW.TNJcLB&JcLB&JcM5>rW*]7!sAc4#R_(Q',MQ.
+sncl1,_-T%mNBL7nH?J:/Fec;cH^r<W6%s=6s&e=8l5G<E3!t;c6Ih:JFMT84Gs44utVY0.SCp*ul+3
&Io0T#6b54!r`5X!.k3&!.k3&!.k3&!4W%.!@@jM"9eu8$4RLY()\)7,UY)q1,_-T5=.b-84lQM:/=\`
;H$Ln<;onp<rQ1q=8Z+u<W5rB;c6Lj:eseZ8kDNA69m[p2`*3?.4$,Y)AWtt%1<II"U"o/rW0_5JcLB&
JcLB&JcLB&eH#RL-NXAQ"U55>$k<j`(E+><,q(8s1,V$Q5!VG&7S$*D9MJ8X:f1(f;Z9Vk<;ono<;of-
;Gp@h:esh\9M7uK7n#d24r-7@2D[$=.4-5\)]0;&%h/jO#6b54!r`4j!.k3&!.k3&!.k3&!:p3i!@\'O
!sAf5#n%1Q&eu6&*[)dV.P<G42E<i^5=%Y*7S$*C92&&S:/4S\rD<>frD<Jh-;I909M7uL84Q*:69m^s
3B&cM0.\Ou+s.dB()%5h$jd1D"U"o/rW2fpJcLB&JcLB&JcLB&OoYI^$j$J4"9eu8$4ICU&eu<%)]^%G
-7LGt0f([H3]oPi5sdq,77Kd<84ieQpe1TY-V6m#7n6$;6pa1(5!1kc2Dd-A/1N"m+W_R?()%8i$jm7F
"U"o0!r`5P!.k3&!.k3&!.k3&!3ZD%!@\'P"9\o6#RUtM&/#Zn)&s_A,UOoi/MAh72)dKU4$5Yi5<qM#
6:+%,!(6`RrBhr!6:!k%5<_4m3]T,V1bpa;.k)hk+s.gD(_m\r%h&gP#6k>7!s/Q'!O_u[!.k3&!.k3&
!.k3p!<*!G!WiH,"U52;$4I@S&JGlq)B9e@+s\K`.P*/)0etOA2)[BQ3&s"q3Z'k;3&iiT2Dm9G0eb42
.k)hl,9\-K)Aj5!'G:re$jm:G"pG,3!s8E%PQ6:8JcLB&JcLB&JcP'9r;e)D!WrQ/"pYD?$OdLU&JGlq
)&aJ9+!DjS-7:2j.P!&%/M?fO,;(T#/1`;$-mp>f,9e6O*?,k4'bh8l%LidQ#R:P;"9S`-!r`5i!.k3&
!.k3&!.k3&!/LXR!WN3A!sA`1"pYD?$OdLU&/#Wk()Ii,)]Tn@+<VgO,9ut/+<r*T+X%sM*ZZ4=)&O,(
'G:ug%L`^P#m^b?"U"o0!Wr?%blE=qJcLB&JcLB&JcMVIr;df<!WrN-"U,)8#RLhG$k3[W&.oNg'GVB"
(E!,h!#k\P)AsD0(`*r&'bh;o&J,H_%1<LL#R:S="U"r1rW<$!X8mhPJcLB&JcLB&JcNUer;lm!'a"O@
"9eu6#7(VB$4@7N%1WjY%hK<M&HEIA&cN=T%hB-Z%1EUO$4-tC#6k>8"9\f/rrW-"L]E#,JcLB&JcLB&
JcOX-quQcurWE0'rrrE,rs/Q0rX&N1q$[0/rX&T1rs/Q.rrrB)rr`6%quPjYJcLB&JcLB&JcLB&JcPWI
qZ6WsrWE*%r<;ftr!!'&rWE*#qZ4J4JcLB&JcLB&JcLB&Q2pa^q?$Nro`P'mq>m)dJcLB&JcLB&JcLB&
Y5mJ]o`0RDJcLB&JcLB&JcLB&`;oN2b5d+oJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&K)gK'JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_>o)~>

%%EndBinary
grestore
np
grestore
290.797 353.4 mo
290.797 333.517 306.915 317.4 326.797 317.4 cv
346.679 317.4 362.797 333.517 362.797 353.4 cv
362.797 373.282 346.679 389.4 326.797 389.4 cv
306.915 389.4 290.797 373.282 290.797 353.4 cv
false sop
0 0 0 .807065 cmyk
ef
290.797 353.4 mo
290.422 353.4 li
290.422 333.31 306.708 317.025 326.797 317.025 cv
346.887 317.025 363.172 333.31 363.172 353.4 cv
363.172 373.489 346.887 389.774 326.797 389.775 cv
306.708 389.774 290.422 373.489 290.422 353.4 cv
290.797 353.4 li
291.172 353.4 li
291.172 363.238 295.159 372.142 301.606 378.59 cv
308.055 385.038 316.958 389.024 326.797 389.025 cv
336.636 389.024 345.54 385.038 351.988 378.59 cv
358.435 372.142 362.422 363.238 362.422 353.4 cv
362.422 343.561 358.435 334.657 351.988 328.209 cv
345.54 321.762 336.636 317.775 326.797 317.775 cv
316.958 317.775 308.055 321.762 301.606 328.209 cv
295.159 334.657 291.172 343.561 291.172 353.4 cv
290.797 353.4 li
0 0 0 1 cmyk
f
0 0 0 0 cmyk
IEGHWD+Calibri*1 [28 0 0 -28 0 0 ]msf307.777 361.25 mo(%)shIEGHWD+Calibri*1 [18.6667 0 0 -18.6667 0 0 ]msf327.792 368.25 mo("#)[9.80734 0 ]xshIEGHWE+SimSun [18.6667 0 0 -18.6667 0 0 ]msf347.407 368.25 mo(\000\001)sh279.044 301.704 mo
279.044 301.329 li
375.737 301.329 li
375.835 301.329 375.932 301.369 376.002 301.439 cv
376.072 301.508 376.112 301.605 376.112 301.704 cv
376.112 412.281 li
376.112 412.38 376.072 412.477 376.002 412.546 cv
375.932 412.616 375.835 412.656 375.737 412.656 cv
279.044 412.656 li
278.945 412.656 278.849 412.616 278.779 412.546 cv
278.709 412.477 278.669 412.38 278.669 412.281 cv
278.669 301.704 li
278.669 301.605 278.709 301.508 278.779 301.439 cv
278.849 301.369 278.945 301.329 279.044 301.329 cv
279.044 301.704 li
279.419 301.704 li
279.419 411.906 li
375.362 411.906 li
375.362 302.079 li
279.044 302.079 li
279.044 301.704 li
279.419 301.704 li
279.044 301.704 li
0 0 0 1 cmyk
f
2 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
420.434 353.781 mo
420.434 333.899 436.552 317.781 456.434 317.781 cv
476.316 317.781 492.434 333.899 492.434 353.781 cv
492.434 373.663 476.316 389.781 456.434 389.781 cv
436.552 389.781 420.434 373.663 420.434 353.781 cv
cp
@
IEGHWE+SimSun [28 0 0 -28 0 0 ]msf440.96 364.79 mo(\000\003)sh%ADOBeginSubsetFont: LWYAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IEGHWD+Calibri gcheck setglobal} if
1 7168 25 <00020048ffed03c705210013002b00ea4019281201291101260d01260c01
2608012507012a03012902012db8ffc040250f024d602d01141810014d14
100f014d14160d014d140a0c014d14200b014d14180c014d14bb022d0000
0020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8fff6b30c
014d20b8ffe8b60c014d24200120b8022d40090a200030004000030ab8ff
f040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00b8ffc040
0a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003fed3fed11
120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b2b2b3130
5d2b5d5d5d5d5d5d5d5d01140e0223222e0235343e0233321e0207342e04
23220e0215141e0233323e0403c72f6db0817aa7662b306cb0807ba7662b
b00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b16157a9f7
a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e7285>IEGHWD+Calibri AddT42Char 
IEGHWD+Calibri /CharStrings get begin
/g25 25 def
end
IEGHWD+Calibri /Encoding get
dup 55 /g25 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IEGHWD+Calibri*1 [33{/.notdef}rp /g20 /g18 /g13 /g4 /g19 /g17 /g5 /g21 /g10 /g1 /g22 /g24 /g15 /g23 /g8 /g16 /g2 /g9 /g3 /g14 /g7 /g11 /g25 200{/.notdef}rp]IEGHWD+Calibri nfIEGHWD+Calibri*1 [18.6667 0 0 -18.6667 0 0 ]msf468.96 371.79 mo(7)shIEGHWE+SimSun [18.6667 0 0 -18.6667 0 0 ]msf478.421 371.79 mo(\000\001)sh420.434 353.781 mo
363.997 353.407 li
@
368.764 358.439 mo
362.797 353.399 li
368.83 348.439 li
cp
ef
368.797 417.496 mo
333.451 417.496 li
333.451 412.656 li
348.506 412.656 li
348.506 416.841 li
368.797 416.841 li
368.797 417.496 li
348.506 411.906 mo
333.451 411.906 li
333.451 395.241 li
348.506 395.241 li
348.506 411.906 li
392.36 405.714 mo
376.112 405.714 li
376.112 377.896 li
392.36 377.896 li
392.36 405.714 li
375.362 382.477 mo
366.833 382.477 li
366.833 377.896 li
375.362 377.896 li
375.362 382.477 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[59.5636 0 0 40.2545 322.212 -153.198 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 182 
/H 123 
/M[182 0 0 -123 0 123 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 182 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 182 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 182 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 182 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcNdjJ,~>

%%EndBinary
grestore
np
348.506 395.241 mo
333.451 395.241 li
333.451 389.167 li
339.017 388.138 344.139 385.842 348.506 382.589 cv
348.506 395.241 li
366.833 382.477 mo
348.655 382.477 li
350.473 381.109 352.157 379.575 353.688 377.896 cv
366.833 377.896 li
366.833 382.477 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[34.0364 0 0 18 322.212 -130.944 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 104 
/H 55 
/M[104 0 0 -55 0 55 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 104 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 104 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 104 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 104 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&`rO._$<UA1<)?7Y5WCGF#Tjip$O6e9!<J)YJcMSHhc]5I'3J=:<)H@[5rp_L+;b_"#R(;3!Nc?R
!.k1N!6J@W=BAO&;,0YK4#8?1)A<Pd"Tnf,cN&OsJcOU,b#oE\=&r9u:.[f81b9jj'FkHS"9JT)nc47A
JcN@^b?4jJ<t\P6;GKhP4Z+f;*>T.m#6Y)/!L3Y:!1*]P=lEKt=BAO';GKhP4uP#?*Yo:p#6b21!Oi&\
!.k4B!6nX\=BAO';GTnR4uY,A*u>Lt#R(;3!SII)!.k3t!7"^]=BAO';GTnR4uY,B*uGV!#mCD4!W)kK
!.k3Q!7k<L=VY%?<`Dsm8jts'0IS%]&e,-O!s/K(T)aHCM?)%,(0F[?<`Dsm8jts'0IS%]'+G6P"9JT)
aT-nmJcOX-dTI>f=BAO&;GKhQ4uY/D+;kh&#mLM6!<MKdJcLB&])^;_$<UD3<`Dpk8jkj%$SWtO)&!Je
"p=u.!KI/3!13cP=mB-*=BJX)<)H@]6p<O_-m0B@%LNCC!W`>+!.k3&!;$9B=oMM;=&i0q9h7W72D6F#
)&!Je#6Y,0!R^t"!.k3u!7t?i=BJX*<Du^f84#Er/g_YX'+P<R"9SZ*oDjICJcMqRfNA8X=B?2;<)QLb
7R9*m/L;GT&e,-O"9SZ*QN2U;MZENTj&u@`'j"C7;,0_P5WU\P,p!j8%1*4A!s&G5!.k3&!9X@:=Vt7C
=&r=":eaML4ub8H,97O3$jd+@!W`>V!.k3&!5nln=oMM==&r9u:J=;G4Z4rB+r_:/$j[%?!W`?#!.k3.
!1<iP=nPo8=BJX*<Duai8k)*.1bL-u)AE\i#R(;3!<K,!JcLB&o`3oQr`Bt<<`Dsn9LqQ93AN-3*Z,P#
$O6h;!W`>E!.k3&!7Cl+=W1CE=&r=";,0bS69I.[.3fiL&e,0Q"9S]+!UKf<!.k3S!972l=BJX*<E)jl
9LqQ93]&Ds-QsED&.AjL"9S]+!KR54!/ppP=moK4=BJX+<`E!o9hIlA4?"uE,T[g:%grXH"9JT)YQ07T
JcP!7k?/d,=BAR)<Duaj9LqQ93A`?:+rh@2%13=D!s/K(dK"k!JcNaikun!f)HTs>;c6Cb8OYm,2D?U,
*uPb($jd+@!s/K(oDjICJcMMFlrj<i#?Ou-<Dudl9b^2h69R:a/LM\](D72c#R(>4!W`=g!.k3&!<)ud
=oMMC='&F&;c6Fd8k2643A`?;,9@^:&.AjM"Tnf,!Or,]!.k4*!:a4j=<1ID<`E!p:eaPP6U*Uh0InFl
)\s"q$4$h=!s/K(g&R!1JcN"To3)&p**63B<E)mo:JFGO6U*Xj0e=Xp*#B8!$jd+A!s8H&K`H])N<&ZT
r`C:E=&r@%<)QOg9M.cA5<CbX/12V^)&*Vk$3p_;!s/K(V>u2JJcP$8qH<c!+]h`G<`N*t;,C"\8OYs0
3]8]D-R0ZM'bLl_#R1D6!W`>B!.k3&!6,$<=o;AH='&F'<E)mp:ej\V7moX+3AiKA-R0ZN'bUua#mUV9
!WiB'kl?;8JcMPGrE(%@=&r@%<E)mp:eseY84>j04?,,M.jcG\)&3bo#R^qD"U"o/!<J)YJcLB&-NF-J
=&r@%<E)mp;,C"^91_T?5Wq+c1+k"%+WVF8&e5<V#6b54!r`5&!.k3&!8IQ!<E)pr;Gg7d9h\/M7RKI*
3]AiJ.jlP`*#KA%%LWRJ"U"o/rW1:EJcLB&\H!dN;,C%_9M.lH77'7&3]AlL/L_th*Z>e-&.K!R#6b54
!r`5h!.k3&!1!Tu9M7uK7n#d25!1h`1GCC0-6aNN$Q'Tk%h/jO#6b54!r`4_!.k3&!:g+1779I-5!1ha
1bp^8.4$/[*#TM*&.T*T#R1G8!s8H&\c@<^JcNgk)a$/@2Dd-A/1N"m+W_R?()%8i$jm7F"U"o0!r`5T
!.k3&!2KT41,(=2.46Ab*uu7:'b_/i$k!@H"pG,3!Wr?%quD<KJcLB&(B>g/,9\-K)Aj5(&eGN]$4-qA
"U"o0!rW.k!.k3&!8RVh*?,k4'bh8l%LidQ#R:P;"9S`-!r`57!.k3&!4i.B'G:ug%L`^P#m^b?"U"o0
!Wr?%h>i--JcM,;$OmIN#m^b@"pG,4"9&B#!WN.O!.k3&!:p0t#6tG:"U"r1!s/Q&!M9@D!.k3t!<33%
"9&B"!P\Vd!.k3Q!<3,t!T!g.!.k3.!<*"Q!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3i!.Y~>

%%EndBinary
grestore
np
333.451 388.404 mo
333.451 377.896 li
352.664 377.896 li
352.442 378.13 352.217 378.362 351.988 378.59 cv
347.03 383.547 340.621 387.05 333.451 388.404 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[19.9636 0 0 11.1273 322.212 -124.071 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 61 
/H 34 
/M[61 0 0 -34 0 34 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcNmm`6S)WJcO7"`6R`MJcOU,`6RBCJcOs6`6R$9JcP<@`6Q[/JcPZJ`6Q=%L&h1taNhBtO9"mtda#)t
RK2Ttgs2etU]B;tk0BLtXoR"tnBR3t\,a^tqTaot_>qO"rW%NMbQ,T,oDjICec<Y6l2ZD9huL^@huJ?/
l2\cJ^As2mpWh(0[/cKmmEXA0WrSdmj3HZ0T`D(mg!8s0QN4Amcd)70N<$Zm`QeJ/K)ism`6S,XJcO4!
`6RcNJcOR+`6REDJcOp5`6R':JcP9?`6Q^0JcPWI`6Q@&K`M+ta3M<tNr\gtdE]#tR/lNtgWl_tUB'5t
jj'Ftl2\a&`6Nl~>

%%EndBinary
grestore
np
333.451 389.167 mo
333.451 388.404 li
340.621 387.05 347.03 383.547 351.988 378.59 cv
352.217 378.362 352.442 378.13 352.664 377.896 cv
353.688 377.896 li
352.157 379.575 350.473 381.109 348.655 382.477 cv
348.506 382.477 li
348.506 382.589 li
344.139 385.842 339.017 388.138 333.451 389.167 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[20.9455 0 0 11.7818 322.212 -124.725 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 64 
/H 36 
/M[64 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 64 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcNRd_uKc:KE/^d`W,o:L&ejda8c&:L]G!daoD2:M?(-dbQ%>:Mu^9dc2[J:NW?Edci<V:O8uQddJrb:
OoV]de,Sn:PQ7idec5%:Q2mudfDk1:QiO,dg&L=:RK08dg]-I:S,fDdh>cU:ScGPdhuDa:TE(\diW%m:
JcNRd_uKc:KE/^d`W,o:L&ejda8c&:L]G!daoD2:M?(-dbQ%>:Mu^9dc2[J:NW?Edci<V:O8uQddJrb:
OoV]de,Sn:PQ7idec5%:Q2mudfDk1:QiO,dg&L=:RK08dg]-I:S,fDdh>cU:ScGPdhuDa:TE(\diW%m:
JcNRd_uKc:KE/^d`W,o:L&ejda8c&:L]G!daoD2:J,~>

%%EndBinary
grestore
np
348.506 412.656 mo
333.451 412.656 li
333.451 411.906 li
348.506 411.906 li
348.506 412.656 li
376.112 405.714 mo
375.67 405.714 li
375.67 382.477 li
375.362 382.477 li
375.362 377.896 li
376.112 377.896 li
376.112 405.714 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[43.2 0 0 35.3455 322.212 -148.289 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 132 
/H 108 
/M[132 0 0 -108 0 108 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcP?AOoOhKQ2lL:JcOX-V>o6KWW7VNJcNpn\c9YK^&W`bJcN4Zc2Y'KdK"k!JcMMFiW#JKjoBu5
JcLf2p&BmKq>c*IJcLB&q#H<Po`'sPJcLB&jT'o4r;VNPJcLB&m/WIPkl7+PJcLB&f`8&PeGl]PJcLB&
`;mXP_#M:PJcLB&YlN5PXT-lPJcLB&SH.gPR/cIPJcLB&M#dDPK`D&PJcLB&JcPECO8n\KPQ6:8jT'l4
quDNPp]$0PJcLB&kQ%+Pj8YbPJcLB&e,Z]Pci:?PJcLB&^];:P]DoqPJcLB&X8plPVuPNPJcLB&QiQIP
PQ1+PJcLB&KE2&PK)biMK`H])JcP6>PlL%KR/l=KJcLB&pAg0Po)FgPJcLB&irGbPhZ'DPJcLB&cN(?P
b5]!PJcLB&])]qP[f=SPJcLB&VZ>NPUAs0PJcLB&P5t+PNrSbPJcLB&JcPcML&^uKM?&5.JcP'9RK)CK
JcLB&JcP?AOoOhKQ2lL:JcOX-V>o6KWW7VNJcNpn\c9YK^&W`bJcN4Zc2Y'KdK"k!JcMMFiW#JKjoBu5
JcLf2p&BmKq>c*IJcLB&q#H<Po`'sPJcLB&jT'o4r;VNPJcLB&m/WIPkl7+PJcLB&f`8&PeGl]PJcLB&
`;mXP_#M:PJcLB&YlN5PXT-lPJcLB&SH.gPR/cIPJcLB&M#dDPK`D&PJcLB&JcPECO8n\KPQ6:8jT'l4
quDNPp]$0PJcLB&kQ%+Pj8YbPJcLB&e,Z]Pci:?PJcLB&^];:P]DoqPJcLB&X8plPVuPNPJcLB&QiQIP
PQ1+PJcLB&KE2&PK)biMK`H])JcP6>PlL%KR/l=KJcLB&pAg0Po)FgPJcLB&irGbPhZ'DPJcLB&cN(?P
b5]!PJcLB&])]qP[f=SPJcLB&VZ>NPUAs0PJcLB&P5t+PNrSbPJcLB&JcPcML&^uKM?&5.JcP'9RK)CK
JcLB&JcP?AOoOhKQ2lL:JcOX-V>o6KWW7VNJcNpn\c9YK^&W`bJcN4Zc2Y'KdK"k!JcMMFiW#JKjoBu5
JcLf2p&BmKq>c*IJcLB&q#H<Po`'sPJcLB&jT'o4r;VNPJcLB&m/WIPkl7+PJcLB&f`8&PeGl]PJcLB&
`;mXP_#M:PJcLB&YlN5PXT-lPJcLB&SH.gPR/cIPJcLB&M#dDPK`D&PJcLB&JcPECO8n\KPQ6:8jT'l4
quDNPp]$0PJcLB&kQ%+Pj8YbPJcLB&e,Z]Pci:?PJcLB&^];:P]DoqPJcLB&X8plPVuPNPJcLB&QiQIP
PQ1+PJcLB&KE2&PK)biMK`H])JcP6>PlL%KR/l=KJcLB&pAg0Po)FgPJcLB&irGbPhZ'DPJcLB&cN(?P
b5]!PJcLB&])]qP[f=SPJcLB&VZ>NPUAs0PJcLB&P5t+PNrSbPJcLB&JcPcML&^uKM?&5.JcP'9RK)CK
JcLB&JcP?AOoOhKQ2lL:JcOX-V>o6KWW7VNJcNpn\c9YK^&W`bJcN4Zc2Y'KdK"k!JcMMFiW#JKjoBu5
JcLf2p&BmKq>c*IJcLB&q#H<Po`'sPJcLB&jT'o4r;VNPJcLB&m/WIPkl7+PJcLB&f`8&PeGl]PJcLB&
`;mXP_#M:PJcLB&YlN5PXT-lPJcLB&SH.gPR/cIPJcLB&M#dDPK`D&PJcLB&JcPECO8n\KJ,~>

%%EndBinary
grestore
np
368.797 416.841 mo
348.506 416.841 li
348.506 412.656 li
368.797 412.656 li
368.797 416.841 li
368.797 411.906 mo
348.506 411.906 li
348.506 395.241 li
366.833 395.241 li
366.833 382.477 li
375.362 382.477 li
375.362 405.714 li
370.163 405.714 li
370.163 401.392 li
366.12 401.392 li
366.12 406.469 li
368.797 406.469 li
368.797 411.906 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[27.4909 0 0 35.0182 337.266 -152.544 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 84 
/H 107 
/M[84 0 0 -107 0 107 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 84 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 84 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 84 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 84 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMMF
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMMF
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&quHNno`4mjTE'QDX8r5#qZ?]sqZ-Np!!<'!
o`0RDJcOL)"9AN)!X&B(rr`9&rrN&urW3$#rWE0%rW1+@JcLW-"p"`+!sAc3rW`Q1"U"o/qZ-d#!sAc+
"U,#3!s/K(SH+6A[f?s?!<N?,#71_F$k!CK#6b22r;d$&!sAf5rWi]5"p>#0!<MZiJcLB&j8^%u!WrT2
$4ROY&ePZa$O?q>!WiB(!sAf6$N:G<$4$h=!s&G_!.k3&!:g+&!<E9*#7:qR()Ro,(D@>g#R1G2!Y,>;
#Rh1S&J,E\#mLM6!O_u[!2'<4!<N?-#n@Uc*?ZLJ*Z>b)$j[">!s8]4$P*jb()7&e%grUG!s/L\!.k3r
!%%^I!X&`9&JlK5-RgGj+WD.-$O6h<"9o/A&f)B))AWqq#mLJ5!Sd[,!.k4J!%%^I!X/i='H85F/heq1
-m9ND%LNFE"pbSJ'cJ,8*Z>b)$O6e9!NuKT!3#rF!<N?,#nIdm-7pu12)6a2+;b_##mU\A$kX<s+X/'M
(_R5_"9S[V!.k4%!%%^J!sT)D(Eb.\2E<cV1+X[k((^i[#RV%T)BU4N,Tdp<%1!+>!Rq+$!/(=Q!<OMK
"ptqZ+Y#6+3]f>Z0.7t^'+PBW$P*pj+=/?\+<)"(#mCD3VZ;;KYlH*O!WrW7&K)cB1,h9V3]AfF,p!j7
%1EXV'c\AD-RKuU'b1NR!s/2tJcLB&h>el'!WrW7&K)cB0fD$Q3B&`H-m9KC&.T0^(*"MG-mp2Y'b1NR
!s-UGJcL`0#lt)0"q)"\+Xo)b2)dKR2D[!9,T[d9&.fHj*?ljZ-R'NF%LE:@!M9@D!4`(V!<N?-$P=7"
-ndA62Dm<H0J"Rp)\s)"'Gqi8-R^>d*#/qi"Tneq!.k3&!9O8.!<N?-$P=3u-S7&.1GU[=0.eUu*uYn/
'cA&;-R^>d*#/qi"Tned!.k3&!:p1!!<N?-$P=3u-S-o)0`<U=/Lr1m*>oY1)BU4Q.46;Z'b1NR!s,k2
JcMJE$ipD3"q)"[+!rKi/hR&Q%P0.].4$,X)B'S<,q(2i#9k-&%LE:@!K$l/!6tQk!<N?-$P=3t-7UPt
.OZYl.4Znu-mToV*?HCO.4HVg*#/qi"Tne\!.k3&!;caC!<N?-$P=3t,q:Dp-m^,a-7C>o.46Aa+<`!X
.4Q\h*#/qi"Tne/!.k3M!%%^J!sT,F(`t%Q.Oc\g+WqsT-n6\q-RC#`-7C>n-mBWG%LE:@!J1<'!7h,s
!<N?-$P=3t,q1;l,Tn-K+!N$\.k<(t-RU;l/1W+n*#/qi"TneT!.k3(!!**%,Qe5Y&JuT9-n-Mg*ZH":
+!W-_/1`;$.P!)&/1De`'b1NR!s,;"JcN%U-34/M"q)"[+!i<a-6aHJ(Dn)6,Uk8r/hJ\.0/"q,,TIO/
#mCD3q#H!HJcOX--34/M"q)"[+!i<`-6X?F'bqN)+X\cm0JG4:1,1F3,TRU0#mCD3bQ*4pMuX.b!WrW7
&JuT9-laW^+<)(/&el3),UtE$1GgsH1bgO-*>K%j"Tndt!.k3]!%%^J!sT,F(`t%P-m]uS'G1lg'cJ5C
/MT(?3&ifP/LDJR%LE:A!rW0!!;cfr!.k3&!9O8.!<N?-$P=3t,q(/f+;kh'%Ls*f*@*-h2)mWX3&E67
*Yo7n"p>"u!V6;C!.k4B!%%^J!sT,F(`t%P-m]rQ'+PEZ%hfj)-ndD;4$5P^0..eV%giOF"7lTo!QP1l
!20B6!<N?-$P=0r,UXrb*uGV"$471Q(*+\P1H7HY4#Sbt-Qa*7$O?q?rWN-$r<*6*!s/K(RfJ$?c2]g)
!WrW7&/QB4-70rY(D.&^#RV"R)'LF_2EEo\2D6F!((^l\#R:S="pG/5"U,)7#6k>7!s/K(mJqh=JcPZJ
,QRrK"ptnW*?ldU+rqF1$O?tC$4djl,qLf13B/iJ-6<p6%1E.B&.&XK#6kD=#mgqF#R1D6!Wg+;JcMbM
-34/M"UP\S)^$@M+<)%+$3pb>#Rh=_+=Act2)I$<,TIO1%L`dU!t>\J$N:>=$4I@Q$jm7E"9JUg!.k4%
!'1,^!X/l>',V`3*uu13%1*4B"U58C'H/,C/MAb.-QsBB&.T0\&.oHa%1EUQ%1a!^&.JsP"Tnf,!U'N8
!/(@P!=f/6#7M.Y)&jM4'bCcZ"o\WO#7D(X)^-LU-mg,X(D78i&/#Wj'+tid%1Wp^',2)k%1*4A!W`>6
!.k3U!"]/3!WrW6%1s<j()7Gl$3gY4!u_=K$kO-l*ZuUJ*#B8"%hB6d()I`$&eGQb&doEi(D[Vn$3p\8
!<J2\JcOU,%fl\5"U>AE&/#Te%LWLF"9&?K!sJr=%hf]q)&O,%&.T-[&eu6$)&Eu"&J>co)&X8*&.8aH
!s&G\!.k3/!!iT+!X&Z4$4I@J%1ERL"U"o+!@@jN"pbSG&.oNe&.T*V$kEsd)&jJ2()%;o()\#0)&3_l
#R(;2!ODcX!4Mq;!<E6)"U>;>#m^b>"9SK%#m(24#71_F$k!IB#o!aW&f2H+)]BM,',26$*$#q5&e,-L
"Tnc+L&cf*irB2_!WiH,r<3Z6!s/N)!<<*#!<N?+"U=o1)[6NQ$4[[b)]]n;(`!i%)&jS;)]'+r#mCD3
!VcYH!.k4>!<3*"!rN-#!r`6!!!E<'!WiK$"<%FJ#n7L`)]]q=)Aa2,)BBk@*#K:t#mCD3!QtIp!1X&g
!W<*!!Vufp!W<'"!uh:E"UGMK()n;9*?,k6)B9e@+<;:4%1*1?!<JblJcNgkqZ6Bjq>hN:!sJo<&/H0)
+!)FB)]TnA+WqdB'+G6O!s&Gl!.k3&!8RV]!<E6)#7D%W)'/\urZ2Ij+X%sK(_R8`"Tnc+_Z58gM?!k^
!X&]7%MKZm*$-1E+!2UK+sA'K(D.&]"Tnc+Q2lL:[f?^8!<WK2$kX6n*W@,j+<VgN+<DF9&.8^G!W`>c
!.k3&!94%t!<NB/$4ddd)B9b=*ZlIF*?,e.%LNCC!W`>6!.k35!"&`.!sJr=&/,fs)Z:T_)]9G*&.AgJ
!s/K(NW=Y2^&SuN!<NB.#n.=W'G_H#(D[`"&e>BW"p=u.h>i--JcP'9#lt)0":#5@%1a$K&IB!Z%1<II
"Tnf,YlK@UQiIBm!<N?+"pbMCr!Wf<$4-tB"Tni+!JCH)!5njB!<E6("9eu7r!3Q5#6k>7!s/K(o`0RD
JcO-trrN-$rr`9(rWW9(rr`9&rrL.?JcLB&qZ-TrrW<'$r;uouR/hg=VuZDikl?;8JcO0ur;j>,JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&U&]cFJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&oDjC~>

%%EndBinary
grestore
np
366.833 395.241 mo
348.506 395.241 li
348.506 382.589 li
348.555 382.552 348.606 382.514 348.655 382.477 cv
366.833 382.477 li
366.833 395.241 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[18.9818 0 0 13.4182 337.266 -130.944 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 58 
/H 41 
/M[58 0 0 -41 0 41 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcO4!'3.t-9LqK42(g3t)&!Jd#6Y,0!Q>%j!9aCq;GTqT5s$nT,p!m9%1*4A!s&G*!.k4M!"hsu76imi
/0u>R&e,-O"9SZ*QN39N&kPJT3&)m-*>T4q#mLM6!<E0#JcMhO%miE;0.A(a((^l["p=u.!U'N8!5SXF
4#AQ;+;tq)$O?n<!W`>L!.k4&!"C\7,p!m:%LWLF!s/K(\c@<^m/RPD,97R5%13=C!s/K(UB#rI!?iBg
'bCc["p>#0!<J,ZRK*X3'+YHV"U"l-!V6;C!3cG/&e,0Q"Tnf,!Sd[,!6,!D$jd+@!s/K(`;kJig].Na
"U"l.!<K>'JcP?A"9el/!<JJdM#[V[!W`?$!.k3C!<*#^!.k3Y!!!&G!/:K*!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3t!;QZg!;llA!.k47!<*#r!rW/s!;lit!rN)0!.k1T
!!!$#!WiK&"TJT(!ri<"!<*$!!r`<%!r`4r!1*Zi!<E6("9f#/#6Y57"9S`&!<WB*"9e]-"U"r1!W`=_
!3Q;5!<E6("U>>@$OdCM#mUV9!rW-&!WrQ0#Q=u5#6k;5!W`?#!.k3d!#Ye=!sJo:%1j*a&J,BZ#R1D5
!W`?)"9o,=rX8u<#R1D6!<M?`JcOC&&ci"8":#8D&f)<%)&Eqt$j[%?rW3Q4"pbVI&.oH`$jd+@!Wg[K
JcP0<,ln&L"pkbQ(`a_B+<DF9&.AgJ"9S`0#R_.U'c%Ms%grUG!s/M9!/1CS!<E6H":#;H(EOeK.4?Md
)\inl#6b55"pk_O()e,1((q)`"p4o-V?!(c(]aX="UGPO)^6^`0J>"++WD+*$3p_=#R_(Q'cJ,8*Z>b)
$O6e9!K[;d!%%^J!sJuA(*4eS1,UpE/LMYX&e,-P#71eN(`abD+WVC4$jZt<!WE(L~>

%%EndBinary
grestore
np
348.506 382.589 mo
348.506 382.477 li
348.655 382.477 li
348.606 382.514 348.555 382.552 348.506 382.589 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[.981818 0 0 .981818 337.266 -118.507 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~s8W-!s8W-!rr~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
368.797 412.656 mo
348.506 412.656 li
348.506 411.906 li
368.797 411.906 li
368.797 412.656 li
375.67 405.714 mo
375.362 405.714 li
375.362 382.477 li
375.67 382.477 li
375.67 405.714 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[27.8182 0 0 30.7636 337.266 -148.289 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 85 
/H 94 
/M[85 0 0 -94 0 94 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 85 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 85 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 85 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 85 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&!!',#fDpL'WW:`PeGl]PJcO7"YlF\%L&cf*quEhug]2p+V?#HPd/UEPJcO*s[/]t%M?&5.p].Dq
huJ?/U&a0Pbl>-PJcNso\Gu7%NW=Y2oDkumj8ac3ScImPaT&jPJcNgk]`7O%JcLB&!!',#fDpL'WW:`P
eGl]PJcO7"YlF\%L&cf*quEhug]2p+V?#HPd/UEPJcO*s[/]t%M?&5.p].DqhuJ?/U&a0Pbl>-PJcNso
\Gu7%NW=Y2oDkumj8ac3ScImPaT&jPJcNgk]`7O%JcLB&!!',#fDpL'WW:`PeGl]PJcO7"YlF\%L&cf*
quEhug]2p+V?#HPd/UEPJcO*s[/]t%M?&5.p].DqhuJ?/U&a0Pbl>-PJcNso\Gu7%NW=Y2oDkumj8ac3
ScImPaT&jPJcNgk]`7O%JcLB&!!',#fDpL'WW:`PeGl]PJcO7"YlF\%L&cf*quEhug]2p+V?#HPd/UEP
JcO*s[/]t%M?&5.p].DqhuJ?/U&a0Pbl>-PJcNso\Gu7%NW=Y2oDkumj8ac3ScImPaT&jPJcNgk]`7O%
JcLB&!!',#fDpL'WW:`PeGl]PJcO7"YlF\%L&cf*quEhug]2p+V?#HPd/UEPJcO*s[/]t%M?&5.p].Dq
huJ?/U&a0Pbl>-PJcNso\Gu7%NW=Y2oDkumj8ac3ScImPaT&jPJcNgk]`7O%JcLB&!!',#fDpL'WW:`P
eGl]PJcO7"YlF\%L&cf*quEhug]2p+V?#HPd/UEPJcO*s[/]t%M?&5.p].DqhuJ?/U&a0Pbl>-PJcNso
\Gu7%NW=Y2oDkumj8ac3ScImPaT&jPJcNgk]`7O%JcLB&!!',#fDpL'WW:`PeGl]PJcO7"YlF\%L&cf*
quEhug]2p+V?#HPd/UEPJcO*s[/]t%M?&5.p].DqhuJ?/U&a0Pbl>-PJcNso\Gu7%NW=Y2oDkumj8ac3
ScImPaT&jPJcNgk]`7O%JcLB&!!',#fDpL'WW:`PeGl]PJcO7"YlF\%L&cf*quEhug]2p+V?#HPd/UEP
JcO*s[/]t%M?&5.p].DqhuJ?/U&a0Pbl>-PJcNso\Gu7%NW=Y2oDkumJ,~>

%%EndBinary
grestore
np
368.797 406.469 mo
366.12 406.469 li
366.12 401.392 li
370.163 401.392 li
370.163 405.714 li
368.797 405.714 li
368.797 406.469 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[4.58182 0 0 5.56364 354.939 -142.071 ]ct
snap_to_device
<<
/T 1
/W 14 
/H 17 
/M[14 0 0 -17 0 17 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!W`<&!<E3%!<E3%!<E6&!<E3%!<E3%!<E3%!s/N*!WiE)!WiE)!WiN."9\f/!s8W."9\i0#6tG;"U,#4
"U5/9"pG>@#mgkB"pYD?#mptE%1NaT$4."F$4I@Q$jmOX&.]3Y$OdIT&.oH_',2)m&.T-Z&/#Wj'+boq
()7Gn%hK?g()I`!(`=2-'G:uj'GhW)(_di,)Aj5'&ec#u)B0P/)B9\7(DIMs(E+86)AX84*#f_1'c%Z+
*?H.9)]]q=)Aa2,)BBk@*#KV9*ZZ1;)&aJ9+<V[A)BBn@*?6"<*ZuUK*>e~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
0 0 0 1 cmyk
IEGHWD+Calibri*1 [16 0 0 -16 0 0 ]msf355.024 402.373 mo($)shIEGHWD+Calibri*1 [10.6667 0 0 -10.6667 0 0 ]msf365.352 406.373 mo(")shIEGHWE+SimSun [10.6667 0 0 -10.6667 0 0 ]msf370.956 406.373 mo(\000\001)sh259.945 285.022 mo
259.945 284.647 li
402.635 284.647 li
402.734 284.647 402.831 284.687 402.9 284.757 cv
402.97 284.827 403.01 284.923 403.01 285.022 cv
403.01 432.734 li
403.01 432.832 402.97 432.929 402.9 432.999 cv
402.831 433.069 402.734 433.109 402.635 433.109 cv
259.945 433.109 li
259.846 433.109 259.749 433.069 259.68 432.999 cv
259.61 432.929 259.57 432.833 259.57 432.734 cv
259.57 285.022 li
259.57 284.923 259.61 284.827 259.68 284.757 cv
259.749 284.687 259.846 284.647 259.945 284.647 cv
259.945 285.022 li
260.32 285.022 li
260.32 432.359 li
402.26 432.359 li
402.26 285.397 li
259.945 285.397 li
259.945 285.022 li
260.32 285.022 li
259.945 285.022 li
f
408.397 437.786 mo
399.233 437.786 li
399.233 433.109 li
402.635 433.109 li
402.734 433.109 402.831 433.069 402.9 432.999 cv
402.97 432.929 403.01 432.832 403.01 432.734 cv
403.01 405.714 li
408.397 405.714 li
408.397 437.786 li
377.96 437.786 mo
368.797 437.786 li
368.797 433.109 li
377.96 433.109 li
377.96 437.786 li
402.26 432.359 mo
399.233 432.359 li
399.233 406.696 li
392.36 406.696 li
392.36 405.714 li
402.26 405.714 li
402.26 432.359 li
377.96 432.359 mo
368.797 432.359 li
368.797 417.496 li
377.96 417.496 li
377.96 432.359 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[40.2545 0 0 32.7273 357.557 -173.489 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 123 
/H 100 
/M[123 0 0 -100 0 100 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLr6J,~>

%%EndBinary
grestore
np
377.96 417.496 mo
368.797 417.496 li
368.797 416.841 li
375.67 416.841 li
375.67 412.656 li
375.737 412.656 li
375.835 412.656 375.932 412.616 376.002 412.546 cv
376.072 412.477 376.112 412.38 376.112 412.281 cv
376.112 405.714 li
392.36 405.714 li
392.36 406.696 li
377.96 406.696 li
377.96 417.496 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[24.2182 0 0 12.4364 357.557 -153.198 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 74 
/H 38 
/M[74 0 0 -38 0 38 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 74 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 74 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 74 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 74 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
qZ)3JJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcPZJJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&`;kD~>

%%EndBinary
grestore
np
375.737 412.656 mo
375.67 412.656 li
375.67 405.714 li
376.112 405.714 li
376.112 412.281 li
376.112 412.38 376.072 412.477 376.002 412.546 cv
375.932 412.616 375.835 412.656 375.737 412.656 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[.981818 0 0 7.52727 364.43 -148.289 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 23 
/M[3 0 0 -23 0 23 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!rr~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
375.67 416.841 mo
368.797 416.841 li
368.797 412.656 li
375.67 412.656 li
375.67 416.841 li
375.362 411.906 mo
368.797 411.906 li
368.797 406.469 li
370.163 406.469 li
370.163 405.714 li
375.362 405.714 li
375.362 411.906 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[7.52727 0 0 11.7818 357.557 -152.544 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 23 
/H 36 
/M[23 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
]Dr?X)]]t=(D7/`"Tnc+e,\A+$lU--*ul+1%1*1?!<KJ+!#u@f+<V[A'+G6O!s&G.!"9nk+WqdB'+G6O
!s&Gf!6G3L+<_mN*>fCu#R(;2!QP3,!":"p+Wqa@&I\pK!s&G.!"C(p+<DF9&.8^G!W`<%ZN(CU*ZZ19
'+P?R"9JT)h#Q"+$l^-'(D@>g#R(;3!<Kb3q#Ca;'bh8k$jd+@!WfM*$5!g[%1<II"Tnf,nGp?)$4I:L
#m^_=!s/K(c2cl)#m^b@"pG,3!W`>*!<*-$"9/H&!NlG$!rW/Y!6kN@!PADa!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k4F!.Y~>

%%EndBinary
grestore
np
375.67 412.656 mo
368.797 412.656 li
368.797 411.906 li
375.362 411.906 li
375.362 405.714 li
375.67 405.714 li
375.67 412.656 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[7.52727 0 0 7.52727 357.557 -148.289 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 23 
/H 23 
/M[23 0 0 -23 0 23 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
]E%6sh>lF5lMnKs!<;Bb]E%6soDlu5lMo63li?>N]E%R'q#@u,lMp#Iec>"8_uTT5lMnKslMpe_^]<["
g&U.5lMnKsr;Z6c]E%6sn,U]5lMo*/n,VbR]E%F#r;XD0lMolEg&UF<^]=<5lMnKslMpY[_uT*&J,~>

%%EndBinary
grestore
np
gsave
370.163 406.469 mo
368.797 406.469 li
368.797 405.714 li
370.163 405.714 li
370.163 406.469 li
clp
368.797 405.714 mo
370.163 405.714 li
370.163 406.469 li
368.797 406.469 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[1.96364 0 0 1.30909 357.557 -142.071 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 4 
/M[6 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~)&jS;)]'D5*Zl@=*$-4F*>fh?+WqdB~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1 dict begin
/T1_Text{eclp cmyk
IEGHWD+Calibri*1 [10.6667 0 0 -10.6667 0 0 ]msf365.352 406.373 mo(")shT1_grestore}def
T1_gsave
T1_path 368.469 405.387 1.48849 1.90561 -1.48849 -1.90561 ()
0 0 0 1 T1_Text
end
grestore
402.635 433.109 mo
399.233 433.109 li
399.233 432.359 li
402.26 432.359 li
402.26 405.714 li
403.01 405.714 li
403.01 432.734 li
403.01 432.832 402.97 432.929 402.9 432.999 cv
402.831 433.069 402.734 433.109 402.635 433.109 cv
377.96 433.109 mo
368.797 433.109 li
368.797 432.359 li
377.96 432.359 li
377.96 433.109 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[35.0182 0 0 28.1455 357.557 -168.907 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 107 
/H 86 
/M[107 0 0 -86 0 86 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 107 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 107 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 107 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 107 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&^&Z.Pdf6QPJcLi3o`(]dhuJ?/JcO[.V#U&dO8sk4YQ3/P`;dRPJcLB&!!&>bmJqh=JcO0uZN'%d
ScF?BU&a0P[f=SPJcLB&nc5!UquD<KJcN[g_#N$dX8mhPrrA>bmJj3df`6U(JcOp5ScAQdM#`,-[fFYP
bQ#'PJcLT,qu<2dk5^)6JcOF'X8hPdQN2U;W;tZP^&Q(PJcLB&q#H`\o`0RDJcNpn\c:OdV#Z)IRfM[P
YQ*)PJcLB&lN!=Ps8RZNJcNLb`W+BdYlK@UNr\hPU]96PJcLB&hZ0JPoDamPJcN"Te,RAd^AricJcGcN
QN-@QJcLB&d/^KPjo:nPJcMMFiW$@dblE=qJcP?AQN-j_JcLB&_Z7LPfDhoPJcPfNQ2p=PWrL`PJcLB&
joCtPqYuBPJcN7[bl>ld\,_*\L]I>PSH%aPJcLB&fDquPm/NCPJcMbMgAekd`W1SjJcPTHQN-UXJcLB&
aoK!PhZ'DPJcM8?kl7jde,Y(#JcP*:R/d3dJcLB&^&Z.Pdf6QPJcLi3o`(]dhuJ?/JcO[.V#U&dO8sk4
YQ3/P`;dRPJcLB&!!&>bmJqh=JcO0uZN'%dScF?BU&a0P[f=SPJcLB&nc5!UquD<KJcN[g_#N$dX8mhP
rrA>bmJj3df`6U(JcOp5ScAQdM#`,-[fFYPbQ#'PJcLT,qu<2dk5^)6JcOF'X8hPdQN2U;W;tZP^&Q(P
JcLB&q#H`\o`0RDJcNpn\c:OdV#Z)IRfM[PYQ*)PJcLB&lN!=Ps8RZNJcNLb`W+BdYlK@UNr\hPU]96P
JcLB&hZ0JPoDamPJcN"Te,RAd^AricJcGcNQN-@QJcLB&d/^KPjo:nPJcMMFiW$@dblE=qJcP?AQN-j_
JcLB&_Z7LPfDhoPJcPfNQ2p=PWrL`PJcLB&joCtPqYuBPJcN7[bl>ld\,_*\L]I>PSH%aPJcLB&fDquP
m/NCPJcMbMgAekd`W1SjJcPTHQN-UXJcLB&aoK!PhZ'DPJcM8?kl7jde,Y(#JcP*:R/d3dJcLB&^&Z.P
df6QPJcLi3o`(]dhuJ?/JcO[.V#U&dO8sk4YQ3/P`;dRPJcLB&!!&>bmJqh=JcO0uZN'%dScF?BU&a0P
[f=SPJcLB&nc5!UquD<KJcN[g_#N$dX8mhPrrA>bmJj3dJ,~>

%%EndBinary
grestore
np
399.233 437.786 mo
377.96 437.786 li
377.96 433.109 li
399.233 433.109 li
399.233 437.786 li
399.233 432.359 mo
377.96 432.359 li
377.96 417.496 li
392.36 417.496 li
392.36 406.696 li
399.233 406.696 li
399.233 432.359 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[21.9273 0 0 31.7455 366.721 -173.489 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 67 
/H 97 
/M[67 0 0 -97 0 97 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 67 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 67 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 67 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 67 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
l2ZD9JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMGD
qZ6<hqZ6TpJcP'9WrW)!rW<'"p]16nrW<$!p&K[ET)eikrrW-$rrW0#qZ-WsrrW*#!!<-#L&d>9"9AN)
!sJQ+"U"o/!W`?#!!E<'!WrT("U,#2!s/K(PlQI;rrEQ1"9f#9#mgkB"U"o.!WE'0!<E6("U55=#m^b?
"9S]+UB#lGp&H?=!<N?,#7:kK%1ERL"p=u.!<<-$!WrT2#n%1O$k!=F"9JT)Z2fIVkPuk/!WrT2$4[U[
&ePT]#R(;3!<<-$!sAi9%1j*a&J#6U"p4o-^]8rdgAhfd!<NB.#n7I](Ddf!%LNFD!r`34!WrT4%1j3i
(D[Yp$O6e:!<LLHJcO$q&HMn7"U>DH'c@u2)AWno#R(>0!>,A9#7D%V)&jP7(D7/`"Tnc+h#N$,^AoS]
!<WK3%20U"+<_dE'FtKR!s/K(!X/i<&f2Q2+WhU;%giLD!WhTeJcN%U-34/M"pkeT)^-IP+WM7/$3gS6
!<N?,#n@Xf+<r-U*>]:q#6Y)/q#H!HUAuD;!X&]7&/H92-70uZ(_I,["9JT*!sJuA'cS>D-7'`O"VM4K
"Te^\!0mNs!<NB/$P4*r,Ub&e+;ke"#6Y)A!<N?-$4dmm,:=ld+;tn%#R(81Q2l[?"9AQ,#7D[e(EXqP
.4-/T'+>*K!W`?)"ptnW*@*$^-QsBB%1!+=!Mf^I!;HO@!<NB/$P=3u-7UJm+W;"&#6Y)/!WrW6&/QB6
.4Q_i)\`_e"Te_1!.k49!%%^J":#;H(a(.T.OQAX'+>*K!W`?)"ptnX*[N6b-mBTE%1!+=!Pe\e!9sRU
!%%^J":#;H(a(.T.OQAX'+>*K!W`?)"ptnX*[N6b-mBTE%1!+=!Oi&\!9F2-!<NB/$P=3u-7UJm+W;"&
#6Y)/!WrW6&/QB6.4Q_i)\`_e"Te_D!.k4&!%%^J":#;H(a(.T.OQAX'+>*K!W`?)"ptnX*[N6b-mBTE
%1!+=!Rh%#!6G3f!<NB/$P=3u-7UJm+W;"&#6Y)/!WrW6&/QB6.4Q_i)\`_e"Te_`!.k3_!%%^J":#;H
(a(.T.OQAX'+>*K!W`?)"ptnX*[N6b-mBTE%1!+=!Ug#?!3H5J!<NB/$P=3u-7UJm+W;"&#6Y)/!WrW6
&/QB6.4Q_i)\`_e"Te`'!.k3C!#u"@":#;H(a(.T.OQAX'+>*K!W`?)"ptnX*[N6A.OZJ['Fb<O!We5[
OT5jl!X&`9&JuW;.Oleh)A<nq#6Y)/!WrW6&/QB6.4Q_i)\`_e"Te^n!.t7O!@7dM#7D+\+=8Qf-mBTE
%1!(<!<N?-$P=3t-7LDm+r_4*#R(81VuVDLoDg3=!X&`9&JuT:.Ounk)\`_e"Tnf-":#;H(`t(S.OZJZ
'+G3N!Wf_0JcOp5-34/M"ptnX+!rHf.3ffI%LE=A!WrQ1$kaF#-RpSn+W;"&#6Y)/_uPAhfDm6!!WrW6
&/QB6.Ouqo*Z#@q#6Y,3"UPVP)BgIX.OQ>V&e#!J!Wg^LJcNpn-34,L"ptkV*@*'a.OH8U&e,-O"U52>
&/H61-n6\n*uGRt#6Y)/huJ?/]Ds8Z!<WK3%M]s..4Zns+rh=/$jd1G$4[[c+!i?c.3orN&./UD!Wh]h
JcMnQ,ln&M#RqFc+X\cj.4$&R'G(]^%1X!d*$HXY.OZM]'b1NR!s&H#!.k3C!#u"@":#;H(`t%R.k2nk
*Z5\*&J>`n)^$CS.Oc\L+;tn&#R(;2nc47AVuS+E!<WN5%i$'.-RpVq-6aKM)&F,-*$6CQ.4HVh*>]7p
#6Y)/!.k3>!#GY:!X/i=&fDc:-n6\p-6jWT*ZcCH,UNpJ.46A_)&!Jd"p4o-NrY(<#QXu0"ptkU)^$"E
-n-Sn-RC#_,:"Q^-R^>f+<)(-$O6e9!Ls.A!;lg)!<E9+#Rh:\)^$CRr[7aor$Dk#-RL)]*#9+q#mCD4
!NH-O!:9ao!<N?-#n7I^)]p7LqBc[u,pXWU)]'+r#mLM6!<K\1JcO[.%06J2"9o/A&JZ0'+!Dj,,7YnA
+<MR@'bLl^#6Y,0!Q>%j!71]T!<E6)"pk\L',DH)*$,#"%36E,(`!br$jd.A!s/MO!.k3e!"/f.!sAf6
$OmX['GgT_$Pa?g&.T'R"p>#0!T*m/!3uS4!<E6)"U>>A$k<dZrXfPM%h9!U#mUV:!s/K(m/V_<UAtT$
!<N?+"U>;>$N(8:$4-tC"U"o/rW2iqJcM#8#lt&.!WrQ/"U521#6Y58"U,#3!s/N)!J^Z.!<3*!!r`<$
"TAN&!r`4b!.k4B!;urp!rN(l!.k41!;HSp!.k3&!9sQ9!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k49!.k3&!.k3&!.k3&!.k3&!.k3&!.k3X!.Y~>

%%EndBinary
grestore
np
392.36 417.496 mo
377.96 417.496 li
377.96 406.696 li
392.36 406.696 li
392.36 417.496 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[15.0545 0 0 11.4545 366.721 -153.198 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 46 
/H 35 
/M[46 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 46 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 46 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 46 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 46 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
irFZ2JcLB&JcLB&JcLB&JcLB&JcLB&r;c]qoDnahT)ck2r;lm!rW2cor;lm!!!1^PNr].[rrW-$rrW3$
!!2rsrrN-$qu`)^eGo^Q!<N?+r<3?-!s/N)!W<!$!<E6("T8K("Npe9!"T)2!X&Z3#RLeC#6b54!<N0"
#6=i,!sJl7#m(D=#DE0=!$2.A!WrT2$4I@Q$jm7E"9JT)!!**%!sJo9$OmOR$\/~>

%%EndBinary
grestore
np
399.233 433.109 mo
377.96 433.109 li
377.96 432.359 li
399.233 432.359 li
399.233 433.109 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 10.9124 264.625 ]ct
[21.9273 0 0 1.63636 366.721 -168.907 ]ct
snap_to_device
<<
/T 1
/W 67 
/H 5 
/M[67 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W*~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
0 0 0 1 cmyk
%ADOBeginSubsetFont: LWYAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IEGHWD+Calibri gcheck setglobal} if
1 1666 6 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>IEGHWD+Calibri AddT42Char 
1 3324 12 <00010099fffa05d003ca005000ea401b12100b014d13180b014d26100b0c
014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b014d13b8
fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8401e1e16
0d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f10014c0ab801
f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27b8fff0b3
10014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200100106b2
4b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f1239393f
ed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b2b2b2b39
31305d002b2b2b2b25140e0223222e023511342e022322060711140e0223
222e023511342e022322060711140e0223222e023511343e0233321e0215
15363633321e02173e0333321e021505d00812201819201308142c442e39
73450813201817211307162c432e397444081220191820130706121c1716
1d10074c8f4938594430102d514b47245776491f19080b080404080b0802
23395e44245855fd8b080b080404080b080223395e44245855fd8b080b08
0404080b080384080b090303090b0877554f1a2f412831442a133d66894c
>IEGHWD+Calibri AddT42Char 
IEGHWD+Calibri /CharStrings get begin
/g6 6 def
/g12 12 def
end
IEGHWD+Calibri /Encoding get
dup 56 /g6 put
dup 57 /g12 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IEGHWD+Calibri*1 [33{/.notdef}rp /g20 /g18 /g13 /g4 /g19 /g17 /g5 /g21 /g10 /g1 /g22 /g24 /g15 /g23 /g8 /g16 /g2 /g9 /g3 /g14 /g7 /g11 /g25 /g6 /g12 198{/.notdef}rp]IEGHWD+Calibri nfIEGHWD+Calibri*1 [16 0 0 -16 0 0 ]msf383.734 426.372 mo(')shIEGHWE+SimSun [16 0 0 -16 0 0 ]msf394 426.372 mo(\000\001)shIEGHWD+Calibri*1 [24 0 0 -24 0 0 ]msf55.2836 320.026 mo(&-89)sh107.947 320.026 mo(9/012#\)345/6)[19.1711 11.9424 8.36638 10.0896 5.50809 12.6095 10.9104 20.5199 12.655 12.6095 11.9424 0 ]xshIEGHWE+SimSun [24 0 0 -24 0 0 ]msf249.78 320.026 mo(\000\001)sh252.257 137.142 mo
252.111 116.676 li
@
247.145 121.512 mo
252.102 115.476 li
257.145 121.44 li
cp
ef
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/IEGHWE+SimSun-Identity-H uf/IEGHWE+SimSun /CIDFont ur/IEGHWD+Calibri*1 uf/IEGHWD+Calibri uf/LWYAAA+Calibri ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
