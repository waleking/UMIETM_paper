%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 30154-timeUserTagLDA.pptx.pdf
%%Creator: Adobe Acrobat 10.1.13
%%For: huangwaleking
%%CreationDate: 1/4/15, 5:51 PM
%%BoundingBox: -387 386 406 792
%%HiResBoundingBox: -386.9684 386.9684 405.0316 792
%%CropBox: -386.9684 386.9684 405.0316 792
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 0 -1 1 0
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 757 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2015-01-04T09:50:44Z"
   xmp:CreatorTool="pdftopdf filter"
   xmp:ModifyDate="2015-01-04T09:50:44Z"
   pdf:Keywords=""
   pdf:Producer="Mac OS X 10.10.1 Quartz PDFContext"
   dc:format="application/pdf">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">timeUserTagLDA.pptx</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -792 translate
pgsv
[0 1 -1 0 405.032 0 ]ct
gsave
np
gsave
-1.52588e-05 0 mo
-1.52588e-05 792 li
405.032 792 li
405.032 0 li
cp
clp
gsave
472.807 875.709 mo
472.807 -84.1818 li
-67.1928 -84.1818 li
-67.1928 875.709 li
472.807 875.709 li
clp
-67.1926 875.709 mo
-67.1926 -84.2908 li
472.807 -84.2908 li
472.807 875.709 li
-67.1926 875.709 li
false sop
0 0 0 0 cmyk
ef
2 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
151.725 571.706 mo
131.843 571.706 115.725 555.588 115.725 535.706 cv
115.725 515.824 131.843 499.706 151.725 499.706 cv
171.607 499.706 187.725 515.824 187.725 535.706 cv
187.725 555.588 171.607 571.706 151.725 571.706 cv
cp
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: SBTAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /SBTAAA+Calibri
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000051c6670
676d00000000000005d80000091a676c796600000000000034500000209c
686561640000000000000ef400000036686865610000000000000f2c0000
0024686d74780000000000000f50000000746c6f63610000000000000fc4
0000003c6d6178700000000000001000000000206e616d65000000000000
102000000020707265700000000000001040000024106764697200000000
00000000000000000000079e0000fe930000000000000000000000000050
006a0073008000800086008d009300bf00db006200830093009900a000a6
00a900b000c100c900d70000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe79056d
000c03b7000600130000fffaffedfea6ffedfeb8050e000600130000fffa
ffedfe93050e00130420000600130000fffaffedff10ffee050e00130420
000600130000fffaffeefe93ff10feb80612000a050e0006000d02d2fffa
fff301fdfffa023f0006000dff36fffafff302870006000f0000fffafff1
079efeaffea700000000000000000000000000500051005a005b005c005d
006000610062006400680069006a006b006c006d006e00680069006e0060
0067006e00660068005f00610063006400660068006a006b006c006d006e
006f0070006f00720074007500760076007000720073007400750076006f
007000710072007300750077007700780079007a007b007c007d007b007c
007d00770079007a007c0078007a007c007d0078007d007e007f00800081
0082007e007f00810082007e007f00800081008200830084008500860087
008800890083008400850086008700880089008300840085008600870088
008900890086008700880089008a008b008c008d008e008f008a008b008c
008d008e008f008a008b008c008d008e008f008d008a008b008c008d008e
008f0090009000910092009300940095009600980099009b009c00900091
00920093009400950096009700980099009a009e009f00a6009000910095
0098009f009000910096009700bc00c600b500ae00af00b6006800690063
006a006f00700071006f0070007100720066006c006d00700079007c007f
00830086008700880089008a0074007500760077007a007b007c007d007e
008200850086008a0088008900830078007b008200830086008700880089
00760079007a007c007d007e0083008500880089008a0073007400750077
007a007d00880089008a008b008c008d008e00900094008b008c008d0091
0092009300940095008c008d00910095008f009000910092009300940095
008b008c008d008e008f009000910092009300940095008b008c008d008e
008f00900091009200930096009700980099009c0096009700980099009a
009b009c00960099009a009c0096009700980099009a009b009c00970098
0099009a009b009c009700980099009a009b009c0096009d00a000a1009d
009e009f00a000a100a2009d009f00a000a1009f00a2009d009e009f00a0
00a100a2009d009e00a000a1009d009e00a000a2009d00a300a400a500a6
00a700a300a400a600a700a300a400a500a600a700a600a300a700a800a9
00aa00ab00ac00ac00a800a900aa00ab00ac00a800a900aa00ab00ac00a8
00aa00ab00ac00ae00ad00ae00af00b000b100b200b300b400b500b600b7
00b800ad00ae00ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700b800b300ae00af
00b000b200b500b600b700b800b900ba00bb00bc00be00c000c100c200c2
00b900ba00bb00bc00bd00be00bf00c000c100c200c400ba00bb00be00bf
00c000c200c300c400b900ba00bf00c000c200c600c700c900ca00cb00cc
00cf00c500c700ce00c500c700c800cf00d000d200d300d7010d00d000d1
00e900d000fd00d005e4000e0041000005ba009c009c005e005e4047645f
5e5d5c5b5a59585554535251504f4e4d4c4b4a494847464544434241403f
3e3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b0042651582320b00d4423
5921212d2c20204518684420b001602045b04676688a4560442d2c01b10b
0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b028
2370b10228453ab10200080d2d2c2045b00325456164b050515845441b21
21592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0
008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a0345
8a8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c
4b525845441b2121592d2c01b005251023208af500b0016023edec2d2c01
b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b0
01600110203c003c2d2c20b001610110203c003c2d2c00b00743b006430b
2d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621b
b200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f
2b59b002602d2c0c6423648bb84000626023212d2c452345602345602345
6023766818b08062202d2cb00426b00426b00425b0042545234520b00326
6062636820b0032661658a2344442d2c2045b0005458b040442045b04061
441b2121592d2c45b1302f4523456160b0016069442d2c4b5158b02f2370
b01423421b2121592d2c4b515820b0032545695358441b2121591b212159
2d2c45b01443b0006063b0016069442d2cb02f45442d2c452320458a6044
2d2c45234560442d2c4b235158b90033ffe0b134201bb333003400594444
2d2cb0164358b00326458a586466b01f601b64b020606620581b21b04059
b001615923586559b02923442310b029e01b2121212121592d2cb0164358
b004254564b020606620581b21b04059b0016123586559b0292344b00425
b00725082058021b0359b0052510b004252046b0042523423cb0072510b0
06252046b00425b0016023423c2058011b0059b0052510b00425b029e0b0
072510b00625b029e0b00425b00725082058021b0359b00425b003254348
b00625b00325b0016043481b2159212121212121212d2cb0164358b00425
4564b020606620581b21b04059b0016123581b6559b0292344b00525b008
25082058021b0359b0042510b005252046b0042523423cb00425b0072508
b0072510b006252046b00425b0016023423c2058011b0059b0042510b005
25b029e0b02920456544b0072510b00625b029e0b00525b0082508205802
1b0359b00525b003254348b00425b0072508b00625b00325b0016043481b
2159212121212121212d2c02b00425202046b004252342b0052508b00325
4548212121212d2c02b0032520b0042508b0022543482121212d2c452320
451820b00050205823652359236820b040505821b04059235865598a6044
2d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b21
21592d2c4b53234b515a58381b2121592d2cb000214b5458381b2121592d
2cb002435458b0462b1b21212121592d2cb002435458b0472b1b21212159
2d2cb002435458b0482b1b21212121592d2cb002435458b0492b1b212121
592d2c208a08234b538a4b515a5823381b2121592d2c0020b200400325b0
062649618b3812342d2c014623466023466123201020468a61b8ff80628a
b140408a704560683a2d2c208a2349648a2353583c1b21592d2c4b52587d
1b7a592d2cb012004b014b54422d2cb1020042b123018851b1400188535a
58b910000020885458b202010243604259b12401885158b9200000408854
58b2020202436042b12401885458b2022002436042004b014b5258b20208
02436042591bb940000080885458b202040243604259b94000008063b801
00885458b202080243604259b94000010063b80200885458b20210024360
4259b94000020063b80400885458b202400243604259595959592d2c4518
68234b51582320452064b04050587c59688a6059442d2cb00016b00225b0
022501b001233e00b002233eb10102060cb00a236542b00b234201b00123
3f00b002233fb10102060cb006236542b0072342b00116012d2c20b82000
628a6023622d2cb0072558001b0159b0042510b00325b0022520b8ffff54
5821cd1bed5921b006255cb006255a58b0092b5920b005254ab0042547b0
04254760b0062547b0806361b00225b0005558b00325b00725496359b008
2558001b0159b00425b0062549b009255cb009255a58b0092b59b0072546
b0806361b0032520b0005558631b2159612320b0005558b080631b21b080
59b0592bb006255c586959b00425202010b00048233ab0062658001b0159
b0052658b003252f598a12233221212d2cb00625b00a2587b00625b00925
4ab0005358b00625b00a251bb00925b0072559b00225b00225070cb00525
6323b00625636020b94000040063535821b00426b00426b00a1bb9400004
0063655158b0042665b0042665b00a1bb00426b00426b000b00325b00325
0b0d0ab0092eb00725b007250b0d0ab00b2eb00525b0052507595920b000
5558b00525b0052587b00725b007250bb0092510b00b25b0092620b8ffff
545821cd1bed59b00525b0052507b00825b00b254923b00625b0062587b0
0a2510b00b25c15920b00051b800522378b00161b00225b00725b0072507
b00a25b00d254961b08062b00525b005250bb00a252338b00625b0062587
b00825b008250bb00a2510b00b25c4b00625b0062507b00925b00c2549b0
032554b8ffa723792121212121212121212121212d2c23b0005458b94000
00001bb900004000598ab0005458b9400000001bb90000400059b05b2b2d
2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a080d8ab0
005458b9400000001bb90000400059b05b2b2d2cb00426b00426080db004
26b00426080db05b2b2d2c204569442d00000001000000059eb88df7cb11
5f0f3cf50019080000000000bbeb7ccc00000000c787a88bfbfafd8b09ec
07b600000009000200000000000000010000079efdda00000aa0fbfafaa0
09ec00010000000000000000000000000000001d040e000004ec00ac03e8
00ac020400ac042800ac06d700ac052a00ac03e6000f052200aa04340060
03a3009904340099043400990321005102ae00210434009405b800350377
0029039f002203290059048a00610392001804410060046c0028040e0048
040e00ae040e0072040e0030040e0065000000a1010e018a01d502540301
039c0403048e052505bf065006e707ad082908b909910a210a860ae50b81
0beb0c480cca0d7d0e340ed40f99104e00010000001d0120001000c30007
00020010002f006500001190018200040001000000010012000100000000
0006000e00004250574743432b43616c69627269b2090320b80284b40918
014a20b80283b40918014a20b80282b40918014a20b80281b40918014a20
b80280b40918014a20b8027fb40918014a20b8027eb40918014a20b8027d
b40918014a20b8027cb40918014a20b8027bb40918014a20b8027ab40918
014a20b80279b40918014a20b80278b40918014a20b80277b40918014a20
b80276b40918014a20b80275b40918014a20b80274b40918014a20b80273
b40918014a20b80271b40918014a20b80270b40918014a20b8026fb40918
014a20b8026eb40918014a20b8026db40918014a20b8026cb40918014a20
b8026bb40918014a20b8026ab40918014a20b80269b40918014a20b80268
b40918014a20b80267b40918014a20b80266b40918014a20b80265b40918
014a20b80264b40918014a20b80263b40918014a20b80262b40918014a20
b80261b40918014a20b80260b40918014a20b8025fb40918014a20b8025e
b40918014a20b8025db40918014a20b8025cb40918014a20b8025bb40918
014a20b8025ab40918014a20b80259b40918014a20b80258b40918014a20
b80257b40918014a20b80256b40918014a20b80255b40918014a20b80254
b40918014a20b80253b40918014a20b80252b40918014a20b80251b40918
014a20b80250b40918014a20b8024fb40918014a20b8024eb40918014a20
b8024db40918014a20b8024cb40918014a20b8024bb40918014a20b8024a
b40918014a20b80249b40918014a20b80248b40918014a20b80247b40918
014a20b80246b40918014a20b80245b40918014a20b80244b40918014a20
b80243b40918014a20b80242b40918014a20b80241b40918014a20b80240
b40918014a20b8023fb40918014a20b8023eb40918014a20b8023db40918
014a20b8023cb40918014a20b8023bb40918014a20b8023ab40918014a20
b80239b40918014a20b80238b40918014a20b80237b40918014a20b80236
b40918014a20b80235b40918014a20b80234b40918014a20b80233b40918
014a20b80232b40918014a20b80231b40918014a20b80230b40918014a20
b8022fb40918014a20b8022eb40918014a20b8022db40918014a20b8022c
b40918014a20b8022bb40918014a20b8022ab40918014a20b80229b40918
014a20b80228b40918014a20b80227b40918014a20b80226b40918014a20
b80225b40918014a20b80224b40918014a20b80223b40918014a20b80222
b40918014a20b80221b40918014a20b80220b40918014a20b8021fb40918
014a20b8021eb40918014a20b8021db40918014a20b8021cb40918014a20
b8021bb40918014a20b8021ab40918014a20b80219b40918014a20b80218
b40918014a20b80217b40918014a20b80216b40918014a20b80215b40918
014a20b80214b40918014a20b80213b40918014a20b80212b40918014a20
b80211b40918014a20b80210b40918014a20b8020fb40918014a20b8020e
b40918014a20b8020db40918014a20b8020cb40918014a20b8020bb40918
014a20b8020ab40918014a20b80209b40918014a20b80208b40918014a20
b80207b40918014a20b80206b40918014a20b80205b40918014a20b80204
b40918014a20b80203b40918014a20b80202b40918014a20b80201b40918
014a20b80200b40918014a20b801ffb40918014a20b801feb40918014a20
b801fdb40918014a20b801fcb40918014a20b801fbb40918014a20b801fa
b40918014a20b801f9b40918014a20b801f8b40918014a20b801f7b40918
014a20b801f6b40918014a20b801f5b40918014a20b801f4b40918014a20
b801f3b40918014a20b801f2b40918014a20b801f1b40918014a20b801f0
b40918014a20b801efb40918014a20b801eeb40918014a20b801edb40918
014a20b801ecb40918014a20b801ebb40918014a20b801eab40918014a20
b801e9b40918014a20b801e8b40918014a20b801e7b40918014a20b801e6
b40918014a20b801e5b40918014a20b801e4b40918014a20b801e3b40918
014a20b801e2b40918014a20b801e1b40918014a20b801e0b40918014a20
b801dfb40918014a20b801deb40918014a20b801ddb40918014a20b801dc
b40918014a20b801dbb40918014a20b801dab40918014a20b801d9b40918
014a20b801d8b40918014a20b801d7b40918014a20b801d6b40918014a20
b801d5b40918014a20b801d4b40918014a20b801d3b40918014a20b801d2
b40918014a20b801d1b40918014a20b801d0b40918014a20b801cfb40918
014a20b801ceb40918014a20b801cdb40918014a20b801ccb40918014a20
b801cbb40918014a20b801cab40918014a20b801c9b40918014a20b801c8
b40918014a20b801c7b40918014a20b801c6b40918014a20b801c5b40918
014a20b801c4b40918014a20b801c3b40918014a20b801c2b40918014a20
b801c1b40918014a20b801c0b40918014a20b801bfb40918014a20b801be
b40918014a20b801bdb40918014a20b801bcb40918014a20b801bbb40918
014a20b801bab40918014a20b801b9b40918014a20b801b8b40918014a20
b801b7b40918014a20b801b6b40918014a20b801b5b40918014a20b801b4
b40918014a20b801b3b40918014a20b801b2b40918014a20b801b1b40918
014a20b801b0b40918014a20b801afb40918014a20b801aeb40918014a20
b801adb40918014a20b801acb40918014a20b801abb40918014a20b801aa
b40918014a20b801a9b40918014a20b801a8b40918014a20b801a7b40918
014a20b801a6b40918014a20b801a5b40918014a20b801a4b40918014a20
b801a3b40918014a20b801a2b40918014a20b801a1b40918014a20b801a0
b40918014a20b8019fb40918014a20b8019eb40918014a20b8019db40918
014a20b8019cb40918014a20b8019bb40918014a20b8019ab40918014a20
b80199b40918014a20b80198b40918014a20b80197b40918014a20b80196
b40918014a20b80195b40918014a20b80194b40918014a20b80193b40918
014a20b80192b40918014a20b80191b40918014a20b80190b40918014a20
b8018fb40918014a20b8018eb40918014a20b8018db40918014a20b8018c
b40918014a20b8018bb40918014a20b8018ab40918014a20b80189b40918
014a20b80188b40918014a20b80187b40918014a20b80186b40918014a20
b80185b40918014a20b80184b40918014a20b80183b40918014a20b80182
b40918014a20b80181b40918014a20b80180b40918014a20b8017fb40918
014a20b8017eb40918014a20b8017db40918014a20b8017cb40918014a20
b8017bb40918014a20b8017ab40918014a20b80179b40918014a20b80178
b40918014a20b80177b40918014a20b80176b40918014a20b80175b40918
014a20b80174b40918014a20b80173b40918014a20b80172b40918014a20
b80171b40918014a20b80170b40918014a20b8016fb40918014a20b8016e
b40918014a20b8016db40918014a20b8016cb40918014a20b8016bb40918
014a20b8016ab40918014a20b80169b40918014a20b80168b40918014a20
b80167b40918014a20b80166b40918014a20b80165b40918014a20b80164
b40918014a20b80163b40918014a20b80162b40918014a20b80161b40918
014a20b80160b40918014a20b8015fb40918014a20b8015eb40918014a20
b8015db40918014a20b8015cb40918014a20b8015bb40918014a20b8015a
b40918014a20b80159b40918014a20b80158b40918014a20b80157b40918
014a20b80156b40918014a20b80155b40918014a20b80154b40918014a20
b80153b40918014a20b80152b40918014a20b80150b40918014a20b8014f
b40918014a20b8014eb40918014a20b8014cb40918014a20b8014bb40918
014a20b8014ab40918014a20b80149b40918014a20b80148b40918014a20
b80147b40918014a20b80146b40918014a20b80145b40918014a20b80144
b40918014a20b80143b30918014ab80284b21e3e1fb80283b21e151fb802
82b21e3e1fb80281b21e3a1fb80280b21e3e1fb8027fb21e3e1fb8027eb2
1e0c1fb8027db21e3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab21e3e
1fb80279b21d411fb80278b21d431fb80277b21d431fb80276b21d431fb8
0275b21d411fb80274b21d431fb80273b21d431fb80272b21d411fb80271
b21d421fb80270b21d421fb8026fb21d421fb8026eb21d431fb8026db21d
431fb8026cb21d431fb8026bb21c451fb8026ab21c451fb80269b21c451f
b80268b21c451fb80267b21c451fb80266b21c441fb80265b21c451fb802
64b21c451fb80263b21c451fb80262b21c451fb80261b21c451fb80260b2
1c451fb8025fb21c451fb8025eb21c441fb8025db21c451fb8025cb21c45
1fb8025bb21c451fb8025ab21c451fb80259b21c451fb80258b21c451fb8
0257b21c451fb80256b21c451fb80255b21c451fb80254b21c451fb80253
b21c451fb80252b21c451fb80251b21c451fb80250b21c451fb8024fb21c
451fb8024eb21c451fb8024db21c451fb8024cb21c451fb8024bb21c451f
b8024ab21b491fb80249b21b491fb80248b21b4a1fb80247b21b4a1fb802
46b21b4b1fb80245b21b4c1fb80244b21b4c1fb80243b21b4c1fb80242b2
1b4b1fb80241b21b491fb80240b21b491fb8023fb21b4a1fb8023eb21b4a
1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c1fb8
0239b21b4c1fb80238b21b4c1fb80237b21b4c1fb80236b21b4c1fb80235
b21b491fb80234b21b491fb80233b21b4a1fb80232b21b4a1fb80231b21b
4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b4c1f
b8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c1fb80229b21b4c1fb802
28b21b4c1fb80227b21b491fb80226b21b491fb80225b21b4a1fb80224b2
1b4a1fb80223b21b4a1fb80222b21b4b1fb80221b21b4b1fb80220b21b4c
1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b4c1fb8021cb21b4c1fb8
021bb21b4c1fb8021ab21a4e1fb80219b21a4e1fb80218b21a4f1fb80217
b21a4f1fb80216b21a4e1fb80215b21a4e1fb80214b21a4f1fb80213b21a
4f1fb80212b21a4f1fb80211b21a4e1fb80210b21a4e1fb8020fb21a4f1f
b8020eb21a4f1fb8020db21a4f1fb8020cb21a4e1fb8020bb21a4e1fb802
0ab21a4e1fb80209b21a4f1fb80208b21a4f1fb80207b21a4f1fb80206b2
19501fb80205b219511fb80204b219511fb80203b219501fb80202b21951
1fb80201b219511fb80200b219511fb801ffb219511fb801feb219501fb8
01fdb219511fb801fcb219511fb801fbb219511fb801fab219501fb801f9
b219511fb801f8b219511fb801f7b219511fb801f6b219511fb801f5b218
541fb801f4b218531fb801f3b218541fb801f2b218541fb801f1b218541f
b801f0b218531fb801efb218541fb801eeb218541fb801edb218541fb801
ecb218531fb801ebb218531fb801eab218541fb801e9b218541fb801e8b2
18541fb801e7b218541fb801e6b218531fb801e5b218541fb801e4b21853
1fb801e3b218541fb801e2b218541fb801e1b218541fb801e0b218531fb8
01dfb218531fb801deb218541fb801ddb218541fb801dcb218541fb801db
b218541fb801dab218531fb801d9b218541fb801d8b218541fb801d7b217
571fb801d6b217561fb801d5b217561fb801d4b217571fb801d3b217571f
b801d2b217571fb801d1b217571fb801d0b217561fb801cfb217561fb801
ceb217571fb801cdb217571fb801ccb217571fb801cbb217571fb801cab2
17561fb801c9b217561fb801c8b217571fb801c7b217571fb801c6b21757
1fb801c5b217571fb801c4b217571fb801c3b217561fb801c2b217571fb8
01c1b217571fb801c0b217571fb801bfb217561fb801beb217561fb801bd
b217571fb801bcb217571fb801bbb217571fb801bab217571fb801b9b217
571fb801b8b217561fb801b7b217571fb801b6b217571fb801b5b217571f
b801b4b217571fb801b3b2163f1fb801b2b2165b1fb801b1b2165b1fb801
b0b2165b1fb801afb2165b1fb801aeb2165b1fb801adb2165b1fb801acb2
165b1fb801abb2165b1fb801aab2163e1fb801a9b2163f1fb801a8b2163f
1fb801a7b2165b1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb8
01a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019f
b2163e1fb8019eb2163f1fb8019db2163f1fb8019cb2165b1fb8019bb216
5b1fb8019ab2165b1fb80199b2165b1fb80198b2163e1fb80197b2165b1f
b80196b2165b1fb80195b2165b1fb80194b2163e1fb80193b2163f1fb801
92b2163f1fb80191b2165b1fb80190b2165b1fb8018fb2165b1fb8018eb2
165b1fb8018db2165b1fb8018cb2163f1fb8018bb2165b1fb8018ab2165b
1fb80189b2165b1fb80188b2165b1fb80187b2165b1fb80186b215611fb8
0185b215621fb80184b215621fb80183b215661fb80182b215661fb80181
b215551fb80180b215451fb8017fb215361fb8017eb215361fb8017db215
611fb8017cb215621fb8017bb215621fb8017ab215641fb80179b215661f
b80178b215661fb80177b215661fb80176b215661fb80175b215661fb801
74b215661fb80173b215451fb80172b215621fb80171b215621fb80170b2
15631fb8016fb215641fb8016eb215661fb8016db215661fb8016cb21566
1fb8016bb215661fb8016ab215661fb80169b215621fb80168b215621fb8
0167b215611fb80166b215641fb80165b215641fb80164b215661fb80163
b215661fb80162b215661fb80161b215661fb80160b215661fb8015fb215
661fb8015eb215551fb8015db215451fb8015cb215451fb8015bb215361f
b8015ab215611fb80159b215621fb80158b215621fb80157b215631fb801
56b215641fb80155b215661fb80154b215661fb80153b215661fb80152b2
15661fb80151b214401fb80150b214551fb8014fb214561fb8014eb21483
1fb8014db2142d1fb8014cb214401fb8014bb214401fb8014ab214411fb8
0149b214401fb80148b214401fb80147b214411fb80146b2147e1fb80145
b214871fb80144b2147f1fb80143b214801fb80142b212461fb80141b212
461fb80140b212461fb8013fb212461fb8013eb212441fb8013db212461f
b8013cb211591fb8013bb211591fb8013ab2115b1fb80139b2115b1fb801
38b211471fb80137b211581fb80136b2115a1fb80135b2115b1fb80134b2
115b1fb80133b2112c1fb80132b211471fb80131b211551fb80130b21157
1fb8012fb211571fb8012eb211581fb8012db211591fb8012cb211591fb8
012bb2115a1fb8012ab2115a1fb80129b2115b1fb80128b2115b1fb80127
b2115b1fb80126b2115b1fb80125b211561fb80124b211561fb80123b211
571fb80122b211581fb80121b211591fb80120b2115a1fb8011fb2115a1f
b8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8011bb2115b1fb801
1ab2115b1fb80119b2105d1fb80118b2105e1fb80117b2105f1fb80116b2
105f1fb80115b2105f1fb80114b2105f1fb80113b2105f1fb80112b2105d
1fb80111b2105e1fb80110b2105f1fb8010fb2105f1fb8010eb2105f1fb8
010db2105f1fb8010cb2105d1fb8010bb2105e1fb8010ab2105f1fb80109
b2105f1fb80108b2105f1fb80107b2105f1fb80106b2105d1fb80105b210
5e1fb80104b2105f1fb80103b2105f1fb80102b2105f1fb80101b2105f1f
b8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f621ffb0f621ffa0f
621ff90f631ff80f641ff70f641ff60f641ff50f641ff40f621ff30f621f
f20f631ff10f641ff00f641fef0f641fee0f641fed0f621fec0f621feb0f
631fea0f641fe90f641fe80f641fe70f641fe60e671fe50e681fe40e681f
e30e681fe20e681fe10e671fe00e681fdf0e681fde0e681fdd0e671fdc0e
681fdb0e681fda0e681fd90e681fd80d6b1fd70d311fd60d6b1fd50d6c1f
d40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d
6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d681f
c50d671fc40d261fc30d311fc20d311fc10d311f40ffc00d311fbf0d311f
be0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c741fb80c741fb70c
711fb60c711fb50c721fb40c731fb30c741fb20c741fb10c741fb00c741f
af0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b
7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b7e1f
a00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b
7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b6b1f
910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f8403
381f8301381f8255805581ab80557f557d557eab7d550b7d010b7d1b7d4b
7d7b7dab7ddb7d4012060a7c557a557bab7a557955775578ab7755ba0286
00660285403c5576ab755504751475747503f47501ab7501447501307501
02007510752075030c7455725573ab7255007250728072b072043bb072e0
72020072010ab8ffc0b3721b1e46b8ffc0407c720d104671556f5570ab6f
556e666d556a03251f6938675568ab67556638645565ab64556338625561
3860555f385d555eab5d555c385a555bab5a55593858555703251f563854
5555ab54555338515552ab51554f384e554e03251f4d384b554cab4b554a
38485549ab4855473846554503381f001c101c201c0310b8ffc0404e1c1b
1e46001b0142301b401be01bf01b04001bb01bc01b03120f1a1f1a02290f
1901434f19016f197f198f19030f18cf18024018292c460f17cf17df17ef
1704134017292e460016101620160315b8ffc0b3164d5446b8ffc0b3163f
4446b8ffc0b316313546b8ffc0404d162326460f15010f151f1502451f15
010011e011f0110315bf10cf10020f0f010f0fff0f02400f3135460f0e1f
0e020f0e1f0eff0e03400e3137460f0d1f0d020f0d1f0dff0d0316400d31
3746b8ffc040270c5054460f0b1f0b02553f0b4f0b02400b3f4346400b2d
30460003012001010001100120010308b8ffc0b301151f46b80100b31601
0501b80190b154532b2b4bb80800524bb008505bb00188b02553b00188b0
40515ab00688b000555a5b58b101018e59b101024354b0144b515a58b101
018e59858d8d00421d4bb01d5358b0a01d594bb0805358b0401d594bb0ff
5358b0001db1160042592b5e7375732b2b745e732b2b5e73742b73742b73
74745e7301755e73742b2b2b2b5e732b5e732b7374755e735e735e73755e
732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b2b2b5e73742b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2bb1000243545841ff0284006402830064028200640281006402800064
027f0064027e0064027d0064027c0064027b0064027a0064027900640278
006402770064027600640275006402740064027300640271006402700064
026f0064026e0064026d0064026c0064026b0064026a0064026900640268
006402670064026600640265006402640064026300640262006402610064
02600064025f0064025e0064025d0064025c0064025b0064025a00640259
006402580064025700640256006402550064025400640253006402520064
0251006402500064024f0064024e0064024d0064024c0064024b0064024a
006402490064024800640247006402460064024500640244006402430064
024200640241006402400064023f0064023e0064023d0064023c0064023b
0064023a0064023900640238006402370064023600640235006402340064
02330064023200640231006402300064022f0064022e0064022d0064022c
0064022b0064022a00640229006402280064022700640226006402250064
0224006402230064022200640221006402200064021f0064021e0064021d
0064021c0064021b0064021a006402190064021800640217006402160064
021500640214006402130064021200640211006402100064020f0064020e
0064020d0064020c0064020b0064020a0064020900640208006402070064
0206006402050064020441ff006402030064020200640201006402000064
01ff006401fe006401fd006401fc006401fb006401fa006401f9006401f8
006401f7006401f6006401f5006401f4006401f3006401f2006401f10064
01f0006401ef006401ee006401ed006401ec006401eb006401ea006401e9
006401e8006401e7006401e6006401e5006401e4006401e3006401e20064
01e1006401e0006401df006401de006401dd006401dc006401db006401da
006401d9006401d8006401d7006401d6006401d5006401d4006401d30064
01d2006401d1006401d0006401cf006401ce006401cd006401cc006401cb
006401ca006401c9006401c8006401c7006401c6006401c5006401c40064
01c3006401c2006401c1006401c0006401bf006401be006401bd006401bc
006401bb006401ba006401b9006401b8006401b7006401b6006401b50064
01b4006401b3006401b2006401b1006401b0006401af006401ae006401ad
006401ac006401ab006401aa006401a9006401a8006401a7006401a60064
01a5006401a4006401a3006401a2006401a1006401a00064019f0064019e
0064019d0064019c0064019b0064019a0064019900640198006401970064
01960064019500640194006401930064019200640191006401900064018f
0064018e0064018d0064018c0064018b0064018a00640189006401880064
018700640186006401850064418001840064018300640182006401810064
01800064017f0064017e0064017d0064017c0064017b0064017a00640179
006401780064017700640176006401750064017400640173006401720064
0171006401700064016f0064016e0064016d0064016c0064016b0064016a
006401690064016800640167006401660064016500640164006401630064
016200640161006401600064015f0064015e0064015d0064015c0064015b
0064015a0064015900640158006401570064015600640155006401540064
015300640152006401500064014f0064014e0064014c0064014b0064014a
006401490064014800640147006401460064014500640144006401430064
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b185f5e00>
[8349 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 5388 19 <00010059000002d703b7002b003bb90010fff040160c0d014c26100c0d01
4c2f0001003409440902092511b80102b319480f27b80102b1054b003fed
323fed32012f5dcd5d31302b2b25140e02232122263535343e0237012122
2635343e023321321e021515140e02070121321e0202d706080e08fdd615
1b04080e0a018dfe7f101304090d0902040b110c0704080e0afe7501a608
0d090646131b11071c21220e16161910026a2125121b1107060e1611200e
18171a10fd9607101b00>SBTAAA+Calibri AddT42Char 
1 4178 15 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>SBTAAA+Calibri AddT42Char 
1 2332 9 <00020060ffed039c056d00260039008b401f3f3b010b1b39100d014d390a
0c014d391010014d39100f014d39180b014d39bb01f90000002fffe0b30d
014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d2fb8ffe8
b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a34b80104
b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b2b
323931305d25140e0223222e023535060623222e0235343e023332161711
343e0233321e021503262623220e0215141e0233323e0237039c07111c14
151c120847995b638c57283262915f4f834007141f1819201209a6437d44
3f58371915345641213d40462719080c070404070c08774d564d83b16274
bb84474543020b070d070505070d07fd4553573c627c404482653d122a43
3100>SBTAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>SBTAAA+Calibri AddT42Char 
SBTAAA+Calibri /CharStrings get begin
/g19 19 def
/g15 15 def
/g9 9 def
end
SBTAAA+Calibri /Encoding get
dup 33 /g19 put
dup 34 /g15 put
dup 35 /g9 put
pop
end
%ADOEndSubsetFont
/LBTODJ+Calibri /SBTAAA+Calibri findfont ct_VMDictPut/LBTODJ+Calibri*1 [33{/.notdef}rp /g19 /g15 /g9 220{/.notdef}rp]LBTODJ+Calibri nfLBTODJ+Calibri*1 [0 -20 -20 0 0 0 ]msf159.725 546.417 mo(!)shLBTODJ+Calibri*1 [0 -13.3333 -13.3333 0 0 0 ]msf164.725 538.517 mo("#)[-7.00525 0 ]ysh%ADOBeginSubsetFont: TZMBAA+SimSun-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (TZMBAA+SimSun)%%Title: (TZMBAA+SimSun Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /TZMBAA+SimSun def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-8 -145 1000 859} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 7 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 2 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B5EE31F4> |1 <001C60D8A8C9B7A73D40> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /TZMBAA+SimSun-Identity-H /Identity-H 0 [/TZMBAA+SimSun] ct_ComposeFont pop end end
%ADOEndSubsetFont
/LBTODK+SimSun /TZMBAA+SimSun-Identity-H findfont ct_VMDictPutLBTODK+SimSun [0 -13.3333 -13.3333 0 0 0 ]msf153.725 524.506 mo(\000\001)sh96.1738 595.25 mo
95.7987 595.25 li
95.7987 245.566 li
95.7987 245.468 95.8389 245.371 95.9088 245.301 cv
95.9785 245.231 96.0752 245.192 96.1738 245.192 cv
306.545 245.192 li
306.645 245.192 306.739 245.23 306.81 245.301 cv
306.881 245.372 306.92 245.466 306.92 245.566 cv
306.92 595.25 li
306.92 595.349 306.88 595.445 306.81 595.515 cv
306.74 595.585 306.644 595.625 306.545 595.625 cv
96.1738 595.625 li
96.0752 595.625 95.9785 595.585 95.9086 595.515 cv
95.8389 595.445 95.7987 595.349 95.7987 595.25 cv
96.1738 595.25 li
96.1738 594.875 li
306.17 594.875 li
306.17 245.942 li
96.5489 245.942 li
96.5489 595.25 li
96.1738 595.25 li
96.1738 594.875 li
96.1738 595.25 li
f
299.68 389.709 mo
153.048 389.709 li
153.058 386.214 li
293.738 386.214 li
293.836 386.214 293.933 386.173 294.003 386.104 cv
294.072 386.034 294.112 385.937 294.112 385.838 cv
294.112 287.6 li
299.68 287.6 li
299.68 389.709 li
151.048 389.709 mo
107.244 389.709 li
107.244 265.673 li
272.189 265.673 li
272.189 269.374 li
109.494 269.374 li
109.395 269.374 109.299 269.414 109.229 269.484 cv
109.159 269.553 109.119 269.65 109.119 269.749 cv
109.119 385.838 li
109.494 385.838 li
109.119 385.838 li
109.119 385.937 109.159 386.034 109.229 386.104 cv
109.299 386.173 109.395 386.214 109.494 386.214 cv
151.058 386.214 li
151.048 389.709 li
293.362 385.464 mo
153.06 385.464 li
153.083 377.896 li
157.082 377.908 li
155.472 375.964 li
193.971 375.964 li
193.971 295.782 li
114.116 295.782 li
114.116 375.964 li
148.688 375.964 li
147.082 377.879 li
151.083 377.891 li
151.06 385.464 li
109.869 385.464 li
109.869 270.124 li
272.189 270.124 li
272.189 287.6 li
293.362 287.6 li
293.362 385.464 li
152.117 371.879 mo
132.235 371.879 116.117 355.761 116.117 335.879 cv
116.117 315.997 132.235 299.879 152.117 299.879 cv
171.999 299.879 188.117 315.997 188.117 335.879 cv
188.117 355.761 171.999 371.879 152.117 371.879 cv
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[124.691 0 0 193.091 14.9952 595.185 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 381 
/H 590 
/M[381 0 0 -590 0 590 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 381 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 381 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 381 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 381 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcP?AOTC%7Oob(QJcLB&
JcLB&JcLB&JcLB&JcPKEN<+V3N</_QJcLB&JcLB&JcLB&JcLB&JcPQGrW2s!Oop:<P6:abr;lZnJcLB&
JcLB&JcLB&JcLB&JcPWIrW*'%!sAN*Op-F@Op1jgrr`9&rrMoqJcLB&JcLB&JcLB&JcLB&JcPZJ#QXr-
!WrQ/"p^7rJd@MF#R:S="U"o/!<N#sJcLB&JcLB&JcLB&JcLB&JcPZJ#QXr-"9f#9$4Dt)JddeN#n%(H
#6k;5!W`?!!.k3&!.k3&!.k3&!.k3&!.k4K!"&`-!X&Z4$4ICT&<[WW&X!_4&.]3X#mLM7!<N&tJcLB&
JcLB&JcLB&JcLB&JcP]K$ipD3"U>AD&/,`m()E,LJeaOc$l0Tn'b_/i$j[%?!Wi/uJcLB&JcLB&JcLB&
JcLB&JcP`L#lt&."9o2B&JQ&Z)3l%j(mZ!K)&X>1)&F##%grUG!s/N$!.k3&!.k3&!.k3&!.k3&!.k4L
!!rZ,!sJr<%hoj!rYtqX)O21l)4)3B)B'Ro*"!W&'bLl]"p4o-!W<"M!.k3&!.k3&!.k3&!.k3&!;um0
!<E9,#n7I^)B9b<*#fe6(`8VVJesgk"W/'o)B0[q*=3Z%'+P?R"9JT)r;_ELJcLB&JcLB&JcLB&JcLB&
r;[E1!WrW6%MKZu*?H4?)&F&''po\e'U]XJ'bqK#)&aJ8*?5q3%grUF!s&H$!.k3&!.k3&!.k3&!.k3&
!.k4L!"f55":#8E',VZ/*?,h2'+tlhQk4i\R1KuC&J>`l(`FA7*#]S($j["=!<N-!JcLB&JcLB&JcLB&
JcLB&JcP`L&HMq9#7D%V(`OG6)&3bp%Lii6$\AbS$PEjV%M'0e(E+54)&<bl#R(;2!W<"M!.k3&!.k3&
!.k3&!.k3&!;um/!<NB/$P*mf)]K\3'+YKY$'tpL#aYf.$4ICW'c7i.)&<bl#R(;2!W<"M!.k3&!.k3&
!.k3&!.k3&!;um0!<NB/$P*mf)B'G-&.JpN"pL@sJcqJE&d8FD#n.@Y(E",/'bCcZ"Tnc+r;_ELJcLB&
JcLB&JcLB&JcLB&r;[E1!X&`9%hf`t)&Ett$O6h<".0.A!gs*&!s8]3$4[[`(`F5+&.AgJ!s&H$!.k3&
!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN((D@8c"p>#0QiVd>R/mp%!X&]6%1s<l)&O)"$j["=!<N-!
JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2
!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ
"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)
&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h
)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=
&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8
"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"
!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<
R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj
!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?
!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n
#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'
((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U
(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/
$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1
!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L
!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&
JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&
!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&
JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&
!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&
JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M
!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+
r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ
!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"
$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou
(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ
'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+
#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#
!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=
!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYg
JcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4
!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_
"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*
&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me
)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9
%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55
":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L
&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&
!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&
JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&
!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&
JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&
!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_EL
JcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$
!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=
!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj
#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW(
'bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y
(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2
$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5
!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=
&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=
!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,
QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N
!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%
%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s
(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F
',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9
#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0
!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&
r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&
!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&
JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&
!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&
JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&
!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!
JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2
!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ
"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)
&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h
)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=
&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8
"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"
!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<
R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj
!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?
!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n
#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'
((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U
(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/
$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1
!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L
!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&
JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&
!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&
JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&
!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&
JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M
!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+
r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ
!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"
$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou
(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ
'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+
#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#
!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=
!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYg
JcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4
!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_
"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*
&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me
)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9
%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55
":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L
&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&
!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&
JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&
!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&
JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&
!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_EL
JcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$
!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=
!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj
#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW(
'bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y
(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2
$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5
!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=
&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=
!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,
QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N
!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%
%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s
(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F
',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9
#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0
!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&
r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&
!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&
JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&
!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&
JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&
!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!
JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2
!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ
"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)
&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h
)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=
&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8
"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"
!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<
R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj
!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?
!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n
#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'
((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U
(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/
$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1
!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L
!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&
JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&
!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&
JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&
!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&
JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M
!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+
r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ
!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"
$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou
(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ
'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+
#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#
!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=
!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYg
JcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4
!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_
"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*
&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me
)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9
%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55
":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L
&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&
!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&
JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&
!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&
JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&
!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_EL
JcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$
!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=
!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj
#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW(
'bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y
(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2
$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5
!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=
&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=
!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,
QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N
!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%
%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s
(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F
',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9
#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0
!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&
r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&
!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&
JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&
!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&
JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&
!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!
JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2
!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ
"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)
&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h
)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=
&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8
"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"
!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<
R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj
!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?
!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n
#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'
((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U
(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/
$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1
!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L
!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&
JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&
!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&
JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&
!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&
JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M
!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+
r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ
!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"
$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou
(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ
'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+
#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#
!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=
!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYg
JcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4
!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_
"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*
&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me
)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9
%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55
":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L
&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&
!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&
JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&
!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&
JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&
!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_EL
JcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$
!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=
!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj
#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW(
'bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y
(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2
$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5
!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=
&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=
!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,
QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N
!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%
%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s
(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F
',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9
#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0
!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&
r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&
!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&
JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&
!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&
JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&
!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!
JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2
!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ
"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)
&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h
)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=
&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8
"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"
!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<
R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj
!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?
!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n
#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'
((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U
(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/
$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1
!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L
!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&
JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&
!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&
JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&
!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&
JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M
!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+
r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ
!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"
$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou
(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ
'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+
#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#
!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=
!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYg
JcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4
!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_
"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*
&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me
)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9
%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55
":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L
&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&
!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&
JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&
!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&
JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&
!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_EL
JcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$
!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=
!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj
#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW(
'bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y
(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2
$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5
!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=
&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=
!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,
QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N
!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%
%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s
(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F
',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9
#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0
!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&
r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&
!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&
JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&
!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&
JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&
!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!
JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2
!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ
"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)
&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h
)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=
&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8
"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"
!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<
R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj
!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?
!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n
#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'
((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U
(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/
$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1
!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L
!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&
JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&
!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&
JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&
!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&
JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M
!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+
r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ
!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"
$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou
(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ
'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+
#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#
!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=
!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYg
JcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4
!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_
"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*
&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me
)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9
%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55
":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L
&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&
!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&
JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&
!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&
JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&
!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_EL
JcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$
!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=
!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj
#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW(
'bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y
(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2
$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5
!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=
&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=
!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,
QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N
!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%
%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s
(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F
',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9
#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0
!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&
r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&
!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&
JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&
!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&
JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&
!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!
JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2
!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ
"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)
&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h
)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=
&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8
"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"
!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<
R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj
!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?
!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n
#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'
((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U
(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/
$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1
!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L
!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&
JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&
!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&
JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&
!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&
JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M
!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+
r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ
!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"
$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou
(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ
'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+
#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#
!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=
!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYg
JcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4
!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_
"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*
&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me
)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9
%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55
":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L
&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&
!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&
JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&
!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&
JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&
!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_EL
JcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$
!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=
!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj
#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW(
'bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y
(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2
$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5
!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=
&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=
!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,
QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N
!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%
%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s
(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F
',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9
#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0
!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&
r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&
!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&
JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&
!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&
JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&
!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!
JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2
!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ
"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)
&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h
)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=
&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8
"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"
!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<
R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj
!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?
!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n
#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'
((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U
(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/
$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1
!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L
!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&
JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&
!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&
JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&
!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&
JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M
!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+
r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ
!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"
$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou
(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ
'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+
#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#
!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=
!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYg
JcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4
!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_
"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*
&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me
)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9
%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55
":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L
&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&
!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&
JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&
!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&
JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&
!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_EL
JcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$
!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=
!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj
#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW(
'bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y
(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2
$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5
!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=
&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=
!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,
QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N
!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%
%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s
(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F
',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9
#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0
!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&
r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&
!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&
JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&
!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&
JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&
!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!
JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2
!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ
"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)
&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h
)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=
&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8
"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"
!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<
R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj
!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?
!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n
#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'
((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U
(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/
$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1
!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L
!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&
JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&
!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&
JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&
!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&
JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M
!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+
r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ
!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"
$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou
(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYgJcM2=&ci"8"UGMJ
'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4!LNk=!1<g"!<E9+
#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_"Tnf,QiM^<R/dj#
!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*&e,-N!s/Lj!.k3=
!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me)&O,%%1*1?!WeYg
JcM2=&ci"8"UGMJ'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9%hf`s(`!_n#mCD4
!LNk=!1<g"!<E9+#Rh7Y(E"&)&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55":#;F',MN'((q&_
"Tnf,QiM^<R/dj#!<WK2$kO*h)&O)"$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L&HMq9#7D%U(E"&*
&e,-N!s/Lj!.k3=!"o;5!sJr=&/5ou(_mSj#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&!;um0!<NB/$P*me
)&O,%%13:B!s4hjJcV8?&cr+;"pk\L'GhW('bCcZ"Tnc+r;_ELJcLB&JcLB&JcLB&JcLB&r;[E1!X&`9
%hf`s)&Eqr$3gV8!gj"?!LWs$!WiK/#n7I](`=/*&.AgJ!s&H$!.k3&!.k3&!.k3&!.k3&!.k4L!"f55
":#;F',MQ)(DIAf#R1G8QihpBR0+')"9o,=%MBNo)As8$$j["=!<N-!JcLB&JcLB&JcLB&JcLB&JcP`L
&HMq9#7D%U(`F;0'bLl^#R:R$"bHoG"VM"D#RUtO',MN))&3\k#R(;2!W<"M!.k3&!.k3&!.k3&!.k3&
!;um0!<NB/$P*pg)]K\3'+bQ[$43(*Jd@bM&d\jP$kEsc(`F>2((^l["Tnc+r;_ELJcLB&JcLB&JcLB&
JcLB&r;[E1!X&`9%hoj"*#oh3'+bZa%@@QU%%.M:%1NgZ&eu6%*#ok4&.AgJ!s&H$!.k3&!.k3&!.k3&
!.k3&!.k4L!"]/4"9o2D',V]0*?,k4'GD+G&V:U]&J,Ti()Rr0*?5q3&.AgJ!s&H$!.k3&!.k3&!.k3&
!.k3&!.k4L!"]/4"9o2C&f2K-*ZZ1<(`*sS'nR0e'bD/u)&jP9*?5q2%grUF!W`?#!.k3&!.k3&!.k3&
!.k3&!.k4L!"]/3!sJu?&Jc9)*??+=)AsEZ(kNTk(_@Q')]Tk=*#f\-%LNCC!W`?#!.k3&!.k3&!.k3&
!.k3&!.k4L!"K#1!sJr<%hf`s)]Te9)O21l)4)3P)B'P6*#fe5'bLi\"Tnf,!W<"M!.k3&!.k3&!.k3&
!.k3&!;lg'!<NB.#n7F[()[#gr>:n<Jesgkr>>MO#oFHn&Io-Q"9S]%!.k3&!.k3&!.k3&!.k3&!.k4K
!"&`.!sJo:%1j-c'`Ji4'S7$b'`JgS'GM/k%LWOG!s/N#!.k3&!.k3&!.k3&!.k3&!.k4K!"&`-!WrT2
#n%1Q&!@KU&<[S2%h9!T#R1D5!<N&tJcLB&JcLB&JcLB&JcLB&JcPZJ#QXr-!sJl7#mue&Jd[_L#RUkD
#6b54!Wi,tJcLB&JcLB&JcLB&JcLB&JcPWI#6=i,!sAc3#*B.B#E]5r"pG,3!WiB'q>c*IJcLB&JcLB&
JcLB&JcLB&q#LEqrrW3&O9C.<OTb[drrW0#q#H!HJcLB&JcLB&JcLB&JcLB&p]16nNrjn7Nro:]pAfdF
JcLB&JcLB&JcLB&JcLB&p&L'QJcUl4o`0RDJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcL<~>

%%EndBinary
grestore
np
109.494 385.838 mo
109.119 385.838 li
109.119 269.749 li
109.119 269.65 109.159 269.553 109.229 269.484 cv
109.299 269.414 109.395 269.374 109.494 269.374 cv
293.738 269.374 li
293.838 269.374 293.932 269.413 294.003 269.484 cv
294.073 269.554 294.112 269.648 294.112 269.749 cv
294.112 385.838 li
294.112 385.937 294.072 386.034 294.003 386.104 cv
293.933 386.173 293.836 386.214 293.738 386.214 cv
109.494 386.214 li
109.395 386.214 109.299 386.173 109.229 386.104 cv
109.159 386.034 109.119 385.937 109.119 385.838 cv
109.494 385.838 li
109.494 385.464 li
293.362 385.464 li
293.362 270.124 li
109.869 270.124 li
109.869 385.838 li
109.494 385.838 li
109.494 385.464 li
109.494 385.838 li
0 0 0 1 cmyk
f
150.725 499.703 mo
151.097 373.091 li
153.097 373.097 li
152.725 499.709 li
150.725 499.703 li
f
147.082 377.879 mo
152.1 371.894 li
157.082 377.908 li
147.082 377.879 li
ef
312.116 287.6 mo
306.92 287.6 li
306.92 271.564 li
311.135 271.564 li
311.135 251.927 li
312.116 251.927 li
312.116 287.6 li
306.17 287.6 mo
299.68 287.6 li
299.68 271.564 li
306.17 271.564 li
306.17 287.6 li
277.098 265.673 mo
272.189 265.673 li
272.189 245.942 li
277.098 245.942 li
277.098 265.673 li
291.825 245.192 mo
272.189 245.192 li
272.189 228.691 li
291.825 228.691 li
291.825 245.192 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[59.5636 0 0 40.5818 117.104 582.749 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 182 
/H 124 
/M[182 0 0 -124 0 124 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 182 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 182 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 182 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 182 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNLb
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcP!7J,~>

%%EndBinary
grestore
np
306.92 287.6 mo
306.17 287.6 li
306.17 271.564 li
306.92 271.564 li
306.92 287.6 li
277.098 245.942 mo
272.189 245.942 li
272.189 245.192 li
291.825 245.192 li
291.825 245.382 li
277.098 245.382 li
277.098 245.942 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[43.2 0 0 35.3454 117.104 587.985 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 132 
/H 108 
/M[132 0 0 -108 0 108 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcP?AOoOhKQ2lL:JcOX-V>o6KWW7VNJcNpn\c9YK^&W`bJcN4Zc2Y'KdK"k!JcMMFiW#JKjoBu5
JcLf2p&BmKq>c*IJcLB&q#H<Po`'sPJcLB&jT'o4r;VNPJcLB&m/WIPkl7+PJcLB&f`8&PeGl]PJcLB&
`;mXP_#M:PJcLB&YlN5PXT-lPJcLB&SH.gPR/cIPJcLB&M#dDPK`D&PJcLB&JcPECO8n\KPQ6:8jT'l4
quDNPp]$0PJcLB&kQ%+Pj8YbPJcLB&e,Z]Pci:?PJcLB&^];:P]DoqPJcLB&X8plPVuPNPJcLB&QiQIP
PQ1+PJcLB&KE2&PK)biMK`H])JcP6>PlL%KR/l=KJcLB&pAg0Po)FgPJcLB&irGbPhZ'DPJcLB&cN(?P
b5]!PJcLB&])]qP[f=SPJcLB&VZ>NPUAs0PJcLB&P5t+PNrSbPJcLB&JcPcML&^uKM?&5.JcP'9RK)CK
JcLB&JcP?AOoOhKQ2lL:JcOX-V>o6KWW7VNJcNpn\c9YK^&W`bJcN4Zc2Y'KdK"k!JcMMFiW#JKjoBu5
JcLf2p&BmKq>c*IJcLB&q#H<Po`'sPJcLB&jT'o4r;VNPJcLB&m/WIPkl7+PJcLB&f`8&PeGl]PJcLB&
`;mXP_#M:PJcLB&YlN5PXT-lPJcLB&SH.gPR/cIPJcLB&M#dDPK`D&PJcLB&JcPECO8n\KPQ6:8jT'l4
quDNPp]$0PJcLB&kQ%+Pj8YbPJcLB&e,Z]Pci:?PJcLB&^];:P]DoqPJcLB&X8plPVuPNPJcLB&QiQIP
PQ1+PJcLB&KE2&PK)biMK`H])JcP6>PlL%KR/l=KJcLB&pAg0Po)FgPJcLB&irGbPhZ'DPJcLB&cN(?P
b5]!PJcLB&])]qP[f=SPJcLB&VZ>NPUAs0PJcLB&P5t+PNrSbPJcLB&JcPcML&^uKM?&5.JcP'9RK)CK
JcLB&JcP?AOoOhKQ2lL:JcOX-V>o6KWW7VNJcNpn\c9YK^&W`bJcN4Zc2Y'KdK"k!JcMMFiW#JKjoBu5
JcLf2p&BmKq>c*IJcLB&q#H<Po`'sPJcLB&jT'o4r;VNPJcLB&m/WIPkl7+PJcLB&f`8&PeGl]PJcLB&
`;mXP_#M:PJcLB&YlN5PXT-lPJcLB&SH.gPR/cIPJcLB&M#dDPK`D&PJcLB&JcPECO8n\KPQ6:8jT'l4
quDNPp]$0PJcLB&kQ%+Pj8YbPJcLB&e,Z]Pci:?PJcLB&^];:P]DoqPJcLB&X8plPVuPNPJcLB&QiQIP
PQ1+PJcLB&KE2&PK)biMK`H])JcP6>PlL%KR/l=KJcLB&pAg0Po)FgPJcLB&irGbPhZ'DPJcLB&cN(?P
b5]!PJcLB&])]qP[f=SPJcLB&VZ>NPUAs0PJcLB&P5t+PNrSbPJcLB&JcPcML&^uKM?&5.JcP'9RK)CK
JcLB&JcP?AOoOhKQ2lL:JcOX-V>o6KWW7VNJcNpn\c9YK^&W`bJcN4Zc2Y'KdK"k!JcMMFiW#JKjoBu5
JcLf2p&BmKq>c*IJcLB&q#H<Po`'sPJcLB&jT'o4r;VNPJcLB&m/WIPkl7+PJcLB&f`8&PeGl]PJcLB&
`;mXP_#M:PJcLB&YlN5PXT-lPJcLB&SH.gPR/cIPJcLB&M#dDPK`D&PJcLB&JcPECO8n\KJ,~>

%%EndBinary
grestore
np
299.68 287.6 mo
294.112 287.6 li
294.112 271.564 li
299.68 271.564 li
299.68 287.6 li
293.362 287.6 mo
272.189 287.6 li
272.189 270.124 li
277.098 270.124 li
277.098 271.564 li
293.362 271.564 li
293.362 287.6 li
277.098 269.374 mo
272.189 269.374 li
272.189 265.673 li
277.098 265.673 li
277.098 269.374 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[22.5818 0 0 28.1454 117.104 595.185 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 69 
/H 86 
/M[69 0 0 -86 0 86 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLE'!!*Z4!sJr=&/5ou(_mSj#R(;2!L*S9!:0[u!<E9+#Rh7Y(E"&)&.AgJ!s&G&!.k4%!"o;5!sJr=
&/5ou(_mSj#R(;2!Pe\e!5JRI!<E9+#Rh7Y(E"&)&.AgJ!s&GR!.k3N!"o;5!sJr=&/5ou(_mSj#R(;2
!UKf<!0dHq!<E9+#Rh7Y(E"&)&.AgJ!s&B&K)gK'r;[H2!<WK2$kO*h)&O)"$j["=!<JSgJcOs6&ci"8
"UGMJ'GhW('bCcZ"Tnc+Y5j.Sd/Xd[!<WK2$kO*h)&O)"$j["=!<L.>JcNC_&ci"8"UGMJ'GhW('bCcZ
"Tnc+gAlg*V#V,/!<WK2$kO*h)&O)"$j["=!<M]jJcLi3$ipA2"UGMJ'GhW('bCNW#R(;2!Jg`-!;HO,
!<E9+#Rh7Y(E"&)&.AgJ!s&Fo!.k41!"o;5!sJr=&/5ou(_mSj#R(;2!OMiY!;Z]E!"o;5!sJr=&/5ou
(_mSj#R(;2!Q+nh!5/@F!<E9+#Rh7Y(E"&)&.AgJ!s&GU!.k3K!"o;5!sJr=&/5ou(_mSj#R(;2!Ug#?
!0I6k!<E9+#Rh7Y(E"&)&.AgH"Tnc+L&cf*q>_-/!<WK2$kO*h)&O)"$j["=!<J\jJcOj3&ci"8"UGMJ
'GhW('bCcZ"Tnc+Z2fIVc2\IX!<WK2$kO*h)&O)"$j["=!<L7AJcN:\&ci"8"UGMJ'GhW('bCcZ"Tnc+
h>i--U&Yf,!<WK2$kO*h)&O)"$j["=!<MfmJcL`0#lt&/"UGMJ'GhVm(_mSj#R(;2!K-r0!;-=)!<E9+
#Rh7Y(E"&)&.AgJ!s&Fr!.k4.!"o;5!sJr=&/5ou(_mSj#R(;2!Oi&\!6G3R!<E9+#Rh7Y(E"&)&.AgJ
!s&GI!.k3W!"o;5!sJr=&/5ou(_mSj#R(;2!TO03!1a*&!<E9+#Rh7Y(E"&)&.AgJ!s&Gu!.k4I!0.$e
!<E9+#Rh7Y(E"&)"qV1K"Tnc+M#`,-pAbg,!<WK2$kO*h)&O)"$j["=!<JemJcOa0&ci"8"UGMJ'GhW(
'bCcZ"Tnc+[/bdYb5`.U!<WK2$kO*h)&O)"$j["=!<L@DJcN1Y&ci"8"UGMJ'GhW('bCcZ"Tnc+i;eH0
T)]K)!<WK2$kO*h)&O)"$j["=!<MopJcLW-"p"`,"UGMJ$PXBp(_mSj#R(;2!KI/3!:g+&!<E9+#Rh7Y
(E"&)&.AgJ!s&Fu!.k4+!"o;5!sJr=&/5ou(_mSj#R(;2!P/8_!6,!O!<E9+#Rh7Y(E"&)&.AgJ!s&GL
!.k3T!"o;5!sJr=&/5ou(_mSj#R(;2!TjB6!1Em#!<E9+#Rh7Y(E"&)&.AgJ!s&H#!.k3(!<3'2!sJr=
&/5ou(_mSj#R(;2!L!M8!:9b!!<E9+#Rh7Y(E"&)&.AgJ!s&G%!.k4&!"o;5!sJr=&/5ou(_mSj#R(;2
!P\X2!.k3l!"o;5!sJr=&/5ou(_mSj#R(;2!R:[s!3uS;!<E9+#Rh7Y(E"&)&.AgJ!s&G`!.k3@!"o;5
!sJr=&/5ou(_mSj#R(;2!VueJ!/:IU!<E9+%L<IS'GhW('bCcZ"Tnc+OT9t5mf3t$!<WK2$kO*h)&O)"
$j["=!<K(uJcOI(&ci"8"UGMJ'GhW('bCcZ"Tnc+]`<Wa_Z1;M!<WK2$kO*h)&O)"$j["=!<LXLJcMnQ
&ci"8"UGMJ'GhW('bCcZ"Tnc+kl?;8QN.^#!<WK2$kO*h)&O)"$j["=!<E0#JcLB&'*&%6!sJr=&/5ou
(_mSj#R(;2!L<_;!9sOs!<E9+#Rh7Y(E"&)&.AgJ!s&G(!.k4#!"o;5!sJr=&/5ou(_mSj#R(;2!Q"hg
!58FG!<E9+#Rh7Y(E"&)&.AgJ!s&GT!.k3L!"o;5!sJr=&/5ou(_mSj#R(;2!U]r>!0R<m!<E9+#Rh7Y
(E"&)&.AgJ!WrH(r;_ELK)blP&HMt;#Rh7Y(E"&)&.AgJ!s&Fe!.k4;!"o;5!sJr=&/5ou(_mSj#R(;2
!NH-O!7h,_!<E9+#Rh7Y(E"&)&.AgJ!s&G<!.k3d!"o;5!sJr=&/5ou(_mSj#R(;2!S.7&!8%;#!>5G8
"9o/@&/5ou(_mSj#R(;2!UKf<!5\`b!>,A7"9o/A&JZ-#(_mSj#R(;2!!.]PX8piSr<!Z8"9o,=%MBNo
)As8$$j["=!<JSgQ2p:Uk62J&"pbPE&/,it)As8$$j["=!<KA(JcPfNdg-Qm#n%.P&eu6%)]9D&$j["=
!<L.>JcP$8dgQiu%1a!_'c7i/*#]S($j["=!<LpTJcO7"d1Hp''G_N(*$$":'bCcZ"Tnc+nGn.@]`?Fp
$5XNs)]Tk=*#TG$"UbP<!W`=X!2fhP)"ndX)&aG6*??+=(D@8c"p=u.!M0:R!:h#c)%[]))]Kb9)Aj2$
$jd(>!W`>/!.k4I!7Mb_)#bBZ(`*o!%LNFD!s-4<JcP*:ckQHo$5=0e&.T'R"Tnf,f)UC&eH!f)#nILS
$4$h=!W`>h!.k3c!6bfU$4-tC"U"o/!!.]PW;tWWncoC("U"o/!W`=i!0[EP"Pa.["9/H%!NlES!;li=
!r`5;!.k45!6>2l!.k3&!.k3&!.k3&!.k3&!.k3&!3uTT~>

%%EndBinary
grestore
np
294.112 287.6 mo
293.362 287.6 li
293.362 271.564 li
294.112 271.564 li
294.112 287.6 li
277.098 270.124 mo
272.189 270.124 li
272.189 269.374 li
277.098 269.374 li
277.098 270.124 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[18.9818 0 0 22.5818 117.104 600.749 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 58 
/H 69 
/M[58 0 0 -69 0 69 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcO4!a8bH*JcP!7a8aZiJcPcMa8`mSPlU7PgAe,PWrUfPnGe[P_#VOUquD<Kf)WkkjoBu5m/Y3,ciA_!
s8U4@\cA0!l2TZ@U]@V!e,T+@NW@'!a8bl6JcOR+a8b)uJcP?Aa8a<_M#dDPcMt9PT)dsPjSthP[/eMP
qYuNT`rO0[p&K[Eh#PLqhuJ?/o)Qi2aoI;!q>\e@ZiHa!j8\6@ScH2!c2[\@L]GX!a8bZ0JcOd1a8alo
JcPQGa8a*YNr\hPeGl]PV#]BPlMm7P])]qP!<7ZOd/_5eli;V;k5`R&ec::%r;an<^]9T!n,M)@WW9%!
g&LO@PQ8K!a8^_kdK%>flMuM:kQ&['eGt1$rW("=^AsN!mf2#@W;rt!f`1I@P5rE!a8c&;JcOC&a8b9%
JcP0<a8aKdKE2&PaoApPRK2UPhuBJPYQ3/Pp&C$P`W4'ZpAfdFg]5Cpi;eH0nc6`1b5dA!qZ"k@[/cg!
jT"<@T)c8!cN!b@N<%!!a8bi5JcOU,a8b&tJcPBBa8a9^M?*JPci:?PTE+$Pjo:nP[K+SPqu;HPbQ,]`
nGn.@iW.%!gAlg*p]/A7`;kr!o`*G@Y5kC!hZ)m@R/ji!aSu8?K)j:!a8bK+JcOs6a8a]jJcP`La8`pT
PQ:1Pg&J&PWW:`Pn,In~>

%%EndBinary
grestore
np
311.135 271.564 mo
306.92 271.564 li
306.92 251.927 li
311.135 251.927 li
311.135 271.564 li
306.17 271.564 mo
299.68 271.564 li
299.68 265.673 li
277.098 265.673 li
277.098 245.942 li
291.825 245.942 li
291.825 251.927 li
295.749 251.927 li
295.749 255.189 li
300.826 255.189 li
300.826 251.927 li
306.17 251.927 li
306.17 271.564 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[26.1818 0 0 34.6909 133.141 583.731 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 80 
/H 106 
/M[80 0 0 -106 0 106 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 80 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 80 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 80 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 80 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
nGn.@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcP<@JcLB&JcLB&JcLB&JcLB&ciEkB])[E_OoY=ZrrW#t!!.]PJcO0urW3!"p]LHrrW1(?JcLl4#6=i,
!s8Z0"oAN'"U"r2!s8W(!K@)2!6tQM!<E6("9o):$2Y&9#mgkB#6k>7!s8H&d/\auN;s:d!<N?,#71bI
%M/OM%hB0\%LigS#m^b>"9S]+!L3Y:!6Y?L!<E6("UGJG&/,fV((V,p'GD)j%h/mQ#6b22!<LgQJcLW-
"p"`,":#8D!tuFg*;gfg*#fh8(`*o"&.JsP"U"l-!Ls.A!6,!G!<N?-#n@Uc*$?L*,SMCH+sA*P*uu:<
()%2e#R1D5!<M'XJcLK)!W`<'%Km"E&JlH3-7C;l-mp>grZr%",9e3L)&3\k#mLM6!<JqqnGn.@dJsgZ
!<NE1%20X'-7UPu.k2qpr[.Ul$mm8E*uYn,$jd+?!WggOJcLl4%06M4"UP\S*$csb/hSXi.46De,UFcb
-n-Sm,Tn$A&.AgJ!s&Fj!.k3q!"T)3!sT)D(EOnR/hS_)-6rL4&Kr>E-RgMp-m]uT'b:WV"9JVY!.k3/
!!iT,!sT)D(EXtD/1rM)-6aKM)B'P8+=&<a.k<%p*uP_$#mCD3!M9@D!6>-d!<N?-$P=3t-S-i#.3flO
().Gt(E4G@-S$_u.3fiL&.8[F!Wh6[JcLN*!s&H*"sF?d(`t+U/1Mth)ANhp%M'-d)':+Q/1iA"+W;"'
#R(;2U]>uH_Z2"a!WrW7&JuT:.k<%p*>]=t$OR4L&/6$*-7UT!.3ooL%giLC!<M?`JcLB&-NF/K!sT,F
(`t(S.juV^'b:ZX#6tPD&/H61-nHr#-6O-;$O6e9!NH-O!58F[!<N?-$P=3t-7UJn,9%=,#mLP:"pk_O
)'C7V/M&:o)A<Ma"9JVj!.k3&!;caC!<N?-$P=3t-7UJm+rV+(#mCD5"9o2D(*+YM/M/Cr*#&hf"Te_.
!.k3]!%.dK!sT,F(`t(S.OQDY'+G3M!s/Q.#RqIe+t+uo.O6#L%LE:@!<M`kJcLB&p&HH@!WrW7&JuT:
.Olei)A<Pc"9JW,":#>J)'LCZ/Lr+g((U]T!s&G1!.k3X!"f55!sT,F(`t(S.OQDY'+G3MrW3]8#7D+\
+=A]l.jZ5P%giLC!<MopnGn.@JcI/!!WrW7&JuT:.Olei)A<Pc"9JT*"9o5G(a(1V/Lr+g(CpiW!s&G&
!.k3c!%.dK!sT,F(`t(S.OQDY'+G3M!W`?*"q)"[+=AZj.O?,O%giIB!<MNeJcLB&qu@<0!WrW7&JuT:
.Olei)A<Pc"TAH8":#>J)'L@X/1Mnc((U]T!s&G+!.k3^!%.dK!sT,F(`t(S.OQDY'+G3M!s/Q.#RqFc
+t+un.3ffI%LE:@!<M]jJcLB&pAcQA!WrW7&JuT:.Olei)A<Pd"Tni0"ptkU*$Zm`/1;\]'Fb<O!W`>/
!.k3Y!%.dK!sT,F(`t(S.OQG['FkER"9\o7$kX<u,q:Gr-Qs??$jZt;!<MloJcLB&nc0s:!WrW7&JuT:
.Ounl*#/tl#R1J=$P*sk+X\ck.O?/Q&ISgH!r`6!!;ll8!.k3T!%%^J!sT,F(`t(T.k)bb(D.)`#mq(O
',_l;.4ctt,9.F/$3gV8!r;rp!Jg`-!:9b5!<N?-$P=3t-S$_t-6O3@&.T-Z&/5s%,:=rk.OH8U'+G6P
"9\i"!r`5E!.k3O!$_LG!sT,F(`t+V/M&:p*>oS*',23"*?lgZ.k2ql*>T4q#RC>4rri6%r<*6*!WiB'
O8sk4kPue-!WrW6&/ZK:/1rM)-6XEL)&X>4+!N$[.Olhl*uP_%$OH\9rs&B)#R1M<"pG,2!Wg^LJcMYJ
,67iJ"ptnX*[WBi0.eV"+s7sL+<`!W-n-Sm,Tn!?&.AmP#m:PA$4.":#7:_C$4-tC"U"l-!L<_;!:^'\
!&jo[!sJuA'cePL/MA_-.4->c,:"Q^-R^Ai,9Rp@&If'R#mq(M%1EUO#mgqH$k3XR#mUV9!Wg@BJcN%U
&ci"7"UGPO)BgIY/M/M'-mp>fr$E1)+s%X;&If*S#mq(O&.oH`%1EUQ%M/pY&.]0U"p=u.!K7#1!:Bgu
!<E6)#7M1\*?up\.Ocbn-N5;:,U=TX*ul+3&.JsP#RLnL&ebrm&J#?]%hTHh'+k]^#6b21!R:[s!36)>
!<N?-#n@Ud*?cXR,pX`\+sA*P*uu:<((q,d$2t/8#n7F[()I`#&Io?`&JGor().>i#mLJ5!KdA6!9aCi
!<E9*#7D%U(E+=m*[i$K*#fe6(DRPo%13@F"U52=%2'En)&O,&&eYim(`=/+&e53P"9JVQ!.k3J!"&`-
!WrT3$P!a_(&\p_()@W!'+tie%1<FH"U"r3"pthR(D@]+)&F#$',26#)]BM,%giOE!WeSeJcOd1#lt&.
"9f#;$k<gG&./pY%LigS$4$k?"TAK@"9o2C',VZ.)]9D*'GVH(*?,h0%grUF!WgpRJcMDC$NU80!sJl6
#mgqG$iLD@#m^eA"pG,3!W`?(";h=M%hoj#*?5t6()@])*$-(;'bC`X"9JUn!.k4*!!WH)!WrN-"o/?,
"U,#3!s8W'!?)"B"pthS)&s\<)]9G.)&jV=*?#Y($O6e9!Sma-!13cc!WN5p"9&B$!?D.?!<NB.#n@Uc
*$-.@)]9M4*?QCF)AWkl#6Y)/TE'QDdfB:HqZ?Tpr;[c;!WrT4%MK[!*ZlFD*#ot@+X%pH((^iY"9JV`
!.k32!;?No!;Z['!<N?,#RqC_)]g(CrZ2Ii+X/'O)ANej#6Y)/V#Z)I\,[HK!<WK2$kX6n*ZlLI+!;[L
+sA!F'FtNT!s/Md!.k4@!/1CS!<NB/#7:tT(`XS=r?)Ik+Wh[@'+P<Q!s/Ll!.k3f!"&`.!sJu?&JZ0&
*W@)g+!2OD)&3\k#R(;2!Sd[,!.k1Z!!!$#!sAi9%MBKm)>kE\)Aj2%%LNCC!W`=o!.k3`!!rZ-!sJr<
%M9?hr"]SR'+k]^#R(;3!T3s0!.k4H!!rZ,!X&Z4$4RIVr"05H%L`[M"p=u.!M]XH!4Dk5!<E6)"U>>@
$iCD=$OR1F"U"l-!TX64!.k4A!!`N*!WrQ/"pb)4#mU\>"U"o/!W`>"!.k3S!!WH)!WiH,"T8N'"9JZ-
!r`5a!.k3&!:'Xa!WE0!"8r<#!N?'N!2fhh!U0T9!.k4/!;uqr!.k3&!.k3&!.k4@!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!:^&@!.k3&!.k3&
!.k3&!.k3&!.k4F!.Y~>

%%EndBinary
grestore
np
306.92 271.564 mo
306.17 271.564 li
306.17 251.927 li
306.92 251.927 li
306.92 271.564 li
291.825 245.942 mo
277.098 245.942 li
277.098 245.382 li
291.825 245.382 li
291.825 245.942 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[26.8364 0 0 30.4364 133.141 587.985 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 82 
/H 93 
/M[82 0 0 -93 0 93 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 82 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 82 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 82 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 82 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLZ.q>[r(bQ*4p^Au4Pm/NCPJcPECYQ*P]JcMeNg&K\(X8mhPhZ0k[p&K[EPlU7P_Z.FPJcNpn\c;F(
Mu\G0rrB8&ec::%[/eMPir>\PJcP'9YQ*ngJcMGDj8[C([K(mZeGufQ!!'5'JcOR+YQ+CuJcLr6nc-B(
_uPAh`rNdPo`'sPJcP]KYQ*8UJcN(VdJr,(U]>uHk5_^cmJqh=SH.gPb5]!PJcO4!Z2ak(KE-f.qu=)(
c2`Fr]`?(PlMm7PJcP?AYQ*V_JcM_Lg],h(XoP[+Y5m)Ph#F8PJcOj3YQ++mJcM5>l2Sg(]E!N`cN(?P
r;VNPK`M,PZN&;PJcN@^aoCQ(S,e-@mf9QkjoBu5V#]BPdf6QPJcOL)YQ+J"JcLl4oDcN(`W1Sj`;mXP
o)FgPJcPWIYQ*>WJcN"TYQ*)PJcN7[bl?c(T)aHCli=6hkl?;8U&a0Pci:?PJcOC&YQ+S%JcLc1pA_`(
aT-nm_>qFPn,JUPJcPNFYQ*GZJcMnQf)OJ(W;qMMiW-1^o)O@BQiQIP`W*XPJcO$q[f?4(M#`/.!<9;'
JcLZ.q>[r(bQ*4p^Au4Pm/NCPJcPECYQ*P]JcMeNg&K\(X8mhPhZ0k[p&K[EPlU7P_Z.FPJcNpn\c;F(
Mu\G0rrB8&ec::%[/eMPir>\PJcP'9YQ*ngJcMGDj8[C([K(mZeGufQ!!'5'JcOR+YQ+CuJcLr6nc-B(
_uPAh`rNdPo`'sPJcP]KYQ*8UJcN(VdJr,(U]>uHk5_^cmJqh=SH.gPb5]!PJcO4!Z2ak(KE-f.qu=)(
c2`Fr]`?(PlMm7PJcP?AYQ*V_JcM_Lg],h(XoP[+Y5m)Ph#F8PJcOj3YQ++mJcM5>l2Sg(]E!N`cN(?P
r;VNPK`M,PZN&;PJcN@^aoCQ(S,e-@mf9QkjoBu5V#]BPdf6QPJcOL)YQ+J"JcLl4oDcN(`W1Sj`;mXP
o)FgPJcPWIYQ*>WJcN"TYQ*)PJcN7[bl?c(T)aHCli=6hkl?;8U&a0Pci:?PJcOC&YQ+S%JcLc1pA_`(
aT-nm_>qFPn,JUPJcPNFYQ'+~>

%%EndBinary
grestore
np
299.68 271.564 mo
294.112 271.564 li
294.112 269.749 li
294.112 269.648 294.073 269.554 294.003 269.484 cv
293.932 269.413 293.838 269.374 293.738 269.374 cv
277.098 269.374 li
277.098 265.673 li
299.68 265.673 li
299.68 271.564 li
293.362 271.564 mo
277.098 271.564 li
277.098 270.124 li
293.362 270.124 li
293.362 271.564 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[6.54545 0 0 23.2364 133.141 595.185 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 20 
/H 71 
/M[20 0 0 -71 0 71 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
`;gDP#Rh7Y(E"&)&.AgJ!s&GJ!;$7%"UGMJ'GhW('bCcZ"Tnc+_#OuL#Rh7Y(E"&)&.AgJ!s&Gk!7LoY
"UGMJ'GhW('bCcZ"Tnc+_#OH=%L<IS'GhW('bCcZ"Tnc+_#OuL#Rh7Y(E"&)&.AgJ!s&G]!9!ng"UGMJ
'GhW('bCcZ"Tnc+_#OrK#Rh7Y(E"&)&.AgJ!s&B&_#OuL#Rh7Y(E"&)&.AgJ!s&GO!:Kmu"UGMJ'GhW(
'bCcZ"Tnc+_#OuL#Rh7Y(E"&)&.AgJ!s&Gp!6tQT"UGMJ'GhW('bCcZ"Tnc+`;oi:%g<4I&/5ou(_mSj
#R(;2!PnaH"UGMJ'GhW('bCcZ"Tnc+joF0:%g<4I&/5ou(_mSj#R(;2!PnaB"UGMJ'GhW('bCNW#R(;2
!PnaH"UGMJ'GhW('bCcZ"Tnc+fDt1:%g<4I&/5ou(_mSj#R(;2!PnaH"UGMJ'GhW('bCcZ"Tnc+q#JM:
%g<4I&/5ou(_mSj#R(;2!QkE;!"T5=$kO*h)&O)"$j["=!<L":%g<4I&/5ou(_mSj#R(;2!UBa;!"T5=
$kO*h)&O)"$j["=!<L":"9f&>&/5Hf)&O)"$j["=!<L":%g<4I&/5ou(_mSj#R(;2!Smb;!"T5=$kO*h
)&O)"$j["=!<L":%g<4I&/5ou(_mSj#R(;2!WE);!"T5=$kO*h)&O)"$j["=!<LLHo)K:)#Rh7Y(E"&)
&.AgJ!s&G=!"T5=$kO*h)&O)"$j["=!<MZidJsd]#Rh7Y(E"&)&.AgJ!s&H%!!!&=!##MA$kO*h)&O)"
$j["=!<E0#!<L.>'*SXM&/5ou(_mSj#R(;2!<<-$!p0L@!"B);$kO*h)&O)"$j["=r;cp#"2t6L"UGMJ
'GhW('bCcZ"Tno/!W`?)"iUHT"UGMJ'GhW('bCcZ"Tnc,!<WH0fDt=>'*SXM&/5ou(_mSj#R(;2!WiH.
$,llR"UGMJ'GhW('bCcZ"U"`*!X&`9q#JY>%0["G&/5ou(_mSj#R(>0!WiN2%E\\K!##MA$kO*h)&O)"
$j["=!WrN.#nOuT'*SXM&/5ou(_mSj#R(;3!s8`7&F0>N!##MA$kO*h)&O)"$j["=!WrN/$4t/V#R(JB
&/5ou(_mAh$j["=!WrN/$PC>X'*SXM&/5ou(_mSj#R(;3!s8`8&`!HO!##MA$kO*h)&O)"$j["=!WrN/
$PC>X'*SXM&/5ou(_mSj#R(;3!s8`8&cMdO!##MA$kO*h)&O)"$j["=!WrN/$PC\bpAbj1#Rh7Y(E"&)
&.AgJ!s/Q,"q)$^!##PC$kO*h)&O)"$j["=!WrN/$PDk.ec6?f#n7I](`=/*&.AgJ!s/Q,"q)$^!!<K6
%MB9f(`F8,&.AgJ!s/Q,"q)$^!##\J&/,it)As8$$j["=!WrN/$PCeeoDfO5%h]To)B0P0&.AgJ!s/Q,
"q)$^!##nV'c7i/*#]S($j["=!WrN/$PDt1df:$q()Rr0*?5q3&.AgJ!s/Q,"q)$^!!!iK)&jP9*?5q2
%grUF!WiH+"q)$^!#$7i*$$%>)]'.t$3gV7!WrN/$PDJ#i;aN0)]Kb9)Aj2$$jd(>!WiH+"q)$^!!!l8
)%%2s'bLo_#6Y,0!<`H+"q)$^!<*]E'GM/k%LWOG!s/K(!WrW7&_@$O!<!H6%h9!T#R1D5rW*-'!sT,F
`;oiE%giUK#6b54!W`9%!WrW6&GQ7N!;m'3"pG,3!WiB'!!*-'"ptp`!;uoq"TJT(!r`3*!!!$$!sJuA
`;o`9rW2rt"T\W*"UGS&!8ISM!W)j#!<E6)#7S3Equ?j#!WrW5[K$F2!<WH0g]6(/"9AN)!sQ(4!s&E(
"T8>2!<*!!!e:~>

%%EndBinary
grestore
np
294.112 271.564 mo
293.362 271.564 li
293.362 270.124 li
277.098 270.124 li
277.098 269.374 li
293.738 269.374 li
293.838 269.374 293.932 269.413 294.003 269.484 cv
294.073 269.554 294.112 269.648 294.112 269.749 cv
294.112 271.564 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[2.94545 0 0 17.6727 133.141 600.749 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 54 
/M[9 0 0 -54 0 54 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8N~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
300.826 255.189 mo
295.749 255.189 li
295.749 251.927 li
300.826 251.927 li
300.826 255.189 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[3.92727 0 0 5.89091 149.504 593.876 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 18 
/M[12 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~"9JT)!<E3%!<E3%"9S]+!<E3%!<E3%"9\f.!WiE)!WiE)"U,&4"9S`.!s8Z/#6tJ<"pG/6"U,)8#mq"G
#R:S>#7(VC$k3XS$OR1H$4@7O%hK<a%LigS$k<g\&ebrm&J#?]%hTHh'G_K#'G1lf&JGor()Ro+()%;n
',;?%(E+51(DRSs'GhW+(`OG6)&<o#'c7l1(`XP9)Aa/)(E+87)&s\<)]9G.)&jV=(`XS<*#fb5)]^"C
(`XS=*ZZ4?*?QFJ(E4D;+!)IE+!DgO~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
0 0 0 1 cmyk
%ADOBeginSubsetFont: SBTAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LBTODJ+Calibri gcheck setglobal} if
1 322 1 <000200ac0000048f050e0012001f0077401d3f2101131810014d13100f01
4d13140d014d13120c014d13180b014d13bb02320000001affe8b310014d
1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8ffe8b30b
014d1abb021100090018010cb20e511bb80126b10554003fed3fed012fe1
2b2b2b2b2bd4e12b2b2b2b2b31305d01140e022321222635113436332132
1e0207342e0223231133323e02048f56a5f0a6feee172929170125a8e89d
51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e89969b5
844afc113e80c100>LBTODJ+Calibri AddT42Char 
1 1538 6 <000100acfffa047e0511003d0085b3270f0f14b8ffe8b310014d14b8ffe8
b30f014d14b8ffe8b30d014d14b8fff0b30c014d14b8ffe8b30b014d14b8
0211401e1e0a2e2e321810014d32180f014d32180d014d32100c014d3218
0b014d32b802114010001e38520a2e0f270419225119550654003f3f3f12
17393f012fd4e12b2b2b2b2b32113310e12b2b2b2b2b322f33313025140e
022323222e0227012626272316161511140e0223222e0235113436333332
1e0217011e03173326263511343e0233321e0215047e0d151a0d371a2723
2315fe6820411c02020208131f18181f12082c1a521d271f1d11013a1d36
32311801020108131f191620120847141c12080b1d322702e0397d3b4896
4afcf3070d070505070d0704aa28220a17291ffdc83463605d2f4fab4f02
be070c090404090c0700>LBTODJ+Calibri AddT42Char 
LBTODJ+Calibri /CharStrings get begin
/g1 1 def
/g6 6 def
end
LBTODJ+Calibri /Encoding get
dup 36 /g1 put
dup 37 /g6 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LBTODJ+Calibri*1 [33{/.notdef}rp /g19 /g15 /g9 /g1 /g6 218{/.notdef}rp]LBTODJ+Calibri nfLBTODJ+Calibri*1 [0 -16 -16 0 0 0 ]msf296.73 265.8 mo($)shLBTODJ+Calibri*1 [0 -10.6667 -10.6667 0 0 0 ]msf300.73 255.957 mo(")shLBTODK+SimSun [0 -10.6667 -10.6667 0 0 0 ]msf300.73 250.352 mo(\000\001)shLBTODJ+Calibri*1 [0 -18 -18 0 0 0 ]msf279.82 297.128 mo(%)shLBTODJ+Calibri*1 [0 -12 -12 0 0 0 ]msf284.32 285.509 mo("#)[-6.30475 0 ]yshLBTODK+SimSun [0 -12 -12 0 0 0 ]msf284.32 272.9 mo(\000\001)shgrestore
gsave
-67.1928 792 mo
-67.1928 0 li
472.807 0 li
472.807 792 li
-67.1928 792 li
152.117 371.879 mo
132.235 371.879 116.117 355.761 116.117 335.879 cv
116.117 315.997 132.235 299.879 152.117 299.879 cv
171.999 299.879 188.117 315.997 188.117 335.879 cv
188.117 355.761 171.999 371.879 152.117 371.879 cv
eclp
193.971 375.964 mo
155.472 375.964 li
152.1 371.894 li
148.688 375.964 li
114.116 375.964 li
114.116 295.782 li
193.971 295.782 li
193.971 375.964 li
152.117 299.879 mo
132.235 299.879 116.117 315.997 116.117 335.879 cv
116.117 355.761 132.235 371.879 152.117 371.879 cv
171.999 371.879 188.117 355.761 188.117 335.879 cv
188.117 315.997 171.999 299.879 152.117 299.879 cv
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[80.8364 0 0 80.5091 28.7406 700.895 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 247 
/H 246 
/M[247 0 0 -246 0 246 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 247 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 247 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 247 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 247 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcM,;liD\=ScRpQJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcP?AJcLB&JcLB&JcLB&W;tu[pAfdFJcLB&JcLB&JcLB&b5h>=pB(6ppB(-ki;eH0JcLB&JcLB&JcLB&
li?n`r;up"qulWqquls#r;uisaoI"nJcLB&JcLB&JcLf2qZ6Zt!WrN-rri?*rW`?,rWr3(rWrK.rW`B+
rri<'rW;uuZ2jFqJcLB&JcLB&JcLB&]E%m2rW3]7!sA`1"U52:#RLeE$4@7N%1W:Hp^d?6&.K'W$k!CL
#mgkB#6k>8"9e`,rW<$!MZA>/JcLB&JcLB&JcOO*r;di=!WrN-"U,)8#RLeE$OdIS%hK<c',)&p'c%S[
(E4,*'bqDr'+tlg%h9$W$OR1H#R:P;"U"o0!Wr<$nGn.@JcLB&JcLB&JcLB&q>gKq*WcBF!sA`1"pYD?
$4I@R%hTEf'c%T&)&aG6*?H:ErZM+^rZE7(+!)FB)]BS2(D[`!&ePWa%1ERM#R:P;"9\f/!Wr?%fDpL'
JcLB&JcLB&JcM5>rW*]7!WrN-"U52;#n%.O%hTHh()Ii-%3-E2+X/0X-7:2j.4QhH/,h+!.j?Gm.4?Sl
-7'l\+WhaF)]9G-'G:ug%L`^O#R:P;"9S`-!r`58!:g,A!.k3&!.k3&!.k3l!;upD!WiH,"U52<$4I@S
&JGlq)&jS<+X89\.4Ql#/hf"81GgpG2>oE52uPWJ2)R3H1GU[=/hJV(-mp;c+Wh^D&/c9!'+k`a$jm:G
"pG,3!Wr<$QN2U;JcLB&JcLB&JcOp5rW+8G!WrQ/"pYGA$k<g]'c.`-*[)aS-n6c#0JYFA2`NfY4$5Yi
r]g?H!($QKr]_Yl4Zkee3B/rT1GUX:/1N%o,9\*J)&Eu"&.T*U#mUY<"9S],rW2osJcLB&JcLB&JcLB&
K`M)Q-NXAP"9o):$4ICU',;?'*?ZRR-n?o(1,V!M3]oSj5XIh+77B[98,c'U8cD7.7n6$;779L05X.Fp
3]K&T1,(:1-mg/]*?,h1'+bW^$4$k?"9S`-rW2!YJcLB&JcLB&JcLB&UAuD;!<N<)"9eu8#n.:T',;?'
+!N!Z.kWM32E3c]5<qP'#t7<S8P2WK9MJ7[:A@W`:+At49M7uM8Ou<>6pa.'4ZYP\1GCF3-R9iV)]0;'
&.T'S#R1G8!s/N)!QY93!.k3&!.k3&!.k3&!71]q!<E6'!sAc4#RV"O&eu6&*[2mZ/2&b93'08g6:=:5
8P2WL9hnJ\:f1*h;Y!cc;@QK#:f'q_9h\2P8Ol6<*'unR4#f)Q0.\Ou+s%[?'bV#d$4$k?"9S],!<Jem
JcLB&JcLB&JcLB&mJn^;!<N<)"9o);$P!^](E+;;,q(;u1H%9V5=.b-84lNL:/=\`;,U=k<)ifrn5fKf
-WF&D;c6Ii:esh\91_ZD6pa+#3ArZI/1;ef*?#_-&.T'S#6k;5!WiE(!JLN*!.k3&!.k3&!0$sc!<E6'
!sAf5#n.:a&JZ-&+=&<b0/GOJ4[;A'7nH?J:/Fec;c?Xp<E9$!qH*;kqH*Ys-rj8H<)Z[m;,9q]91_WB
6U3dq2D[!:-R0]Q(_mVm$jd.C"9S],!<MHcJcLB&JcLB&JcLB&WrW,"+T_`K"pYJD%h]Tp*?c^Y/i#=F
4[;A(84lQN:Jk"g<)cls<WH5#=5m?\=8l5D<E)pr;Gg4b9M.iF6U3dp2)6d5,p=9H'bV#c$3pb<!s8H&
ciEV:JcLB&JcLB&JcLB&fDtmO+T_`K"U>>B%h]Wr*[2s^0JkaN5=.e08ki&W;,U@m<E<0"=8H%[=o)8"
=!:UF<E)mp;,C"]8k;B;5<Ch]0.SCo*Z>e,%h&aL"U"o/rW/nsJcLB&JcLB&JcLB&o`--9!<N?+"U>>B
%h]Wr*[<'a0f:sS5t"489MSD^;cHat<rQ1u=P-dS=T2A<<`N.!;c-@d9M.fC5s74c0e=^t*Z>e,#nIFN
#6b54!W`=\!.k3&!.k3&!.k38!<*!/!WrT2#n%4U()e8>-nR1c2EO,i7S-6J:f1.j<E<.%=8Z1I=o;AD
='&F'<E)jn:JOPS7RB=#2DQj4,9Ig>&e59U"pG)1rW2NhJcLB&JcLB&JcLB&YlGmI!<N?+"pbSH&JZ3*
,:G-!2`j5k7nQHN;,U@n<`W:'rE/esdTQNN+BMWF<E2sq;,9kX7mfL&2_ls5,9@^;&Io-R"p>#0!<LaO
nc47AJcLB&JcLB&JcOX-*ruBD!X&Z3$4RO\)''nL/M]7H5X\+79i"Vb<)lt#=8c7C=o);"=<CUG<`N*t
;,9nY7moU(2_ls4+rqL7&.AmN"U"l.!<K;&JcLB&JcLB&JcLB&qZ%W;!<N?+"pbSI',MW3-S-u14$Z2)
92/5\;cQk!=8c76=oDG3=&r@%;c6Fd91MB84#RU(/1)M[(D@;e#R1D6!W`=b!.k3&!.k3&!.k3>!#GY:
!WiK.#7:nP'cJ2@.kikC5=A%8:/D*l<)lt#=8l=1=oMMD='&F&<)QOf91MB73]/T@,p+$?&If'P"U"l.
!<MopJcLB&JcLB&JcLB&[f@HM!<N?+"pk\K',V`7.5!G;5!qh5:/Fhf<E<1&=BOll``X?b=BAR)<E)jm
9hIoC4ukGP-mK`L'+YKX"p>#0!<LsUnc47AJcLB&JcLB&JcOg2)?Bj?!sJo:%1s?p+XS`q3'BSt8ki,[
<)lt#r`Hm;mofWl)HTs><)QOe8k)-13&3$3+<)(.%13=D!s/K(Z2fIVJcLB&JcLB&JcH\i!<N?+"pbSI
',Vc9.PNbB5Xe7<:Jt.l<`f9&W*0+%"BSW(;c4?+9M%Z<4#J]@,9@[8%grXI"9S]+!LNk=!.k3&!.k3&
!1s6/!<E6("U>>C&JZ6--S7,75!qh5:/Oqi<`f9&Ufe[>=BAR)<Duai91M?53AW66+<)%,$jd.A!s/K(
quD<KJcLB&JcLB&JcNF`)Z]s@!sJo:%MBU!,:P<)4@)G/9i+bf<``@)=Q<Pu=W:IF='&F%;G^([7R9*o
0.A+d(D72b#6b22!<M-Znc47AJcLB&JcLB&JcP!7)?Bj?"9f&=%hom',qLf35!qk7:Jt.l<``C*[TVcr
)H^*C<`N*s:J=;H4ub;K,p+!=%grXH"9JT)[fD![JcLB&JcLB&L&_;V!<NB="pk\L'cS;E/i>^V7S6BP
;cQk"=BLqn)-C!B<`N'p9hIl?4#JW<+WD.-$j[%?!W`=l!.k3&!.k3&!.k3G!#Ye=!sAf7%1sBs,:YE,
4[Vb6:Jt.l='&L+qH9@l)H^*C=&i3t:J=8F4Z>&D,97R4%1*4A!s/K'JcLB&JcLB&JcLB&^]52P!WrQ1
$4[[c*[N?n3Boo'9i+bg<``C*gf_*h(g'mA<`N'p9h@`;3AN*2*Z,M"$3p\9!WhB_nc47AJcLB&JcLB&
JcP0<)$'a>!sJo:%hfg'-7q&95t4LB;,gOs='/S/=lEL#=BJX+<E)gj91D3/1bC$r)&!Je#6b22!P8>`
!.k3&!.k3&!/gg_!<E6("UGJH'Fu**-ndJA6:X^F;H-[u=BL_hqcOb<=BAO&;GTtV69I.Z-Qj<A%grUG
!s/K(T`BZEJcLB&JcLB&VuRY8!<N?,#R_1Y)^6^b2a0W$9i+bg<``C*oN@M`'NeI=<`N'p9h@`:2_Z[)
)\ikk#R(;4!W`=V!.k3&!.k3&!.k3i!#5M8!WrT3$kO0o,:YE-5=J1>;,gOsr`IcTZ<@0/'j"C6;,0_P
5<(AI,9.F0$O?n<!W`>e!:g,A!.k3&!.k3&!.k4@!#GY:!WrT3$kO0o,:bN05XnCB;H-[u=BMS+gK>=p
=BAO&;GTqT5WLSM,9.I1$j["=!W`>;!.k3&!.k3&!.k32!"/f/!sJr=&/H93.l.Mn5t=RD;H6b!=BLPc
p/r/5=BAO&;GTqT5WU\O,TIR2$j["=!Wf(sJcLB&JcLB&JcMhO('+I="UGMJ(*+YO1HRlm9MeYf<``C*
mobfV%p2q8<`N'p9LhB11Fsdl('Y<X#R(;3!Jpf.!.k3&!.k3&!6>-T!<N?,#Rh7[*@*0m4$lG2:fC@q
=BNsRXB?9?=BAL$:eXAG4#8E5*>T1o#R(;3!UTmX!.k3&!.k3&!.k3&!;$7+!<N?,#7D(Y*@*0m4$lJ4
:fC@q=BMD&el`_i=BAL$:eXDH4#AK6*>T1o#6b22!Q+nh!.k3&!.k3&!0R<m!<E9+#7D(Y*@*0m4$lJ4
"]83!='/R\=n,W0=BJX);c$1Z69?tS,TIO0$O6e:!<K,!JcLB&JcLB&JcMtS'`e=:":#;F'c\JL1cn#p
9i4kj='/Si=cHPk=BJX);c-7[69?t1.jH#K%giOE!W`=]!.k3&!.k3&!.k3p!#5M8!X&]7%hos-.l07R
852r\<``C*bupuJ'j+R><`;gh83o<n.j>oH%LNCC!W`>l!:g,A!.k3&!.k3&!.k4G!#5M8!X&]6%MTg*
.Pa%O852oZ<``C*TiofH'j+R><`;gh7mT0k.O#cE%LE=B!W`>B!.k3&!.k3&!.k39!"o;6!sT&@',_rB
1-.]k9Mn_h=8uBU=m]?+=BJX);c$.X5rgYK+W1n%#R(;3!NQ3P!.k3&!.k3&!3uS=!<N?,#Rh=_+=Jp(
5Y"LE;cQn$=QWbC=U%u1=&i0q9FXHV3%ua&(_I/^"Tnf,O8sk4JcLB&JcLB&cN"X[!<WK1$P=0r-SIDC
7S?QV<EE:)a]YEB'NeI=<Du^e7R&gb-6<s7$O6e:!<Mfmnc47AJcLB&JcLB&JcPZJ'EJ49":#;G(*+\R
2EjQ&:K(7p=BM+sc<1i`=BAL$:J4,?2D$3q'b:WV"9JT)aoI"nJcLB&JcLB&QiIj%!WrW5%MTj-/2]RY
8l&>b='/R-=b9f@=VFn>=&i-o8jkcu/0c)J%LE=A!WfG(JcLB&JcLB&JcN1Y'*/.:"UGPN)BpXe4$uS7
;H6b"=Q3J;=TV]-<Y/5.:.[c61FaOc&e,*M!s/Le!.k3&!.k3&!.k4!!##A6!sAi:&JuW=0f_Nj9i4kj
='3FETNMq1=&r9t9h7Q10IS"Z&ISgH!W`>r!:g,A!.k3&!.k3&!.k4L!"o;6"9o2D(*4eU2aBl,:fLIs
=IE=7=V=h<<`Dmh7R&ga-63g3$3gV7!R(Oq!.k3&!.k3&!1Ns$!<N?,#n@Xg,V1f:78$HU<``E#=b9f<
=V=h<<Du^e76NLZ,9%:*#mCD4!O2WV!.k3&!.k3&!4W"B!<E9+#Rh=`+Y#906V:-P<EE:)hcYP6'3J@<
<DlUa6T[(Q+W(h##R(;2!L<_;!.k3&!.k3&!7Uu]!<NB/$4mso-SRPH852u]<`iJ@=e/\.=BJU';,'PH
3A;g%((^fW"9JW"!:g,A!.k3&!.k3&!.k1a!!*-'"UPYQ*$d*o5=S=D<*!(&Q<D72&m/49<)?7X5;k)=
)\`bg"Tnf,cN&OsJcLB&JcLB&ScBB(!<NB/$kaF$.Pj1T8l&Ad='56#Jm%)9&Qi+7;bp"R4>SH1)%d8^
"9JV1!.k3&!.k3&!.k3^!"o;6!sT)C(*4hW3C-22;H6e#=PR&2=oMP:=BJX);GKbK3A;g%((U`V!s/Lj
!.k3&!.k3&!.k4&!"o;6!sJr>',r2K2EsZ);,gRu=MJ"-=V=h=<`Dpi7R&d^,9%:*#R(;2!W2rg!.k3&
!.k3&!.k3'!!!$2!X&`9&JuW>1H\&t:K(7p=Hcn+=V4b;<Du[c6T[%P+;YUt#6Y)/d/\auJcLB&JcLB&
TE#Q)!WrT4%M^!20/u6g:/Y(n=S5gK=l3?o=BAL#9h7Q00-qSQ%LE:@!Wf_0JcLB&JcLB&JcNF`&HMq9
#7M4_+tGN778-NW<``DV=b9fR=V4b;<`Dmh76NIX+rLt##6Y)/RK.p>JcLB&JcLB&f`2Tb!WrW6%i-36
0fhWm:K(7p=M.e'=V4b;<Du[b696eJ*Yf1l"p4o-rW)KhJcLB&JcLB&JcLK)!W`?+%L<IU)C$gl5=\FF
<**1(O]fP(&Qi.:<)H@Z5;k&;)A3G`"9JVQ!.k3&!.k3&!.k3F!"f55!sT)C(*=q[4%)\;;cZt%o3$ZJ
h,t=l=&r6q8jbZq-m'38$3gS6!Or,]!.k3&!.k3&!58FE!<NB0%20[+/N5pc:/Y(n=OpW,=nl,2=BAL#
9h.H-/L25J$jZt;!Ls.A!.k3&!.k3&!8@Jc!<N?-$4n!q.5F"R92JSg='3%:Q!"`%=&r9s911lt.3B?:
$3gS6!<DZjJcLB&JcLB&JcLQ+"9AQ,#Rq.T)^I$p5Y+XJ<EE:_=he)N=BAL#:.RW//gMAL$jZt;!S%1%
!.k3&!.k3&!2KT,!<N?-$4n!r.5O(T92JSg=BP)rJm$i2&Qi.9<)?4U4>SE.((U`V!s/M7!.k3&!.k3&
!.k3d!"]/4":,DL)^I$q5Y+XJ<EE;P=b9fM=V+\:<DlR_5W:8?)A3G`"9JUq!.k3&!.k3&!.k4,!"f55
!sT&B(*=t]4@Dh=<*!+'\65"u&6N%8<)?4U4>J<,((U]T!s/H'o)O@BJcLB&JcLB&M#[_\!X&`:&fM'$
/N5pc:/Y(n=H$Cr=V+\:<DlR_5W:8>)A3G`"9JVU!.k3&!.k3&!.k3I!"]/5"UPYR*[id*6q^?U<`iJm
=b9f0=V+\;<`Dmg6p!+N*Yf.k"Tne;!.k3&!.k3&!.k3f!"]/4":#;H)'UUi5=eOI<EE;N=b9fK=V+\:
<DlO]5;k&:)%d5]"9JUs!.k3&!.k3&!.k4-!"]/4"UGPO*@<L&6VC6T<`iJ4=clhs=BJU':eF)90I@bR
%1!+<!WhonJcLB&JcLB&JcL]/#QXu/"ptnY+=d[S5"87E<EE:[=h@fJ=BAL#9h%<'.NfN<$3gS5!SII)
!.k3&!.k3&!2ff.!<NB/$kjR*00)?j:K(:q=RB7C=k?df=BAO%:J!i3/gMAK$jQn:!PJJb!.k3&!.k3&
!5edI!<WK3%Mg-71He0#;,p\"crks'nlZK*=&`$j76E=R*Yf.k"Tne!!.k3&!.k3&!.k4/!"]/4!sT,F
)'UUj5Y+XK<``D1=cZ\o=BAL#:.RW./0YoC$NgS8!WhupJcLB&JcLB&JcL`0#lt)1#RqIf-87Ia6VC6T
<`k/\\QKGF<`Dmf6TQnJ*"rbe"9JVX!.k3&!.k3&!.k3M!"]/3!sJuA(*>"_5"87E<EE;g=b9f,=V+\:
<DcI[4Z"T0((U]T!s&G;!.k3&!.k3&!.k3i!"]/4":#;H)'^^m5tOjN<``DL=b9fH=V+\:<`;db5rUA?
)%d5\"9JV!!.k3&!.k3&!.k40!"T)3":,GN*%!C%6q^?U='2b2NEHTj<`Dmg6p!(L*#&Mb#6Y)/pAfdF
JcLB&JcLB&NW9Ff!<WK3%i-9;1d4A39i=tm=GL%h=V"V9<DlO\4u=]1((U]T!s.-VJcLB&JcLB&JcMeN
&-2h7"q)"\,:tl@8P`8c=BOikJm$T+&6N%8;botN2_?3k&IJ^E!Wg(:JcLB&JcLB&JcNdj%fl_7#7V=d
-87MK92SYi=Nt!#=moK(=B8Bt91(`o-6*[-#6Y)/U]>uHJcLB&JcLB&iW'Ji!sJu@(*=t]5"87E<EE;-
=c?Ji=BAL#9h%9%.38X-%LE:@!VcYH!.k3&!.k3&!0.$e!<WN5&/ZTB2F'f."&i6%=GBtf=V"V9<`;aa
5W1/:(_@#X!s.0WJcLB&JcLB&JcMhO%fl_7#7D._,VM/F8l/Jf=Qin>=jgF`=B8Bt8jYNk,T7:'"p=u.
_#T&eJcLB&JcLB&`rHVN!X&c<'HJPV4@Mq@<EE;H=b9fE=V"V9<DcFY4>A3('Fb9M!Wf+tJcLB&JcLB&
JcOg2%flb9#n@^m.Ps=Z9i=tm=Kkqd=U8,2<DlO]4u=\m*u5=l"Te`#!.k3&!.k3&!.k33!"8l1"ptnY
+tPZ=8P`7d<`iIX=ghHD=BJU&:J!f1/0PiA$3gS5h#N$,JcLB&JcLB&X8ib3!WrW7&fN#K3C?D8<*!,a
=b9f(=V"V8<)?1R3A)Qq&dnmG!Wg.<JcLB&JcLB&JcNjl%fl_7#7V=d-S[_P9Mnek=Naj!=m]?&=BAL"
9LLrs-6*[-#6Y)/V>u2JJcLB&JcLB&j8]\k!X/i>'d"k]5"A=F<EE;+=c->e=BAL#9h%9%#:LW.%1!+=
!VueJ!.k3&!.k3&!0@0i!<WK3%i6B>2F'f/;cWm"K3>Tb%p2n6;bfkJ2(Kdc%g`CA!T!g.!.k3&!.k3&
!3H53!<E9,$5".#/N?'h:fLItk#m:=crgl]<`Djd5r^G?(_@#Y!s&G?!.k3&!.k3&!.k3m!"T)3!sT,G
)C7$t6VC9U='3UJJm%GC%p2n4:eO/:0-hGK$O-\7!N,pL!.k3&!.k3&!9F1k!<NB/$kjU.0g%lu;,p\"
Y$$Ta#$=r,;+sD?#VdYG'+>*K!Wi/uJcLB&JcLB&JcLo5%KQV6#RqLi-o4"U9i=tm!*FkVZrmoA=&i-m
7QiOU*>Aqg"9JV]!.k3&!.k3&!.k3Q!"T)3"UPYS+"B-485<)a='4TfJm$H'%p2n6;bfhI1b'R_%L<4>
!Q+nh!.k3&!.k3&!6G3N!<WK3%i6B?2aBr1;c[#B=b9fB=UnP7;botM2Cfmd%g`CA!N,pL!.k3&!.k3&
!9O7l!<E9,$4n(!/N?'h:fLItX]^H_"^"f):J*nY2_?3j&./UD!W)kK!.k3&!.k3&!0R<m!<E9,$P=:&
00)Bm:fLLuJm#E_%p2k3:eO/9/gD5G$3gS5!T3s0!.k3&!.k3&!3Q;4!<N?.$PFC)0KVZq;,p\"j]R1<
cWLc\=&`$i6oltI)\NM_!s/MA!.k3&!.k3&!.k3n!"T)3":#>K*%!C&78-QY='3RIJm%DB%p2n5;+sD?
0d[kR$jQn:!N6!M!.k3&!.k3&!9O7l!<NB/%29g21He3%;H6e#X]^H_"^"i+;GBRd4>J9)'+>*K!Wi3!
JcLB&JcLB&JcLr6%fl_7#RqLi.5X4Y9i>"n=Fs\^=V"V9<DlO\4YnK-'Fb<N!Wh3ZJcLB&JcLB&JcMqR
%fl_7#S%Rk.5X7Z:/b1q=QN\;=jL4]=BAO%:.IK).3935#Qt20_uPAhJcLB&JcLB&aoDqQ!X/l?(*>"`
5=eOJ<`iJG=b9fB=V"V:<`;a`5;ao4((LTR!Wf5"JcLB&JcLB&JcOp5%flb9#nIgp.lKX`:K(:r=KP_^
=Tqo0<`;db#s^?t+;PFn"Te`&!.k3&!.k3&!.k36!"T)4"UP\U+Y5Q;8P`8c=BU5YZ<7Z><`;db5W1,8
(CpfU!s.<[JcLB&JcLB&JcMqR%KQY8#nIjr/2ojd:K1@sjB7(;c<1WZ<`Djd5rU><(CpfU!s-=?JcLB&
JcLB&JcNpn%KQY8$4n$u/N?$f:fLItaB=*tl<+U!<`Djd5rU><(_6oV!s,>#JcLB&JcLB&JcOs6%fl\5
"ptnY+tYc@8l/Jf=KGY\=Thi-<)?-m5rUA>(_@#X!s/<"JcLB&JcLB&JcLu7&-2e6"ptnZ+tYc@8l/Jf
=BU5YZ<7Z><`Dmf69$P@(_@#X!s.<[JcLB&JcLB&JcMtS%fl\5"ptnZ,:tlA8l/Jg=QEV:=jC.[=B8Bt
8jYKh+rCju"p4nE!.k3&!.k3&!.k3o!"T)2!sT)D)'^^m6:t'R='3OHJm%AA%Tlb2:eF&6/Ku#C$3gS5
VuVDLJcLB&JcLB&k5Z"n!<WN5&/c]E3'p56<**2'=bg,_=B8Bt8dRgD/Ku#C$3gS5quD<KJcLB&JcLB&
P5l-p!<WN5&/cZD3'p56<*!+(Jm#B^%Tlb2:eF&6/Ku#C$3^M4huJ?/JcLB&JcLB&Y5f(6!<WN5&/ZTC
3'p56<*!,^=b9f%=UnP7<)?1Q3%Z<k&./RC!Q4ti!.k3&!.k3&!6P9O!<WN5&/ZTC3'g,4<*!,B=b9fA
=UnP7<)6(O2_6-i%g`CA!N6!M!.k3&!.k3&!9O7k!<WK4&/ZTB2aL#3<*!,&=bg,_=B8Bs8I7[A/0Pf?
#mCD3quD<KJcLB&JcLB&OoQ!n!sJuA(Ek=g5tOjN<`iLV=gD0?=B8?r8O,0a+VtXq"Tne`!.k3&!.k3&
!.k3R!"T)4"UP\U+=f?88P`8c=BOZfJm$E&%p2q7;boqL2Cfmc%g`C@!Q4ti!.k3&!.k3&!6P9P!<NE2
%Mg0;2*a].;c["&a]X3ulWFa#=B8?q83\s]*u5=l"Te_'!.k3&!.k3&!.k45!"T)3":,JP+"B-47nuu`
=BM\.Lfjm`=B8?q7gV@9.3B97#Qt20quD<KJcLB&JcLB&OoQ!n!X&c<'cne\5"A@G<``CT=gM6A=BAO$
9h%<&-ls'3#Qt20huJ?/JcLB&JcLB&XoJt5!X&c<'HJSX4[r.D<EE;a=b9f&=V"V9<DlO\4YeB*'FY3L
!Wg4>JcLB&JcLB&JcNpn%fl_7#7M7c-SdeQ9N"kl=NO]t=mK3$=BAL"9LV&u-6*[-#6Y)/VuVDLJcLB&
JcLB&jo>nm!WrZ9&fW,N4%)b><EE;)=bp2a=BAL"910(I0I7YN$O-\7!W2qL!.k3&!.k3&!0R<m!<N?-
$PF@'002Hn;,gV!Jm#E_%p2n4:eO/90-hGJ$O-\6!T3s0!.k3&!.k3&!3Q;4!<E9,$5".#/iZ0i:fLIt
j]R1<cWLc\<`Dmf69$P@)%[,Z!s&G@!.k3&!.k3&!.k3m!"K#3"UYeX+Y5Q<8P`8c=NO]t=mK3#=B8?r
8O,0b+VtXq"Tne'!.k3&!.k3&!.k44!"T)3"UP\T+=]6585<)a='2V.M-1$b=&r6p83[A;.N]E9#mCA2
qZ)3JJcLB&JcLB&OT5jl!X&c='cne\5"8:F<EB0&K3>Qa%p2n5;GBVD1FO:Z%1!(<!T*m/!.k3&!.k3&
!3H53!<NB/%29g11-A!!;H6e#k#m:=crgl]=&i*k76E:P*"r_c"9JVA!.k3&!.k3&!.k3m!"T)3!s]2H
)^R1!6q^BV='3UJJm%GC%p2n4;+j8;0I7YN$O6b8!N,pL!.k3&!.k3&!9F1k!<E9,$5".#/ic6j:fLIt
Y$$Ta#$=o*:eF&6#VI>>&IJ^E!<N&tJcLB&JcLB&JcLl4%06P7#nRps/2fab:K(9o=G'b`=UnP7;boqL
2Cfpe%g`CA!T!g.!.k3&!.k3&!3?/2!<NE1%Mg-91d4E);H6e#k?3C>d9-u^=&i-m7m8aY*u,7k"Te_A
!.k3&!.k3&!.k3l!"T)3":,GN*@EU)78-TZ='3XKJm%JD%p2n5;+sD@1++(V%0m";!N#jK!.k3&!.k3&
!9=+j!<NB/$kaL*0KMQo;,gV!Y??`c#?Y&,:eO/:0*`dB&dnpI!Wi,tJcLB&JcLB&JcLl4%06M4"ptq[
,:tl@8P`7c<`k#X[93uA<`;dc5rUA>(_@#Y!s.3XJcLB&JcLB&JcMhO%flb9#nIgp.Q'F\:/Y+o=Qin>
=jgF`=BAO$:.IN+.NfK;#mCD3_#T&eJcLB&JcLB&`rHVN!X&c<'cnbY4[i(B<EE;H=b9fE=V"V9<DcFY
4YeB*'Fb<N!Wf+tJcLB&JcLB&JcOg2%fl_7#7M7b,qqAI92JSg=Kkqd=U8,1<)?4T3\Mc`)\NPa"9JW"
!.k3&!.k3&!.k33!"8l0!sT)E)'UXk5tOiS;c["&L0:ug&6N%8;botM2_6-i&./UD!Wh*WJcLB&JcLB&
JcMeN%flb9#nIdn.Ps=Z9i=tm=Qrt?=jpLa=BAL#9h.B(.3B<8#mCD3^]8rdJcLB&JcLB&`W-MM!X&c<
'HJPU4@Dk?<**2H=b9fF=V"V9<)H:V4#&'%'Fb<N!Wf(sJcLB&JcLB&JcOd1&-2h8"q)%^,VD&C8l&Ad
=BMk3NEHTj=B8?r8O>Bh,8gXs$O-\7!VcYH!.k3&!.k3&!0.$e!<E9+$4dpr.lBO]"AVip='15\\60AF
=&i-n7mAj\+;YOp"Tnc+g]2p+JcLB&JcLB&W;mG0!X&c<'HJPV4@Mq@<**2e=b9f+=V"V9<)H=W4>A3(
'Fb<N!Wg%9JcLB&JcLB&JcNai&-2h8#7D._,VD)D8P`8c=BNmPJm%VH&6N%8;botO3%cHp&ISgH!Wf%r
JcLB&JcLB&JcOa0&-2e6"ptnX+=f<67nll]='2e3N`c`l=&i-m7m8d[+;YOk#mLJ4!VZSG!.k3&!.k3&
!/pma!<NE1%29g10foP,92JSh=GU+j=V"V8<)?4U4#&*''Fb<O!Wh!TJcLB&JcLB&JcM_L&-2h8#7D._
,:tl@8P`8c='4flJm$Z-&6N"7;bfkL2_?6l&ISgH!Wg"8JcLB&JcLB&JcN^h&-2e6"UP\U+=]337SHZZ
='3gPJm%YI&6N"6;+sGB1FXC]%g`CA!<JnpJcLB&JcLB&JcO[.&-2h8#RqIf-87JJ8l/Jf=BMt6OBE#p
=B8Bs8jbWm,odR,#6G#0!VHGE!.k3&!.k3&!/gg_!<N?-$5"."/-e't7nll]='1>_]3,\I=&i-m7mAm^
+W(at"p4o-f`6U(JcLB&JcLB&V>q,-!sJu@'cnbY4@Dh=<*!,g=b9f.=V"V8<)?4U4#&*''b1KQ!s-%7
JcLB&JcLB&JcNXf&-2h8#7M4`,:ti>85<)a='3mRJm%_K&6N"6;GKbJ2_?6m&dnpI!WeqoJcLB&JcLB&
JcOX-&-2e6"UP\T+"9!/78-QX='2n6O]`/r<`Dpi76E@T*u5@n"U"c*oDjICJcLB&JcLB&M#[_\!X&c<
',q6(/iZ-g:K(:q=H$Cr=V+\:<`;dc5r^JB)\WVb"9JVU!.k3&!.k3&!.k3I!"]/4!sT)D(Eb1a4[r+B
<**2j=b9f0=V+\:<)H=X4Z"W2(D$oX!s/M8!.k3&!.k3&!.k3d!"]/4"UGPO*$m6u6:jsO<``DQ=b9fM
=V+\:<`;dc69-\F*"rbe"Te^r!.k3&!.k3&!.k4+!"f55!sT)D(a1@c5"84C<**1(\QP/"&Qi.:<)H=X
4Z"W3(_@#Y!s/Mo!.k3&!.k3&!.k3+!!E<)"UGPF'HAGQ3C6;5;cZt%N`j,"&6N"7;bfnM3A2Zu'Fb<O
!s-pPJcLB&JcLB&JcMPG&HMq9"q)"[+Y#<378-QX<`iJp=b9f3=V4b<<`Dpi76NIW+;bXs"p=u.\H%3]
JcLB&JcLB&^AniH!<WK2%29d.00)<i:/b.o=OpW,=nl,3=BAL$:.RZ10-qSP%1!+>!<J_kJcLB&JcLB&
JcOL)&HMq9"q(tZ+=]3278$HV<``D8=dE2(=BAO&:eO2=1FaL`&./UD!W`9$nc47AJcLB&JcLB&L&_;V
!<WK7#RqIf,q_/B85<&_='1Pe_-%@P=&i-n83f*d,T@C+#R(81!Rq+$!.k3&!.k3&!20B)!<N?-$4n!q
.5O(S92JPf='5)tJm$r5&Qi+8;bp"Q4#/3+(D$oX!s/M4!.k3&!.k3&!.k3a!"o;5!X/i<',r2K2Es]+
;,gRu=P6i/=o2>7=BJU';,'ME2D$-l'+>-M!W`=k!.k3&!.k3&!.k4'!"f55!sT)C(*4hX3^QD6;H6e#
]ig_*&Qi+7;GTkN3\Vp&((U`V!s/N%!:g,A!.k3&!.k3&!.t7O!>#;8#7M4_+tGN678$HV<``Ce=i=GT
=BAO%:eO5?1b0^e&e#!J!Wg[KJcLB&JcLB&JcMDC&ci%9"UPYR*@3?u5Y"OG<E<4(pK<)NiE6dq=B8F!
9h.H./gVJO%LE:@!Wf\/JcLB&JcLB&JcN@^&HMq9#7D+[+=T'-6V1'P<EE;W=b9fT=V4b;<Du[b6T[%O
*u>Ir#6Y)/QiM^<JcLB&JcLB&ec6<`!<WK2%20X)/2]U[92JPf='37@RopA+=&r6r91;$%/0c&G$j["=
!<N&tnc47AJcLB&JcLB&JcHGa!<N?-$4djl-8.>D7nli[<`iIi=iXYX=BJU';,'PG3%lU!'b1NS!s/ML
!.k3&!.k3&!.k3A!##A6!X&`9&JuW>1-7ip:/Y(n=BPE&Jm%/;&m/7;<DlR`696kN+;b[u#6Y)/Z2fIV
JcLB&JcLB&\,[-B!<WK2%20X)/2]RZ92JPf='4<^Jlrai=BAL$:eF,=1b0ag'+G3N!s&Fg!.k3&!.k3&
!.k4"!"o;6"9o2D'ceSQ2a9c*:fLIs=Mn:5=V=h<<`Dmh7R&ga,odX1$3gS6!VcZc!.k3&!.k3&!.k3&
!<)s3!<E6)#7D(Z+"/j(5tF^I<*!(&R9@[8'3J=:<)H@\5rgVI*u>Ir#6Y)/!R1Ur!.k3&!.k3&!1Em$
!<E9+#Rh=`+Y#906V1$N<EE:)rE4_Tk?/I#=B8F":.[f71FaOc&e#$L!s&G,!.k3&!.k3&!.k3Y!##A7
!sT&A'H88J2*F?":K(7p=BOQcKinIZ=B?&6;GTnQ4Z"]7)\`bg"p4o-P5p17JcLB&JcLB&d/Xj]!<NB.
$4dmm,q_,?7S?QV<``C*a'#->'3J@<<Du[d76WU^,om^2$3gV7!VHH`!.k3&!.k3&!.k3&!;ca1!<E9*
#7D+[+"&a%5Y"LE<*!(&=IiU?=VOt?=&r6r9L_9,0IIqY&ISgH!s&GF!.k3&!.k3&!.k3;!#,G8!sJr>
&fDf@0fhTj9i4kj='/UW=mB-'=BAO&;+sJG3ADs*(_R5_"Tnf,XT3qQJcLB&JcLB&Z2bO=!WrW5%20X(
.Pj.Q852r\<``Db=bp2a=BAO&;,%Kj5rpbN+rV+(#mCD4!K[;5!.k3&!.k3&!6tQY!<E6)"pthS)^?ji
4@;\7;,gRt=NXdC=VOt><`Dpj84#Bo.jGuI%LNCC!W`>n!:g,A!.k3&!.k3&!.k4G!#,G7!X&`8%i$'0
/2]OW8PW/_<``Cr=j^@d=BAO&;,0\M4>\T7*#/tk#6Y)/!QP1l!.k3&!.k3&!0dHq!<E9+#7D(Y*@39p
4[Ve9;H*]u='1/ZmTC6+=&r9u:.[f82(^*p((^iY"9SZ*WW7VNJcLB&JcLB&Y5f7;!WrT3$kX9s-8%2>
6qU3P<*!(&kuj!K$<UD3<`Dsl8OP^!$8!PF(D$u\"Tnf,N<"P1JcLB&JcLB&aoE.W!WrT3$kX9s-8%2>
6qL-O<*!(&=O1-M=VY%@=&r9u:.[i:2D-<t(D.&]"Tnf,mf;nYJcLB&JcLB&JcLB&o`,a.!<N?,#n.F`
+"&[!4[_k:;H-[u=BMD&el`_i=BAO&;,0\N4Z4o>*uGRu#R(;3!Q+nh!.k3&!.k3&!0I6k!<E6)"pk_O
(`t(W2EaG58PW,^<``C*MHTOR(0F[?<`Dpk8OGX!/g_YW&e#'N"9JT)VZ;;KJcLB&JcLB&X8j":!<NB.
#n7La+!rTu4[Ve8;,gOs=BOuoO]`/r=BAL$;,'VL4Z4o>*uG4q%1*4A!W`=Z!.k3&!.k3&!.k3k!#>S9
!X&]6%2'L"-8%/<6V'pJ;cQn$=OUEV=oMM;=&i0q9h7W62(g3t(_R8a"p=u.!UKgW!.k3&!.k3&!.k3&
!:^%*!<E6)"pk_O(`t(V2*=2q9MeYf<``C*W`e(Z(Kad@<`N'p9LhE21bC$q(_R8a"p=u.!Pe\e!.k3&
!.k3&!0$sc!<E6)"pk_O(EOk2/2TFS7nZWU<*!(&=H?V[=Vk1B=&r9u:J4/C3]&B6*Z#Ft#mLM6!<Jqq
JcLB&JcLB&JcM_L(BFO<"9o/A&JlH5/2K=P7S6ER<*!(&=S#[]=VFn>=&i3s:.du@3AN*1*>]:r#R1A6
!W`=V!.k3&!.k3&!.k3g!#P_;!X&]5$kX6p,:YE-5=A(;;,^Iq='/SX=gV<K=BJX*<Du^g8OPd&0e+Cf
((gr\"U"l-!U'OS!.k3&!.k3&!.k3&!:9b'!<E6)"UGMJ'cS>G0K2-^85)iX<*!(&=Kblc=Vt7C=&r9u
:J=;H4Z>&D+r_7.$j["=!W`>7!.k3&!.k3&!.k3-!!WH)!WrT3$PEsa)BgI\2*=/o92ADa<EE7(=I!%g
=W(=D=&r=#;,0bR5s$qV-Qj<A%grXH!s/K(T)aHCJcLB&JcLB&U];85!<N?,#7D%U)':1V1HI`h8PN#[
<E<1'=SZ*i=W(=D=&r=":eaMM5<1MN-6F*=%LNFE!s/K(JcLB&JcLB&JcLB&^Ao/Q!<N?+#7:qR(EFbN
0fM6_85)fW<)lt#=BOH`\lfqR=BAO'<)QLc7mfEu0e+Cg(D7/a#6Y,1!<M6]nc47AJcLB&JcLB&JcP$8
(]aX=!sAf7%1s?q+t,*%4$c>.9i+bf<`f9&[TVcrr`C"=<`E!o9hIi>4#JW=+WD1/$jd+@!s/K(\,_*\
JcLB&JcLB&KE2#Q('4UC#Rh7Y)B^@X1,qHb85)fV;cQk"r`Ggrr`B/%(KOO7;,9hU6U!Ib/0uAU'FtQW
"p=u.!La"?!.k3&!.k3&!1s6/!<E6("UGGF',V`7.5*P?5t+C?:f:7m<`f9&Ufm\!)-9j=<)QOe8OYm+
2(pC'*>]=u$3p_:!W`?"!.k3&!.k3&!.k3&!4i.K!<E6("U>>C&JZ6--7go35!qh5:/Oqh<``B%=Q`i(
=oMMA='&F%;c-:_7m]?u1+Xap)ANhn#mUV9!W`>Z!:g,A!.k3&!.k3&!.k43!#kq>!WrQ0#R_.V(`ahM
0/YdU6qC!I;,^Iq=',B'^00o-r`C+@=&r=";,0eU6pE^i0.A+d(_[Df#R1D6!W`>.!.k3&!.k3&!.k3&
!<)s;!<E6("U>AD&Jc<.-7gl14@)D-9M\Ma<E<1&r`HC-r`BG-=&r:!;,9kW&k,)K2_cg/+;tt,%13=D
!s/K(PlQC9JcLB&JcLB&RK+-)!<N?+"pk\K',V`6-n[;84[MV09i"Uh;cHdu=8l=/=oMMC=&r@$;c-=a
8Oc$03&<-6+rqL6%gr[J"9S]+!VZSG!.k3&!.k3&!.k3Y!$2.A!WiK.#7:nP'cJ/>.5*M<5!h_29M\Ma
<)lt#=8l=k=j'tI=<:OF<`N*t;,9kW7RB:!1bU:'*Z5\)%13=D"9JW*!SRPE!.k3&!.k3&!.k3&!8[\s
!<E6("9o,>%MBNr+=/Kk2**of7S-9L;,U@n<``B$=NFY@=oDGD='&F&<)QRh9M%]?4utPS.O?2V((q)b
#R1D6!W`>(!.k3&!.k3&!.k3&!;QU;!<E6'!sJo9$kF!g*$HXZ0JtmT6:FI>:/Fhe<)lt#=8c7@=oDG8
='&F&<)Z[k:.n/I69[Ce0InIZ+WM:3%h&aL"Tnf-!<J8^JcLB&JcLB&JcM#8&HMn6!sAf6$4RO\(`abH
.kigk3B]Ys84uZQ;,U@n<`W:'rE.9HrE(4E=&r@%<)QRh9hIrF5s74b0InIn*#KA$%13@E"9S]+!V$/A
!.k3&!.k3&!.k3S!<*!?!WrQ0#R_(R'Gqi7-7^`+3'9Gn7S-9K:f1.j<E<0"=8Z2"=kQsU=T2AC<`W4"
;c-@d9M%]@5Wh"_0.J:l*>fJ&%13@F"9S`)!Rq,?!.k3&!.k3&!.k3&!8%8r!<E6'!sJo8$P!a`)''kH
.P<J84$Gu"84lQN:f1.i<)lt"r`Au!i*#qZs&UII<`W4";c?Oi:/"8M77'1!2_m!8,p=6F'bLo`#R1G7
!WiB'VZ;;KJcLB&JcLB&JcP?A,ln#J!sAc4#n%4T'Gqf4,Ub6!2*!c`6UaO<9MSA\;H$Op<E<0!=8,hf
=nc%s<utCC<E3!s;Gg4b9M.iE69dRl2)$U1,Tn'D'G1f_#mLV<"9S]+!Jpf.!.k3&!.k3&!0.'Y!=/`/
"9f#:$OmXd'Gh]0+sncl1,_-U5XIn08P;cQ:f1+h<)cjtr`8qulra0er`1:E<E)pr;Gg7c9hS&J77'7&
3ArWF.OH>\)Aa%u%1<II"U"o/rW2<bJcLB&JcLB&JcLB&VuZet+p%iL"U>;?%1j0g)''hF-nI#-2E<la
6:=:68k_rS:Jands&8qsr`/hrp/h,lr`(:E<)Z^n;,C%`9h\/M7RTR-4?5;U0.SFr+<277&eGKZ#R1G8
!s8H&blI;7JcLB&JcLB&JcLB&d/a.H-NXAQ"U55>$k<j`(E+><,q(;t1,V$Q5!VG&7S$*D9MJ8X:f("e
;Z0Pb<;f`(;Gp@g:esh\9M7rJ7N+Z]5X%7h2)6g9-m^#X)Aa)"%L`[M"pG,3!r`4n!.k3&!.k3&!.k3&
!:'Xa!@\'P!sAf5#n%1R&eu6&*[2jX.kWP52E<i^5=%Y*7S$*C92&#R:/4S\r)!>hqbS_;:JOYZ9MA)O
8Ol6=6U<q"4#o2U0eOt),U"3J(_mYp%1<II"p>#0!r`4P!.k3&!.k3&!.k3*!<*!!![e$O"9f#9$4ICU
',;?'*Zu[S.4d)+1Gq-Q4?Ynp6:4.07Rp!?8P/nRqFgf[-qR!$84Q-<6pj:+5<V+i3&NKH/h8@t,9S!G
(_mYp%L`[M#6b54!Wr?%irFZ2JcLB&JcLB&JcMGDrW*o=!WrQ/"pYGA$k<g]'c.`-+!DmV-n?l&0f'7r
2`Ni[4?Ykm5X@\&6MNnr6:*t(5X.Fq4?GS`2`3BG0.e\&-6jZU*#TP-&eGN]$4$k@"9\f.!r`5>!:g,A
!.k3&!.k3&!.k3l!<*!H!WiH,"U52<$4I@S&JGlq)B9e@+s\K`.P*/)0JYF@2)[BP3&ioYrAsp<'0%s1
2`<NM1GUX;/M&A"-6scX*YBA1(DRSq%h/pS#R:P;"9S],rW/>cJcLB&JcLB&JcLB&iW/oX,6@rL"9eu7
#RLkI%M03c'c.`+*$-1F+s\H^-n-Vr/1iG+0)I=$/g2eu/1W2!-mp;d+sA$L*#]Y1'b_/i%L`^O#R:P;
"9S],r;lZnJcLB&JcLB&JcLB&JcPZJrW3!"*WlNK"U52;$4@7P%hK?e'G_K&)B0Y:*ZlLJ+sJ6VqBR1.
,9e<T+<MXF*#fe6(D[\u&eGQ`$k!@I#6k>7"9S],r;kROJcLB&JcLB&JcLB&PlUa`%KZ\6!sAc2"pYD?
$4@7O$k<dZ&J>`k'c%T%(`<5ir#5PP)]0D.()@W!'+tlg%h9$W$OR1G#6k>8"9S`-!rW/2!:g,A!.k3&
!.k3&!.k3a!;urt!YYY<"9\l4"pYD?#mq%J$k3XU%hJXNp_!K:&.]9]%1N^R$OR1H#R:P<"U"l0!sAN(
r;hiWJcLB&JcLB&JcLB&ec>UKrW<'$rri?*rs&K.rWrN1r!N?0r!NH1rWrN/rs&K,rri<'rW;uuli;V;
JcLB&JcLB&JcLB&mK!+br;up"rWN0'oEP6trWN0%r;uisbQ*4pJcLB&JcLB&JcLN*r;lluq?$-gq?$Ko
WrV\jJcLB&JcLB&JcLB&WrV&Yq#H!HJcLB&JcLB&JcLB&]E%X+dK"k!JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcP?AJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN@^J,~>

%%EndBinary
grestore
np
155.472 375.964 mo
148.688 375.964 li
152.1 371.894 li
155.472 375.964 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[4.58182 0 0 7.2 28.7406 739.513 ]ct
snap_to_device
<<
/T 1
/W 14 
/H 22 
/M[14 0 0 -22 0 22 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
472.807 875.709 mo
472.807 -84.1818 li
-67.1928 -84.1818 li
-67.1928 875.709 li
472.807 875.709 li
clp
152.117 371.879 mo
132.235 371.879 116.117 355.761 116.117 335.879 cv
116.117 315.997 132.235 299.879 152.117 299.879 cv
172 299.879 188.117 315.997 188.117 335.879 cv
188.117 355.761 172 371.879 152.117 371.879 cv
cp
false sop
0 0 0 .807065 cmyk
ef
.75 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
152.117 371.879 mo
132.235 371.879 116.117 355.761 116.117 335.879 cv
116.117 315.997 132.235 299.879 152.117 299.879 cv
171.999 299.879 188.117 315.997 188.117 335.879 cv
188.117 355.761 171.999 371.879 152.117 371.879 cv
cp
0 0 0 1 cmyk
@
0 0 0 0 cmyk
%ADOBeginSubsetFont: SBTAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LBTODJ+Calibri gcheck setglobal} if
1 4466 16 <00010035fffa058403bc004500deb90047ffc0403d0f014d38080c014d29
380137080c014d252e01262101262001261f01261e01261d01271c012804
012903013a3b013b3a013b2d013c2c01102015014d10b8ffe0b310014d10
b8ffe0400a0d014d10200c014d100fb8ffe0b310014d0fb8ffe0400c0d01
4d0f200c014d0f414910b8ffe040200f014d3f104f106f107f1004104012
164810334925493a902c012c200f014d2cb8ffc04010131648672c772c02
452c012c174c094c003f3fd55d5d2b2b5dc43f3fcd2b5d2b3f012f2b2b2b
2f2b2b2b2b3130005d5d5d5d015d5d5d5d5d5d5d5d5d2b5d2b2b01140607
010e0323222e0227032707030e0323222e022701262635343e0233321e02
17131737133e0333321e0217131737133e0333321e0205840405fef7030d
17281e1f2a190c03bd0202af030d1a291e1f27190c03fef9050408132017
1c22120803d90202c70209121f19181f120802d70201d6020913211a181d
1107039f07140ffca90b0e080304080e0a028d0909fd730b0e080304080e
0a03570f1407090b070203070d09fd1a090902e6090d070303070c08fd18
090902e6090d070302080a00>LBTODJ+Calibri AddT42Char 
1 2942 11 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>LBTODJ+Calibri AddT42Char 
LBTODJ+Calibri /CharStrings get begin
/g16 16 def
/g11 11 def
end
LBTODJ+Calibri /Encoding get
dup 38 /g16 put
dup 39 /g11 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LBTODJ+Calibri*1 [33{/.notdef}rp /g19 /g15 /g9 /g1 /g6 /g16 /g11 216{/.notdef}rp]LBTODJ+Calibri nfLBTODJ+Calibri*1 [0 -28 -28 0 0 0 ]msf159.968 359.803 mo(&)shLBTODJ+Calibri*1 [0 -18.6667 -18.6667 0 0 0 ]msf166.968 339.787 mo("#')[-9.80734 -9.80734 0 ]yshLBTODK+SimSun [0 -18.6667 -18.6667 0 0 0 ]msf166.968 310.366 mo(\000\001)sh2 lw
245.391 571.551 mo
225.509 571.551 209.391 555.434 209.391 535.551 cv
209.391 515.669 225.509 499.551 245.391 499.551 cv
265.273 499.551 281.391 515.669 281.391 535.551 cv
281.391 555.434 265.273 571.551 245.391 571.551 cv
cp
0 0 0 1 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: SBTAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LBTODJ+Calibri gcheck setglobal} if
1 5186 18 <00010022fe94037c03bc00240052b9001bfff040350b014d371b01291b01
18180b014d261801260e360e022709011a400b014d3a1a0119380b014d3b
19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b5d2b015d
5d5d2b5d5d2b2103060623222e023713262627012634363633321e021701
33133e023332161614070233780631321a201102067c091003febf081024
1e1e22140905010103f8061122201c241106feb51011050c140e01390412
0a035c15180e0503080f0dfd2e02d6130b05050e1812>LBTODJ+Calibri AddT42Char 
LBTODJ+Calibri /CharStrings get begin
/g18 18 def
end
LBTODJ+Calibri /Encoding get
dup 40 /g18 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LBTODJ+Calibri*1 [33{/.notdef}rp /g19 /g15 /g9 /g1 /g6 /g16 /g11 /g18 215{/.notdef}rp]LBTODJ+Calibri nfLBTODJ+Calibri*1 [0 -20 -20 0 0 0 ]msf253.391 546.881 mo(\()shLBTODJ+Calibri*1 [0 -13.3333 -13.3333 0 0 0 ]msf258.391 537.829 mo("#)[-7.00525 0 ]yshLBTODK+SimSun [0 -13.3333 -13.3333 0 0 0 ]msf258.391 523.818 mo(\000\001)sh323.898 251.927 mo
318.917 251.927 li
318.917 242.764 li
323.898 242.764 li
323.898 251.927 li
318.167 251.927 mo
312.116 251.927 li
312.116 242.764 li
318.167 242.764 li
318.167 251.927 li
292.807 228.691 mo
291.825 228.691 li
291.825 215.818 li
318.167 215.818 li
318.167 221.491 li
292.807 221.491 li
292.807 228.691 li
323.898 221.491 mo
318.917 221.491 li
318.917 215.443 li
318.917 215.343 318.878 215.249 318.808 215.178 cv
318.737 215.107 318.643 215.068 318.543 215.068 cv
291.825 215.068 li
291.825 212.327 li
323.898 212.327 li
323.898 221.491 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[40.2545 0 0 32.7273 152.777 570.967 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 123 
/H 100 
/M[123 0 0 -100 0 100 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLr6J,~>

%%EndBinary
grestore
np
312.116 251.927 mo
311.135 251.927 li
311.135 245.382 li
306.872 245.382 li
306.855 245.353 306.835 245.326 306.81 245.301 cv
306.739 245.23 306.645 245.192 306.545 245.192 cv
291.825 245.192 li
291.825 228.691 li
292.807 228.691 li
292.807 242.764 li
312.116 242.764 li
312.116 251.927 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[23.8909 0 0 20.9454 152.777 582.749 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 73 
/H 64 
/M[73 0 0 -64 0 64 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 73 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 73 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 73 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 73 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
kl?;8JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcP$8JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&kl?;8JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcP$8JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&cN&I~>

%%EndBinary
grestore
np
306.872 245.382 mo
291.825 245.382 li
291.825 245.192 li
306.545 245.192 li
306.645 245.192 306.739 245.23 306.81 245.301 cv
306.835 245.326 306.855 245.353 306.872 245.382 cv
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[.981818 0 0 15.7091 159.322 587.985 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 48 
/M[3 0 0 -48 0 48 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
311.135 251.927 mo
306.92 251.927 li
306.92 245.566 li
306.92 245.501 306.903 245.438 306.872 245.382 cv
311.135 245.382 li
311.135 251.927 li
306.17 251.927 mo
300.826 251.927 li
300.826 251.146 li
295.749 251.146 li
295.749 251.927 li
291.825 251.927 li
291.825 245.942 li
306.17 245.942 li
306.17 251.927 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[7.2 0 0 19.9636 152.777 583.731 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 22 
/H 61 
/M[22 0 0 -61 0 61 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&QN6sbn,U0&qZ4k?jT,2[rW08(r<*<,!WiB'!!'A+#R1M<"pG,2!WgpRgAhNd
$4-tC"U"l-!ODb+$j[:O$OI%A!s/M0!"'8L&.]0U"p=u.!TX7.!"'AR'+k]^#6b21!PJL.!"'JX().>i
#mLJ5!OMh6(`=/+&e53P"9JVl!65'H)&jJ1'FtNU"9JVE!:Bgo)]]k7'FtQV"9JV2!"'\e*#TJ&$O6e9
!VcZ.!"'bh*?#Y($O6e9!RUo.!"'ej*Z>e*$O6e9!OMh5+X%pH((^iY"9JQ(ZiCFW+WhU;&./XF!Wh$U
g&MI(+W_L8%giLC!WfY.$6^K2(_[Ac"p4o-ZiCFS*#TJ&$j["=!<M9^ci=Ck(_mYn$3gV7!<Kn7pAbL7
'+k]^#R(;3!ODb4&.T*U#R1D5!<MTg`W-8P$4-q@"9JT)`W5B+#R:P;"9S],!<KJ+"9\i0!s8H&p&M`*
rW<'"blHc(r;i\oJcLB&JcOm4JcLB&JcLB&JcLB&JcLB&JcLB&qZ)-~>

%%EndBinary
grestore
np
306.92 251.927 mo
306.17 251.927 li
306.17 245.942 li
291.825 245.942 li
291.825 245.382 li
306.872 245.382 li
306.903 245.438 306.92 245.501 306.92 245.566 cv
306.92 251.927 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[7.2 0 0 15.7091 152.777 587.985 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 22 
/H 48 
/M[22 0 0 -48 0 48 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
^B!U"g&U78li4^"p&Fdd^B!U"j8ds8li4^"s8VKd^B!U"mJtZ8li5!*q#Ka\^B!U"p]/A8li5?4mf;\R
^B!X#!<9e6li5]>jT+WH^B"!-pA_l-li6&HgApR>^An96m/Og#li6DRd/`M4a8ku8li4^"li6b\`rPH*
dK&\8li4^"mJm4d^B!U"g]6C8li4^"p]'pd^B!U"joF*8li4^"li4^"li6GSciED3aT2&8li4^"li6e]
`W5?)dfAb8li4^"mf3:d^B!U"h#QI8li4^"q#C!d^B!U"k5a08li4a#!!)?b^B!U"nGqYNlN$8N^B!d'
r;V9~>

%%EndBinary
grestore
np
gsave
300.826 251.927 mo
295.749 251.927 li
295.749 251.146 li
300.826 251.146 li
300.826 251.927 li
clp
295.749 251.146 mo
300.826 251.146 li
300.826 251.927 li
295.749 251.927 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[1.30909 0 0 5.89091 152.777 593.876 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 18 
/M[4 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!~>
<~!<E3%!<E3%!WiE)"9\i1"pY>:#mptE$k3XR&.oHa',2)l()I`#(`=/+)&jJ1)]]k7*$-(;*ZlC@+!;UC
+X%pH+sA$H~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1 dict begin
/T1_Text{eclp cmyk
LBTODJ+Calibri*1 [0 -10.6667 -10.6667 0 0 0 ]msf300.73 255.957 mo(")shT1_grestore}def
T1_gsave
T1_path 295.425 251 1.25 5.69962 -1.25 -5.69962 ()
0 0 0 1 T1_Text
end
grestore
323.898 242.764 mo
318.917 242.764 li
318.917 221.491 li
323.898 221.491 li
323.898 242.764 li
318.167 242.764 mo
312.116 242.764 li
312.116 228.691 li
292.807 228.691 li
292.807 221.491 li
318.167 221.491 li
318.167 242.764 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[21.9273 0 0 31.7455 161.941 570.967 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 67 
/H 97 
/M[67 0 0 -97 0 97 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 67 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 67 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 67 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 67 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
l2ZD9JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMGD
qZ6<hqZ6TpJcP'9WrW)!rW<'"p]16nrW<$!p&K[ET)eikrrW-$rrW0#qZ-WsrrW*#!!<-#L&d>9"9AN)
!sJQ+"U"o/!W`?#!!E<'!WrT("U,#2!s/K(PlQI;rrEQ1"9f#9#mgkB"U"o.!WE'0!<E6("U55=#m^b?
"9S]+UB#lGp&H?=!<N?,#7:kK%1ERL"p=u.!<<-$!WrT2#n%1O$k!=F"9JT)Z2fIVkPuk/!WrT2$4[U[
&ePT]#R(;3!<<-$!sAi9%1j*a&J#6U"p4o-^]8rdgAhfd!<NB.#n7I](Ddf!%LNFD!r`34!WrT4%1j3i
(D[Yp$O6e:!<LLHJcO$q&HMn7"U>DH'c@u2)AWno#R(>0!>,A9#7D%V)&jP7(D7/`"Tnc+h#N$,^AoS]
!<WK3%20U"+<_dE'FtKR!s/K(!X/i<&f2Q2+WhU;%giLD!WhTeJcN%U-34/M"pkeT)^-IP+WM7/$3gS6
!<N?,#n@Xf+<r-U*>]:q#6Y)/q#H!HUAuD;!X&]7&/H92-70uZ(_I,["9JT*!sJuA'cS>D-7'`O"VM4K
"Te^\!0mNs!<NB/$P4*r,Ub&e+;ke"#6Y)A!<N?-$4dmm,:=ld+;tn%#R(81Q2l[?"9AQ,#7D[e(EXqP
.4-/T'+>*K!W`?)"ptnW*@*$^-QsBB%1!+=!Mf^I!;HO@!<NB/$P=3u-7UJm+W;"&#6Y)/!WrW6&/QB6
.4Q_i)\`_e"Te_1!.k49!%%^J":#;H(a(.T.OQAX'+>*K!W`?)"ptnX*[N6b-mBTE%1!+=!Pe\e!9sRU
!%%^J":#;H(a(.T.OQAX'+>*K!W`?)"ptnX*[N6b-mBTE%1!+=!Oi&\!9F2-!<NB/$P=3u-7UJm+W;"&
#6Y)/!WrW6&/QB6.4Q_i)\`_e"Te_D!.k4&!%%^J":#;H(a(.T.OQAX'+>*K!W`?)"ptnX*[N6b-mBTE
%1!+=!Rh%#!6G3f!<NB/$P=3u-7UJm+W;"&#6Y)/!WrW6&/QB6.4Q_i)\`_e"Te_`!.k3_!%%^J":#;H
(a(.T.OQAX'+>*K!W`?)"ptnX*[N6b-mBTE%1!+=!Ug#?!3H5J!<NB/$P=3u-7UJm+W;"&#6Y)/!WrW6
&/QB6.4Q_i)\`_e"Te`'!.k3C!#u"@":#;H(a(.T.OQAX'+>*K!W`?)"ptnX*[N6A.OZJ['Fb<O!We5[
OT5jl!X&`9&JuW;.Oleh)A<nq#6Y)/!WrW6&/QB6.4Q_i)\`_e"Te^n!.t7O!@7dM#7D+\+=8Qf-mBTE
%1!(<!<N?-$P=3t-7LDm+r_4*#R(81VuVDLoDg3=!X&`9&JuT:.Ounk)\`_e"Tnf-":#;H(`t(S.OZJZ
'+G3N!Wf_0JcOp5-34/M"ptnX+!rHf.3ffI%LE=A!WrQ1$kaF#-RpSn+W;"&#6Y)/_uPAhfDm6!!WrW6
&/QB6.Ouqo*Z#@q#6Y,3"UPVP)BgIX.OQ>V&e#!J!Wg^LJcNpn-34,L"ptkV*@*'a.OH8U&e,-O"U52>
&/H61-n6\n*uGRt#6Y)/huJ?/]Ds8Z!<WK3%M]s..4Zns+rh=/$jd1G$4[[c+!i?c.3orN&./UD!Wh]h
JcMnQ,ln&M#RqFc+X\cj.4$&R'G(]^%1X!d*$HXY.OZM]'b1NR!s&H#!.k3C!#u"@":#;H(`t%R.k2nk
*Z5\*&J>`n)^$CS.Oc\L+;tn&#R(;2nc47AVuS+E!<WN5%i$'.-RpVq-6aKM)&F,-*$6CQ.4HVh*>]7p
#6Y)/!.k3>!#GY:!X/i=&fDc:-n6\p-6jWT*ZcCH,UNpJ.46A_)&!Jd"p4o-NrY(<#QXu0"ptkU)^$"E
-n-Sn-RC#_,:"Q^-R^>f+<)(-$O6e9!Ls.A!;lg)!<E9+#Rh:\)^$CRr[7aor$Dk#-RL)]*#9+q#mCD4
!NH-O!:9ao!<N?-#n7I^)]p7LqBc[u,pXWU)]'+r#mLM6!<K\1JcO[.%06J2"9o/A&JZ0'+!Dj,,7YnA
+<MR@'bLl^#6Y,0!Q>%j!71]T!<E6)"pk\L',DH)*$,#"%36E,(`!br$jd.A!s/MO!.k3e!"/f.!sAf6
$OmX['GgT_$Pa?g&.T'R"p>#0!T*m/!3uS4!<E6)"U>>A$k<dZrXfPM%h9!U#mUV:!s/K(m/V_<UAtT$
!<N?+"U>;>$N(8:$4-tC"U"o/rW2iqJcM#8#lt&.!WrQ/"U521#6Y58"U,#3!s/N)!J^Z.!<3*!!r`<$
"TAN&!r`4b!.k4B!;urp!rN(l!.k41!;HSp!.k3&!9sQ9!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k49!.k3&!.k3&!.k3&!.k3&!.k3&!.k3X!.Y~>

%%EndBinary
grestore
np
312.116 242.764 mo
292.807 242.764 li
292.807 228.691 li
312.116 228.691 li
312.116 242.764 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[14.7273 0 0 19.9636 161.941 582.749 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 45 
/H 61 
/M[45 0 0 -61 0 61 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 45 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 45 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 45 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 45 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
iW+Q1JcLB&JcLB&JcLB&JcLB&JcPKEqZ6<hquNVo_Z9W9rW<'"p]16nrW:dRO9#7\rrW-$rrW0#qZ-Ws
rrW-$O9!u7"9AN)!sJQ+"U"o/!W`?#!!E<'!WrT("iUJ=!"T)2!X&Z3#RLeC#6b54!<N0"#lt&.!sJl7
#mgn6!.k4@!$)(@!WrT2$4I@Q$jm7E"9JT)!!**%!sJo9$OmORYQ2<9*<?3D"U>AE&/#Tf%LWOG!s/K'
!<E9*#7:nO&J>];!/LUY!<E6)"pkYH&JZ)u'bUu`#6Y,-!=8f0"UPVL'GhQ$RfLk:&HMn7"U>DH'c@u2
)AWno#R(>0!=8f1#7D%V)&jP7ciBU:)?Bj@"UPVO)''hC*Z>_'#mCD4!<E6*#Rh=^"!&L-+,0dY!$2.B
!sT&B'cS;A,U"-C&./UD!W`?)"UPYQ)B^7M,.di\!$2.B"9o2E(*+VH-6sWL&ISdG!W`?)"UP\S)^6UU
-1Cnd!;lg<!<NB/$P4*r,Ub&e+;ke"#6Y)/!WrW6%i-01-R^==!65'\!<NB/$P=0s,q18i+;kh$#6Y)/
!WrW6&/H93-n-Ou!0R<m!<NB/$P=3u-7UJm+W;"&%L3+<!<N?-$4n!p,q1;lOT=/:*WZ<F#7D+\+=8Qf
-QsBA$jQn:!<N?-$4n!p,q1;l`W4uu`W.%\!X&`9&JuW;.Oleh)A<Ma"9JT*!sT)D(EOkO.Oa'POT5jl
!X&`9&JuW;.Oleh)A<Vi#6Y)/!WrW6&/QB6.4Qa/!8@Jp!<NB/$P=3u-7UJm+W;"&#6Y)/!WrW6&/QB6
.4Qad!2]`;!<NB/$P=3u-7UJm+W;"&#6Y)/!WrW6&/QB6.4QbD!.k4?!$2.B":#;H(a(.T.OQAX'+>*K
!W`?)"ptnX*[N6b.'`ib!$2.B":#;H(a(.T.OQAX'+>*K!W`?)"ptnX*[N6b.-CSb!!<6'":#hQ&JuW;
.Oleh)A<Ma"9JT*!sT)D(EOkO.O^hfci>*f!X&`9&JuW;.Oleh)A<Ma"9JT*!sT)D(EOkO.O`^FRfF9+
!X&`9&JuW;.Olhj)\`_e"9JT*!sT,F"W/=..4Qa%!9F2%!<NB/$P=3t-7UMo+r_4*#R(;3!X&`9&JuT:
.Olj[!3cGE!<N?-$4n!q-7UMp,9.F.#mLJ5!sAi;&fDf>.Olh:!.k4I!$2.B!sT)D(EOkP.k)bc(D$rZ
"9Sc1#n7Re+X\`h-`@$a!$2.A!sT)C(*+YL.k2kg)%mAb"pG29$P4'n,:G#k-J\Z`!"Ar0!sJu@'c\GI
.k<"l&0)Dr$jd1G$4[[c+!i?c.3t)Wf`3#n!X&c<',i#A.k<%p*uPb(%1E[U&f)H1-7UJn,KKk\!$)(A
":#;H(`t%R.k2nk*Z5\*&J>`n)^$CS.Oc\eJ,~>

%%EndBinary
grestore
np
0 0 0 1 cmyk
%ADOBeginSubsetFont: SBTAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LBTODJ+Calibri gcheck setglobal} if
1 2054 8 <000100aaffed04790514002b0099401d602d01201810014d20100f014d20
100d014d200a0c014d20180b014d20b802104011004015014d004013014d
004011014d0016b8ffe8b310014d16b8fff0b30f014d16b8fff0b30d014d
16b8fff6b30c014d16b8ffe8b30b014d16ba0210000affc0b315014d0ab8
ffc0400913014d0a265210521bb80129b10556003fed3f3f012f2b2be12b
2b2b2b2bd42b2b2be12b2b2b2b2b31305d01140e0223222e023511343e02
33321e021511141e0233323e023511343e0233321e021504794580b8756b
b07e440814201a182213082c5375494b75512b081421191821130901de76
b980423e79b6770323080c070505070c08fcf25a86592d2c588257031708
0c070505070c0800>LBTODJ+Calibri AddT42Char 
LBTODJ+Calibri /CharStrings get begin
/g8 8 def
end
LBTODJ+Calibri /Encoding get
dup 41 /g8 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LBTODJ+Calibri*1 [33{/.notdef}rp /g19 /g15 /g9 /g1 /g6 /g16 /g11 /g18 /g8 214{/.notdef}rp]LBTODJ+Calibri nfLBTODJ+Calibri*1 [0 -16 -16 0 0 0 ]msf312.493 236.905 mo(\))shLBTODK+SimSun [0 -16 -16 0 0 0 ]msf312.493 226.64 mo(\000\001)sh49.197 778.829 mo
29.3147 778.829 13.197 762.711 13.197 742.829 cv
13.197 722.947 29.3147 706.829 49.197 706.829 cv
69.0792 706.829 85.197 722.947 85.197 742.829 cv
85.197 762.711 69.0792 778.829 49.197 778.829 cv
cp
0 0 0 0 cmyk
ef
49.197 778.829 mo
29.3148 778.829 13.197 762.711 13.197 742.829 cv
13.197 722.947 29.3148 706.829 49.197 706.829 cv
69.0793 706.829 85.197 722.947 85.197 742.829 cv
85.197 762.711 69.0793 778.829 49.197 778.829 cv
cp
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: SBTAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LBTODJ+Calibri gcheck setglobal} if
1 5578 20 <00020061ffed046103ca004400590048b20c2036bb01f90045002501bcb5
45162f2f004fb8020a400f162a49200c114aed1b4a54ed114d3bb80102b1
074d003fed3fed3fed1239393f012fe1c4392f1239e110e1393931302514
0e0423222e02270e0323222e0235343e0233321e02173e03373e0333321e
0215140e04071e0333323e0233321e0201342e0223220e0215141e023332
3e02350461070d182424142546372606133c4f6037648e592a3467966340
705638091113090504030a111911181f12080a121a1d221201121f261512
1e17110605060502fe7d2740532d3f59391a143455423b5b3d204d1f1e0c
0a0705122d4b3a2b48351d4a82b26674ba84472950774f486a4727040205
040203080c0710435b6b6f692c55673913070607050e1901805e8655273c
637e424783653d3661834d00>LBTODJ+Calibri AddT42Char 
LBTODJ+Calibri /CharStrings get begin
/g20 20 def
end
LBTODJ+Calibri /Encoding get
dup 42 /g20 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LBTODJ+Calibri*1 [33{/.notdef}rp /g19 /g15 /g9 /g1 /g6 /g16 /g11 /g18 /g8 /g20 213{/.notdef}rp]LBTODJ+Calibri nfLBTODJ+Calibri*1 [0 -32 -32 0 0 0 ]msf61.997 751.663 mo(*)shLBTODK+SimSun [0 -32 -32 0 0 0 ]msf61.997 733.507 mo(\000\001)sh95.9051 191.671 mo
95.9051 192.671 li
75.47 192.671 58.9056 176.106 58.905 155.671 cv
58.9056 135.236 75.47 118.672 95.9051 118.671 cv
116.34 118.672 132.904 135.236 132.905 155.671 cv
132.904 176.106 116.34 192.671 95.9051 192.671 cv
95.9051 191.671 li
95.9051 190.671 li
105.573 190.671 114.317 186.755 120.654 180.42 cv
126.989 174.083 130.904 165.339 130.905 155.671 cv
130.904 146.003 126.989 137.259 120.654 130.922 cv
114.317 124.587 105.573 120.672 95.9051 120.671 cv
86.2368 120.672 77.4933 124.587 71.1564 130.922 cv
64.821 137.259 60.9054 146.003 60.905 155.671 cv
60.9054 165.339 64.821 174.083 71.1564 180.42 cv
77.4933 186.755 86.2368 190.671 95.9051 190.671 cv
95.9051 191.671 li
f
%ADOBeginSubsetFont: TZMBAA+SimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/TZMBAA+SimSun 1 GetGlyphDirectory6 <001C60D8A8C9B5EE310277DDBB2832A4374EC2AAD2FECEA46BF9EA3676379DDD5FEE9D3C0583EDC09520AC08CDEEFF1B03E42756D1A368F45077545FE53C018C807BFB2DB47A5B197A5CCDFEE5D3BDE6AA63BF8F9BAFB034788A06D4186353C2C12A92E7B4A8D11B53687F1458E271D6647C0DC4B1B5FD9D73D3DDC1A1367EF8556F5929FBA370E4513ACBCA26152B556629E0BB9E446730A0DC5CD20CD1C58DC128516C6BFD944345F77CA038F5D32FA9322751011285B67BE69E> |!endend end
%ADOEndSubsetFont
LBTODK+SimSun [0 -28 -28 0 0 0 ]msf106.914 170.657 mo(\000\006)sh%ADOBeginSubsetFont: SBTAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LBTODJ+Calibri gcheck setglobal} if
1 2634 10 <00010099fffa037c057100340095400c3f3601293101314012014d31b8ff
d0b40f10014c31b8ffe0b30d014d31b8ffeab30c014d31b8ffe0b30b014d
31bb02270022000cfff0b40f10014c0cb8fff0b30d014d0cb8fff6b30c01
4d0cb8ffe8b30b014d0cb801f8401a162d2d00400f014d00400c014d0016
220b0528491c46114c054c003f3f3f3f123939012fc42b2b392f10f12b2b
2b2b32e02b2b2b2b2b31305d5d25140e0223222e02270111140e0223222e
023511343e0233321e021511013e0333321e021514060701011616037c08
13221a1b23180f06fe840812201918201307071320181920120801540812
192218192215090d0ffeba016e0d0b1a080c080403070d0901f2fe0d080b
080404080b080538080c080404080c08fcd201760a0d090303070b090c18
10febafe25111500>LBTODJ+Calibri AddT42Char 
LBTODJ+Calibri /CharStrings get begin
/g10 10 def
end
LBTODJ+Calibri /Encoding get
dup 43 /g10 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LBTODJ+Calibri*1 [33{/.notdef}rp /g19 /g15 /g9 /g1 /g6 /g16 /g11 /g18 /g8 /g20 /g10 212{/.notdef}rp]LBTODJ+Calibri nfLBTODJ+Calibri*1 [0 -18.6667 -18.6667 0 0 0 ]msf113.914 142.657 mo(+)shLBTODK+SimSun [0 -18.6667 -18.6667 0 0 0 ]msf113.914 134.172 mo(\000\001)sh56.009 204.561 mo
55.6339 204.561 li
55.6339 98.2122 li
55.6339 98.1135 55.6741 98.0169 55.7438 97.9472 cv
55.8137 97.8772 55.9104 97.8373 56.009 97.8373 cv
138.023 97.8373 li
138.122 97.8373 138.218 97.8772 138.288 97.9472 cv
138.358 98.0169 138.398 98.1135 138.398 98.2122 cv
138.398 204.561 li
138.398 204.66 138.358 204.757 138.288 204.827 cv
138.218 204.896 138.122 204.936 138.023 204.936 cv
56.009 204.936 li
55.9104 204.936 55.8137 204.896 55.7438 204.827 cv
55.6741 204.757 55.6339 204.66 55.6339 204.561 cv
56.009 204.561 li
56.009 204.186 li
137.648 204.186 li
137.648 98.5873 li
56.3839 98.5873 li
56.3839 204.561 li
56.009 204.561 li
56.009 204.186 li
56.009 204.561 li
f
146.516 128.873 mo
138.398 128.873 li
138.398 118.727 li
144.88 118.727 li
144.88 99.4181 li
138.398 99.4181 li
138.398 98.2122 li
138.398 98.1135 138.358 98.0169 138.288 97.9472 cv
138.218 97.8772 138.122 97.8373 138.023 97.8373 cv
111.498 97.8373 li
111.498 89.2727 li
146.516 89.2727 li
146.516 128.873 li
137.648 128.873 mo
121.417 128.873 li
118.518 126.112 115.172 123.818 111.498 122.108 cv
111.498 98.5873 li
137.648 98.5873 li
137.648 99.4181 li
113.789 99.4181 li
113.789 118.727 li
137.648 118.727 li
137.648 128.873 li
118.419 128.873 mo
111.498 128.873 li
111.498 124.328 li
113.988 125.569 116.309 127.098 118.419 128.873 cv
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[40.2545 0 0 35.6727 275.832 748.349 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 123 
/H 109 
/M[123 0 0 -109 0 109 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&ScF9~>

%%EndBinary
grestore
np
121.417 128.873 mo
118.419 128.873 li
116.309 127.098 113.988 125.569 111.498 124.328 cv
111.498 122.108 li
115.172 123.818 118.518 126.112 121.417 128.873 cv
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[7.52727 0 0 10.4727 275.832 773.549 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 23 
/H 32 
/M[23 0 0 -32 0 32 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
]E%6sh>lF5lMnKs!<;Bb]E%6soDlu5lMo63li?>N]E%R'q#@u,lMp#Iec>"8_uTT5lMnKslMpe_^]<["
g&U.5lMnKsr;Z6c]E%6sn,U]5lMo*/n,VbR]E%F#r;XD0lMolEg&UF<^]=<5lMnKslMpY[_uT*&ec=k5
lMnKsq#Bsc]E%6sli>E5lMns+oDn1V]E%9t!<9\3lMo`Ah>lj@]E%6sJ,~>

%%EndBinary
grestore
np
138.398 128.873 mo
137.648 128.873 li
137.648 118.727 li
138.398 118.727 li
138.398 128.873 li
138.398 99.4181 mo
137.648 99.4181 li
137.648 98.5873 li
111.498 98.5873 li
111.498 97.8373 li
138.023 97.8373 li
138.122 97.8373 138.218 97.8772 138.288 97.9472 cv
138.358 98.0169 138.398 98.1135 138.398 98.2122 cv
138.398 99.4181 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[31.7455 0 0 27.4909 275.832 756.531 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 97 
/H 84 
/M[97 0 0 -84 0 84 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 97 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 97 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 97 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 97 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&g]48PqYuBPJcO=$Y5e+nO8sk4c2b9Pm/NCPJcNgk]`7*nScF?B^];:PhZ'DPJcN=]b5^)nX8mhP
Z2i;Pd/UEPJcMhOf`0(n\c@<^U]B<P_Z.FPJcM>Ak5W'na8gelpAgidj8Zjn`;kJiR/lOP\,XYPJcLr6
nc,indf=t"MZEPPWW1ZPJcLH(s8Shni;eH0JcP]KT`=3UJcLB&o`1Zbmf7q>JcP3=T`=]cJcLB&k5_1T
r;_ELJcO^/U]:>nK`H])f`8&Pp]#gFJcOR+VuQVnM#`,-eGucPoDamPJcO'r[K#UnQN2U;`rNdPjo:nP
JcNRd_uJTnV#Z)I\H'ePfDhoPJcN(VdJqSnZN,RWWrUfPaoApPJcMSHhuCRn_#T&eSH.gP]DoqPJcPNF
TE+$P^Al.PJcM2=lMn?nbQ*4pOoY%PYlE/PJcL]/q#@>ng&Q^)KE2&PUAs0PJcLB&quEDikQ$27JcPHD
T`=H\JcLB&mJrp[p&K[EJcOs6T`=rjJcLB&huKPPrr7ZPJcOI(WrMhnJcLB&g]48PqYuBPJcO=$Y5e+n
O8sk4c2b9Pm/NCPJcNgk]`7*nScF?B^];:PhZ'DPJcN=]b5^)nX8mhPZ2i;Pd/UEPJcMhOf`0(n\c@<^
U]B<P_Z.FPJcM>Ak5W'na8gelpAgidj8Zjn`;kJiR/lOP\,XYPJcLr6nc,indf=t"MZEPPWW1ZPJcLH(
s8Shni;eH0JcP]KT`=3UJcLB&o`1Zbmf7q>JcP3=T`=]cJcLB&k5_1Tr;_ELJcO^/U]:>nK`H])f`8&P
p]#gFJcOR+VuQVnM#`,-eGucPoDamPJcO'r[K#UnQN2U;`rNdPjo:nPJcNRd_uJTnV#Z)I\H'ePfDhoP
JcN(VdJqSnZN,RWWrUfPaoApPJcMSHhuCRn_#T&eSH.gP]DoqPJcPNFTE+$P^Al.PJcM2=lMn?nbQ*4p
OoY%PYlE/PJcL]/q#@>ng&Q^)KE2&PUAs0PJcLB&quEDikQ$27JcPHDT`=H\JcLB&mJrp[p&K[EJcOs6
T`=rjJcLB&huKPPrr7ZPJcOI(WrMhnJ,~>

%%EndBinary
grestore
np
144.88 118.727 mo
138.398 118.727 li
138.398 99.4181 li
144.88 99.4181 li
144.88 118.727 li
137.648 118.727 mo
113.789 118.727 li
113.789 99.4181 li
137.648 99.4181 li
137.648 118.727 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[19.9636 0 0 31.7454 285.977 749.985 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 61 
/H 97 
/M[61 0 0 -97 0 97 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
l2ZD9JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&mf<4cp]1-kWW7VN
qZ-QqrW<$!rW)ltr;uouU&]rK"9AN)!X&B'!!<#urrW'"!!<-#R/iBM"9AN)!sJQ+"p>#1!W`<'!s/Q-
"o\]1"U"o/!W`=`!9sQk!#,G7!X&Z2#RLeC#6k;5!WiH,"U>>4#mLY?"U"l.!U]r>!5ALV!<E6("U>AC
%1N^Q#R1G8"9eu8$4ICS%1ERL"Tnf,!Ta<5!6G3`!<E9+#7:nO&eYcd$jd.C"pYGC%hTHg&eGKZ#6Y,1
!S[U+!7Uul!<E6("pk_N'c.Z%'+YKX#RCbH&/5ls(`!es$j["=!Wg[KJcOX-+TVTF":#;G'c@u2)Aa%t
$k!IR&JZ0'*?5t5&e,-O!s/MD!.k47!$M@D!X/l>',V`4+WhX=&e>H_&f)B,+<_jI(_R;b"p4o-]`<Wa
nc0g6!WrT4%i$$,,U=QT)ANkt',DN/+s\BV*>fCu#mCD4!ODcX!;lg?!<N?-$4msn,:=ib+WVC8()Ru4
+seN\+<)(-$jQq<!<K/"LB%GX!WrW7)\<f,,Uk/j,Tn'F)B9hD,pjo_*Z5V$$3gV7!M0:R!"K#2!sT,F
(`t(S.k2nk+;#Y:+<r0[-6s]Q((^iZ"Tnc+PQ70Q(]a[?"q)"[+!rKi/1Dnk+sS?[-RU/_*>\nm%1*4@
!We,XV#Uu+!WrW7&JuW</2&V,.Ob9D%4ESM+rqL6%LNCC!W`?$!.k3S!$2.B!sT,F(a(4Y0JP76/1W5#
.46>])&*Sh#6Y,0!V6;C!4`(M!<N?-$P=7"-nd>41GUX;/hAFt+<)%,$O?n<!WhKbJcN[g$3:21"q)"\
+Xo*%r\b6C1,(:.,97R4%1*1?!Wh*WJcO$q$3:21"q)"\+t><*r](HI2)-[1+WD+*$3gV7!<LXLJcOC&
)Z^!B"q)"\+t>?,3]fD`2`!$5+;ke##R(;2!QY9+!.k4G!#kq?!sT,F)'URd3'05b4#f#K-Qa0;$jZt;
!<K(uK)blP)?L!F$P=7#.l'(G4?P\b1G1$t)%m>`"Tnc+SH+WL$3:21"q)"\+t>?,&3;m73B&`H-m9KB
%1*4@!WeJbQN.?n!WrW7&K)`A0fAqi"ueCp0.J4f#8RjY#6Y,0!K$lN!"&`.!sT,F)'LF^2#]?D1bpd<
.jcAW'FkHS"9JT)!.k3O!$)(A!sT,F)'C=[1,C[?0J>%1.juV`(_R8a"Tnf,p&K[E[/_6K!WrW7&JuW=
/MJk3/M&D&/1W.r+WM70$j["=!WhZgJcNOc*ruEF"q)"[+=A]m/hAG!-R^Dn.OZSc)\ikk#6Y)/!TX64
!6G3M!<N?-$P=3t-S$c".45$=%ONSQ.46A_)&!Jd"p=u.g&Q^)df:Kk!WrW7&JuT:.P*%s,9S$L+seWd
.4-8[(D.&]"Tnf,d/\auh#JPu!WrW7&JuT9.Olkn+<2:=*?c^W.4?Jc)\ikk#6Y)/`rL\kk5ZY+!WrW7
&/QB5-n-Mg*Z5b1)''kH-n-Mg*Z,P"#mCD4!PSPc!:^%4!<N?-$4msn,:=ib+WD11',;?)+seTa,p=3B
%giOE!WfY.JcPZJ+TVWH"UP\S)^-IP+s%U9&.]?e(`aeH-7'fT(D.&\"9JV(!/:IU!<N<+*XN8h(`jhD
*ubt-%L`dX'H%o7,9e6M(D.&]"Tnc+T`C/S%06J2":#>H'cJ)5)]'/%%LWUN$kF$h*$-1B)AWnn#R(;2
!LEeT!#GY:!WrW6%2'Bm(`!bq$OI%C#n%7W()[Gt)&Eqs$O6e9!<MinJcN@^+TVTG"U>DF&J>]g%h&aK
"U,)9$P!a^'GM/k$jd+@!W`>f!.k3h!$D:C!X&Z4$4I@Q$k!=F"U"o1"U>AC%M''[$jd.B!s/M]!.k3q
!"Ar0!X&Z3#RLeC#6k;5rW33)"U55=rX&i8#6b22!<LaOJcO@%$ipD2!sAc3"pG/5!s8H&%0?V7"U5/9
"pG,3!W`>F!.k4.!!30%!rE*"!rN*!!riB%"9\f/!W`>;!.k47!<*#t!rW0!!;urr!r`5.!.k4?!;Z`l
!;QYq!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!9sQ9!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!65(i~>

%%EndBinary
grestore
np
138.398 118.727 mo
137.648 118.727 li
137.648 99.4181 li
138.398 99.4181 li
138.398 118.727 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[19.9636 0 0 1.30909 285.977 756.531 ]ct
snap_to_device
<<
/T 1
/W 61 
/H 4 
/M[61 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
0 0 0 1 cmyk
%ADOBeginSubsetFont: SBTAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LBTODJ+Calibri gcheck setglobal} if
1 938 4 <000100acfffa03f8051400330062401131100b014d30180b014d2f100b01
4d210ab8ffe8b310014d0ab8fff0b30f014d0ab8fff0b30d014d0ab8fff6
b30c014d0ab8ffe8b30b014d0ab80211400c152752210a101b5210550555
003f3f3f1239393f012fe12b2b2b2b2b3231302b2b2b25140e0223222626
270111140e0223222e023511343e0233321e021511013e0333321e021514
06070101161603f80714221b232c1607fe24081421191822140808142218
1921140801ca061017211a1a2013070d12fe5301ce11071c080d08050610
0a0287fd79070d070505070d0704da080c070505070c08fdc1023f090c07
0405080c070d1a17fdfffd9a1a13>LBTODJ+Calibri AddT42Char 
LBTODJ+Calibri /CharStrings get begin
/g4 4 def
end
LBTODJ+Calibri /Encoding get
dup 44 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LBTODJ+Calibri*1 [33{/.notdef}rp /g19 /g15 /g9 /g1 /g6 /g16 /g11 /g18 /g8 /g20 /g10 /g4 211{/.notdef}rp]LBTODJ+Calibri nfLBTODJ+Calibri*1 [0 -16 -16 0 0 0 ]msf133.536 112.974 mo(,)shLBTODK+SimSun [0 -16 -16 0 0 0 ]msf133.536 104.662 mo(\000\001)sh175.109 72.3556 mo
96.9353 119.056 li
@
103.62 120.886 mo
95.905 119.671 li
98.4917 112.302 li
cp
ef
175.109 72.3556 mo
244.609 122.567 li
@
237.79 123.809 mo
245.582 123.27 li
243.647 115.703 li
cp
ef
245.582 195.27 mo
152.917 298.984 li
@
159.843 298.736 mo
152.117 299.879 li
152.386 292.073 li
cp
ef
245.53 779.289 mo
225.648 779.289 209.53 763.068 209.53 743.059 cv
209.53 723.05 225.648 706.829 245.53 706.829 cv
265.412 706.829 281.53 723.05 281.53 743.059 cv
281.53 763.068 265.412 779.289 245.53 779.289 cv
cp
0 0 0 0 cmyk
ef
245.53 779.289 mo
225.647 779.289 209.53 763.068 209.53 743.059 cv
209.53 723.05 225.647 706.829 245.53 706.829 cv
265.412 706.829 281.53 723.05 281.53 743.059 cv
281.53 763.068 265.412 779.289 245.53 779.289 cv
cp
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: SBTAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LBTODJ+Calibri gcheck setglobal} if
1 5890 21 <00010018fe98034803bc0036003cb32a050a25bb0221001d000a01f7b314
141d2fb801f9400d001d32492a0520490f4f17054c003f333f3f12393f01
2fd4e112392fe110e1113939313001140e02071e0315140e0223222e0235
342e0627263633321e02171e03173e0335343633321e0203482a5c916705
0704010812201818201307070c1119253549320d1f3b1c24160b04344a32
180441603f1f2830191e1106039d73e1e5eb7b2d57544f23080b06030306
0b08497d76738094b3da82211503080b098ae9ba892859b4b7ba60100f03
080c>LBTODJ+Calibri AddT42Char 
LBTODJ+Calibri /CharStrings get begin
/g21 21 def
end
LBTODJ+Calibri /Encoding get
dup 45 /g21 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LBTODJ+Calibri*1 [33{/.notdef}rp /g19 /g15 /g9 /g1 /g6 /g16 /g11 /g18 /g8 /g20 /g10 /g4 /g21 210{/.notdef}rp]LBTODJ+Calibri nfLBTODJ+Calibri*1 [0 -32 -32 0 0 0 ]msf258.33 749.993 mo(-)shLBTODK+SimSun [0 -32 -32 0 0 0 ]msf258.33 735.712 mo(\000\001)sh245.53 706.829 mo
245.53 680.279 li
@
240.53 685.079 mo
245.53 679.079 li
250.53 685.079 li
cp
ef
245.53 679.066 mo
225.648 679.066 209.53 662.948 209.53 643.066 cv
209.53 623.184 225.648 607.066 245.53 607.066 cv
265.412 607.066 281.53 623.184 281.53 643.066 cv
281.53 662.948 265.412 679.066 245.53 679.066 cv
cp
0 0 0 0 cmyk
ef
245.53 679.066 mo
225.647 679.066 209.53 662.948 209.53 643.066 cv
209.53 623.184 225.647 607.066 245.53 607.066 cv
265.412 607.066 281.53 623.184 281.53 643.066 cv
281.53 662.948 265.412 679.066 245.53 679.066 cv
cp
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: SBTAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LBTODJ+Calibri gcheck setglobal} if
1 6288 23 <00010028fff2043d03b700470047bf000f01dd002600150209001f000e01
bf400c3935391f391f39002a390f26b80103b42f481a4c40b80104b1074d
003fed3f3fed3232012fc439392f2f113910e110e1d4e1313025140e0423
222e03123721160e0823222e0235343e043523222635343e023321321e02
151406232306141e0333323633321e02043d080d1a242a172f513e2a1503
0ffec003141f28110b090e121b121c2111060f18281f1195101204080d09
03a7090d0904131097080c161d21111c430606070503561e200d0b080613
3c6fb7010abaa2febe8128130b07030203070a0509283780aee79b232312
1b110808111b122323a1e298582d0c11050d1600>LBTODJ+Calibri AddT42Char 
LBTODJ+Calibri /CharStrings get begin
/g23 23 def
end
LBTODJ+Calibri /Encoding get
dup 46 /g23 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LBTODJ+Calibri*1 [33{/.notdef}rp /g19 /g15 /g9 /g1 /g6 /g16 /g11 /g18 /g8 /g20 /g10 /g4 /g21 /g23 209{/.notdef}rp]LBTODJ+Calibri nfLBTODJ+Calibri*1 [0 -32 -32 0 0 0 ]msf258.33 657.27 mo(.)shLBTODJ+Calibri*1 [0 -21.3333 -21.3333 0 0 0 ]msf266.33 639.582 mo(")shLBTODK+SimSun [0 -21.3333 -21.3333 0 0 0 ]msf266.33 628.374 mo(\000\001)sh245.53 607.066 mo
245.409 572.766 li
@
250.426 577.548 mo
245.405 571.566 li
240.426 577.583 li
cp
ef
2.87775 692.405 mo
2.50288 692.405 li
2.50288 215.443 li
2.50288 215.344 2.54278 215.248 2.61271 215.178 cv
2.68243 215.108 2.77911 215.068 2.87775 215.068 cv
318.543 215.068 li
318.643 215.068 318.737 215.107 318.808 215.178 cv
318.878 215.249 318.917 215.343 318.917 215.443 cv
318.917 692.405 li
318.917 692.503 318.878 692.6 318.808 692.67 cv
318.738 692.74 318.641 692.78 318.543 692.78 cv
2.87775 692.78 li
2.77911 692.78 2.68243 692.74 2.61271 692.67 cv
2.54278 692.6 2.50288 692.504 2.50288 692.405 cv
2.87775 692.405 li
2.87775 692.03 li
318.167 692.03 li
318.167 215.818 li
3.25285 215.818 li
3.25285 692.405 li
2.87775 692.405 li
2.87775 692.03 li
2.87775 692.405 li
f
0 0 0 0 cmyk
%ADOBeginSubsetFont: SBTAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LBTODJ+Calibri gcheck setglobal} if
1 3232 12 <00020099fe9403d503ca002a003d0080b53f3f0121360ab8fff0b30d014d
0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0ab801f840
17152b200d014d2b120c014d2b180f10014c2b180b014d2bb8020a400900
150a363521040530b80105b6264a1b49104f39b80105b1054d003fed3f3f
3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d01140e022322
2e022711140e0223222e023511343e0233321e0215153e0333321e020734
2e0223220e020711161633323e0203d53363925e28444140240812201918
20130706121c14151b1207294c4d512d628a5728ae15335640203e404627
447a433e59371a01e976bc834710223423fe3e080c080404080c0804e909
0b080303080b09792a3e29154c84af754581643c13294331fe9a53583c64
7c00>LBTODJ+Calibri AddT42Char 
LBTODJ+Calibri /CharStrings get begin
/g12 12 def
end
LBTODJ+Calibri /Encoding get
dup 47 /g12 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LBTODJ+Calibri*1 [33{/.notdef}rp /g19 /g15 /g9 /g1 /g6 /g16 /g11 /g18 /g8 /g20 /g10 /g4 /g21 /g23 /g12 208{/.notdef}rp]LBTODJ+Calibri nfLBTODJ+Calibri*1 [0 -28 -28 0 0 0 ]msf42.4618 352.247 mo(/)shLBTODJ+Calibri*1 [0 -18.6667 -18.6667 0 0 0 ]msf49.4618 337.536 mo("')[-9.80734 0 ]yshLBTODK+SimSun [0 -18.6667 -18.6667 0 0 0 ]msf49.4618 317.922 mo(\000\001)shgrestore
gsave
-67.1928 792 mo
-67.1928 0 li
472.807 0 li
472.807 792 li
-67.1928 792 li
246.013 471.287 mo
226.13 471.287 210.013 455.169 210.013 435.287 cv
210.013 415.405 226.13 399.287 246.013 399.287 cv
265.895 399.287 282.013 415.405 282.013 435.287 cv
282.013 455.169 265.895 471.287 246.013 471.287 cv
eclp
287.898 475.127 mo
207.716 475.127 li
207.716 395.273 li
287.898 395.273 li
287.898 475.127 li
246.013 399.287 mo
226.13 399.287 210.013 415.405 210.013 435.287 cv
210.013 455.169 226.13 471.287 246.013 471.287 cv
265.895 471.287 282.013 455.169 282.013 435.287 cv
282.013 415.405 265.895 399.287 246.013 399.287 cv
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[80.5091 0 0 80.8364 -70.423 606.967 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 246 
/H 247 
/M[246 0 0 -247 0 247 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 246 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 246 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 246 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 246 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&K)gK'
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO$qirRX0JcLB&JcLB&JcLB&JcPECq#U9mp&k*lq#S&,JcLB&
JcLB&JcLB&RK33cquZg!r<3$%p'(Btr<*!"qZ3>iJcLB&JcLB&JcLB&]`@s2r<!!$rWN6)rs&H-rWrE.
r<iH/rWrN/rW`B+rri<'rW<'"rrIcQJcLB&JcLB&JcLB&huN]VrW3`8!sA`1"pP;;#RLeE$O[@P%1WmH
&,Qq;%hT9]%1N^S$OR4I#RCY>"pG/5rWE0%quPs\JcLB&JcLB&JcLB&KE2#Q*WZ9C!WrN-"U,)8#RLhG
$k3[W&.oKe',2/r()@]&qAB2J)AX)''GD,m&J,H_%1EUO#m^b@"pG,4!s8T+r;k%@JcLB&JcLB&JcLB&
VZ?\s*WcBF!sAc2"pYD@$OdIT&.oQi'c%W()B0Y:*ZlIHrZV1`rZN=*+<MXF*?6"9(`*r&'+tlf%LidQ
#m^b?"U"o0!Wr<$XoO%RJcLB&JcLB&JcNmmrW+2E!WrN-"U52;#n%.O%hTHi()Rr/*?QCI,:"Q_-n-Sp
.kCTMr@S""(+Uja.4?Pj,pXZX+!)C?)&F#%&eGQ_$4I7J#6k>7"9S],r;i#\JcLB&JcLB&JcLB&li?tb
,Q\&M"9eu7#mq(M%hTHi(E"26+<i'X-RgPs/h\n61GgpG2E(Onr]'j8,W7M;1c$mA0J4q..OZVi,9\-L
)Aj5(&eGN^$OI(D"U"r1!Wr?%nc47AJcLB&JcLB&JcLi3rW*<,!WrQ/"pYGA$lofh&eu3$*$-7J-7C>p
0/,.<2E*TV4$5Yi5<hCupH^,k5<h=p4?PYb3&WWM0eY+/.46Ab+<;C<()%8j%1<LK"pG,3!s8H&e,Y(#
JcLB&JcLB&JcN%UrW+DK!s8Z0#7(YF%M9?i(`OM>,:4ii/ho.>2`Wr_5!VD#6UX@47n6*@r^llV-qHm!
7Rfg76UF%&4Zkbb2Dd0B/Li+o+s.dB(DIJm%1<IJ"pG,3!Wr?%\,_*\JcLB&JcLB&JcO4!.00GN!WrQ/
"pbMD%M09g)&s_B,q(8r0f1dJ4$>eo6UXC684cEH9MA1[:Adod;#F*':/4MX9M8#N8Ol6=6UF%%4?>DY
1))Am.4-8^*?#_.&J#<X#R:M9!s/Q'!La"?!.k3&!.k3&!.k4C!%@pL!WiH,"U>;?%1a'd(`OM?,q1Au
1,_*R5!VG&7Rp$B9MJ8W:Jancr_iYmq,I8j.8j&@;,C(b:/+DT8k;H@6U<q!3]AlM/h/4n+<;=8'+bW]
#m^_=!s8W(!W)kK!.k3&!.k3&!.k3;!#,G7!WiH,"pYGB%M09i)BL%J-nI%e1H.?W5=.b-84lNL:/=\`
;GpFl<)iismT09d-WF&D;c6Ii:eseZ91_WB6U3gs3&NEC.OQG_*#KD'%h&dN"pG,3!r`5V!.k3&!.k3&
!.k3&!4`(W!<E6'!sAf5#n.:U'c7o4,UY)q1H.?X5XRt28kVlR:f1+h;cHasrDresr)iYpqcEbt,umrE
<)Z[l:esh[91_T@5s@@i2)-[3,p=9I()%5g$4$h>"9S`)!Pe\e!.k3&!.k3&!.k4)!<*!D!WrQ0#71eL
&eu9)+XJQi1,_-U5XS"38k_uV;,U=l<E3(#rE&Yopf[8lrDs5)<`N.!;c6I6:eseY8Ol085!(\[0InLq
*uc"1&.K!Q"pG)1!W`=q!.k3&!.k3&!.k3&!;ca@!<E6("9f#:$kEsd)BL(M.k`_=4?l/$84uZP:f1.j
<)lt"r`Aquj&u4\r`::E<E3!s;Gg4a91_WA5s77e0eFh"+<244&.JsP"pG)1!W`9%K)gK'JcLB&JcLB&
ScB]1!<N<*"U>>B%h]Wr*[<'a0f:sS5t"489MSCf;H$Op<`]3$r)hQRr)b+D=&r@%<)Z[l:JFJQ7RKC%
2`!'9,p=6F'G(]\#R1D6!r`5]!.k3&!.k3&!.k3&!5JU6!?V@F"U55?%MBKp*[<'b1,_0W6:OO>:/Fed
<)lt"=',<%lWN=PrE0&#+')B@;c6Ff9M.fC5Wh"_0.J7k*#K>#$jm4C"9S]+!QG+k!.k3&!.k3&!.k4/
!$D:C!WrQ0#RV"Q'cA&;-nR244$Q)&8k`#X;H$Rr<``B$=NFVF=oDGF='&F&<)ZXj9hS#G5s74b0.J7j
)]'.u$jd.B!s/N)!N6!M!.k3&!.k3&!.t7O!?M7C!X&Z3$4II[(`aeJ/2B.G5X\+79i"Vb<)lt#=8c7;
=oDG==&r@%;c6Fe9M%Z>4ZP>P.O6)S((q)b"pbD9!s/K(M#`,-JcLB&JcLB&U];D9!<N?+"pbSI&f2N2
-7gl04$Z2(92/5\;cQk!=8c75=oMME='&F&<)QRh9M%]>4ZP;N.3flO'G(]\#6b22!W`>e!.k3&!.k3&
!.k3&!6,$<!?)"A"U>AD&JZ3+,q:T+3^5u%92/5\<)lt#=8l=Y=kHmV=<(CC<E)mo:J=>K5s7.^/LM_^
(D@;e#R1D6!W`>G!.k3&!.k3&!.k3&!9O8&!<E6("9o,>%hfd#+t,'#3Bff#8ki,[<)lt#='/S;=nPqs
=;t=B<`E!p:/"2I5W^kY.jZ8U'bLl^#6b22!<K;&JcLB&JcLB&JcLT,"T\W*!sJoD$4RR_)B^@X1,h?_
7S6BO;H-Xs=8l='=oMM5=&r@$;c-:_84,U&1bU9d,97U7%grXI"9S]+!KR54!.k3&!.k3&!3-%u!>be?
"UGJG',V`7.5*P?5Xe7<:Jk%j<`f9&pK=e)r`C(?=&i3t:ejVP69R:`/1)JX'bCc["pG)1!<MWhJcLB&
JcLB&JcLB&b5`L_!<N?+"pk\L'cJ2A/2B1K6UsdE;,^Iq='&L+eQL7%r`C%><`N*s:J=>K5W^hV.3fiL
&e56S"Tnf,!RUn!!.k3&!.k3&!.k4:!#kq>!WrT2$4RUa*$Qgb2*4&l8ki,[<*!(%=BMq5m90Ej(fsa<
;c-=`7mfI"1+X^n)&*Si#R1D5!<KJ+JcLB&JcLB&JcLc1$3://!sJo;%hfg%%j`_]3'K]#92ADa<E<1'
=I`M#=BJX+<`E!o9h>pc5W^hU-m9NF&I\sM"9S]+!L*S9!.k3&!.k3&!3Q;<!<E6)"pbSJ'cJ2B/i5US
77g3M;cQk"r`JYmW`^6B=BAO'<)HFa7mfEu0e+Cg(D72b#6Y,1!<MfmJcLB&JcLB&JcLB&cN"g`!WiK/
#n7I^*$Qgc2EX;r92ADa<EE7(=O('j=W(=D=&r:!:eaMM5<1MN,p+!<%LNFE!s/K(ec::%JcLB&JcLB&
JcP6>(]a[?"9o/A&f2Q6.l'(J6qL*L;H-[u=BM\.k#iR(=BAO'<)HC`7R9*n/ghb['FtQW"Tnf,!Oi&\
!.k3&!.k3&!0I6k!<N?,#7:qS(`t(U1HIc-7S6EQ;cQk"=BLVe!a&Q+'in:3:J=;H4Z>&D+r_7.$j["=
!W`=h!.k3&!.k3&!.k3V!#GY;!sJo:%MK^&-S@8=5t=RD;H-[u=BOfjUfeO:=BAO';c$1[6pEXc.O,oK
&I\sM"9JT)p],mGJcLB&JcLB&JcO7"(BFR>"U>DG'H/,C0/bs\85)iY<E<1'=NFX^=Vk1B=&i3s:.du@
3\r93*>]:s#mLM6!<LmSJcLB&JcLB&JcLB&o)KI*!WrT2$P4!k+t53)5"%t:;,^Irr`H+%i)pju=BAO&
;GTqU5s$nS,p!m9%1*4A!W`>6!.k3&!.k3&!.k39!"o;6!sJr<%i$$-.PWnI77p<P<!-0&=BL;\)-L*E
=BAO';c$.X69I+W-6F';%1*4A!W`=l!.k3&!.k3&!.k3Z!#>S:!sJo;&/?00.Pa"L7S?NT<*!(&=QEVW
=oMM;=&i0q9h7W62(g3t(_R8a"p=u.!W2qL!.k3&!.k3&!.k4&!#>S:!sJo;&/?00.l'.N7S?NT<E<1'
=Mn:T=Vb+A=&i3s9h@]82D-@!(_R8a"p=u.!T!g.!.k3&!.k3&!.k4F!#5M8!sAi:%i$'/.l'.O7nc`X
<E<1'U065R(0F[?<`Dpk8OP^"0..hY&e,-O"9JT)^AricJcLB&JcLB&R/e!'!<WH0$P*sl,:bQ25t=UF
;cQn$=BU5YqH4S9=BAO&;,0_O4uP#@*uGV"#mLJ5!<JhnJcLB&JcLB&JcN@^'`e=:":#8E'cSAJ1-.]k
9MeYf='/S^=diJ0=BJX*<)QI`6p<L]-6F':$j["=!W`9$JcLB&JcLB&JcLB&gAhrh!<NB.$4[ah+t>?/
5t=UF;cQn$=M@qJ=VOt><`Dsl8jkg#/g_VU&I\pK!s/M^!.k3&!.k3&!.k3&!;ca2!<E6)"pkbQ)BpUc
3^H80:fC@q=BM.tel`\h=&r9u:.[i:2(^*p((^iY"Tnc+_>o/fJcLB&JcLB&S,a6(!WrW5%2'O%.5<hJ
7nc`X<EE:)r)nVSoiVu2=&r9u:.[f92(^'o((UcX"9JT)UB#lGJcLB&JcLB&]`8`I!WrT3$kaC"-nmVG
7SHWW<EE:)gKBeE&m/49<)HC^6Td1V,9.F/$3gV7rrIcQJcLB&JcLB&JcOX-'EJ4:"U>GJ(EOqW2a9c)
:fC@q=BN.;Zrn&E=&r9t9h7T41FaRe'FkER!s/Ma!.k3&!.k3&!.k3&!<)s4!<E6)#7;"X*@3<r5"/+?
;cQn$=INC@=VFn=<`Dpj83o9l.3TQA%1!+>!Wg7?JcLB&JcLB&JcMDC'*/.;"pthT*$d'm4[_n<;H6e#
=SQ$N=n,W.=BAO&;+sJF3A;j'(_I/^"Tnc+V>u2JJcLB&JcLB&^]5#K!WrT4%20X(.Pj.R8PW/`<`iJU
=cunu=BJX*;c$.W5;t5B*Yo:p":#&2!<IrUJcLB&JcLB&JcOa0'*/+9"UGML(a(7^3^H;2;,gRt=LMA;
=VFn>=&i0p8jtm#/L2;M%LNCB!WhHaJcLB&JcLB&JcLB&'*/+8":#;G(*4hV3']u-;,gRt=I*+9=VFn>
=&i-n8OGTr.j>lF%1*1?!Wg@BJcLB&JcLB&JcMMF&ci%9"pthT*$d*o5"/+@;cQn$oN?cKmTC3*=B8Bu
:.R]40dn.]&I\mI!W`>$!.k3&!.k3&!.k3g!##A7!sJr>&fMrE1d"/u:K(7p=BO'UN`c`l=&r9t9Lh?-
0.%\D((U`V"9JU\!.k3&!.k3&!.k42!"o;6":#;H(Eb+\3^QA4;H6e#=L2/4=V=h<<`;gf76WR[,9%=+
#mCD4!U9Z:!.k3&!.k3&!/(=Q!<Nf7"pkeT*@3?t5Y"OG<*!+'P?H+4'3J@<<DlUb6T[(R+W1k##6Y)/
!QtIp!.k3&!.k3&!2TZ.!<E9+#RqFc+tPT778$HU<``Dn=b9fB=V=h==&i-m83o6i-QX$6$3gV7!NQ3P
!.k3&!.k3&!6"pM!<NB/$P4*s-o*kO8PW2a='3gPMcg<f=&r9t9L_3(#q[DA'+G6O!s/L^!.k3&!.k3&
!.k45!"o;6!sJu@'c\MP3']u.;,pY!=Kkr.=V4b;<Du[c6Td.S+W(e!#6Y)/li;V;JcLB&JcLB&LB%GX
!<NB0%1Eje+tGK578$HU<``Cb=ijeZ=BJX);GKbK3%u["'b:WU!s/MJ!.k3&!.k3&!.k3K!"f55!sT)C
(*4hX3^QD6;H6e#mTG-EkZJO#=&r9t9LV-&/0c&G$j["<!<K>'JcLB&JcLB&JcNjl&ci"8"UGPN)^I!o
5=\FF<*!+'c<5s+"^"i+;bp!n6T[%O*u>Iq"p=u.NW=Y2JcLB&JcLB&kPu1q!X&]8&/ZN=1H\&t:fCCr
=KP`)=V=h==&i*l7mK!c,T@F,#R(;2!Ug#?!.k3&!.k3&!/U[[!<E9+#n@XV*$m6t5tFaK<EE:^=iOSV
=BAO%:eO5>1FaLa&ISgH!WgUIJcLB&JcLB&JcMbM&HMq9#7D+]+Y,B478-NW<``Di=b9f<=V4b;<DlR`
5rgSF*>Ati"Tnc+YQ07TJcLB&JcLB&aoE"S!<WK3%M^!20KDHk:K(7p=Naj%=T_c.<`BN*9LV-&.j>iC
$O6e9!K[;5!.k3&!.k3&!9sOr!<NB/$P=7#/2]U\9Mnbj=BMV,V-+C4=&i0p8O>Hl-QNp3#mCD3!V$/A
!.k3&!.k3&!/gg_!<E9+#n@[k-O;Ff6V:-Q<``C]=i=GT=BJU';+sGC2(Tph&ISgH!Wg[KJcLB&JcLB&
JcMhO&HMq9#7D+]+tPW:7nli\='/Si=b9f:=V4b;<`;dd6TQqL*>K%j"Tnc+Z2fIVJcLB&JcLB&bQ&4U
!<WK3%M^!30fhZo:K(:q=NO^!=oVS7=&i*l7R&d^+rLt##6Y)/OoU(6JcLB&JcLB&li7Rt!X&`9&K)cD
2Es]+;H6e#W*,lu&Qi+8;bp"Q3\`!&'b1NR!s&Go!.k3&!.k3&!.k30!!rZ."UGSQ*@<L%#")!Z;cZt%
M-7Yt&6N"6;,'ME2(Kge&ISgH!WgaMJcLB&JcLB&JcMnQ&-2h8"q)"[+Y,E67nll]='4WgJm%&8&6N"7
;bp"P3\Vm#'Fb<O!WfV-JcLB&JcLB&JcO$q&-2h9#RqIf-87JI8l&Ad='3LGJlr[g=BAL"9h%<(.NfN=
$3gS6!L*S9!.k3&!.k3&!:Bgu!<N?-$4n!r.Ps=Y9i4nl=Jf5p=V+\:<`;dc69-\F)\WVb"9JVr!.k3&
!.k3&!.k32!"/f/":#>J)^I$q6:h;U;cZt%LKVAp&6Mt4;+sDA1FXC]%g`CA!<L^NJcLB&JcLB&JcMqR
%flb9#nIdn-o3tS9Mnbj=QN\;=l3?n=BAO%:.RZ0/L)/H$O6e9!OVoZ!.k3&!.k3&!7(WV!<NB.$P=7#
/2ogb:/b.o=N+Ep=oMP7=B8Bt911ir-QNp3#R(81PlQC9JcLB&JcLB&mf3k!!X/i='HAGS4$uY;<*!+s
=eAh.=BAL#9h.E*.j5`@$3gS6!VQMF!.k3&!.k3&!0@0i!<E9,$4dpq.Ps=Y9i;$m='1/Z^0)"L=B8?r
8jYNk,o[L+#6Y)/ec::%JcLB&JcLB&YQ,48!X&`9&fN#J3'g,3;cZt%jB7(;h,t7j=&i*k76NFU*u5=m
"Tne6!.k3&!.k3&!.k3t!"T)3"UGPP*@EU)78$KW='3@CJm&%T&6N"6;bfkK2_6-j&.8[E!WeVfJcLB&
JcLB&JcP<@&-2e6"ptnY+Y,E77nur^='25#SQQJ*<`Dmg6TQnJ*"r_c"9JVu!.k3&!.k3&!.k35!"K#2
":#>J)C-pq6:t$P<rZ9T=hIlJ=BAL#9h%9%.3B<8#mCD3f)UC&JcLB&JcLB&YlG:8!X&c<'cnbY4@Mq@
<**2]=b9f3=V+\:<`;db5W:8=(_@#Y!s/M5!.k3&!.k3&!.k4!!"]/3!sK#B(Ek:d5=\IH<EE;>=b9fR
=V"V8<)?4T3\Vj!'+>*K!WeYgJcLB&JcLB&JcP?A&-2h8"q)%^,VD&C8l&Ad=BM;#S66A)=&i-m7QiOU
*Yf.j"Te`"!.k3&!.k3&!.k36!"T)3":,GN*%*I&6qgHW='1&W]3,\I=&r6p83f'a+W(at"Tnc+f`6U(
JcLB&JcLB&Z2bC9!sJu@(*>"_5"A=F<EE;]=b9f1=V"V8<)?1R3A2Wr&dnmH!Wfh3JcLB&JcLB&JcO7"
&-2e6"ptnY+tY`>8P`8c=BNCBJm%qQ%p2n5;+sD@0ddtU%1!(<!LWq>!.k3&!.k3&!:p1$!<NB/$kaL*
002Hn:fLItTNRae%p2n5;GBYF1b'R_%LE:?!Vl_I!.k3&!.k3&!0[Bo!<NB0%29g11-A!!;,p\"=b9ef
=V"V:<`;dc5rU>=(_@#Y!s.'TJcLB&JcLB&JcN+W%flb9#nIdo.Q'F\:/Y(n=Q!>6=kQpg=B8Bt8jbTl
,T7:'"p4o-\c@<^JcLB&JcLB&df9jY!sT)D(a:Oj5tOjN<`m+>Jm%nP%p2n5;+sD@1++%U%0m";!La"?
!.k3&!.k3&!;$7%!<N?-$PF@'00)Bm:fLItT37Uc%p2n5;GBYF1asL]%L<4>!VueJ!.k3&!.k3&!0dHq
!<NB/$kjU-0g%lu;,p\"=]p>Z\60;D<`;db5W1,9(CpfU!s.*UJcLB&JcLB&JcN.X%fl_7#S%Rj.5X4X
9i=tm=Pm85=kHjf=B8Bt8jYKi,8h(#"p4l,])[E_JcLB&JcLB&e,U![!sJuA(Eb4d5Y+XK<``D<=b9fO
=V"V9<)H:V3\Vj!&dnpI!WebjJcLB&JcLB&JcPHD%fl\5"ptnY+tYc?8P`;d=IrZ`=V"V9<DcFY4>J9)
'FY3L!Wi/uJcLB&JcLB&JcM&9%fl\5"q)"],VM/F92JSh=T2HT=h%TF=BAL#:.IK).3936#Qt20gAlg*
JcLB&JcLB&[/^^<!X&`:',r8Q4%)b><EE;Z=b9f/=V"V9<`;db5W1,8(CpfU!Wfn5JcLB&JcLB&JcO=$
%fl_7#7V@f-SdhS9i=tm=M@pi=nc&/=B8Bs8O59d+rCju"Tndp!.k3&!.k3&!.k4D!"T)3":,JP*[rp0
7nuu`='2%sQrsr%<`Dmf69-YC)%d5\!s&H#!.k3&!.k3&!.k39!"T)3"UP\T+=f<785<)a=BPQ*Jm#Qc
%p2n5;+j;<0I7YN$O-\7!Sd[,!.k3&!.k3&!4;e:!<WK3%i?H@2aL#2<*!,W=b9f.=V"V9<DcFY4>A0&
'+>*K!Wfq6JcLB&JcLB&JcO@%%fl\5"ptnZ+tYc@8l/Jf=M7jh=nc&0=BAL#9h%9$-QNm1#6Y)/S,e-@
JcLB&JcLB&p&GU(!<WN6&K2oJ3C?D8<**1m=dW>&=BAO$:.IK).3935#Qt20quD<KJcLB&JcLB&Q2hEr
!WrW7&fW,N3^cV<<EE<$=b9ec=V"V:<`;a`5;ao4((LTR!Wh'VJcLB&JcLB&JcN4Z%fl_7#7M4a-8@SN
9Mnek=P[,3=k?de=BJU&:Im`/.j,W=#mCA2]E!N`JcLB&JcLB&ec63]!X&`:'-&AT4@MqA<EE;9=b9fM
=UnP7<)6(O2_6*g%g`CA!Ls.A!.k3&!.k3&!;6C'!<NB/%29g21-J*$;H6e#SQV:^%Tlb2:e<r4/Ku#C
$3^M4quD<KJcLB&JcLB&Q2hEr!X&c<'HSYY5"87E<``E%=b9eb=V"V9<)?1R3%Z?m&./RC!<M!VJcLB&
JcLB&JcN4Z%fl_7#RqLi.5X4Y:/b1q=P[,3=k6^d=BAHu8jbTk,8h(#"p4l,]`<WaJcLB&JcLB&ec63]
!X/i>'d"k]5=\II<`iJ;=b9fM=V"V9<)H:U3A2Wr&ISdF!<J_kJcLB&JcLB&JcPKE%fl_8#S%Ul.Q'F]
:/b1q=IiT]=V"V9<DcCV3\M`s&ISdF!Wi6"JcLB&JcLB&JcM):%fl_8#n@^m.Q'F]:/b1q=T)BS=ghHD
=BAL"911fo,T7:'"p4o-h#N$,JcLB&JcLB&[K$g=!X/l?(*G(a5Y+[L<`iJ[=b9f-=V"V9<DcCW3\Vj!
&dnmG!Wft7JcLB&JcLB&JcO@%%fl_8#n@^n.lKX`:K(:r=M7jh=nYu/=BAL"911fp,o[I)"p4o-SH+6A
JcLB&JcLB&p&GU(!X/l@(*G+c5Y+[L<`iIp=dN8%=BAL"9LLrr,o[I)"p4o-r;_ELJcLB&JcLB&Q2hEr
!X/l?(*G+c5Y+[L<`iK&=b9eb=V"V9<DcCW3\Vj!&dnmG!Wh*WJcLB&JcLB&JcN4Z%fl_8#n@^n.Q'I^
:K(:r=P[,3=k6^d=BAL"911fp,o[I)"p4o-]`<WaJcLB&JcLB&ec63]!X/l?(*G(a5=eOJ<`iJ;=b9fM
=V"V9<DcCW3\M`s&dnmG!WehlJcLB&JcLB&JcPKE%fl_8#S%Ul.Q'F]:/b1q=IiT]=V"V9<DcCV3\M`s
&ISdF!Wi6"JcLB&JcLB&JcM):%fl_8#S%Rk.Q'F\:/b1q=T)BS=ghHD=BAI!91(]m,T77&"p4l,h#N$,
JcLB&JcLB&[K$g=!X&c<'cne\5"A@H<`iJ[=b9f-=V"V9<)?1S3A)No&IJ^E!<Kk6JcLB&JcLB&JcO@%
%fl_7#RqIh-o4%W9i>"n=M7jh=nYu/=BAHu8jYKh,8h%""p4l,SH+6AJcLB&JcLB&p&GU(!X&`;'HJSX
4[r.D<EE:n=dN8$=B8Bt8O5<f+rCju"Tnf'!.k3&!.k3&!.k3:!"T)3":#>K*%*L(786Z[='5E(Jm#Nb
%Tlb2:J!i2/0Pf?#mCD3g]2p+JcLB&JcLB&[K$g=!X&`:'-&>R4%2h?<EE;Y=b9f.=V"V:<`;db5W1,8
(CpfU!s-%7JcLB&JcLB&JcO@%%fl_6"q)%_,qqAJ92S\j=M7jh=nc&0=BJU&:.IN+.N]E9#R(81S,e-@
JcLB&JcLB&p&GU(!<WN6&K2oJ3C?G:<**1m=dW>&=BAO$:.IK).3936#Qt20quD<KJcLB&JcLB&Q2hEr
!<WN5&K)fG3'p56<*!-"=b9ec=V"V9<DlO\4YnK,'Fb9M!Wh'VJcLB&JcLB&JcN1Y%KQY8$4n$t/2ojd
:K1@sh-#>4f3&Vd=&i*k76E:O*"r_c"9JV:!.k3&!.k3&!.k4$!"T)3"UP\T+=f<785E/b=BN:?Jm%hN
%p2n5;+j;<0I7YN$O-\7!Ls.A!.k3&!.k3&!;-=&!<NB0%M^'71d4E);cZt%SlqF`%p2k3:eF&7/gM;H
$O-\6!W2qL!.k3&!.k3&!0mNp!<NB0%29g21-J*$;H6e#r`OhU[oj5D<`Djd5rUA>(_@#X!s&GX!.k3&
!.k3&!.k3Y!"T)3":#>K*%!C%6qgHX='4<^Jm$`/%p2n6;boqL2Cfmd%g`CA!P8>`!.k3&!.k3&!7_&[
!<E9,$PF@'00)Bm:fLLu^0-%jpfS,0=&i-n7m8aY*u,7k"9JUn!.k3&!.k3&!.k4D!"T)2!sT)D(a:Ok
5tXpP<`kqrR9:&&=&i*l76E=Q*>Aqg"9JW$!.k3&!.k3&!.k38!"f56"UP\U+=f?885<)a='/U.Jm#Td
%p2n4;+j;<0I7YN$O6e9!S[U+!.k3&!.k3&!42_:!<NE1%M^$61d4E(;H6e#hcYP6fNA_e<`Dmf69$SB
)%d2[!s/M8!.k3&!.k3&!.k4#!"T)3":#>K*%!C&78-QY='34?Jm%kO%Tlb1:J!f0/0PiA#mCD3RK.p>
JcLB&JcLB&oDfC&!WrZ8&fN#K3^ZP:<*!+n=diJ(=BAL#9h.B(.3B<8#R(81q>c*IJcLB&JcLB&P5l-q
!sT)D(a:Oj5tOjN<`iL-Jm#We%p2n5;+sD@1++(V%0m";!SRO*!.k3&!.k3&!4)Y9!<WK3%i-9;2*XT+
;H?k$i)tY7fi\hf=&`!g6TQkH)\NM`"9JV8!.k3&!.k3&!.k4"!"T)3":,GN*@EU*78-QY='37@Jm%qQ
%p2q7;botN2_6-i&./UD!LWq>!.k3&!.k3&!:p1$!<NB/$kaL*002Hn:fLItTNRae%p2n5;GK_H1b'U`
%LE:@!Vl_I!.k3&!.k3&!0[Bo!<E9,$4n$u/N5se:K(:r=Fs\e=V"V9<DcFY4>J9)'Fb<N!WgsSJcLB&
JcLB&JcN(V%flb9#nIdn.Ps=Z9i=tm=Q*D7=k[!h=B8Bt8jbTl,T7:'#6Y)/\H%3]JcLB&JcLB&dJsdY
!X&c<'HJPU4@Mq@<**2<=b9fR=V+\:<`;aa5W1/:(_@#Y!s&Fj!.k3&!.k3&!.k4A!"T)3"9o5H)C-pq
6:t'Q<`l%uS66A)=&i-m7QiOU*Yf.j"Tnf#!.k3&!.k3&!.k36!"T)2!sK#B(Ek:e5=\IH<`]9'K3>fh
%p2k3:eO/:0I7YO$jQn:!S@C(!.k3&!.k3&!3lM7!<NE1%2Bp41-A!!;,p\"i`Uk9gfY1j=B8?r8O59e
+rCn""p4o-\,_*\JcLB&JcLB&d/X^Y!X&`:&fW)L3C6>6<*!+'_c_Ror)jP4=&i-m7QrXX*u5@n"Tndl
!.k3&!.k3&!.k4@!"]/3!sT)D(a1Cf5=\IH<EE:t=e/\+=B8Bt91(`o-6*[-#Qt20pAfdFJcLB&JcLB&
O8o^j!X/i>'cnbY4@Mq@;up'&KNYuk&6N"7;bfkK2_?3k&ISdF!WgmQJcLB&JcLB&JcN"T&-2h8#7M4`
,VM/E8P`8c='4NdJm$o4%p2n5;+sGB1FXC]%LE:@!O_u[!.k3&!.k3&!71]W!<E9,$4n!r.lBL[9i=tm
=N"?o=oDJ6=B8Bt8jbWm,o[L+#6Y)/Q2lL:JcLB&JcLB&mf3k!!X/i='HJPU4$uY;<*!+s=eAh.=BAL#
:.IN,.j5`@$3gS6!VQMF!.k3&!.k3&!07*g!<NB/$P=7$/N5pc:'4Ep='12[^0(tK<`Dph6p*4P*Yf.j
"TneU!.k3&!.k3&!.k3S!"]/3!sJuA(*=t]4[i%A<**2`=b9f6=V+\:<`;db5r^JA)A3D_"9JV3!.k3&
!.k3&!.k3r!"]/4":#>K)^R-t6:jsO<``DC=b9ch=]nj.<DcFY4Z"T0(CpfU!s&Ff!.k3&!.k3&!.k4=
!"]/4!sT)D(a(:b5"87D<EE;"=eSt0=BAO%:J!l50-qSO%1!(<!V?AD!.k3&!.k3&!0$sc!<NE1%29d/
0KMQ)8l&Ad='18]^f_4N=&i-m7Qr[[+W(at"p4o-e,Y(#JcLB&JcLB&XT/n5!X&`9&Ju]C2Es]+;H6e#
k?3C>iE6^o=&r9r8jbWn-63d0#R(81ZN,RWJcLB&JcLB&blA=V!<WK3%M^!30fq`p:fLIt=NFWs=V+\:
<DlO]5;k&:)%d5]"9JUf!.k3&!.k3&!.k4;!"]/4":#;H)'UUi5=\FG<EE;$=ef+3=BAO%:eF):0ddtV
%LE:@!<MclJcLB&JcLB&JcL`0#lt&/"UPYR*[`ZI4%)\;;cZt%MHRf!&6N"6;GBYG2Cp$i&ISgH!Wg^L
JcLB&JcLB&JcMhO&-2h8#7M4`,:tf<7nll]='4]iJm%,:&Qi+8;bp"Q4#&*('b1NR!s&G.!.k3&!.k3&
!.k3o!"f54!sJuA(*4hX4$uV9;cZt%b#sF$!a&Q+%TH;"7mAm_+rM"$#6Y)/OT9t5JcLB&JcLB&l2VCs
!X&`:&fDlE2Es]+;,gV!=K>T$=V4b;<`;dd6TQqL*>K%j"Tnc+nGn.@JcLB&JcLB&M?!k^!<WN4%i$,l
-S[YL8l&Ad='1Da`E<dT=BAI!9L_3'.j>iD$O6e9!RLgu!.k3&!.k3&!3#r1!<NB/$kX@$.lBL[9Mnbi
=BOomJm%2<&Qi+7;bfnN3A;d#'b1NR!s&G,!.k3&!.k3&!.k3m!"f54!sJu@'ceVT3C-53;H6e#bZT^(
"B\`+<)<ur76NIW+W(e!#6Y)/NrXb3JcLB&JcLB&kPu1q!X&`9&JuZ@1d"0!:fCCr=KP`(=V4b;<DlO^
5WCAB*#&hg"Tnc+mf7q>JcLB&JcLB&L]@SZ!<WK2%1Epi,VD#@7nli\='/Rc=iXYW=BAL$:J*u91+==^
&./XF!WgRHJcLB&JcLB&JcM\K&HMq9"ptnX+"/m+6V1'P<EE;j=b9f?=V=h=<`Dpi7R&d^,8q4)#R(;2
!NlES!.k3&!.k3&!65'P!<E9+#Rh=a+tPT878$KW<``DL=c$8c=BAL#:.[_Y3A;g%((U`V!s/L_!.k3&
!.k3&!.k45!"o;6!sT&A'ceVS3'^#0;H6b"=Kkr.=V4b;<`;de6p*7T+W1k##6Y)/li;V;JcLB&JcLB&
K`D/T!X&u<$P=3u.5EtP8l&Ac='1Sfb#o?Z=B8Bu9L_6)/L28L%LE:@!WgLFJcLB&JcLB&JcMVI&ci"8
"UGPN)C$dj5"/.A;cZt%nQCHHlWFj&=BAL#:.RZ20IInW&./UE!Wf>%JcLB&JcLB&JcN^h&ci%9"ptkU
*@<F!5Y"OG<*!+'dTMN3$!:8/;bp"R4>SGm+W1n$#R(;2!K-r0!.k3&!.k3&!9=+n!<E6)#7D+\+=T'-
6V1$N<EE:)ZWXD5&m/49;c$.W4uOu<)\`bg"p4o-l2ZD9JcLB&JcLB&K)blP&cr.=#RqFc+tGK56qU6R
<EE:)Q!)@7&m/49<)H@[5WCGF*Yo:o#6Y)/aT-nmJcLB&JcLB&U&Yf,!WrW6%i$'1/iQ!a9Me\h='5)t
Jm%ME'3J@<<DlR`696kN+;b\!#R(;2!N?'N!.k3&!.k3&!5\^L!<E6)#7D(Z+"&a&5Y"OG<*!(&eQIu:
%9Q_6<DlUb6p*:V,8q4!%1*1?!We)WJcLB&JcLB&JcOa0'*/+9"UGML)'LIb3^QA4;,gRt=LMA;=VFn>
=&i0p91;$&/L;AO%giLD!WhHaJcLB&JcLB&JcLB&'`\47!WrW5%MKd+.l9@U8kr8a<`iIk=j^@d=BJX*
;c$.W5<(;D*Z#@q#6Y)/!QP1l!.k3&!.k3&!1s6)!<NB.$4djk,V:l:6qU6R<EE:)pfW2OnQ?N-=&r9t
9h.K00dn.]&I\pK!s&G"!.k3&!.k3&!.k3c!#,G7!X&`9&/H<6/iQ!`92JPe='/SX=d)u"=BAO&;,'SJ
3\i0.)A<Pd"Tec-!JLN*!.k3&!.k3&!8[\i!<N?,#Rh:^+"&a%5=S=C;cQn$=LqYB=VOt><`Dpk8OGTs
.jGuI%LE=B!W`>`!.k3&!.k3&!.k3&!;lg2!<N?,#RqCa+=T$*5Y"LE;cQn$=I`OD=VOt><`Dsl8OGWu
/0l2M%giOE!W`>?!.k3&!.k3&!.k3A!#5M8!WrW5%20X'.Pa%N7nc`X<EE:)r)nVSoiVu2=&r=!:.do;
2D$3q((^iY"9SZ*UB#lGJcLB&JcLB&]DrZI!<NB.$4[ah+t>?/5tF^H;cZt%=P[,H=VOt><`Dsm8jkj$
/g_VU&I\pK!s/LT!.k3&!.k3&!.k4*!#5M8!X&`8%i$$..l07R852oZ<EE:)^0.sK'NeF;<)QLa76WX`
-Qa0;$j["=!Wh6[JcLB&JcLB&JcLB&q#D-1!<NB/$P*sl,:kW46:agI;cQn$=J/gM=Vb+A=&r9u:.dr=
2_QO#(_R8a"Tnf,!Pnbf!.k3&!.k3&!1<g&!<E9+#7D(X*$d'l4$lJ3:fC@q=BJ^X=o)8:=BJX*<)QI`
6p<O_-Qj9>%1*4A!W`=p!.k3&!.k3&!.k3\!#5M9!sJr<&/H93/2K@S7nc`X<EE:)iE;[R(0F[?<`Dpk
8jkj%0..k['+G6P"9JT)rW%NMJcLB&JcLB&JcOC&('+I="UGJI(*+YO1HRlm9MeYf<``C*_caZU(0F[?
<`Dpk8OPa$0..k['+P<Q"9JT)h>i--JcLB&JcLB&JcPHD('+I="UGJI(*"SM1HIcj92AGc<``C*V-2VW
(0F[?<Duah8OGX!0..k['+P<Q"9JT)]`<WaJcLB&JcLB&Q2hR!!<N?,#Rh7[*$Zsh3C$&,:Jt-o<``C*
L05Bs=]ed-<`N'p9h7W62(g6u(_R8a"p=u.!Ls.A!.k3&!.k3&!4;eA!<E6("UGJI'c\GJ0fVBd8kr5_
<EK0%k?4K](Kad@<`N$o9LhE22(^-s(_R8a"p>#/!VueJ!.k3&!.k3&!.k4#!#P_;!WrT3$P*sk+t53)
5"%t::fC@p='/SG=i+;X=BJX*<)QLb7R9'k/0u>S&e,-O"9JT)g&Q^)JcLB&JcLB&JcP?A(]aX=!sJo;
%hop*-ndJA6:X^F;H-[u=BMS+j&m4$=BAR(;c-:^76`df.jQ,O&If$N"9JT)\H%3]JcLB&JcLB&OT5jl
!WrT2$4ddf+!rQr4$a0B92ADa<EE7(=H?Sd=BJW><`N'p9h7Z92_cd,*#9+p#mLM6!<JPfJcLB&JcLB&
JcN"T(]a[?":#8D&f;Z9/2K:N77g3M;cQk"=BOomVcam>=BAR)<)QLb7m]<r0.7t_'bCcZ"p4o-!VQMF
!.k3&!.k3&!.k3s!#Ye=!sAf7%1sBs,:YE,4[Vb6:Jt.m='&L+c<84k)-C!B<`N'q:.dr?3]&E8+;tq)
$O?n<!W`>Q!.k3&!.k3&!.k3&!:9b(!<E6)"pk\L'cS;E0/YgW7S6EQ;cQk"=BMe1kuep,=BAR(<)QLc
84,R#0e4Lj(_[Ad#6b22!<KS.JcLB&JcLB&JcLc1$3://"9f&=%hom'%jih`3Boo&9M\Pc<EE7(=I`On
=9_i-<Du^h8eFNY4#JZ>+rh@1%1*7B!s/K(PQ6:8JcLB&JcLB&X8j(<!<N?,#7:qR(`ahN0K)$Z7S6BO
;cHe!r`JbpY$(a+)-9j=;c6Cb845[&1Fsjq)ANel#mLM7!W`>m!.k3&!.k3&!.k3&!6Y?[!<E6("U>>C
&Jc</-S7,75=7t8:Jk%j<`f9&eQL4$)d$3D=&i3t:eaPN5s.%Z.O6#O'+PBU"U"l-!RUn!!.k3&!.k3&
!.k48!#bk=!WrQ0#R_.W)'1%Q0K)!Y77g3L;H-Xs=8l=3=n#Q6=BJX+<`E!p:.n)E4ukDN-QsEE&If$O
"Tnf,!O)QU!.k3&!.k3&!/LUY!<E6("U>_K%2'Eq+X\it3'KZ!8ki,[<)lt#r`H7)r`BY3=&r=";,9kV
6pNgk0IdJV*Z5Y&$O?q>!s/K(NrXb3JcLB&JcLB&VZ7Y:!<N?+"pk\K'H%r;.5*P>5=7q6:/Fhf<E<3#
=Sl70=oMM@='&F&;c-=a8OYp-2_cj1+<)(.%LNFE!s8H&m/V_<JcLB&JcLB&JcNdj*<?0B!X&Z4$4[X`
)^$FW0fD*Y6qBsG:f:7m<``B%=Pd35=oMMC=&r@$;c-=b8k)-13&<08+rqL6%h&aK"9S]+!R(Oq!.k3&
!.k3&!.k42!$)(@!WrT1#n.=X(`X_I/M]7I5Xe4::/Fhf<E<1&r`I!>qH<f"*`lED<E)mo:JFGN69[Cd
0.J4h)ANhn$3p_;!WiB'WrR_OJcLB&JcLB&K)blP*WZ<E"9f#;%1j6l*[<'b1H7K^6qBsG:f:4k<E<1&
r`Hs=rE'k;=&r=#;Gg4`8Oc'23]/TA,p4-B&e>?S#R1D6!W`=Y!.k3&!.k3&!.k3E!$2.A!WrQ0#R_+T
()e8?.5!D94?u;)8ki)Y;cHat<rZ8#=N4MB=<L[H<`N*t;G^+^8Oc$13]/TA-6X?G'+YKX#6b53!W`>b
!.k3&!.k3&!.k3&!5JRV!<E6'"9f#:$kEsd)]p=S/i,FK5=7n39MSD^;cHatr`B&#l<34Or)b+D=&r@%
<)QRh9hIrF5s74c0InIn*>fJ%%13@F"9S]+!QG+k!.k3&!.k3&!.k4,!$_LF!WrQ/#7:kM',MT0,Uk<#
2EF#g77^'G:Jaqf<)lt"=',<%elhoQs&U:D<`N.!;c-@d9M%]@5Wh"_0.S@n*>oS(%LWOH"Tni*!ModJ
!.k3&!.k3&!.k4K!<*!A!WrQ0#RUtN',MT0,:G)t2*!ca6UjX?9i"Va;cHas<rQ1s=Q*E[=T2AG<`W4"
;c6Ih:/"8M77'1!2_m!8,p=9H'bLo`#mUV9!WiB&!J:B(!.k3&!.k3&!1Ns*!<E6'!sAf6$4IFY()e5<
-7^`*2`a,g6k)XX92/2Y;,U=l<E3(#rE&_qoNClirDt:G<`N*u;c6Ig:/"8N77'4$3&NBA-mToT(_dPl
$OI%A"9S]+!T3s0!.k3&!.k3&!.k3]!%.dJ!WiH,"pbPE%h]Tp*?c^W/MK"?4$Gqu7S$-F:/=\`;H$Oo
<E9$!qcEYsoiV)mr`1:E<E)mq;Gg7c9hS&J77'7&3ArWF.OH>\)]'2"%1<II"U"o/rW0e7JcLB&JcLB&
JcLB&ec7-"!<N<)"9o);$k<j`(E4G?-7UT%1cIK[5XRt18P;`O:Janc;H$Ln<;onm<rH+q<rQ+u<!uW&
;Gg7d:/+AR84FFa5sIIl2D[!:-mToT)&<hq%13@G"U"o/rW/SjJcLB&JcLB&JcLB&o`4sl-3=5N"9o);
$OmX\()\)7,:4ll0f1gL4?l,!77Tm@92&&T:Jakbr_i_ooMkcf-rNr?;,C%a:/+DS8Ol6<69dUp3&NHE
.ju\e*Z>h/&Io3V#R1G8!s8H&qZ)3JJcLB&JcLB&JcM#8rW*K1!WrQ/#7(YF%M9Bk)&sG8,:4ij0/>CD
3]oSk6:=7384cEH9MA1[:B+,`;#X6=:/4MX9M7uL84Q-;6U<q"4#f,S0J+b%,U"3J(_mYp%1<II"p>#1
!r`5R!.k3&!.k3&!.k3&!3lMQ!<E6'!sAc3#71bI%hTKk)&s_B,UY&m0/>@B3''/c5=%V'6q'R87nEVN
s%<,[r^eJ.84Q-=779I.5X%=m3B&fO0J4k(-6jWR)Aj2%&.T*U#R:M9!s/Q'!Or,]!.k3&!.k3&!.k3r
!<*!H!WiH,"U55=$OmUY',DE(*?QIO-RgPu0JP@@2`Ni[4?Ykm5<qM#pd,c_5sR\"5!D+k3]T,W1bpd=
/1N%p,9\*>*#TP,&eGN]$4$k@"9\f.!r`4d!.k3&!.k3&!.k3&!:0^b!@7dK!s8Z0"pbMC$k<g]'G_N)
*?QFL,pt,k/1iM/1,CaE2)[BPr]'m;rAZ&]2E!EL1GU[=/hJS&-RL)_+<DI>(DRSq%h/mR#R:P;"9S],
rW2QiJcLB&JcLB&JcLB&M?*VV"9JW,!sBSI"pYGA$OmUX&el&s)&jP:+<_sT,pt)i.Olr"r[n%#r[f9E
/1W2!-mp>f,9e6P*?5t7()7Jp%h9!U#m^b?"U"o/!rW/H!.k3&!.k3&!.k3&!2onr!?M:D!s8Z0"pYD?
$4@:Q%hTEf'c%T')B0Y:*ZlLJ+oW\_,9S0S+X%sM+!)FB)AsA.'bh;n&.T-X$OI(D"pG,4!s/Q&!NlES
!.k3&!.k3&!.k3h!;urt!Z2"B"9eu7#7(VC$OdIS%hK<c',2/s()Ied)#G3M(_mi'()7Mt'+tlg%h9$W
$OR1G#6k>8"9\f/!Wr<$MZA>/JcLB&JcLB&JcOa0quIT8!WrN-"9er5#6tM@#mq%J$k3XU%M'*D&H31Q
%LrpV$k!CL#m^eA"pP56"9Sc*!rW/_!.k3&!.k3&!.k3&!.k4L!;lls!r`<%"TJZ*#6"l-#lY/($N:A2
#lb/0#6"f+"TJT&!rW/;!.k3&!.k3&!.k3&!1Eob!W<)u"9&H#"TSc'#5eZ'"T8H$!rN(l!.k3&!.k3&
!.k3&!42b%!W)rh"8W)p!W)kK!.k3&!.k3&!.k3&!6tT(!Rq+$!.k3&!.k3&!.k3&!9+"T!N6!M!.k3&
!.k3&!.k3&!.t9'!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!9+!/~>

%%EndBinary
grestore
np
grestore
gsave
472.807 875.709 mo
472.807 -84.1818 li
-67.1928 -84.1818 li
-67.1928 875.709 li
472.807 875.709 li
clp
246.013 471.287 mo
226.13 471.287 210.013 455.169 210.013 435.287 cv
210.013 415.405 226.13 399.287 246.013 399.287 cv
265.895 399.287 282.013 415.405 282.013 435.287 cv
282.013 455.169 265.895 471.287 246.013 471.287 cv
cp
false sop
0 0 0 .807065 cmyk
ef
.75 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
246.013 471.287 mo
226.13 471.287 210.013 455.17 210.013 435.287 cv
210.013 415.405 226.13 399.287 246.013 399.287 cv
265.895 399.287 282.013 415.405 282.013 435.287 cv
282.013 455.17 265.895 471.287 246.013 471.287 cv
cp
0 0 0 1 cmyk
@
0 0 0 0 cmyk
%ADOBeginSubsetFont: SBTAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LBTODJ+Calibri gcheck setglobal} if
1 3930 14 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>LBTODJ+Calibri AddT42Char 
LBTODJ+Calibri /CharStrings get begin
/g14 14 def
end
LBTODJ+Calibri /Encoding get
dup 48 /g14 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LBTODJ+Calibri*1 [33{/.notdef}rp /g19 /g15 /g9 /g1 /g6 /g16 /g11 /g18 /g8 /g20 /g10 /g4 /g21 /g23 /g12 /g14 207{/.notdef}rp]LBTODJ+Calibri nfLBTODJ+Calibri*1 [0 -28 -28 0 0 0 ]msf257.667 446.258 mo(0)shLBTODJ+Calibri*1 [0 -18.6667 -18.6667 0 0 0 ]msf264.667 436.879 mo("#)[-9.80734 0 ]yshLBTODK+SimSun [0 -18.6667 -18.6667 0 0 0 ]msf264.667 417.264 mo(\000\001)sh2 lw
220.557 409.831 mo
178.353 362.229 li
0 0 0 1 cmyk
@
185.279 362.504 mo
177.557 361.331 li
177.796 369.138 li
cp
ef
152.756 778.615 mo
152.756 779.615 li
132.321 779.614 115.757 763.05 115.756 742.615 cv
115.757 722.18 132.321 705.615 152.756 705.615 cv
173.191 705.615 189.755 722.18 189.756 742.615 cv
189.755 763.05 173.191 779.614 152.756 779.615 cv
152.756 778.615 li
152.756 777.615 li
162.424 777.614 171.168 773.699 177.505 767.364 cv
183.84 761.027 187.756 752.283 187.756 742.615 cv
187.756 732.947 183.84 724.203 177.505 717.866 cv
171.168 711.531 162.424 707.615 152.756 707.615 cv
143.088 707.615 134.344 711.531 128.007 717.866 cv
121.672 724.203 117.757 732.947 117.756 742.615 cv
117.757 752.283 121.672 761.027 128.007 767.364 cv
134.344 773.699 143.088 777.614 152.756 777.615 cv
152.756 778.615 li
f
%ADOBeginSubsetFont: TZMBAA+SimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/TZMBAA+SimSun 1 GetGlyphDirectory3 <001C60D8A8C9B5EE310DA25942C632D406A768EBFAFD1265AD52F756FE08E5983C8E618BCFBC032C238878AF509935FC6740BAFE8F13C0A11598055321C86995FD6A68642563C98F787403510735ECE6375ABCB4B14CD85F6039E84C6418DC927119E659DA47BB2E92E9C00F0E212BD9142E1D6E03BF059595E829F6E29D4B2E6178> |!endend end
%ADOEndSubsetFont
LBTODK+SimSun [0 -28 -28 0 0 0 ]msf161.022 756.485 mo(\000\003)shLBTODJ+Calibri*1 [0 -18.6667 -18.6667 0 0 0 ]msf168.022 728.485 mo(0)shLBTODK+SimSun [0 -18.6667 -18.6667 0 0 0 ]msf168.022 722.232 mo(\000\001)sh101.476 785.966 mo
101.101 785.966 li
101.101 701.095 li
101.101 700.996 101.141 700.899 101.211 700.83 cv
101.281 700.76 101.378 700.72 101.476 700.72 cv
195.567 700.72 li
195.665 700.72 195.762 700.76 195.832 700.83 cv
195.902 700.899 195.942 700.996 195.942 701.095 cv
195.942 785.966 li
195.942 786.065 195.902 786.162 195.832 786.231 cv
195.762 786.301 195.665 786.341 195.567 786.341 cv
101.476 786.341 li
101.378 786.341 101.281 786.301 101.211 786.231 cv
101.141 786.162 101.101 786.065 101.101 785.966 cv
101.476 785.966 li
101.476 785.591 li
195.192 785.591 li
195.192 701.47 li
101.851 701.47 li
101.851 785.966 li
101.476 785.966 li
101.476 785.591 li
101.476 785.966 li
f
85.197 742.829 mo
115.56 742.649 li
@
110.73 737.677 mo
116.76 742.642 li
110.789 747.677 li
cp
ef
152.756 706.615 mo
151.765 572.877 li
@
156.8 577.64 mo
151.756 571.677 li
146.801 577.714 li
cp
ef
209.392 535.551 mo
188.925 535.697 li
@
193.761 540.663 mo
187.725 535.706 li
193.689 530.663 li
cp
ef
95.905 191.671 mo
151.564 298.814 li
@
144.914 296.86 mo
152.117 299.879 li
153.788 292.25 li
cp
ef
205.426 730.727 mo
195.942 730.727 li
195.942 720.582 li
203.789 720.582 li
203.789 701.273 li
195.942 701.273 li
195.942 701.095 li
195.942 700.996 195.902 700.899 195.832 700.83 cv
195.762 700.76 195.665 700.72 195.567 700.72 cv
170.407 700.72 li
170.407 692.78 li
205.426 692.78 li
205.426 730.727 li
205.426 692.03 mo
170.407 692.03 li
170.407 691.127 li
205.426 691.127 li
205.426 692.03 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[40.2545 0 0 35.6727 -326.023 689.44 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 123 
/H 109 
/M[123 0 0 -109 0 109 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 123 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLQ+
JcLB&JcLB&JcLB&ScF9~>

%%EndBinary
grestore
np
205.426 692.78 mo
170.407 692.78 li
170.407 692.03 li
205.426 692.03 li
205.426 692.78 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[1.30909 0 0 35.6727 -288.059 689.44 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 109 
/M[4 0 0 -109 0 109 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
195.192 730.727 mo
187.805 730.727 li
186.559 727.052 184.75 723.636 182.483 720.582 cv
195.192 720.582 li
195.192 730.727 li
185.686 730.727 mo
170.407 730.727 li
170.407 712.385 li
171.191 712.844 171.955 713.331 172.698 713.848 cv
172.698 720.582 li
179.952 720.582 li
182.393 723.591 184.345 727.014 185.686 730.727 cv
172.698 711.444 mo
171.952 710.966 171.188 710.513 170.407 710.089 cv
170.407 701.47 li
172.698 701.47 li
172.698 711.444 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[29.7818 0 0 25.5273 -326.023 699.585 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 91 
/H 78 
/M[91 0 0 -78 0 78 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 91 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 91 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 91 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 91 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
iW+Q1JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcOd1JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&iW+Q1JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcOd1JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&iW+Q1JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcOd1JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&o`0L~>

%%EndBinary
grestore
np
187.805 730.727 mo
185.686 730.727 li
184.345 727.014 182.393 723.591 179.952 720.582 cv
182.483 720.582 li
184.75 723.636 186.559 727.052 187.805 730.727 cv
172.698 713.848 mo
171.955 713.331 171.191 712.844 170.407 712.385 cv
170.407 710.089 li
171.188 710.513 171.952 710.966 172.698 711.444 cv
172.698 713.848 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[21.2727 0 0 18 -326.023 707.113 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 65 
/H 55 
/M[65 0 0 -55 0 55 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 65 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 65 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 65 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 65 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcNIa`rGr9L]Fmabl@A9NW?<adf8e9PQ7`af`149RK0/ahZ)X9TE(SajT"'9V?!"alMoK9X8nFanGgo9
Z2fjapA`>9\,_9ar;Xb9^&W`b!!'h7_uPAhq>e>2aoI"noDl],ciAXtmJt'&ec::%kQ&Eug]2p+iW-do
_Z58gqZ+G3aT-nmo`2f-cN&Osmf:0'eGt1$klAO!gAlg*irHmpi;eH0h#P7jk5^)6f)WVdm/V_<d/^u^
o)O@Bb5f?Xq#H!H`;m^Rrr@WN^Au4PrVqTP\H'ePp]$0PZN/APnc+aPXT6rPli3=PVZ>NPjo:nPiW-ao
_uK`9K`J[aaoD/9MZC*aci<S9OT;Naec5"9QN3rag]-F9SH,AaiW%j9UB$eakPs99W;r4amJk]9Y5jXa
oDd,9[/c'aq>\P9])[Kas8Tt9_#T&er;aY5`rL\kpAi#/blE=qnGpB)df=t"lN"a#f`6U(jT**rhZ2X9
JcPcM_#MCSJcPQG_#MUYJcP?A_#Mg_JcP-;_#N$eJcOp5_#N6kJcO^/_#NHqJcOL)_#N["JcO:#_#Jo
~>

%%EndBinary
grestore
np
195.942 730.727 mo
195.192 730.727 li
195.192 720.582 li
195.942 720.582 li
195.942 730.727 li
172.698 701.47 mo
170.407 701.47 li
170.407 700.72 li
195.567 700.72 li
195.665 700.72 195.762 700.76 195.832 700.83 cv
195.902 700.899 195.942 700.996 195.942 701.095 cv
195.942 701.273 li
172.698 701.273 li
172.698 701.47 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[30.7636 0 0 26.1818 -326.023 698.931 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 94 
/H 80 
/M[94 0 0 -80 0 80 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 94 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 94 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 94 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 94 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&jT)(UquD<KJcP'9U]:&gJcLB&mf9-_nc47AJcPECU]9]]JcLB&q#I2ikQ$27JcPcMU]9?SJcLH(
s8Sqqh>i--M#dDPWrL`PJcLf2p&D5qe,Y(#P5t+P[/\GPJcM/<U]96PJcLQ+r;W_qgAlg*Mu`VPXoHrP
JcLo5o)H#qd/\auQ2p=P\,XYPJcM8?kl8<q`rL\kTE+$P_>h@PJcMVIhZ(Uq]`<WaWW:`PbQ#'PJcMtS
eGmnqZN,RWZiJGPec2cPQiNl]i;^aq^AricVuYTPaoApPJcMnQf)O%q[/bdYZ2i;Pe,QWPJcN7[bl?>q
WrR_O]E$"Ph>a>PJcNUe_Z/WqT`BZE`W3^PkPq%PJcNso\GtpqQN2U;ciCEPnc+aPJcO=$Y5e4qUB#lG
_uRRPjo:nPJcNmm])V'qR/hg=c2b9Pn,JUPJcO7"YlF@qNrXb3fDquPq>Z<PJcOU,VZ6YqK`H])iW,bR
rr@WNJcOs6U]:/jJcLB&li<g\o`0RDJcP<@U]9f`JcLB&p&LlfJcLB&jT)(UquD<KJcP'9U]:&gJcLB&
mf9-_nc47AJcPECU]9]]JcLB&q#I2ikQ$27JcPcMU]9?SJcLH(s8Sqqh>i--M#dDPWrL`PJcLf2p&D5q
e,Y(#P5t+P[/\GPJcM/<U]96PJcLQ+r;W_qgAlg*Mu`VPXoHrPJcLo5o)H#qd/\auQ2p=P\,XYPJcM8?
kl8<q`rL\kTE+$P_>h@PJcMVIhZ(Uq]`<WaWW:`PbQ#'PJcMtSeGmnqZN,RWZiJGPec2cPQiNl]i;^aq
^AricVuYTPaoApPJcMnQf)O%q[/bdYZ2i;Pe,QWPJcN7[bl?>qWrR_O]E$"Ph>a>PJcNUe_Z/WqT`BZE
`W3^PkPq%PJcNso\GtpqQN2U;ciCEPnc+aPJcO=$Y5e4qUB#lG_uRRPjo:nPJcNmm])V'qR/hg=c2b9P
n,JUPJcO7"YlF@qNrXb3fDquPq>Ys~>

%%EndBinary
grestore
np
203.789 720.582 mo
195.942 720.582 li
195.942 701.273 li
203.789 701.273 li
203.789 720.582 li
195.192 720.582 mo
182.483 720.582 li
179.806 716.975 176.488 713.874 172.698 711.444 cv
172.698 701.47 li
195.192 701.47 li
195.192 720.582 li
179.952 720.582 mo
172.698 720.582 li
172.698 713.848 li
174.419 715.043 176.027 716.389 177.505 717.866 cv
178.367 718.728 179.183 719.634 179.952 720.582 cv
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[19.9636 0 0 31.7454 -315.878 691.076 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 61 
/H 97 
/M[61 0 0 -97 0 97 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
l2ZD9JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&mJu\VVZ;;KquHTp
o)ediT`BoLrW3!"!!D]mrW<'"R/iHO#6=i,!WrQ/"nr6!"pbA9"9\f.!W`=`!9sQm!!rZ,!WrQ/"pbMA
rX/H/rX&r<#R:P;"9S]+!Ug#?!5JRC!<N?+"pbPE%1Wm[&Gd"<&./pX%1<LK"p>#0!Ta<5!6Y?Q!<E6)
"pkYI&/#Zl()If)rYb\P%2Tcp'G:rd$O?q>!W`>W!.k4$!"T)3!sJr<%MBKn)B9b=+!CM*%j2r8*?,n5
'bLo_#6b22!R^t"!8dc$!<NB.#n7I])&s_A,:+Za-n-Sn-RL)_+Wh[@'G(ZY"Tnf,a8gelkl;4p!X&]7
%MBQs+!MsW.4["L0+]`f.ju_i+W_O;&If$N"9JV<!.k4B!$_LG"9o2C&f)E-+s\Nd/hf%;1bpa:.OQJb
*Z>e+%1*4A!WfY.JcP`L,67iJ"pk\L'Gqf3+snck0f1aF1GCC0,pFEM(_dMi#R(;3!NH-U!!NB)!sJo:
*=WSp(`OM?-7^`*2)R-B.O?5Z)Aa)!%13=C!s&Fq!0R<m!<E6)"pbPF&/#]p*?lj^'/;:!0J"Oo*#KD'
%h&dM"Tnf,!L<_T!#P_<!X&Z3#n%1R',Vc9.5!>0/L_na(D@>c%1<II"U"l-!K-rS!$VFE!WiH-"pbMD
%hop)-7gc%.jc>T'+YKX#6b54!W`<%!.k3R!<*!:!WrN."pk\L(EOhO/M/Cr*>K(n#R1G7!s8H&o`0RD
[K-:-'`nI?"pkbS*$Zm`/1;\]'+G6P"9S`)!U0T9!58FL!<E6("UGPO)^6[\.jlJY&e#$L!s/K(h#N$,
`W-YQ!X&`:',i#A.Olbf)%d5]"9JVO!.k3t!##A7":#>K)BgIX.OH8U&ISgH!Wg=Al2ZD9nGj4'!X&`:
',i#A.Olbf)%d5]"9JV$!.k4J!##A7":#>K)BgIX.OH8U&ISgH!WeekL&_;V!X&`=$kjO&-RpSm+;kb!
#6Y)/OoURD%06M5#7M7a+X\`h-6O00&ISgH!We)WRK+!%!X&`:',i#A.Olbf)%d5]"9JW&!.k3H!##A7
":#>K)BgIX.OH8U&ISgH!WhlmJcMqR'*/.;#7M7a+X\`h-6O0<$O6e9!U0T9!4W"B!<NB/$kjO&-RpSm
+;kb!#6Y)/hZ/6._>k5M!X&`:',i#A.Olbf)%d5]"9JVS!.k3p!##A7":#>K)BgIX.OH8U&ISgH!WgIE
JcO@%'*/.;#7M7a+X\`h-6O0<$O6e9!Pnbf!8mhj!<NB/$kjL$-7LAi*uGRt#6Y)/[fD![l2VIu!X&`9
&fDf<-n$>_(_@&["9JV+!.k4C!##A7"9o5G(`jqM-R0WJ&./UE!Wf%rJcPcM'*/.:"ptnW*?laS+WM7.
$3gS6!LWqE!!WH*!sJuA'FYm%+X%mE'+G6O!s/La!0[Bo!<E9+#RqC_)]]q;((gr\"Tec,!UTl=!42_>
!<E6)#7D%U()Rl'&e56Q"9JT)irFZ2]`8WF!WrT3$P*g^&ePT]#6b22!S@C(!65'O!<E6)"pbSF%1N^Q
#R(>4!<LIGJcO-t%fl_6"9o):#mgkB"U"l-!Q+nh!87D_!<E6("9er5"pG,3!WiD4!.k42!<3*"!rE'"
!r`5'!.k4;!;urs!r`4p!.k4C!;Z_^!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!9sQ9!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!65(i~>

%%EndBinary
grestore
np
182.483 720.582 mo
179.952 720.582 li
179.183 719.634 178.367 718.728 177.505 717.866 cv
176.027 716.389 174.419 715.043 172.698 713.848 cv
172.698 711.444 li
176.488 713.874 179.806 716.975 182.483 720.582 cv
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[9.81818 0 0 10.4727 -315.878 712.349 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 30 
/H 32 
/M[30 0 0 -32 0 32 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 30 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 30 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 30 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 30 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
VZ>cWq>dYuj8\]N[/f7eli=Zuj8\3@_Z8`sh>k[uj8[^2d/`5,ciD\uj8[4$hZ2^:_>r]uj8Z^km/Z2H
ZiK^uj8Z4]qZ,[VVZ6_sjSu+Xq>]d\VZ?;fo)GTfli6e\VZ>fX!<8qsj8\uVXT7D]oDl5uj8\KH])^mk
joE6uj8\!:aT1B$fDs7uj8[L,f)Xk2aoL8uj8[!sjT+?@]E%9uj8ZLeo)RhNXoS:uj8Z"Wj8XW~>

%%EndBinary
grestore
np
195.942 720.582 mo
195.192 720.582 li
195.192 701.47 li
172.698 701.47 li
172.698 701.273 li
195.942 701.273 li
195.942 720.582 li
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 895.193 405.032 ]ct
[19.9636 0 0 23.8909 -315.878 698.931 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 61 
/H 73 
/M[61 0 0 -73 0 73 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcNmm`;fQ3JcO7"`;f3)JcOU,`;eitJcOs6`;eKjJcP<@`;e-`JcPZJ`;ddVL&h2PaT&jPO9"nPdf6QP
RK2UPh#F8PU]B<Pk5UtPXoR#PnGe[P\,a_PqYuBP_>qOSrW%NMbQ,T]oDjICec<Ygl2ZD9huL^qhuJ?/
l2\d&^As2mp]&P=[/cKmmJki=WrSdmj8\-=T`D(mg&LF=QN4Amci<_=N<$Zm`W#r<K)ism`;fT4JcO4!
`;f6*JcOR+`;eluJcOp5`;eNkJcP9?`;e0aJcPWI`;dgWK`M,Pa8`dPNr\hPdJpKPR/lOPg]+2PUB'6P
jo:nPl2\a&`;f`8JcO'r`;fB.JcOF'`;f$$JcOd1`;eZoJcP-;`;e<eJcPKE`;ds[JcGcN`;dUQMZEPP
c2Y3PPlU7PfDhoPT)dsPiW#VPW;tZPli3=PZN/APp&C$P]`?(Ps8R`P`rO'Xq#H!Hd/_,bmf7q>gAo1l
jT'l4jT*7!gApL=LB.8PaoApPOT=tPe,QWPRfM[Ph>a>PV#]BPkPq%PY5m)Pnc+aP\H'ePqu;HP_Z7XT
r;_ELblG]^o)O@Bf)Wbhkl?;8i;ggrhZ/6.lN"m'eGt1$o`2r1b5d+orrC";_#T>mq>\\=[fDWmn,Lu=
XT4pmjo=9=UB%4mg]-R=JcNmm`;fQ3JcO7"`;f3)JcOU,`;eitJcOs6`;eKjJcP<@`;e-`JcPZJ`;b>
~>

%%EndBinary
grestore
np
0 0 0 1 cmyk
%ADOBeginSubsetFont: SBTAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LBTODJ+Calibri gcheck setglobal} if
1 1848 7 <0001000ffffa03d7050e00220065b718400d014d181100b8ffc0b40d014d
0006b8ffe8b310014d06b8fff0b30f014d06b8fff0b30d014d06b8fff6b3
0c014d06b8ffe8b30b014d06ba02110011ffc0b50d014d110612b80128b3
1d510c55003f3fed32012f2bf12b2b2b2b2bc52b10c42b313001140e0223
2111140e0223222e02351121222e0235343e023321321e0203d704090d08
fe940814211918221408fe94080d080505080d080384080d090404c4131c
1108fb9e080c070505070c08046208111c13131d120808121d00>LBTODJ+Calibri AddT42Char 
LBTODJ+Calibri /CharStrings get begin
/g7 7 def
end
LBTODJ+Calibri /Encoding get
dup 49 /g7 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LBTODJ+Calibri*1 [33{/.notdef}rp /g19 /g15 /g9 /g1 /g6 /g16 /g11 /g18 /g8 /g20 /g10 /g4 /g21 /g23 /g12 /g14 /g7 206{/.notdef}rp]LBTODJ+Calibri nfLBTODJ+Calibri*1 [0 -16 -16 0 0 0 ]msf192.53 714.492 mo(1)shLBTODK+SimSun [0 -16 -16 0 0 0 ]msf192.53 706.695 mo(\000\001)sh220.557 460.743 mo
177.972 509.348 li
@
184.896 509.032 mo
177.181 510.25 li
177.374 502.442 li
cp
ef
175.109 72.3555 mo
155.226 72.3555 139.109 56.2377 139.109 36.3555 cv
139.109 16.4732 155.226 .35553 175.109 .35553 cv
194.991 .35553 211.109 16.4732 211.109 36.3555 cv
211.109 56.2377 194.991 72.3555 175.109 72.3555 cv
cp
0 0 0 0 cmyk
ef
175.109 72.3556 mo
155.226 72.3556 139.109 56.2379 139.109 36.3556 cv
139.109 16.4733 155.226 .355591 175.109 .355591 cv
194.991 .355591 211.109 16.4733 211.109 36.3556 cv
211.109 56.2379 194.991 72.3556 175.109 72.3556 cv
cp
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: TZMBAA+SimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/TZMBAA+SimSun 1 GetGlyphDirectory2 <001C60D8A8C9B5EE310294472D827A8C091983C861FAB16EFA31B6C000DA6343C945B6A8402C4004F5A1FEBBDF35AAE3BD2759C0377BCD561F7FD75C61A63667BC925FF4EF48AC8254C034A3232BF4467BB08C05BD6E2799400548F9B2B18EA450E0F302CB6372A7D26F08CA5C3F062987737AB1AEF456837FC595D08E61C18611C178D641B98C25076289B077C5EAAD3C8D82E2C3E841BF19F22D395F4BA4C487DAFAB6BE9D3C5EC2AC7A6C7B23605862FFB1513DBF06C0A0C68B076C1DEE79036C14838FA7BBB1D750FC987CB77A14CC257079F2CAA9FC929E9AD3F8BF13E84A22CB> |!endend end
%ADOEndSubsetFont
LBTODK+SimSun [0 -32 -32 0 0 0 ]msf187.909 52.1113 mo(\000\002\000\001)[-32 0 ]ysh245.651 371.879 mo
225.769 371.879 209.651 355.761 209.651 335.879 cv
209.651 315.997 225.769 299.879 245.651 299.879 cv
265.534 299.879 281.651 315.997 281.651 335.879 cv
281.651 355.761 265.534 371.879 245.651 371.879 cv
cp
@
%ADOBeginSubsetFont: SBTAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LBTODJ+Calibri gcheck setglobal} if
1 4898 17 <00010029fffa034b03bc002f0086b90031ffc040110b014d2f080b014d2e
100b014d3b2e0118b8fff0b60b014d34180117b8fff8b30b014d16b8fff0
b60b014d34160109b8fff0402a0b014d00080b014d3c0001382301360b01
0b2010014d0b200c014d0b0b31302949230b111d49114c054c003f3f3f12
39393f111201392f2b2b3130005d5d015d2b2b5d2b2b5d2b5d2b2b2b2516
14060623222e022703030e0323222626363701012626363633321e021713
133e033332161606070103430813271f1e23150b04d8d7040b15221c1d25
1101090118fef708011327201d23140a04cdd0040a111f1b1d25120209fe
f92c0e130c0503070b070165fe9b070b0703050c130e01b701a70e130d04
03060a07feb1014f060a0703040b140ffe5e>LBTODJ+Calibri AddT42Char 
LBTODJ+Calibri /CharStrings get begin
/g17 17 def
end
LBTODJ+Calibri /Encoding get
dup 50 /g17 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LBTODJ+Calibri*1 [33{/.notdef}rp /g19 /g15 /g9 /g1 /g6 /g16 /g11 /g18 /g8 /g20 /g10 /g4 /g21 /g23 /g12 /g14 /g7 /g17 205{/.notdef}rp]LBTODJ+Calibri nfLBTODJ+Calibri*1 [0 -20 -20 0 0 0 ]msf253.651 350.516 mo(2)shLBTODJ+Calibri*1 [0 -13.3333 -13.3333 0 0 0 ]msf258.651 341.854 mo("#')[-7.00525 -7.00525 0 ]yshLBTODK+SimSun [0 -13.3333 -13.3333 0 0 0 ]msf258.651 320.839 mo(\000\001)sh209.651 335.879 mo
189.289 335.879 li
@
194.089 330.879 mo
188.089 335.879 li
194.089 340.879 li
cp
ef
364.69 372.233 mo
344.808 372.233 328.69 356.116 328.69 336.233 cv
328.69 316.351 344.808 300.233 364.69 300.233 cv
384.572 300.233 400.69 316.351 400.69 336.233 cv
400.69 356.116 384.572 372.233 364.69 372.233 cv
cp
0 0 0 0 cmyk
ef
364.69 372.234 mo
344.807 372.234 328.69 356.116 328.69 336.234 cv
328.69 316.351 344.807 300.234 364.69 300.234 cv
384.572 300.234 400.69 316.351 400.69 336.234 cv
400.69 356.116 384.572 372.234 364.69 372.234 cv
cp
0 0 0 1 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: TZMBAA+SimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/TZMBAA+SimSun 1 GetGlyphDirectory5 <001C60D8A8C9B5EE31023214E8FCA33853314DC0C7EE96D573E5DFAF7ED7F2B471814D607FF326FA05C9FEF2A1AD9BCF7FA61273BF55DAB8E0A38C42F4D7D7942236E2CBBC51C218717C74F187B77CAA866F07A09D779769433E23F1776818A21F5F9EA853C7963E0C1FEBE3E25E5B39447683DBAB4D060F8A2994572C90CA23AD9A2A06FC75CA> |!endend end
%ADOEndSubsetFont
LBTODK+SimSun [0 -32 -32 0 0 0 ]msf377.49 351.989 mo(\000\005\000\001)[-32 0 ]ysh364.69 144.815 mo
344.808 144.815 328.69 128.595 328.69 108.585 cv
328.69 88.5762 344.808 72.3555 364.69 72.3555 cv
384.572 72.3555 400.69 88.5762 400.69 108.585 cv
400.69 128.595 384.572 144.815 364.69 144.815 cv
cp
0 0 0 0 cmyk
ef
364.69 144.815 mo
344.807 144.815 328.69 128.595 328.69 108.585 cv
328.69 88.5762 344.807 72.3555 364.69 72.3555 cv
384.572 72.3555 400.69 88.5762 400.69 108.585 cv
400.69 128.595 384.572 144.815 364.69 144.815 cv
cp
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: TZMBAA+SimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/TZMBAA+SimSun 1 GetGlyphDirectory4 <001C60D8A8C9B5EE310DD3D4A3CF07739CE28B58ADEAE55652A8ADCA10AC6C81CDCFFBBEFA6CEB7312DD03623C9F392FF2C643B8F510DC4EE1C4C4B4218D63BC7D7AB84E4D2BD3FE43419A33C0BB0350FD9D3641A5AABFA69A526B1EE205500AA0A43D637EC7162A5D4FD3E91068770CED2846E9B9247C7946BDB5904C92BC> |!endend end
%ADOEndSubsetFont
LBTODK+SimSun [0 -32 -32 0 0 0 ]msf377.49 124.379 mo(\000\004\000\001)[-32 0 ]ysh364.69 144.815 mo
364.69 299.033 li
@
359.69 294.233 mo
364.69 300.233 li
369.69 294.233 li
cp
ef
328.69 336.233 mo
282.827 335.868 li
@
287.667 330.906 mo
281.627 335.858 li
287.587 340.906 li
cp
ef
48.4756 572.141 mo
28.5934 572.141 12.4756 556.023 12.4756 536.141 cv
12.4756 516.259 28.5934 500.141 48.4756 500.141 cv
68.3579 500.141 84.4756 516.259 84.4756 536.141 cv
84.4756 556.023 68.3579 572.141 48.4756 572.141 cv
cp
@
%ADOBeginSubsetFont: SBTAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LBTODJ+Calibri gcheck setglobal} if
1 6102 22 <00030060ffed03e105780013001e00290036b11e1fb8020bb20a1429b802
1cb7000a1edb1f1f0519b80101b20f4724b80102b1054d003fed3fed1239
2fed012fddf1c510f1c53130011402060623222626023534123636333216
1612072e0323220e0207151e0333323e023703e14076a9696aa4713a3f75
a96a69a5713bae042141654747654323030220416749496743200202bdc1
feefae504ca7010abfc10110ae504ca8fef67774b67e43417db776807bc3
86474686c27d>LBTODJ+Calibri AddT42Char 
LBTODJ+Calibri /CharStrings get begin
/g22 22 def
end
LBTODJ+Calibri /Encoding get
dup 51 /g22 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LBTODJ+Calibri*1 [33{/.notdef}rp /g19 /g15 /g9 /g1 /g6 /g16 /g11 /g18 /g8 /g20 /g10 /g4 /g21 /g23 /g12 /g14 /g7 /g17 /g22 204{/.notdef}rp]LBTODJ+Calibri nfLBTODJ+Calibri*1 [0 -28 -28 0 0 0 ]msf56.7417 545.233 mo(3)shLBTODJ+Calibri*1 [0 -18.6667 -18.6667 0 0 0 ]msf63.7417 530.344 mo(")shLBTODK+SimSun [0 -18.6667 -18.6667 0 0 0 ]msf63.7417 520.537 mo(\000\001)sh49.197 706.829 mo
48.4537 573.342 li
@
53.4803 578.114 mo
48.447 572.142 li
43.4805 578.169 li
cp
ef
84.4756 536.141 mo
114.526 535.72 li
@
109.656 530.788 mo
115.726 535.704 li
109.796 540.787 li
cp
ef
%ADOBeginSubsetFont: SBTAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LBTODJ+Calibri gcheck setglobal} if
1 7272 26 <000100720000039c0521003e0094400d2936012b1e01291d01261e0140b8
ffc040170f024d604001161810014d16100c0d014c16200b014d16b8022d
b633253325330039b8ffe8b310014d39ba027f000bffc0b30c014d0bb8ff
e0400b0f014d0b1138392020391bb8012eb63316062e531039b80128b106
54003fed323f123939ed11392f123939012f2b2be12bcd39392f2f10e12b
2b2b31305d2b005d015d5d5d25140e022321222e0235343e0237133e0335
342e0223220e0223222e0235343e0633321e0215140e02070721321e0203
9c05090f09fd350e150f07030a0f0cfb576939121c3550343d6149310c07
0b0704020508183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c13
0907101e16141e17170d010a5c9278622b2b4d3a2222282208121e150f16
100e15242318355c7a453e7b8faf72d609121b00>LBTODJ+Calibri AddT42Char 
1 6548 24 <00020048ffed03c705210013002b00ea4019281201291101260d01260c01
2608012507012a03012902012db8ffc040250f024d602d01141810014d14
100f014d14160d014d140a0c014d14200b014d14180c014d14bb022d0000
0020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8fff6b30c
014d20b8ffe8b60c014d24200120b8022d40090a200030004000030ab8ff
f040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00b8ffc040
0a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003fed3fed11
120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b2b2b3130
5d2b5d5d5d5d5d5d5d5d01140e0223222e0235343e0233321e0207342e04
23220e0215141e0233323e0403c72f6db0817aa7662b306cb0807ba7662b
b00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b16157a9f7
a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e7285>LBTODJ+Calibri AddT42Char 
1 6906 25 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a00>LBTODJ+Calibri AddT42Char 
1 7986 28 <00010065ffed0396050e003e00c1400d27370127360126080126030140b8
ffc0b60f024d60400137b8ffe8b310014d37b8fff0b40b0d014c37ba0211
0028ffc0402810014d28400f014d280e4f326f327f3203321d1810014d1d
100f014d1d100c0d014c1d200b014d1dba02330000ffe8b30f024d00b8ff
c0b50f014d004013b8ffc0b70f10014c13131836b8012c400c2c3af42022
012222052c5118b8010bb10556003fed3f12392f5ded10ed11392f2b0110
d62b2be12b2b2b2bc45dd4d42b2be12b2b31305d2b005d5d015d5d01140e
0223222e0635343e0233321e0233323e0235342e02232206232226351134
363321321e02151406232111363633321e0203964680b16c3c6c54360f06
050203080b070a2a4769484370512e27517c563d58261c181f1d023d080f
0a051412fe1d2349306fa66f3901a068a26f3a1119180e0c111a12111b11
08191d1a2044674a3e5f3f1f0c1a25020f212009121c132428fe95050235
618a>LBTODJ+Calibri AddT42Char 
1 7592 27 <00020030fffa03d30514002a002e00fb403a252e01262d01272c01242701
242601251c01261b01231a01241901251801251701261601261501261401
261001260f012405012404012b1b0130b8ffc040120f024d6030012d1618
0f024d162010014d16b8ffe0b30f014d16b8ffe0b70c014d161c2e2e10b8
fffc401d0f024d101810014d10100f014d10100d014d100a0c014d10100b
014d10bb021100270004ffd4b30f024d04b8ffd0b30c014d04b8ffe0400a
0b014d0404302f271b2eb8010b400a042b2110100a21520a55003f3f1239
2f123933ed3232111201392f2b2b2b33e12b2b2b2b2b2b321133cd2b2b2b
2b3231305d2b005d015d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d011406
232311140e0223222e02351121222e0235343e0237013e0333321e021511
3332160123012103d31412920814201918201307fdea0c100d0502060a07
01d205131e2c1e21311e10921115fea102fe5b01a701702126fef0080b08
0404080b08011006101e18131e19170d0312080c080305080d09fcc62302
e9fd3a00>LBTODJ+Calibri AddT42Char 
1 788 3 <000100acfffa0158051400150050b73f174f17af170300b8ffe8b310014d
00b8fff0b30f014d00b8fff0b30d014d00b8fff6b30c014d00b8ffe8b30b
014d00ba0211000affc0b715014d0a10520555003f3f012f2be12b2b2b2b
2b31305d25140e0223222e023511343e0233321e02150158081421191822
140809152117192114081a080c070505070c0804da080c070505070c0800
>LBTODJ+Calibri AddT42Char 
1 540 2 <000100ac0000037c050e002c0076b11a27b8ffe8b310014d27b8fff0b30f
014d27b8fff0b30d014d27b8fff6b30c014d27b8ffe8b30b014d27b80211
400909132013200009001ab80108400d802601c02601d0260126260619b8
010cb20d5127b8010cb10654003fed3fed12392f5d7172ed012f2f123939
2f2f10e12b2b2b2b2b32313025140e0223212226351134363321321e0215
140e0223211121321e0215140e0223211121321e02037c040a0d08fd9317
2929170266080d080505080d08fe0601b2080d090404090d08fe4e020108
0d0a0447121b12081f270482271f08121b14121b1108fe6a09101c13121a
1007fe3108111b00>LBTODJ+Calibri AddT42Char 
1 1192 5 <000100acfffa062b050e003c00ac4010603e703e020d3030172f2f0a2e18
181ab8ffe8b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b3
0c014d1ab8ffe8b30b014d1ab80211401e24310c0c0a1810014d0a100f01
4d0a100d014d0a0a0c014d0a180b014d0aba02110000ffc040190b014d00
2436510b18170d2f18312e061f28511f5512550555003f3f3f3f12173911
333f012fd42be12b2b2b2b2b32113310e12b2b2b2b2b32113311393d2f33
33113331305d25140e0223222e02351123010e0323222e0227012311140e
0223222e02351134363333321e02170133013e033333321e0215062b0814
1f191721130802fe33030b151d14151e140b02fe47010814201918201307
2c1b68203024180901770501860b1a1f26196d0f1b130c1a080c07050507
0c080467fb94070a070304070a06046cfb99080c070505070c0804a62a24
0c1a281bfc5703a61e2a190b09131d15>LBTODJ+Calibri AddT42Char 
LBTODJ+Calibri /CharStrings get begin
/g26 26 def
/g24 24 def
/g25 25 def
/g28 28 def
/g27 27 def
/g3 3 def
/g2 2 def
/g5 5 def
end
LBTODJ+Calibri /Encoding get
dup 52 /g26 put
dup 53 /g24 put
dup 54 /g25 put
dup 55 /g28 put
dup 56 /g27 put
dup 57 /g3 put
dup 58 /g2 put
dup 59 /g5 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LBTODJ+Calibri*1 [33{/.notdef}rp /g19 /g15 /g9 /g1 /g6 /g16 /g11 /g18 /g8 /g20 /g10 /g4 /g21 /g23 /g12 /g14 /g7 /g17 /g22 /g26 /g24 /g25 /g28 /g27 /g3 /g2 /g5 196{/.notdef}rp]LBTODJ+Calibri nfLBTODJ+Calibri*1 [0 -24 -24 0 0 0 ]msf-15.7427 699.487 mo(456756589:1;8)[-12.1633 -12.1633 -12.1633 -12.1633 -12.1633 -12.1633 -12.1633 -12.1633 -6.04797 -11.7194 -11.6952 -20.5199 0 ]yshLBTODK+SimSun [0 -24 -24 0 0 0 ]msf-15.7427 540.03 mo(\000\001)sh245.582 195.27 mo
225.7 195.27 209.582 179.152 209.582 159.27 cv
209.582 139.388 225.7 123.27 245.582 123.27 cv
265.464 123.27 281.582 139.388 281.582 159.27 cv
281.582 179.152 265.464 195.27 245.582 195.27 cv
cp
@
LBTODK+SimSun [0 -28 -28 0 0 0 ]msf256.591 173.664 mo(\000\006)sh%ADOBeginSubsetFont: SBTAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LBTODJ+Calibri gcheck setglobal} if
1 3534 13 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>LBTODJ+Calibri AddT42Char 
LBTODJ+Calibri /CharStrings get begin
/g13 13 def
end
LBTODJ+Calibri /Encoding get
dup 60 /g13 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LBTODJ+Calibri*1 [33{/.notdef}rp /g19 /g15 /g9 /g1 /g6 /g16 /g11 /g18 /g8 /g20 /g10 /g4 /g21 /g23 /g12 /g14 /g7 /g17 /g22 /g26 /g24 /g25 /g28 /g27 /g3 /g2 /g5 /g13 195{/.notdef}rp]LBTODJ+Calibri nfLBTODJ+Calibri*1 [0 -18.6667 -18.6667 0 0 0 ]msf263.591 145.664 mo(<)shLBTODK+SimSun [0 -18.6667 -18.6667 0 0 0 ]msf263.591 138.363 mo(\000\001)shgrestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/LBTODK+SimSun-Identity-H uf/LBTODK+SimSun /CIDFont ur/LBTODJ+Calibri*1 uf/LBTODJ+Calibri uf/SBTAAA+Calibri ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
