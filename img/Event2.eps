%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Event2(1).pdf
%%Creator: Adobe Acrobat 10.1.9
%%For: huangwaleking
%%CreationDate: 2/15/14, 8:51 PM
%%BoundingBox: 0 0 431 319
%%HiResBoundingBox: 0 0 430.8558 318.4586
%%CropBox: 0 0 430.8558 318.4586
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1045 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2014-02-15T20:44:30+08:00"
   xmp:CreatorTool="PScript5.dll Version 5.2.2"
   xmp:ModifyDate="2014-02-15T20:44:30+08:00"
   pdf:Producer="Acrobat Distiller 9.0.0 (Windows)"
   xmpMM:DocumentID="uuid:18f887d6-168e-40cf-8a88-050d41c6b1d0"
   xmpMM:InstanceID="uuid:ddf196ff-d859-4d8f-8bf3-fc914199c159">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Microsoft Word - Event.docx</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>fubingnan</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -318.459 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
1.52587e-05 0 mo
1.52587e-05 318.459 li
430.856 318.459 li
430.856 0 li
cp
clp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BAJRMX+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /BAJRMX+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9ddb6d7000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c7966038ad5cd0000b0980000398868656164ecde32e100000f640000
0036686865610dad126500000f9c00000024686d74785230b9e300000fc0
00003c946c6f6361030a0f9e00004c5400003c9c6d617870214726250000
88f0000000206e616d65eb68cfcb0000891000000377707265706baf02fe
00008c8800002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
feff0600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d0000000100000005b852cd5c66be5f0f3cf500190800
00000000bbeb7ccc00000000cbdab383fbfafd8b09ec07b6000000090002
000100000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000f24040e0000000000000000000001cf000004a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
04a1002304a1002304a10023061bffcc061bffcc045a00ac044400610444
00610444006104440061044400610444006104ec00ac04ec009704ff001b
04ff001b03e800ac03e8004503e800ac03e8004603e8004603e8006303e8
005f03e8008103e800ac03e800ac03ad00ac050c005b050c005b050c005b
050c005b050c005b04fc00ac04fc00ac05400020020400ac0204ff4a0204
00280204ff390204ff310204ff500204ff4f0204ff7b0204001e02040027
049200ac028d0007028dffa9042800ac042800ac035d00ac035d00810362
00ac035d00ac0370001c045e00ac06d700ac052a00ac052a00ac052a00ac
052a00ac052a00ac050700ac054c0063054c0063054c0063054c0063054c
0063054c0063054c0063054c0063054c0063054f0063054f006306ef0063
042200ac042200ac05620063045800ac045800ac04580053045800ac03ad
004703ad004703ad001503ad001803ad004703ad004703e6000f03e6000f
03e6000f03e6000f052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa048a0022071e003d
071e003d071e003d071e003d071e003d0427003003e6001e03e6001e03e6
001e03e6001e03e6001e03bf003b03bf003b03bf001a03bf003b03f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f40010055cffe2055cffe2040400a103cb006d03cb006d
03cb006d03cb006d03cb006d03cb006d046500a10465006a047700320477
0032038000a103800030038000a103800020038000200380002c03800029
03800042038000a1038000a1035000a10482006c0482006c0482006c0482
006c0482006c047800a10478008c049d004001ec00a101ecff5801ec0019
01ecff4801ecff2701ecff5501ecff5201ecff7101ec001101ec0018041b
00a1023e0000023eff8c03c900a103c900a102e000a102e0008702e600a1
02e000a102f0003203d500a1060600a1049100a1049100a1049100990491
0078049100a1046600a104aa006604aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006604ba006604ba00660606006603c5
00a103c500a104b1006603ed00a103ed00a103ed004503ed00a1034f0049
034f0049034ffff5034ffff6034f0049034f00490359001c0359fffe0359
001c0359001c048d009f048d009c048d009f048d0097048d0075048d009f
048d009f048d009f048d009f048d009f048d009f03fd0021063e0037063e
0037063e0037063e0037063e003703cc0036038300100383001003830010
03830010038300100369004403690044036900080369004403d5005c03d5
005c03d5005c03d5005c03d5001e03d5005c03d5005c03d5005c03d5005c
03d5005c03d5005c062f005c062f005c043400990362005a0362005a0362
004e036200570362005a0362005a076f005a06dd005a0601005a0601005a
04340060048c0060046a00600434006103fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d02710025
069a002508d5002504ab0025069b002508d50025043c0025043c0025043c
0025043c0025044f0025044f0025044f0025044f0025043c0025043c0025
067600250676002506760025067600250689002506890025068900250689
00250676002506760025043c0025043c0025067600250609002508430025
043c0025043c002504830025043c00250676002504ed002504ed00250513
00250728002503c4003503c4003503c4003503c4003503c4003504340060
04340060043400600434006004340060043400990434ffad0443fff901d6
008501d6ff6e01d6000f01d6ff5a01d6ff2001d6ff7201d6ff5801d6ff67
01d6001101d6009903c00085041e008801eaffd501eaffd501eaff6303a3
009903a3009903a3009901d6009901d6002a021c009901d6004b01fb001c
02fd0099066400990434009904340099043400990434004e0434009904a2
ff9d043400990438005a0438005a0438005a0438005a0438004f0438005a
0438005a0438005a0438005a043c005a043c005a06cc005a043400990434
00990434006002ca009902ca009902cafff902ca006e0321005103210051
0321fffe0321fffd032100510321005105ae005105ae00510438009901f1
009902ae002102c4002102ae002102bc002604e600210475002104750021
047500210475002104750021047500210475002104750021047500210475
002105130021074b002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002106d90021043400940434008e0434
0094043400860434004d0434008904340086043400940434009404340094
04340094039d002205b8003505b8003505b8003505b8003505b800350377
0029039f0022039f0022039f0022039f0022039f00220329005903290059
032900070329005903380072036100640378005d02ac004402e5006c024e
004402e5004802b8004701c100240297002a02e9006c01630061016dffd8
0297006c015e006c0456006c02e6006c02e6004502e5006c02e5004801f6
006c0230004201e3002302e9006c0285001f03ef002c027e00280286001f
023700420254000002750000029400000000fd080000fce8025600000275
0000029400000000fd080000fce803290000035f0000039400000000fc9f
0000fc6703290000035f0000039400000000fc9d0000fc6901ff0000039a
000003a2000003a800000000fc650000fc600324000002f5000003460000
036700000000fca00000fc7e0327000003490000036a00000000fc9d0000
fc7d030c0000030f0000031100000000fcac0000fca90291000002980000
02a000000000fce90000fce202cf000002c2000002b5000003c1000003e1
0000040000000000fc520000fc3101ce000001d6000001ce000001ce0000
0000fd4d0000fd4d027500840000fd7a027f00840000fd7601f700840231
000004a1002304a1ff89045a00ac035300ac0484003a03e800ac03e8fec7
03bf003b04fc00ac04fcfe9e054c0063020400ac0204feb20204ff520428
00ac0495002406d700ac052a00ac03ef0053054c0063054cff1604fc00ac
042200ac03ab004603e6000f03e6001e03e6fe6e03e6001e061300000427
0030060000900550005e0550fef903f4001003f40010040400a102fb00a1
03c90023038000a1038000a103690044047800a1047800a104b4006601ec
00a101ec000001ecff5403c900a103e10011060600a1049100a10387005e
04aa006604aa0066047800a103c500a1035b004b0359001c038300100383
0010038300100552000003cc00360558008704b1006604b10066048a0061
048a00610440009904320064039200180430000003a5005903a5005902c8
004e044c0099044c00990441006004780006023200940232ffec0232ff7a
0232ff0f03a3009903b4000004660099039700220302004d0303004d0438
005a0438005a046c002804120076044100590349005c0319000304550090
045500900455007d0455001605360055053b00550369001205a900940592
006405920064028900000000fd0a03f400000000fc360205009702050097
020500970224004801ff006e01ff006e04a10023044d00ad045a00ac0370
00ac037000ac037600ac0527000303e800ac03e8004503e8006106680055
03ca004b052200ac052200ac052200ac020400ac0204ff50028d00070458
00ac045800ac04e3000306fa000306d700ac04fc00ac070300ac054c0063
054c006304f900ac042200ac0444006103ad004703e6000f0438000f0438
000f04b800220594000004270030051c00ac04f500ac0472007406f200ac
071e00ac04eb000f061800ac044000ac0462005d04610062070800ac0471
005304ff000f04f2000f0504000003f4001003ee00a2040400a1031400a1
031400a1032700a10480000e038000a1038000300380002c057800440380
0057048900a1048900960489009501ec00a101ecff55023e000003ca00a1
03ca00a104320001060600a1047800a104aa006604a90066046a00a103c5
00a103cb006d034f00490359001c039d001e039d001b042f0022050a0000
03cc0036048e00a1046900a103fa006d062300a1064500a1045f00170583
00a103e800a103e4006b03f00066063200a103ff005c045f001f0463001f
044d000006010001063200a103d5005c044300000430000003d5009902c4
009902c4009902d5009901d6ff58047700170434006003fb005d03fb005d
03fb005d0583003e0362004b04530099045300780453008801d6008501d6
ff7201eaffd503b6009903b6009904150016060200130569005f04470099
062800990438005a0431005a042a009904340086043400990362005a0321
00510319000a06640099039f0022039f001803d2002204fe005103770029
045500990433009903c0004205d4009905fe0099044a000a0554009903c2
0099038b004d038d005d05c6009903cb00380453fff90443fff904270018
036e0000036e0000036e00000000fca50000fca5029b010a029b00bf029b
00bf03b5008503b5005e03b5005e03de0064026000ed026000b10364007a
0361005f01ff002a02240048022400bb020500970586009601ff008c01ff
002a01ff008c01ff002a035900880359002b035900880359002b01ff002a
0359002b02b6007402b600c002b6007402b600c004190075041900ad0419
0075041900ad0317000102df001f03af018a03fc01ae0317000b02df002d
027300450273004503fcfff603fcfff6073e0095073e0095073e0095073e
009503fcfff903fc00c10205009702050097026d0085026d007a027400bf
0274005a0284005602840075024000840240007a024a00b0024a0067026d
0085026d007a027400bf0274005a028400560284007503fc009e03fc0077
03fc007803fc007604b0006b043d006e03fc006a03fc003d01c4008b0335
008b057500000556000007f7000007270000073c00000727000006ad00af
06ad00af040e008005a4003f05ac004d02b6000003fc003f04b30049040e
002a03fc0057040e00600434005803fc00b903fc004a040e005303fc006d
0419002b040e003403f30035039f006103be005f039f0058039f00250621
0049083300ac03fc002406e300a10411001d0494005f02cb002303ec0062
03ec00510455002203d700510436007e03b20035043600630436005c040e
0048040e00ae040e0072040e0067040e0020040e0065040e006b040e0063
040e0052040e005204430067028d00190381005c0373005903ac00260368
006103b7006e0349002f03b5004b03bc0052039f0050039f008d039f0065
039f0062039f003a039f0067039f0061039f005e039f0051039f00500494
005f02cb002303ec006203ec00510428002203d700510436007e03b20035
043600630436005c040e0048040e00ae040e0072040e0067040e0030040e
0065040e006b040e0063040e0052040e00520321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc00580321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc0058029d003801f500310252003c
0249002d024a001402460032025100300238002202570025024d0023029d
003801f500310252003c0249002d024a0014024600320251003002380022
02570025024d002302b1ff4b03130044055f004405690044051700440569
0044052e00440553004405c9004e05c9004e0567004705b7004705a20047
05cd0027057d004505a20045052a003505b80048084e0048057d005c07c9
005c03fc004603fc004c03fc006003fc002b03fc005e03fc006003fc0059
03fc004503fc006503fc004c03fc005503fc005603fc003d05e9002c0405
003506d300690443006102ed000703fc00080484003a0550005e04660099
066500660454005b0416004a073e009a073e0096073e00c9073e00c9070e
00af070e013a070e00af070e013a0a4e009a0638009f04660028018a0000
01da00000466000004660000046600000466000004660000046600000466
000004660000046600000466000004660000046600000466000004660000
0466000004660000046601d004a1002304a1002304a1002304a1001904a1
001504a1001d04a1002304a1001c04a1001c04a1001c04a1001d04a10023
03e800ac03e800ac03e8003703e8ffe803e8ffe903e8ffe803e8ffe803e8
003702040015020400a0054c0063054c0063054c0063054c0063054c0063
054c0063054c006305940063059400630594006305940063059400630594
0063052200aa052200aa05c600aa05c600aa05c600aa05c600aa05c600aa
05c600aa03e6001e03e6001e03e6001e03d5005c03d5005c03d5ffbb03d5
ffb103d5ffb803d5ffb803d5005703d5ffb803d5ffb803d5ffb803d5ffb8
03d5005c03fb005d03fb005d03fb003003fbffdb03fbffdb03fbffd903fb
ffcb03fb005d01d6002601d600850438005a0438005a0438ffe80438ffea
0438ffe80438ffea0438005a04a0005a04a0005a04a0005a04a0005a04a0
004904a0005a043400940434009404d2009404d2009404d2008c04d20094
04d2004604d20094039f0022039f0002039f0022046a00530466003803f4
001003f4001003f4ffbd03f4ffc003f4ffbd03f4ffc803f4001003f4ffc8
03f4ffc803f4ffc803f4ffc803f40010038000a1038000a10380fff00380
ffa70380ffa00380ffa20380ff8e0380001101ec000901ec009404aa0066
04aa006604aa002104aa002204aa002104aa002204aa006604ec006604ec
006604ec006604ec006604ec006604ec0066048d009f048d009f0515009f
0515009f0515009a0515009f051500750515009f038300100383fff10383
001001da0000046600000466000004660000046600000466000004660000
046600000466000004c10066052400ac052400ac050600ac049300a10493
00a1047c00a103e6000f02ae00210359001c01d60011043c0025043c0025
043c002506760025067600250676002502f5001c02e7008e0306005a034b
008e02a8008e028c008e0344005a035b008e01a6008e01cb000502e0008e
025b008e046d008e0375008d0375005a02d8008e0375005a029b00570280
0046025700040314005702e3001a0445002202b5001c028b001c02b80050
0000fdfd0000fdfd0466ffff0466ffff0466ffff0466ffff03c1ffff03c1
0000030cffff030c0000030cffff030c0002023100000231000001ffffff
01ffffff01ffffff01ffffff0000fd090000fd0902aa008202aa008202aa
009802aa009801ce008402aa008202aa008202aa008202aa0082027f008e
027f008e0324000002910084046601fd02aa001402aa0013032900000329
0000032900000329ffff039a00000327000003fcfff903fcfff9039a0000
039a00000000ff080000fe4c0000fdfb0000fdfb0000fe3f0000fe3f0000
fdc20000fdc201ce008402aa00140291008302aa001502aa009302aa0093
039a014c039a00000000fdfd0000fdfd0000fd090000fce90000fd090000
feb702aa001402aa001403fcfff90466ffff02aa0098039a0000039a0000
039a0000039a0000039a0000039a000004010014040101470000000002aa
ffff02aaffff01ceffff01ceffff030c0000030c000002aa009302aa00c8
02aa00c803f100c801ceffff01ceffff01ce000001ce000002aa00a003b1
008402aaffff02aaffff075c003c075cffff075cffff075cffff075cffff
075c003f06d0ffff06d0ffff075c0003075c0003075c004001df003001df
003001e7003201e7003200f8004400f8004402070030020700300209004c
0209004c019d0030019d003002070032020700320209004c0209004c0309
004c0309004c015f004c015f004c015200180152001801c3001601c30016
01bf001c01bf001c032700510327005103270051032700510000ffab03bd
ffff041a0000041a00000416000104160001041a0001041a0001041a0001
041a000104010002040100020401000204010002015f004c02aa00c801ce
00c803f100c804ec000f044d00ad0440001e0462005d049d006104ff001b
057e000f044d004c03e8006c0525006403ca005a03adffd6050e005b048a
001c025000ac0226001b042800ac070900aa052affd6054c0063062f0061
04e4000f045800ac03ad004703ab0046043f000f03e6000f0550005e0522
00aa0442001e03bf003b03ca004b03ca005a040e006808ab00ac081500ac
060300ac054700ac07b700ac071400ac04a100230204ff3a054c00630522
00aa052200aa052200aa052200aa052200aa04a1002304a10023061bffcc
050c005b050c005b04280073054c0063054c006303ca0008089500ac0815
00ac050c005b072800ac04d400ac052a00ac04a1ffef04a1002303e8ffe1
03e8006e0204feac0204ff4c054c003b054c00630458ffbf0458006e0522
002f052200aa03ca004b04fc00ac052400ac040e004d03ef003b04a10023
03e800ac054c0063054c0063054c0063054c006303e6001e04a1ffd90444
ffe7035d001b03e6ffb803940064046b001b0545001b0495002403e8ff9e
02a10007050a00630469001a04a0001b04a10023045a00ac045a00ac045a
00990444006104ec00ac04ec00ac04ec00ac04ec00ac04ec00ac03e80084
03e8008403e8008203e8003403e8008103ad00ac050c005b04fc00ac04fc
00ac04fc00ac04fc002804fc00ac0204ff360204ff71042800ac042800ac
042800a0035d00ac035d0035035d0060035d006606d700ac06d700ac06d7
00ac052a00ac052a00ac052a00ac052a00ac054c0063054c0063054c0063
054c0063042200ac042200ac045800ac045800ac04580077045800ac03ad
004703ad004703ad004703ad004703ad004703e6000f03e6000f03e6000f
03e6000f052200aa052200aa052200aa052200aa052200aa048a0022048a
0022071e003d071e003d042700300427003003e6001e03bf001503bf003b
03bf003b035d001b03c2ff9b0433001b045800ac052400ac047100ac03e2
003b0444003803ad005903b500ac046a0027043400990434000403b3005a
043400600430005d0271ffee064300990434009903a300990241002703b4
0014044c0099053e0059043400990321005102e0002102ae002103fc001b
0329005903ca004b0366003a03680050075d006003c00099061e009903d5
005601d6ff570438005a0434007a04340088043400880434008804340088
03fb006203d5005803d50058062f005c044cffe203c4003503a3003a0438
005a0438005a03ca002e01eaff60075d006003c400350434009903d5ffbf
03d5005c03fbffe203fb005d01d6fece01d6ff650438ffed0438005a02ca
ff7302ca00100434ffff0434008703ca004b0434005104cd0060040e0052
034c005903d5005c03fb005d0438005a0438004f0438005a0438005a039f
00220289009804eb009902ae002106930060069200600362fff003210051
032900590394006403fb003c0240fff70240fff70434006002ff002703e2
002203720049040e00720321005101f300ad032900ad049700ac029b010a
03d5005c0434009904340099043400860362005a04340060043400600434
0060043400600434006003fb005d03fb005d03fb005d03fb003f03fb005d
0271002503c40035043400990434009904340067043400130434009401d6
ff1f01d6ff1f01d6ff5a03a3009903a3009903a3006b01d6008901d6ff58
01d6ff5801d6ff5906640099066400990664009904340099043400990434
0086043400860438004f0438004f0438005a0438005a0434009904340099
02ca009902ca008a02ca000a02caffff0321005103210051032100510321
00030321005102ae002102ae002102aeffd202aeffd20434008904340041
0434007b0434004d04340086039d0001039d002205b8003505b800350377
002903770029039f00220329000103290059032900000434008602aeffc6
05b80035039f002203d5005c01f100530241002703d5002902aeff960463
009903db00990344005903c200360362003b02ee003c03190099053b0055
0471000803ee00a203ee001403cb004803fc006d0477003204d3000803ee
00530380007204a40066038a00680350ffe80482006c03f300130232008e
01ecfffe03c900a1063200910491ffe804aa00660592006e0433000803ed
00a1034f0053035b004b038300080359001c04b10066048d009f03b70010
03690044039000570393006b0398005507ce00a1085500ac055a00a105cd
00ac06cf00a1076800ac03f4001001ecff4704aa0066048d0096048d009f
048d009f048d009f048d009f03f4001003f40010055cffe20482006c0482
006c03c9005204aa006604aa00660390000007ce00a1085500ac0482006c
065500a1046200a0049100a103f4ffc503f400100380ffb10380004d01ec
fed001ecff7004aa001d04aa006603edffa403ed0064048d0000048d009f
039000570478008c049300a103c50057038c004403f40010038000a104aa
006604aa006604aa006604aa00660383001003f4001003cb002402e00027
0359ffeb0339005004040027048d002703fd00210380ffff023e0000048b
006603ed00270383000c039000550339005001f300ac032900ac049700ac
026000ed03f40010040400a1040400a10404006e03cb006d046500a10465
00a104650081046500a1046500950380002a038000260380004103800000
0380004a035000a10482006c047800a1047800a10478009a047800200478
00a101ecff2a01ecff5503c900a103c900a103c9007e02e000a102e00000
02e0002802e00024060600a1060600a1060600a1049100a1049100a10491
00a1049100a104aa006604aa006604aa006604aa006603c500a103c500a1
03ed00a103ed00a103ed003e03ed0091034f0049034f0049034f0049034f
0000034f00490359001c0359001c0359001803590019048d009f048d0079
048d009f048d0075048d009f03fd002103fd0021063e0037063e003703cc
003603cc003603830010036900050369004403690020047800a10359000a
063e00370383001003f4001002e00027035effa703c5002703ed00a104b6
00a103ef00a10369004403cb004803500060039900a1043c0025043c0025
0447002504470025043c0025043c0025044f0025043c0025043c00250676
002506760025068200250682002506760025067600250689002506760025
067600250475002104750021047500210475002104750021047500210475
0021047500210475002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002103d5009604340060043400990434
00990362003b039b005a043400600434006003fb006203fb0062051b0065
0362005a0362004b0435004b043b005d0241fff704340060043400600451
005a039d001f03d0001e0433009404340099043400990241002701d6fff3
0232009401d6009902e7ffa702f9002701d6009904860099066300940663
0094066400990434ffc204340099045300990438005a05b3005a05920064
0536005502ca002302ca002302ca002302ca009902ca0099028e0094028e
002303980085039800850321005101eaffd50242fff801eaffd5028affc4
02ae004102ae002104a400270476004904550090039d002205b80035039f
00220351001f0329005903d3005903bc004b03bb0056039400640394005e
039400640362005a0507005f03d50099043b005a046b005a04470099028a
ffc403a300270319009904340060039400640394005e066f006006d40060
0719006004f3002103c40021057a0021060c002504ae00990469009903ef
002c03ef00700434ffd5044dffd503d60010050fffe3062f006204120027
03cb006a0444009904590030033f0099036f005501d60085022700000391
009802f000300569005f045300990474005a03cb006304a9006604a80066
0528001406cc00560368003a0438005a0438005a03a8009903cf005203cf
0052033f001b046a009a0465004b05c7004b0664014c03de0020060e0035
034f0042032f00380321005103d0001e02f2009903de00200450009903a8
0099052f0083040e000102f5001c03f1000002e7008e02fb0027034b008e
02a8008e02a800500344005a035b008e01a6008e01cb000502e0008e025b
008e046d008e0375008d0375008d0375005a02b2004802d8008e029b0057
02570004031400570445002202ac004402ac006c02e50048042b004402e5
006c02e5004802b8004702b8004702770046027700460297002a01630061
0297006c0456006c02e6006c02e60045024e003602e6004502e6004502e5
006c01e3002302e9006c02db00460456006c0285001f024a000d02be006c
024600230283002803650055025f00180163006101f6006c02e9006c0285
001f02be006c0246002302e5006c03650050025f00180694009404bbffa7
04bd0060030affa7069cffe504b4002204beffa70352ffa7031affa7039d
0014030fffa70329ffc203c4003b0304006e03c400350688002102410027
026900270468002704db002704c40027043400990451006002710025054c
0060041e009901f0006b067f0099045100990434009902ca006a037b0051
02faffd5039d002203ed0029033c0059047c005c04d800600434006003fb
005d0362005a0362004b03fb006201d600850362003b0233001e04d80094
0376004b02e5006b024e0044026e004402b200440277004201c1002401c1
00070297002a02e9006c0192000001aa006c0163006d0192000001e50000
0194006c017b00530224006e0456006c0456006c031b0000031c006c0304
006e02e600450336004502300042016dffd801e4002302e9000002b8002c
02e6006e02e6006e0285001f023700420294004202a600420272003c02e6
004502e9006c02e9006c016dffd801f6006c01f6002502030025028b006c
03ef002c0286001f01c400540334005401ff008c01ff002a01ff008c01ce
008401ce0084029900650299006c03fc004503fc0065044b0044044b0044
025100f20256000002540000025100f20327000002540000025600000239
00980239009801ce008401ce008402aa008202aa008202aa008202aa0082
02aa004b02aa009302610024015e006c02300042027e00280299006c0310
009603100096031000960310009603100096045700960457009604570096
045700960310004304570043045700430457004304570043045700430457
00430457002f0457002f0457002f0457002f0457002f0310002f04570025
045700250457002504570025045700250310001a0457001a0457001a0457
001a0457001a0457001a0310004204570042045700420457004204570042
045700420457009604570096045700960457009603100042045700420457
0042045700420457004204570042045700420457002f0457002f0457002f
0457002f0457002f0310002f0457002f0457002f0457002f0457002f0457
002f03100026045700260457002604570026045700260457002603100042
045700420457004204570042045700420457004204570096045700960457
009604570096031000420457004204570042045700420457004204570042
031000260457002604570026045700260457002604570026031000230457
0023045700230457002304570023045700230310002f0457002f0457002f
0457002f0457002f0457002f0310004b0457004b0457004b0457004b0457
004b0457004b045700960457009604570096045700960310004204570042
045700420457004204570042045700420310001a0457001a0457001a0457
001a0457001a0457001a0310002404570024045700240457002404570024
045700240310002f0457002f0457002f0457002f0457002f0457002f0310
004e0457004e0457004e0457004e0457004e0457004e0457009604570096
045700960457009602aa006202aa006203290000049a00000359002b02aa
008502aa008502aa00c802aa00c8029100840254000003c1ffff03c10000
039a0000022400bb02aa009802aa009802aa009802aa00980440fff60440
fff60302009803270000032700000324000002aa0000071200d4071200d4
02ac004402b8004702e60045027e002802b8004701d9ffff01d9ffff01d9
000001d90000028900000289000002890000028900000000fc660000fc66
032900000329000003290000032900000324000003240000032900000329
00000329000003290000032400000324000003f4000003f4000003f40000
03f40000032400000324000003270000030c000001ffffff01d900000327
000003290000032900000329000004660000046600000466000004660000
03f4000003f4000003f4000003f40000023200b6023200b6054c00630444
006104440043044400610444004303e6000e0456fec803e6000e03ad00ac
054c0063045d001e059700ac04a2000f04440061042200ac043200640375
005a037500420478000604d700510684001404120076041200030362005a
0362003b0362005a0362003b053b0055037800940438005a0399001404c5
009904a2000f0349005c01eaffd50476ffd504d7005104a9006603cb006d
03cb004803cb006d03cb00480389001a0389fe6f0389001a035000a104b1
005b03e2001e050000a1045d002a03db006d03c500a104a1ffc504a1fe8a
04a1fe6204a1ff2204a1ffc604a1fe8b04a1fe6204a1ff2204a1ff8004a1
ff5804a1002304a1002304a1002304a1ffc504a1fe8a04a1fe6204a1ff22
04a1ffc604a1fe8b04a1fe6204a1ff22066500230665ffc50665fe8a0665
fe620665ff220665ffc60665fe8b0665fe620665ff2203e8fef004bdfe82
04bdfe7a03e8fef004c1fe8604bdfe7a03e8fea403e8fe9504fcfef005d1
fe8205d1fe7a0559feaa04fcfef005d1fe8205d1fe7a0559feaa04fcfea4
04fcfe9504fc00ac04fcfef005d1fe8205d1fe7a0559feaa04fcfef005d1
fe8205d1fe7a0559feaa06c000ac06c0fef00795fe820795fe7a071dfeaa
06c0fef00795fe820795fe7a071dfeaa0204fef002d9fe8202d9fe7a0261
feaa0204fef002d9fe8202d9fe7a0261feaa0204fea40204fe950204ff4e
0204ff7a054cff0605f5fe82060cfe7b054cff0605f2fe7f0605fe74054c
fecf054cfeac0422fef003e6fe940517fe820513fe7e049ffeaa03e6fe47
03e6fe4703e6001e03e6001e0550ff0605f2fe7b060dfe780599feaa0550
ff0605f2fe7b0611fe7c0599feaa0550fecf0550feac0550005e0550ff06
05f2fe7b060dfe780599feaa0550ff0605f2fe7b0611fe7c0599feaa0714
005e0714ff0607b6fe7b07d1fe78075dfeaa0714ff0607b6fe7b07d5fe7c
075dfeaa048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a0061048a005a048a0061048a0061048a0061
048a0061048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a005a03a5005903a5005903a5004f03a50059
03a5005203a5005203a5005903a50059044c0099044c0092044c008f044c
0094044c0099044c0092044c0092044c0094044c0099044c0099044c0059
044c0099044c0099044c0092044c008f044c0094044c0099044c0092044c
0092044c0094044c0099044c0099044c0059023200010232ff860232ff83
0232ff62023200000232ff860232ff860232ff600232ff100232fecf0232
ff600232ffef0232ff7b0232ff290232ff690232ff680438005a0438005a
0438005a0438005a0438005a0438005a0438005a0438005a041200760412
007604550090045500820455008204550084045500900455008204550082
045500840455001204550010045500800455009004550090045500410455
00710455007d059200640592006405920064059200640592006405920064
059200640592006405920064059200640592006405920064059200640592
006405920064059200640592006405920064059200640592006405920064
059200640592006403f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f4001003f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001005b9001005b9001005b9001005b9001005b9001005b90010
05b9001005b9001005b90010038000a10380004903800049038000a10380
004903800049038000a10380007b047800a1047800a1047800a1047800a1
047800a1047800a1047800a1047800a1047800a1047800a10478006f0478
00a1047800a1047800a1047800a1047800a1047800a1047800a1047800a1
047800a1063c00a1063c00a1063c00a1063c00a1063c00a1063c00a1063c
00a1063c00a1063c00a101ec000901ecff6201ecff6201ecff6501ec0009
01ecff6201ecff6201ecff6501ecff1001ecfee901ecff6401ec000001ec
ff8c01ecff2a01ecff5301ecff7004aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006603c500a103c500a1038300100389
001a038300100389001a038300100389001a038300100389001a03830010
0389001a038300100389001a038300100389001a038300100389001a0383
00100389001a038300100389001a0383fff50389fff5038300100389001a
038300100389001a04b1006604b1006604b1006604b1006604b1006604b1
006604b1006604b1006604b1006604b1006604b1006604b1006604b10066
04b1006604b1006604b1006604b1006604b1006604b1006604b100660675
006606750066067500660675006606750066067500660675006606750066
0675006604a1002304a1ffc504a1fe8a04a1fe6204a1ff2204a1ffc604a1
fe8b04a1fe6204a1ff2204fc00ac04fcfef005d1fe8205d1fe7a0559feaa
04fcfef005d1fe8205d1fe7a0559feaa0550005e0550ff0605f2fe7b060d
fe780599feaa0550ff0605f2fe7b0611fe7c0599feaa066500230665ffc5
0665fe8a0665fe620665ff220665ffc60665fe8b0665fe620665ff2206c0
00ac06c0fef00795fe820795fe7a06c0fe4d06c0fef00795fe820795fe7a
06c0fe4d0714005e0714ff0607b6fe7b07d1fe780714fe610714ff0607b6
fe7b07d5fe7c0714fe6101d9ffff01d900000289000002890000039a0000
03290000032900000324000003290000032900000324000003f4000003f4
00000324000001d9000003270000030c0000023200b601c4007901c40079
01c40079054e00ac0440000a042200ac0366001b044100ac06b2005503ca
004b04a500ac045800ac046a001b050c000f052400ac05b100ac073800ac
052b00630444006103e6000f03e6001e03e6001e0476003005d2000f049a
007404720074047200ad05f6002805f60028020400ac06680055045f00ac
050e000304fc00ac04fc00ac04720074070700ac04a1002304a10023061b
ffcc03e8005905250064052500640668005503ca001503ca004b052200ac
052200ac054c0063054c0063054c00630462004c0438000f0438000f0438
000f04720071035300ac061800ac0366001b048500300427003004400035
065d0037061d003d041a003d070f0003072800ac0515005b0521000f03ca
005a05090003045f009903df00270434009902f90027039f009905c0003e
0362004b03f4009903b6009903eb00270447000a0471009904d8009905f1
0099046f00590362005a0319000a039d0022039d002203b2002904c5000a
03ea004203c0004203c0009904c8001904c800190583003e03cf00990421
0016044700990454009903c0004205b6005f020400ac03d5002e03d50058
062f005c03fb005603fb006203fb00620583003e0362000803bc004b0453
0095045300970438005a0431005a0431005a038b0004039f0022039f0022
039f002203c0002902c400990554009902f9002703b10029037700290434
006006550060059b004b03ba004b061f001606500099044500500481000a
0362005a042b001604a800a103e8002703c500a10314002703ec00a105d0
004403800057041c00a103ca00a103ca002704530017049800a1050100a1
067700a104a2006503cb006d0359001c0383001003830010041300360545
001c041a006d03fa006d03fa00a1054f0020054f002001ec00a105780044
03ff00a1045a0001047800a104a100a103fa006d062f00a103f4001003f4
0010055cffe20380004204a2006504a20065057800440380000303900057
048900a0048900a004aa006604a9006604a9006603e4001e039d001e039d
001e039d001e03fa0044031400a1058300a1031400270417003603cc0036
03e8004a0588004a0559007203d8007205d20001061900a10488006c0444
001c03800068045c00010400000008000000040000000800000002af0000
02000000015500000450000001bc00000199000001000000000000000000
ffdc0000ff25040e0024040e00240329000003fcfff901ff008c03580088
01c400540334005404a400540476010a03fcfffb0273004404ee004f0444
00610444006103ad0027040e005306640099052a0020076000ac064800ac
071e002005f500ac0428001b03e6000f08a80032043afffe0482002104b2
005b0495002003ad0020044400610621004906210065057800e6059d00e6
03fc005e070100bc03fc0062045201d7045200be0400fff6040001bd0400
01bd0400fff6040001bd0400fff6070900aa045c005b047200ad04440071
04d0003a0562007403c9001006640094042f005f04180015035a0053040b
00300441006f03260010032700030327000303270003025400c0025400c0
025400c8025400c802aaff8c02aaff8c04e0005907f4000a07e200140798
0003076c0061064100ac050b002406a700ac05c80055073f00ac03ca0021
0600009004b8001c085c0063054c003b076c0061076c006104440061056a
0022053400990433001b05af00990480001b060b0099034e001605a90094
03d2ffc40745005a049c005a06420059056a00220362005a06b8006d05c3
00a10453001205c000a1050b0046066400a10380002205580087042e0022
07f10066050f006806b0006d06b8006d039c006d03c7009602aa00db040e
008d0000ffdc0000fe5101cf0000022400bb01c700000163006102b1ff4b
0aa000b404d5009202d5008302d5008304d500b202d500700aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0000fc48000000000000fd170000000000000000039a0000039a00000324
00000324000003240000039a000003240000032400000256000003290000
0329000003bdffff02aaff8c055001e5027f008403240000039a00000256
000000000027000000e1000000ed0000001b032400000324000003240000
032400000324000003240000032400000324000003240000032400000000
0000000000000000000000000000039a0000039a00000346000000000027
03c10000030f00000346000003460000039a0000034800000348000003a2
000003a2000002560000035f00000000009e00000067000000220000009e
0000009e0000009e0000009e0000009e0517fe820513fe7e049ffeaa03e6
fe4703e6fe4703e6000e03e6000e03f4001003f4001003f4001005b80010
05b8001005b80010047800a1047800a10478006f063c00a1063c00a1063c
006f0383ffc80383ffc80383001004b1006604b1006604b1006606750066
06750066067500660000fdbc0000fd1a0000fd770000fd4f0000fbfe0000
fbfa0000fc000000fbfa0000fc000000fbfa0000fc000000fbfa0000fc00
0000fc000000fc000000fc000000fc000000fc000000fc000000fc000000
fdd00000fc300000fc300000fbff0000fbff0000fbff0000fbff0000fbff
0000fc000000fcac0000fcad0000fcac0000fcac0000fd1b0000fd1b0000
fd340000fd340000fd340000fd340000fd600000fd600000fd730000fd73
0000fdcf0000fd5f0000fd5f0000fd5f0000fd5f0000fd7f0000fd7f0000
fca10000fd6f0000fdfd0000fcef0000fcf20000fca00000fca00000fcae
0000fcad0000fc660000fca00000fc2f0000fc2f0000fc660000fc5f0000
fdd00000fcf10000fd6d0000fcf30000fd710000fd710000fdb10000fc65
0000fcf10000fcf10000fc2f0000fbff0000fd770000fc660000fc660000
fc650000fc650000fc650000fc650000fc460000fd790000fcde0000fcde
0000fd4b0000fd4b0000fca80000fca80000fd710000fda60000fda60000
fce30000fd4c0000fd4c0000fd4b0000fd4b0000fd7e0000fcdf0000fcde
0000fcde0000fc8f0000fc520000fc520000fc520000fc520000fc920000
fc970000fc970000fc560000fc560000fc910000fd820000fd820000fd70
0000fd700000fdfa0000fdfa0000fd5f0000fd5f0000fd790000fd790000
fd8f0000fd8f0000fd6e0000fd6e0000fd7a0000fd7a0000fcfb0000fcfb
0000fdb60000fdb60000fda80000fda80000fd680000fd680000fd710000
fd710000fcf10000fcf10000fcf10000fcf10000fc540000fc260000fc26
0000fc290000fc290000fc270000fc270000fc270000fc270000fc350000
fc350000fc350000fc350000fdb60000fda80000fda80000fce30000fd46
0000fd460000fd470000fd470000fd020000fd020000fd020000fd020000
fc650000fc660000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca1
0000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca10000fc370000
fc370000fc370000fc370000fca00000fca00000fc9f0000fcad0000fd33
0000fd470000fc9f0000fc9f0000fc9f0000fc9f0000fbff0000fc020000
fbff0000fc000000fc370000fc370000fc370000fc370000fdbd0000fdbd
0000fca20000fca30000fca30000fdd10000fdd10000fdd10000fdd10000
fc6a0000fc6a03e6fe940389ffcb0389ffcb0389001a01d6008904340060
043400600434006004340060043c0025067600250aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4047d
00a3040e00230054001b00>
<00000000000001420000014200000142000001420000025e0000025e0000
025e0000025e0000025e0000025e0000025e0000025e0000025e0000025e
0000025e0000025e0000025e000003ca000004c4000004c4000004c40000
04c4000004c4000004c40000059e0000059e0000059e0000059e00000696
000006960000069600000696000006960000069600000696000006960000
069600000696000007680000076800000768000007680000076800000768
000007680000076800000768000007fe000007fe000007fe000007fe0000
07fe000007fe000007fe000007fe000007fe000007fe000007fe000008c8
000008c8000008c8000008c8000008c8000008c8000008c8000008c80000
08c8000008c800000a2200000b5800000b5800000b5800000b5800000b58
00000b5800000b5800000b5800000b5800000b5800000b5800000b580000
0b5800000b5800000b5800000b5800000b5800000b5800000c4a00000c4a
00000c4a00000c4a00000c4a00000c4a00000c4a00000dee00000dee0000
0dee00000dee00000dee00000dee00000ebc00000ebc00000ebc00000ebc
00000ebc00000ebc00000ebc00000ebc00000ebc00000ebc00000ebc0000
0ebc00000ebc00000ebc00000ebc00000ebc00000ebc00000ebc00000ebc
00000ebc00000ebc00000ebc00000f9c00000f9c00000f9c00000f9c0000
0f9c00001034000010340000103400001034000010340000103400001034
000010340000103400001034000010340000103400001034000010340000
103400001034000010340000103400001034000010340000103400001034
000010340000103400001034000010340000103400001034000010340000
103400001034000010340000103400001034000010340000103400001034
000010340000103400001034000010340000103400001034000010340000
103400001034000010340000103400001034000010340000103400001034
000010340000103400001034000010340000103400001034000010340000
103400001034000010340000103400001034000010340000103400001034
000010340000103400001034000010340000103400001034000010340000
103400001034000010340000103400001034000010340000103400001034
000010340000103400001034000010340000103400001034000010340000
103400001034000010340000103400001034000010340000103400001034
000010340000103400001034000010340000103400001034000010340000
103400001034000010340000103400001034000010340000103400001034
000010340000103400001034000010340000103400001034000010340000
103400001034000010340000103400001034000010340000103400001034
000010340000103400001034000010340000119200001192000011920000
119200001192000011920000119200001192000011920000119200001192
0000119200001192000012c4000013dc000013dc000013dc000013dc0000
13dc000013dc000013dc000013dc000013dc000013dc0000150a0000150a
0000150a0000150a0000164c0000164c0000164c0000164c0000164c0000
164c0000164c0000164c0000164c0000164c000017520000175200001752
000017520000175200001752000017520000175200001752000017520000
175200001752000017520000175200001752000017520000175200001752
000017520000175200001752000017520000175200001752000017520000
175200001752000017520000175200001752000017520000175200001752
000017520000175200001752000017520000175200001752000017520000
192c0000192c0000192c0000192c0000192c0000192c0000192c0000192c
0000192c0000192c00001a3400001a3400001a3400001b2600001b260000
1b2600001b2600001b2600001b2600001b2600001b2600001b2600001b26
00001b2600001b2600001b2600001b2600001b2600001c5a00001c5a0000
1c5a00001ce000001ce000001ce000001ce000001ce000001ce000001ea2
00001fc400001fc400001fc400001fc400001fc400001fc400001fc40000
20e0000020e0000020e0000020e0000020e0000020e0000020e0000020e0
000020e0000020e0000020e0000020e00000220e0000220e000023400000
2432000024320000243200002432000025be000025be000025be000025be
000025be000025be000025be000025be000025be000025be000026b60000
26b6000026b6000026b6000026b6000026b6000026b6000026b6000026b6
000026b6000026b6000026b6000026b6000026b6000026b6000026b60000
26b6000026b6000026b6000026b6000026b6000026b6000026b6000026b6
000026b6000026b6000026b6000027d6000027d6000027d6000027d60000
27d6000027d6000027d6000027d6000027d6000027d6000027d600002944
00002af400002af400002af400002af400002af400002c1400002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002d40
00002d4000002d4000002d8400002d8400002d8400002de600002de60000
2de600002de600002de600002de600002de600002de600002de600002de6
00002de600002de600002de600002de600002de600002de600002de60000
2de600002de600002de600002de600002de600002de600002de600002de6
00002de600002de600002de600002de600002de600002de600002de60000
2de600002de600002de600002de600002de600002de600002de600002de6
00002de600002de600002de600002de600002de600002de600002de60000
2de600002de600002de600002de600002de600002de600002de600002de6
00002de600002de600002de600002de600002de600002de600002de60000
2de600002de600002de600002de600002de600002de600002de600002de6
00002de600002de600002de600002de600002de600002de600002de60000
2de600002de600002de600002de600002de600002de600002de600002de6
00002de600002de600002de600002de600002de600002de600002de60000
2de600002de600002de600002de600002de600002de600002de600002de6
00002de600002de600002de600002de600002de600002de600002de60000
2de600002de600002de600002de600002f4200002f4200002f4200002f42
00002f4200002f4200002f4200002f4200002f4200002f4200002f420000
2f4200002f4200002f4200002f4200002f4200002f4200002f4200002f42
00002f4200002f4200002f4200002f4200002f4200002f4200002f420000
2f4200002f4200002f4200002f4200002f4200002f4200002f4200002f42
000030a800003216000033560000353e000036c8000036c8000036d80000
381600003816000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000100000f260120001000c3000700020010002f00650000
11902410000400010000000e00ae00000003000000000064000000000003
00000007007600640001000000000000003200da0001000000000003000e
010c0001000000000004000e011a0001000000000006000e012800010000
00000007003b01360003000104090000006401710003000104090001001c
01d50003000104090002000e01f10003000104090003001c01ff00030001
04090004001c021b0003000104090006001c023700030001040900070076
025300a9002000320030003100320020004d006900630072006f0073006f
0066007400200043006f00720070006f0072006100740069006f006e002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064002e00430061006c006900620072006900200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200074006800650020004d006900630072006f0073006f00660074
002000670072006f007500700020006f006600200063006f006d00700061
006e006900650073002ea92032303132204d6963726f736f667420436f72
706f726174696f6e2e20416c6c205269676874732052657365727665642e
504f504346462b43616c69627269504f504346462b43616c69627269504f
504346462b43616c6962726943616c696272692069732061207472616465
6d61726b206f6620746865204d6963726f736f66742067726f7570206f66
20636f6d70616e6965732e00a9002000320030003100320020004d006900
630072006f0073006f0066007400200043006f00720070006f0072006100
740069006f006e002e00200041006c006c00200052006900670068007400
73002000520065007300650072007600650064002e0050004f0050004300
460046002b00430061006c00690062007200690052006500670075006c00
6100720050004f0050004300460046002b00430061006c00690062007200
690050004f0050004300460046002b00430061006c006900620072006900
50004f0050004300460046002b00430061006c0069006200720069004300
61006c006900620072006900200069007300200061002000740072006100
640065006d00610072006b0020006f006600200074006800650020004d00
6900630072006f0073006f00660074002000670072006f00750070002000
6f006600200063006f006d00700061006e006900650073002e00b2090320
b80284b40918014a20b80283b40918014a20b80282b40918014a20b80281
b40918014a20b80280b40918014a20b8027fb40918014a20b8027eb40918
014a20b8027db40918014a20b8027cb40918014a20b8027bb40918014a20
b8027ab40918014a20b80279b40918014a20b80278b40918014a20b80277
b40918014a20b80276b40918014a20b80275b40918014a20b80274b40918
014a20b80273b40918014a20b80271b40918014a20b80270b40918014a20
b8026fb40918014a20b8026eb40918014a20b8026db40918014a20b8026c
b40918014a20b8026bb40918014a20b8026ab40918014a20b80269b40918
014a20b80268b40918014a20b80267b40918014a20b80266b40918014a20
b80265b40918014a20b80264b40918014a20b80263b40918014a20b80262
b40918014a20b80261b40918014a20b80260b40918014a20b8025fb40918
014a20b8025eb40918014a20b8025db40918014a20b8025cb40918014a20
b8025bb40918014a20b8025ab40918014a20b80259b40918014a20b80258
b40918014a20b80257b40918014a20b80256b40918014a20b80255b40918
014a20b80254b40918014a20b80253b40918014a20b80252b40918014a20
b80251b40918014a20b80250b40918014a20b8024fb40918014a20b8024e
b40918014a20b8024db40918014a20b8024cb40918014a20b8024bb40918
014a20b8024ab40918014a20b80249b40918014a20b80248b40918014a20
b80247b40918014a20b80246b40918014a20b80245b40918014a20b80244
b40918014a20b80243b40918014a20b80242b40918014a20b80241b40918
014a20b80240b40918014a20b8023fb40918014a20b8023eb40918014a20
b8023db40918014a20b8023cb40918014a20b8023bb40918014a20b8023a
b40918014a20b80239b40918014a20b80238b40918014a20b80237b40918
014a20b80236b40918014a20b80235b40918014a20b80234b40918014a20
b80233b40918014a20b80232b40918014a20b80231b40918014a20b80230
b40918014a20b8022fb40918014a20b8022eb40918014a20b8022db40918
014a20b8022cb40918014a20b8022bb40918014a20b8022ab40918014a20
b80229b40918014a20b80228b40918014a20b80227b40918014a20b80226
b40918014a20b80225b40918014a20b80224b40918014a20b80223b40918
014a20b80222b40918014a20b80221b40918014a20b80220b40918014a20
b8021fb40918014a20b8021eb40918014a20b8021db40918014a20b8021c
b40918014a20b8021bb40918014a20b8021ab40918014a20b80219b40918
014a20b80218b40918014a20b80217b40918014a20b80216b40918014a20
b80215b40918014a20b80214b40918014a20b80213b40918014a20b80212
b40918014a20b80211b40918014a20b80210b40918014a20b8020fb40918
014a20b8020eb40918014a20b8020db40918014a20b8020cb40918014a20
b8020bb40918014a20b8020ab40918014a20b80209b40918014a20b80208
b40918014a20b80207b40918014a20b80206b40918014a20b80205b40918
014a20b80204b40918014a20b80203b40918014a20b80202b40918014a20
b80201b40918014a20b80200b40918014a20b801ffb40918014a20b801fe
b40918014a20b801fdb40918014a20b801fcb40918014a20b801fbb40918
014a20b801fab40918014a20b801f9b40918014a20b801f8b40918014a20
b801f7b40918014a20b801f6b40918014a20b801f5b40918014a20b801f4
b40918014a20b801f3b40918014a20b801f2b40918014a20b801f1b40918
014a20b801f0b40918014a20b801efb40918014a20b801eeb40918014a20
b801edb40918014a20b801ecb40918014a20b801ebb40918014a20b801ea
b40918014a20b801e9b40918014a20b801e8b40918014a20b801e7b40918
014a20b801e6b40918014a20b801e5b40918014a20b801e4b40918014a20
b801e3b40918014a20b801e2b40918014a20b801e1b40918014a20b801e0
b40918014a20b801dfb40918014a20b801deb40918014a20b801ddb40918
014a20b801dcb40918014a20b801dbb40918014a20b801dab40918014a20
b801d9b40918014a20b801d8b40918014a20b801d7b40918014a20b801d6
b40918014a20b801d5b40918014a20b801d4b40918014a20b801d3b40918
014a20b801d2b40918014a20b801d1b40918014a20b801d0b40918014a20
b801cfb40918014a20b801ceb40918014a20b801cdb40918014a20b801cc
b40918014a20b801cbb40918014a20b801cab40918014a20b801c9b40918
014a20b801c8b40918014a20b801c7b40918014a20b801c6b40918014a20
b801c5b40918014a20b801c4b40918014a20b801c3b40918014a20b801c2
b40918014a20b801c1b40918014a20b801c0b40918014a20b801bfb40918
014a20b801beb40918014a20b801bdb40918014a20b801bcb40918014a20
b801bbb40918014a20b801bab40918014a20b801b9b40918014a20b801b8
b40918014a20b801b7b40918014a20b801b6b40918014a20b801b5b40918
014a20b801b4b40918014a20b801b3b40918014a20b801b2b40918014a20
b801b1b40918014a20b801b0b40918014a20b801afb40918014a20b801ae
b40918014a20b801adb40918014a20b801acb40918014a20b801abb40918
014a20b801aab40918014a20b801a9b40918014a20b801a8b40918014a20
b801a7b40918014a20b801a6b40918014a20b801a5b40918014a20b801a4
b40918014a20b801a3b40918014a20b801a2b40918014a20b801a1b40918
014a20b801a0b40918014a20b8019fb40918014a20b8019eb40918014a20
b8019db40918014a20b8019cb40918014a20b8019bb40918014a20b8019a
b40918014a20b80199b40918014a20b80198b40918014a20b80197b40918
014a20b80196b40918014a20b80195b40918014a20b80194b40918014a20
b80193b40918014a20b80192b40918014a20b80191b40918014a20b80190
b40918014a20b8018fb40918014a20b8018eb40918014a20b8018db40918
014a20b8018cb40918014a20b8018bb40918014a20b8018ab40918014a20
b80189b40918014a20b80188b40918014a20b80187b40918014a20b80186
b40918014a20b80185b40918014a20b80184b40918014a20b80183b40918
014a20b80182b40918014a20b80181b40918014a20b80180b40918014a20
b8017fb40918014a20b8017eb40918014a20b8017db40918014a20b8017c
b40918014a20b8017bb40918014a20b8017ab40918014a20b80179b40918
014a20b80178b40918014a20b80177b40918014a20b80176b40918014a20
b80175b40918014a20b80174b40918014a20b80173b40918014a20b80172
b40918014a20b80171b40918014a20b80170b40918014a20b8016fb40918
014a20b8016eb40918014a20b8016db40918014a20b8016cb40918014a20
b8016bb40918014a20b8016ab40918014a20b80169b40918014a20b80168
b40918014a20b80167b40918014a20b80166b40918014a20b80165b40918
014a20b80164b40918014a20b80163b40918014a20b80162b40918014a20
b80161b40918014a20b80160b40918014a20b8015fb40918014a20b8015e
b40918014a20b8015db40918014a20b8015cb40918014a20b8015bb40918
014a20b8015ab40918014a20b80159b40918014a20b80158b40918014a20
b80157b40918014a20b80156b40918014a20b80155b40918014a20b80154
b40918014a20b80153b40918014a20b80152b40918014a20b80150b40918
014a20b8014fb40918014a20b8014eb40918014a20b8014cb40918014a20
b8014bb40918014a20b8014ab40918014a20b80149b40918014a20b80148
b40918014a20b80147b40918014a20b80146b40918014a20b80145b40918
014a20b80144b40918014a20b80143b30918014ab80284b21e3e1fb80283
b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8027fb21e
3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027bb21e3e1f
b8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d431fb802
76b21d431fb80275b21d411fb80274b21d431fb80273b21d431fb80272b2
1d411fb80271b21d421fb80270b21d421fb8026fb21d421fb8026eb21d43
1fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab21c451fb8
0269b21c451fb80268b21c451fb80267b21c451fb80266b21c441fb80265
b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb80261b21c
451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025db21c451f
b8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c451fb802
58b21c451fb80257b21c451fb80256b21c451fb80255b21c451fb80254b2
1c451fb80253b21c451fb80252b21c451fb80251b21c451fb80250b21c45
1fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb21c451fb8
024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a1fb80247
b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb80243b21b
4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023fb21b4a1f
b8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b4b1fb802
3ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1fb80236b2
1b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb80232b21b4a
1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb21b4c1fb8
022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c1fb80229
b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb80225b21b
4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221b21b4b1f
b80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b4c1fb802
1cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1fb80218b2
1a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb80214b21a4f
1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b21a4e1fb8
020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e1fb8020b
b21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb80207b21a
4f1fb80206b219501fb80205b219511fb80204b219511fb80203b219501f
b80202b219511fb80201b219511fb80200b219511fb801ffb219511fb801
feb219501fb801fdb219511fb801fcb219511fb801fbb219511fb801fab2
19501fb801f9b219511fb801f8b219511fb801f7b219511fb801f6b21951
1fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b218541fb8
01f1b218541fb801f0b218531fb801efb218541fb801eeb218541fb801ed
b218541fb801ecb218531fb801ebb218531fb801eab218541fb801e9b218
541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5b218541f
b801e4b218531fb801e3b218541fb801e2b218541fb801e1b218541fb801
e0b218531fb801dfb218531fb801deb218541fb801ddb218541fb801dcb2
18541fb801dbb218541fb801dab218531fb801d9b218541fb801d8b21854
1fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b217571fb8
01d3b217571fb801d2b217571fb801d1b217571fb801d0b217561fb801cf
b217561fb801ceb217571fb801cdb217571fb801ccb217571fb801cbb217
571fb801cab217561fb801c9b217561fb801c8b217571fb801c7b217571f
b801c6b217571fb801c5b217571fb801c4b217571fb801c3b217561fb801
c2b217571fb801c1b217571fb801c0b217571fb801bfb217561fb801beb2
17561fb801bdb217571fb801bcb217571fb801bbb217571fb801bab21757
1fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b217571fb8
01b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b1fb801b1
b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb801adb216
5b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9b2163f1f
b801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b2165b1fb801
a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801a0b2
165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb8019cb2165b
1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2163e1fb8
0197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e1fb80193
b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8018fb216
5b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018bb2165b1f
b8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b2165b1fb801
86b215611fb80185b215621fb80184b215621fb80183b215661fb80182b2
15661fb80181b215551fb80180b215451fb8017fb215361fb8017eb21536
1fb8017db215611fb8017cb215621fb8017bb215621fb8017ab215641fb8
0179b215661fb80178b215661fb80177b215661fb80176b215661fb80175
b215661fb80174b215661fb80173b215451fb80172b215621fb80171b215
621fb80170b215631fb8016fb215641fb8016eb215661fb8016db215661f
b8016cb215661fb8016bb215661fb8016ab215661fb80169b215621fb801
68b215621fb80167b215611fb80166b215641fb80165b215641fb80164b2
15661fb80163b215661fb80162b215661fb80161b215661fb80160b21566
1fb8015fb215661fb8015eb215551fb8015db215451fb8015cb215451fb8
015bb215361fb8015ab215611fb80159b215621fb80158b215621fb80157
b215631fb80156b215641fb80155b215661fb80154b215661fb80153b215
661fb80152b215661fb80151b214401fb80150b214551fb8014fb214561f
b8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214401fb801
4ab214411fb80149b214401fb80148b214401fb80147b214411fb80146b2
147e1fb80145b214871fb80144b2147f1fb80143b214801fb80142b21246
1fb80141b212461fb80140b212461fb8013fb212461fb8013eb212441fb8
013db212461fb8013cb211591fb8013bb211591fb8013ab2115b1fb80139
b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb80135b211
5b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131b211551f
b80130b211571fb8012fb211571fb8012eb211581fb8012db211591fb801
2cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1fb80128b2
115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb80124b21156
1fb80123b211571fb80122b211581fb80121b211591fb80120b2115a1fb8
011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8011b
b2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb80117b210
5f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113b2105f1f
b80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb2105f1fb801
0eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1fb8010ab2
105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb80106b2105d
1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2105f1fb8
0101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f621f
fb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f641ff40f
621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641fed0f621f
ec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e671fe50e
681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681fde0e681f
dd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d311fd60d
6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1f
ce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d
691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f40ffc00d
311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c741f
b80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c741fb10c
741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1f
a90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b
791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f
9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f930b
7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f
8503251f8403381f8301381f8255805581ab80557f557d557eab7d550b7d
010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a557955775578
ab7755ba028600660285403c5576ab755504751475747503f47501ab7501
44750130750102007510752075030c7455725573ab7255007250728072b0
72043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c720d104671
556f5570ab6f556e666d556a03251f6938675568ab67556638645565ab64
5563386255613860555f385d555eab5d555c385a555bab5a555938585557
03251f5638545555ab54555338515552ab51554f384e554e03251f4d384b
554cab4b554a38485549ab4855473846554503381f001c101c201c0310b8
ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc01b03120f
1a1f1a02290f1901434f19016f197f198f19030f18cf18024018292c460f
17cf17df17ef1704134017292e460016101620160315b8ffc0b3164d5446
b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f15010f15
1f1502451f15010011e011f0110315bf10cf10020f0f010f0fff0f02400f
3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f0d1f0dff
0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f0b02400b
3f4346400b2d30460003012001010001100120010308b8ffc0b301151f46
b80100b316010501b80190b154532b2b4bb80800524bb008505bb00188b0
2553b00188b040515ab00688b000555a5b58b101018e59b101024354b014
4b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0805358b0
401d594bb0ff5358b0001db1160042592b5e7375732b2b745e732b2b5e73
742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b7374755e73
5e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b
2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2bb1000243545841ff0284006402830064028200640281
006402800064027f0064027e0064027d0064027c0064027b0064027a0064
027900640278006402770064027600640275006402740064027300640271
006402700064026f0064026e0064026d0064026c0064026b0064026a0064
026900640268006402670064026600640265006402640064026300640262
00640261006402600064025f0064025e0064025d0064025c0064025b0064
025a00640259006402580064025700640256006402550064025400640253
0064025200640251006402500064024f0064024e0064024d0064024c0064
024b0064024a006402490064024800640247006402460064024500640244
006402430064024200640241006402400064023f0064023e0064023d0064
023c0064023b0064023a0064023900640238006402370064023600640235
00640234006402330064023200640231006402300064022f0064022e0064
022d0064022c0064022b0064022a00640229006402280064022700640226
0064022500640224006402230064022200640221006402200064021f0064
021e0064021d0064021c0064021b0064021a006402190064021800640217
006402160064021500640214006402130064021200640211006402100064
020f0064020e0064020d0064020c0064020b0064020a0064020900640208
0064020700640206006402050064020441ff006402030064020200640201
00640200006401ff006401fe006401fd006401fc006401fb006401fa0064
01f9006401f8006401f7006401f6006401f5006401f4006401f3006401f2
006401f1006401f0006401ef006401ee006401ed006401ec006401eb0064
01ea006401e9006401e8006401e7006401e6006401e5006401e4006401e3
006401e2006401e1006401e0006401df006401de006401dd006401dc0064
01db006401da006401d9006401d8006401d7006401d6006401d5006401d4
006401d3006401d2006401d1006401d0006401cf006401ce006401cd0064
01cc006401cb006401ca006401c9006401c8006401c7006401c6006401c5
006401c4006401c3006401c2006401c1006401c0006401bf006401be0064
01bd006401bc006401bb006401ba006401b9006401b8006401b7006401b6
006401b5006401b4006401b3006401b2006401b1006401b0006401af0064
01ae006401ad006401ac006401ab006401aa006401a9006401a8006401a7
006401a6006401a5006401a4006401a3006401a2006401a1006401a00064
019f0064019e0064019d0064019c0064019b0064019a0064019900640198
006401970064019600640195006401940064019300640192006401910064
01900064018f0064018e0064018d0064018c0064018b0064018a00640189
006401880064018700640186006401850064418001840064018300640182
00640181006401800064017f0064017e0064017d0064017c0064017b0064
017a00640179006401780064017700640176006401750064017400640173
0064017200640171006401700064016f0064016e0064016d0064016c0064
016b0064016a006401690064016800640167006401660064016500640164
006401630064016200640161006401600064015f0064015e0064015d0064
015c0064015b0064015a0064015900640158006401570064015600640155
006401540064015300640152006401500064014f0064014e0064014c0064
014b0064014a006401490064014800640147006401460064014500640144
0064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[14729 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 11750 970 <0002006bffed03bd0520003400480099b9004affc040170f024d604a012b
753f01663f01433f01343f01243f013fb8024340140c1c1c0c7a35016a35
014b35013a35012b350135b80243b670000120000100b8ffe0b30f014d00
b8ffe8b70f024d00300c010cb8fffa400a0f024d0c3aff30300526b80100
b2135944b80115b1055f003fed3fed12392fed012f2b5dd42b2b5d5de15d
5d5d5d5d12392f10e15d5d5d5d5d3231305d2b01140e0223222e0435343e
0433321e0615140e0223222e0223220e02073e0333321e0207342e022322
0e0207141e0233323e0203bd346ca671517c5c3d2510122e4f77a66e254c
402c0e07040201070b090b26364d335d865529031a414d563169905926ae
17365a42254a453f1a213f5e3f405e3e1d01a3559f7949284a6c8aa45e53
aa9e8b673c090f120b0d0f130e121a10080e110e4c80a95c0f1e180f3965
89603a5f42240d171f1281ae692d30516500>BAJRMX+Calibri AddT42Char 
2 14024 1010 <ffff006bffed03bd0520020603ca0000>BAJRMX+Calibri AddT42Char 
2 1438 28 <000100ac0000037c050e002c0076b11a27b8ffe8b310014d27b8fff0b30f
014d27b8fff0b30d014d27b8fff6b30c014d27b8ffe8b30b014d27b80211
400909132013200009001ab80108400d802601c02601d0260126260619b8
010cb20d5127b8010cb10654003fed3fed12392f5d7172ed012f2f123939
2f2f10e12b2b2b2b2b32313025140e0223212226351134363321321e0215
140e0223211121321e0215140e0223211121321e02037c040a0d08fd9317
2929170266080d080505080d08fe0601b2080d090404090d08fe4e020108
0d0a0447121b12081f270482271f08121b14121b1108fe6a09101c13121a
1007fe3108111b00>BAJRMX+Calibri AddT42Char 
2 3566 100 <0001000ffffa03d7050e00220065b718400d014d181100b8ffc0b40d014d
0006b8ffe8b310014d06b8fff0b30f014d06b8fff0b30d014d06b8fff6b3
0c014d06b8ffe8b30b014d06ba02110011ffc0b50d014d110612b80128b3
1d510c55003f3fed32012f2bf12b2b2b2b2bc52b10c42b313001140e0223
2111140e0223222e02351121222e0235343e023321321e0203d704090d08
fe940814211918221408fe94080d080505080d080384080d090404c4131c
1108fb9e080c070505070c08046208111c13131d120808121d00>BAJRMX+Calibri AddT42Char 
2 4148 258 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>BAJRMX+Calibri AddT42Char 
2 5084 282 <00020060ffed039c056d00260039008b401f3f3b010b1b39100d014d390a
0c014d391010014d39100f014d39180b014d39bb01f90000002fffe0b30d
014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d2fb8ffe8
b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a34b80104
b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b2b
323931305d25140e0223222e023535060623222e0235343e023332161711
343e0233321e021503262623220e0215141e0233323e0237039c07111c14
151c120847995b638c57283262915f4f834007141f1819201209a6437d44
3f58371915345641213d40462719080c070404070c08774d564d83b16274
bb84474543020b070d070505070d07fd4553573c627c404482653d122a43
3100>BAJRMX+Calibri AddT42Char 
2 5386 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>BAJRMX+Calibri AddT42Char 
2 5708 296 <00010025fffa02860578003c0064b2161000b8ffe0b40b014d001bb8fff0
b30d014d1bb8fff0b40f10014c1bb8fff6b30c014d1bb8ffe8b30b014d1b
b801f9b2302a25b8ffd040121011014c250aed36471a26ed3048204c1048
003f3f3fed323fed012f2bc433f12b2b2b2bc42b33c4313001140e022322
2e0223220e02151533321e02151406232311140e0223222e023511232226
35343e02333335343e0233321e0402860405080607151e291b2534200ec9
080b0905120fc908132018182013087f101004080c087f23486d4a234224
0c0803050f13170e05090b091833513a6207111a132420fceb080b080404
080b0803152024131a11075d5e8756290d0f0c131b00>BAJRMX+Calibri AddT42Char 
2 6708 349 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
2900>BAJRMX+Calibri AddT42Char 
2 7258 367 <00010099fffa013e057100150040b73f174f176f170300b8fff0b30d014d
00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00b801f8b4
0a1046054c003f3f012fe12b2b2b2b31305d25140e0223222e023511343e
0233321e0215013e0812201918201307071320181920120819080b080404
080b080538080c080404080c0800>BAJRMX+Calibri AddT42Char 
2 7392 373 <00010099fffa05d003ca005000ea401b12100b014d13180b014d26100b0c
014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b014d13b8
fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8401e1e16
0d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f10014c0ab801
f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27b8fff0b3
10014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200100106b2
4b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f1239393f
ed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b2b2b2b39
31305d002b2b2b2b25140e0223222e023511342e022322060711140e0223
222e023511342e022322060711140e0223222e023511343e0233321e0215
15363633321e02173e0333321e021505d00812201819201308142c442e39
73450813201817211307162c432e397444081220191820130706121c1716
1d10074c8f4938594430102d514b47245776491f19080b080404080b0802
23395e44245855fd8b080b080404080b080223395e44245855fd8b080b08
0404080b080384080b090303090b0877554f1a2f412831442a133d66894c
>BAJRMX+Calibri AddT42Char 
2 7842 374 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>BAJRMX+Calibri AddT42Char 
2 8132 381 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>BAJRMX+Calibri AddT42Char 
2 8416 393 <00020099fe9403d503ca002a003d0080b53f3f0121360ab8fff0b30d014d
0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0ab801f840
17152b200d014d2b120c014d2b180f10014c2b180b014d2bb8020a400900
150a363521040530b80105b6264a1b49104f39b80105b1054d003fed3f3f
3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d01140e022322
2e022711140e0223222e023511343e0233321e0215153e0333321e020734
2e0223220e020711161633323e0203d53363925e28444140240812201918
20130706121c14151b1207294c4d512d628a5728ae15335640203e404627
447a433e59371a01e976bc834710223423fe3e080c080404080c0804e909
0b080303080b09792a3e29154c84af754581643c13294331fe9a53583c64
7c00>BAJRMX+Calibri AddT42Char 
2 9024 396 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>BAJRMX+Calibri AddT42Char 
2 9266 400 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>BAJRMX+Calibri AddT42Char 
2 9662 410 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>BAJRMX+Calibri AddT42Char 
2 10198 448 <00010022fffa037b03bc002c00e3b90023fff840170b0c014c1f080b0c01
4c251f011e080b0c014c251e0116b8fff0b30b014d15b8fff0b30b014d14
b8ffe8b30b014d13b8ffe8b30b014d12b8ffe8b30b014d11b8fff040370b
014d37110126110127100128050122280b014d3d220124220121280b014d
3f210124210120280b014d3d2001242001270f0176210121b8ffd0400911
1548212013014d21b8ffe8400910014d21200f014d21b8ffe8b30c014d21
b8fff0400c0b014d212849210b1a490b4c003f3f12393f012f2b2b2b2b2b
002b5d31305d5d5d2b5d5d2b5d5d2b015d5d5d5d2b2b2b2b2b2b5d2b5d2b
2b01140e0207010e0323222e0227012e0235343e0233321e021713173713
3e0333321e02037b01020302fecd040d1a281e1e28190e04fece04050108
131f171d23130904fe0403fb020a13211b171e1107039f04090a0c07fca9
0b0e080304080e0a03570c120903080c070203080c09fd1a0c0c02e6090c
080302080b00>BAJRMX+Calibri AddT42Char 
2 10564 449 <00010035fffa058403bc004500deb90047ffc0403d0f014d38080c014d29
380137080c014d252e01262101262001261f01261e01261d01271c012804
012903013a3b013b3a013b2d013c2c01102015014d10b8ffe0b310014d10
b8ffe0400a0d014d10200c014d100fb8ffe0b310014d0fb8ffe0400c0d01
4d0f200c014d0f414910b8ffe040200f014d3f104f106f107f1004104012
164810334925493a902c012c200f014d2cb8ffc04010131648672c772c02
452c012c174c094c003f3fd55d5d2b2b5dc43f3fcd2b5d2b3f012f2b2b2b
2f2b2b2b2b3130005d5d5d5d015d5d5d5d5d5d5d5d5d2b5d2b2b01140607
010e0323222e0227032707030e0323222e022701262635343e0233321e02
17131737133e0333321e0217131737133e0333321e0205840405fef7030d
17281e1f2a190c03bd0202af030d1a291e1f27190c03fef9050408132017
1c22120803d90202c70209121f19181f120802d70201d6020913211a181d
1107039f07140ffca90b0e080304080e0a028d0909fd730b0e080304080e
0a03570f1407090b070203070d09fd1a090902e6090d070303070c08fd18
090902e6090d070302080a00>BAJRMX+Calibri AddT42Char 
2 10996 454 <00010029fffa034b03bc002f0086b90031ffc040110b014d2f080b014d2e
100b014d3b2e0118b8fff0b60b014d34180117b8fff8b30b014d16b8fff0
b60b014d34160109b8fff0402a0b014d00080b014d3c0001382301360b01
0b2010014d0b200c014d0b0b31302949230b111d49114c054c003f3f3f12
39393f111201392f2b2b3130005d5d015d2b2b5d2b2b5d2b5d2b2b2b2516
14060623222e022703030e0323222626363701012626363633321e021713
133e033332161606070103430813271f1e23150b04d8d7040b15221c1d25
1101090118fef708011327201d23140a04cdd0040a111f1b1d25120209fe
f92c0e130c0503070b070165fe9b070b0703050c130e01b701a70e130d04
03060a07feb1014f060a0703040b140ffe5e>BAJRMX+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>BAJRMX+Calibri AddT42Char 
BAJRMX+Calibri /CharStrings get begin
/six 1010 def
/E 28 def
/T 100 def
/a 258 def
/d 282 def
/e 286 def
/f 296 def
/i 349 def
/l 367 def
/m 373 def
/n 374 def
/o 381 def
/p 393 def
/r 396 def
/s 400 def
/t 410 def
/v 448 def
/w 449 def
/x 454 def
end
BAJRMX+Calibri /Encoding get
dup 54 /six put
dup 69 /E put
dup 84 /T put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 119 /w put
dup 120 /x put
pop
end
%ADOEndSubsetFont
/KEFPBE+Calibri /BAJRMX+Calibri findfont ct_VMDictPut/KEFPBE+Calibri*1 [54{/.notdef}rp /six 14{/.notdef}rp /E 14{/.notdef}rp /T 12{/.notdef}rp /a 2{/.notdef}rp /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /.notdef /v /w /x 135{/.notdef}rp]KEFPBE+Calibri nfKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf22.8771 13.7825 mo(Time)[5.11349 2.40454 8.38946 0 ]xsh%ADOBeginSubsetFont: LXOQMX+Calibri-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (LXOQMX+Calibri)%%Title: (LXOQMX+Calibri Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /LXOQMX+Calibri def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-503 -307 1240 964} def/FontInfo 4 dict dup begin/FSType 8 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 3878 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 2 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B7A086528E2CBE7FD4F03CC1C545DFC3C53F52C692334252531335C4AFD91E9493A7B9787114ADBF50CAD0D8D8F4E0FD112CA0EDC244BC77AFB35E52902467E4B7D65BC23E8AB084EE08EDC3C9FE17948A4E93ECA5D5D8A99AF099DAB98A96A7EEC3487AD5909F63F36A9F52E364FE794F0586CEACB0693AEA3E3B131EDB924E9018AC085D5D058B3A8419D5096479413ADE107D9F5302816818EECEB683CD82FAAA79E358EAA71283CC02664EE09C62BDF6E0D9BC98D9F308DF8AEA61A9B7C090BD7FD96A3223C7AE0D3D1A8F2E623FA6B7C467CA6FECDBA0B792188DFEEBD3D01BCE6CC077D778842DE1B5E36F7F8EB4C68A439269E0981B28AD1790AA058065E4B6AD27A659E12C7322A5BE1E7DF9729C0030192F3688A380035351BB0945D5DC7515959F458727E2B8854977E466D6DDC900E997B52F6BAB4C73A178A3B47EBB3C3FC842F51CC6E114336F3E4E5E72B20D8F94A7BA3BA965E83BF37BAA664C34B8502BB9E9B9BEDD7EBC5DCBC4FFF5EBCA9C032449885D42A9DCCBA2A816B59D7978373DF4208E5608F69A2EAF492AC156CC637D5A11AF573B17CF9F38> |3 <001C60D8A8C9B888C146> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /LXOQMX+Calibri-Identity-H /Identity-H 0 [/LXOQMX+Calibri] ct_ComposeFont pop end end
%ADOEndSubsetFont
/KEFPBF+Calibri /LXOQMX+Calibri-Identity-H findfont ct_VMDictPutKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf43.9968 13.7825 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf16.4564 29.3824 mo(window)[7.50641 2.4035 5.51138 5.51138 5.45678 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf50.4165 29.3824 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf84.3168 13.7825 mo(Top)[4.13699 5.51663 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf99.4967 13.7825 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf101.897 13.7825 mo(6)shKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf107.237 13.7825 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf109.638 13.7825 mo(words)[7.38356 5.51663 3.54059 5.51558 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf135.678 13.7825 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf138.078 13.7825 mo(for)[2.99768 5.51662 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf150.258 13.7825 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf152.658 13.7825 mo(Event)[4.85738 4.62309 5.22482 5.39587 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf176.298 13.7825 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf178.698 13.7825 mo(Example)[5.11777 4.37848 5.02325 8.38315 5.50613 2.39825 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf214.758 13.7825 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf319.698 13.7825 mo(Event)[4.85736 4.62311 5.22482 5.39587 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf343.398 13.7825 mo(\000\003)sh2.17714 2.38281 mo
2.65714 2.38281 li
2.65714 1.90277 li
2.17714 1.90277 li
cp
f
2.17714 2.38281 mo
428.777 2.38281 li
428.777 1.90277 li
2.17714 1.90277 li
cp
f
428.297 2.38281 mo
428.777 2.38281 li
428.777 1.90277 li
428.297 1.90277 li
cp
f
2.17714 33.5828 mo
2.65714 33.5828 li
2.65714 2.38281 li
2.17714 2.38281 li
cp
f
64.2771 33.5828 mo
64.7571 33.5828 li
64.7571 2.38281 li
64.2771 2.38281 li
cp
f
234.377 33.5828 mo
234.857 33.5828 li
234.857 2.38281 li
234.377 2.38281 li
cp
f
428.297 33.5828 mo
428.777 33.5828 li
428.777 2.38281 li
428.297 2.38281 li
cp
f
%ADOBeginSubsetFont: BAJRMX+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KEFPBE+Calibri gcheck setglobal} if
2 11486 853 <0001002afede017300e0001b000ab20b171c0010d4cd313025140e020707
0e0323222e02371335343e0233321e020173060e171189050d1319131117
0a0104850b18241a1924170b8f1f342e2d19ce070a080303070c08011380
1b20100606102000>KEFPBE+Calibri AddT42Char 
2 11584 856 <00010097fff7016e00e0000b0017b10006b8ffc0b60c014d0609034c003f
cd012f2bc13130251406232226353436333216016e2f3e3c2e2f3e3c2e6d
472f2e45472f2e00>KEFPBE+Calibri AddT42Char 
2 12098 1004 <00020048ffed03c705210013002b00ea4019281201291101260d01260c01
2608012507012a03012902012db8ffc040250f024d602d01141810014d14
100f014d14160d014d140a0c014d14200b014d14180c014d14bb022d0000
0020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8fff6b30c
014d20b8ffe8b60c014d24200120b8022d40090a200030004000030ab8ff
f040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00b8ffc040
0a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003fed3fed11
120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b2b2b3130
5d2b5d5d5d5d5d5d5d5d01140e0223222e0235343e0233321e0207342e04
23220e0215141e0233323e0403c72f6db0817aa7662b306cb0807ba7662b
b00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b16157a9f7
a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e7285>KEFPBE+Calibri AddT42Char 
2 12456 1005 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a00>KEFPBE+Calibri AddT42Char 
2 12822 1006 <000100720000039c0521003e0094400d2936012b1e01291d01261e0140b8
ffc040170f024d604001161810014d16100c0d014c16200b014d16b8022d
b633253325330039b8ffe8b310014d39ba027f000bffc0b30c014d0bb8ff
e0400b0f014d0b1138392020391bb8012eb63316062e531039b80128b106
54003fed323f123939ed11392f123939012f2b2be12bcd39392f2f10e12b
2b2b31305d2b005d015d5d5d25140e022321222e0235343e0237133e0335
342e0223220e0223222e0235343e0633321e0215140e02070721321e0203
9c05090f09fd350e150f07030a0f0cfb576939121c3550343d6149310c07
0b0704020508183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c13
0907101e16141e17170d010a5c9278622b2b4d3a2222282208121e150f16
100e15242318355c7a453e7b8faf72d609121b00>KEFPBE+Calibri AddT42Char 
2 14040 1011 <00010063fffa03af050e001f00d7b90011ffe8400a1121014c111010014d
11b8ffe8b30f014d11b8fff0b30d014d11b8ffe8b30c014d11b8fff8400a
0b014d74110126110110b8ffe8400a1121014c101010014d10b8ffe8b30f
014d10b8fff0b30d014d10b8ffe8400b0b0c014c75100126100106b8fff0
b30b014d21b8ffc0b60f024d60210100b8ffc0b310014d00b8ffd8b40b01
4d0015b8ffc0b30c014d15b8ffe8b30b014d15b8ffe8b30f014d15b8ffe0
b50f024d150511b8012db31a510b55003f3fed32012f2b2b2b2bcd2b2b31
305d2b2b5d5d2b2b2b2b2b5d5d2b2b2b2b2b2b01140e0207010e03232226
2636370121222635343e023321321e0203af03050906fe2e050f17241a22
2611020601eafd931313050a0e0902f20e150b0604c4121d1b190efbce0c
0f0903060d130d044a2824131c130906121c>KEFPBE+Calibri AddT42Char 
2 1896 47 <000100acfffa0158051400150050b73f174f17af170300b8ffe8b310014d
00b8fff0b30f014d00b8fff0b30d014d00b8fff6b30c014d00b8ffe8b30b
014d00ba0211000affc0b715014d0a10520555003f3f012f2be12b2b2b2b
2b31305d25140e0223222e023511343e0233321e02150158081421191822
140809152117192114081a080c070505070c0804da080c070505070c0800
>KEFPBE+Calibri AddT42Char 
2 2046 58 <00010007ffee01e4051400280058b90000ffe8b310014d00b8fff0b30f01
4d00b8fff0b30d014d00b8fff6b30c014d00b8ffe8b30b014d00ba021100
1dffc0b711014d1d0e235209bb013200130018012eb10556003ffdd4ed3f
012f2f2be12b2b2b2b2b313001140e0223222e0635343e0233321e023332
3e023511343e0233321e021501e41c446f521c372e220b07050203080b08
0819232e1f22302010081421191822130901464d805a31090f110c0c1119
12161d11070f120f112e5141039e070c080404080c07>KEFPBE+Calibri AddT42Char 
2 4804 272 <0001005affed032003c900350089b11c00b8ffc0b310014d00b8ffe0b30d
014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f014d27b8ff
eeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b400d2f0e01
0e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48312cb801
06b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b2b2b3231
3025140e0623222e0235343e0233321e0615140623222e0223220615141e
0233323e0233321e020320020507193c4b582f61966535417199592b5144
3518090602120d0f273c553a777f21405d3c39563f2b0c070a0703a21119
110d19251d12407bb37585bf7a3b101a22180e131812271f212821b7ae57
83582b242b2308131d00>KEFPBE+Calibri AddT42Char 
2 5970 336 <00030035fe93038903c8003e004e005f00d04015122d47100f014d47080c
014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d3fb8ffe0
b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707b8ffe0b3
10014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040340b014d
0058100f014d58201012014c582a25400b12014c250f300703384ada0c53
e81515603803e93c482a2042d9384a5bd9204f003fed3fed12393fed1112
392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b1112173910
cd2b10cd2b2b2b10cd2b2b2b10cd31300114062323161615140e02232226
27060615141617171e0315140e0223222e0235343e023726263534363726
2635343e023332161721321601342623220e0215141633323e0213342627
270e0315141633323e020389130f81231c325d804e37631b12174136eb43
70522e346ba6716d99622c10213120312f32251f24345c814c29471f0110
1111fefe655d30472f17655b31482f17535f51e92029180984764b653e1b
0374231f24572f4e78532c1d16122e1e232e020a02213d593b3e70553125
405934213e383319194c2c3d6026255d424d7a542d090821fef15c672038
492859661f3748fd5e3a3f0208192d29281541431d303e00>KEFPBE+Calibri AddT42Char 
2 6444 346 <00010099fffa03a0057100320079b43f34012a13b8ffe8b30b014d13b8ff
f0b40f10014c13b8fff6b30c014d13b8fff0b30d014d13b801f840171e0b
0a0c014d0b100d014d0b180b014d0b100f10014c0bb801f8400a00400c01
4d001e2a1910b80106b72d4a2446194c054c003f3f3f3fed1239012f2f2b
e12b2b2b2b10e12b2b2b2b3931305d25140e0223222e023511342e022322
060711140e0223222e023511343e0233321e021511363633321e021503a0
0812201819201208182e49303e7c44081220191820130707132018192012
084790495a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08
0404080b080538080c080404080c08fde54b493d66896100>KEFPBE+Calibri AddT42Char 
2 6950 364 <00010099fffa037c057100340095400c3f3601293101314012014d31b8ff
d0b40f10014c31b8ffe0b30d014d31b8ffeab30c014d31b8ffe0b30b014d
31bb02270022000cfff0b40f10014c0cb8fff0b30d014d0cb8fff6b30c01
4d0cb8ffe8b30b014d0cb801f8401a162d2d00400f014d00400c014d0016
220b0528491c46114c054c003f3f3f3f123939012fc42b2b392f10f12b2b
2b2b32e02b2b2b2b2b31305d5d25140e0223222e02270111140e0223222e
023511343e0233321e021511013e0333321e021514060701011616037c08
13221a1b23180f06fe840812201918201307071320181920120801540812
192218192215090d0ffeba016e0d0b1a080c080403070d0901f2fe0d080b
080404080b080538080c080404080c08fcd201760a0d090303070b090c18
10febafe25111500>KEFPBE+Calibri AddT42Char 
2 8718 395 <00020060fe94039c03ca002a003d0086401b3f3f011f0b2b100d014d2b0a
0c014d2b180b014d2b100f10014c2bbb01f9002a0033ffeeb30c014d33b8
fff0b30f014d33b8ffeab30d014d33b8ffe8b310014d33b8ffe8b30b014d
33b8020a400a1525490b3d2b1f04102eb80105b21a4a38b80104b3104d05
4f003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b323931305d
01140e0223222e0235110e0323222e0235343e0233321e021735343e0233
321e021503262623220e0215141e0233323e0237039c09122018191f1407
294a484927628a57283263915f284645472a08121c15141c1107a6437d44
3f58371915345641213d404627feb4080c080404080c0801cd2939230f4d
83b16274bb844711253b296d090b080303080b09fef553573c627c404582
643d122a4331>KEFPBE+Calibri AddT42Char 
2 9910 437 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>KEFPBE+Calibri AddT42Char 
2 11284 455 <00010022fe94037c03bc00240052b9001bfff040350b014d371b01291b01
18180b014d261801260e360e022709011a400b014d3a1a0119380b014d3b
19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b5d2b015d
5d5d2b5d5d2b2103060623222e023713262627012634363633321e021701
33133e023332161614070233780631321a201102067c091003febf081024
1e1e22140905010103f8061122201c241106feb51011050c140e01390412
0a035c15180e0503080f0dfd2e02d6130b05050e1812>KEFPBE+Calibri AddT42Char 
KEFPBE+Calibri /CharStrings get begin
/comma 853 def
/period 856 def
/zero 1004 def
/one 1005 def
/two 1006 def
/seven 1011 def
/I 47 def
/J 58 def
/c 272 def
/g 336 def
/h 346 def
/k 364 def
/q 395 def
/u 437 def
/y 455 def
end
KEFPBE+Calibri /Encoding get
dup 44 /comma put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 55 /seven put
dup 73 /I put
dup 74 /J put
dup 99 /c put
dup 103 /g put
dup 104 /h put
dup 107 /k put
dup 113 /q put
dup 117 /u put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KEFPBE+Calibri*1 [44{/.notdef}rp /comma /.notdef /period /.notdef /zero /one /two 3{/.notdef}rp /six /seven 13{/.notdef}rp /E 3{/.notdef}rp /I /J 9{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]KEFPBE+Calibri nfKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf16.0371 53.5626 mo(The)[5.10615 5.50508 0 ]xsh%ADOBeginSubsetFont: LXOQMX+Calibri-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/LXOQMX+Calibri 1 GetGlyphDirectory882 <001C60D8A8C9B83844CBABF75256C23589A050D2F18EC6AAEA2DCAA879D629F0698E85A7558DC3794B984219238EC694626573D368F005AA7EB3DEDB55CE7021DF056336AEE3D77182F0055C3CB6954365C7523BFC42E70B7DCDE95A> |!endend end
%ADOEndSubsetFont
KEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf31.8774 53.5626 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf34.2777 53.5626 mo(first)[3.18562 2.38774 3.48389 3.95857 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf50.8373 53.5626 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf16.5768 69.1624 mo(week)[7.38146 5.22481 5.22482 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf39.197 69.1624 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf41.5973 69.1624 mo(of)[5.51662 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf50.2976 69.1624 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf22.818 84.7623 mo(2012)[5.34139 5.34138 5.34139 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf44.1183 84.7623 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf69.9179 45.5217 mo(Japan,)[3.35686 5.03688 5.51979 5.0369 5.51978 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf97.0383 45.5217 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf99.4386 45.5217 mo(earthquake,)[5.16496 5.04004 3.67184 3.52492 5.51979 5.45573 5.51979 5.03688 4.44467 5.22481 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf150.679 45.5217 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf153.079 45.5217 mo(occur,)[5.53027 4.4384 4.43839 5.50929 2.76358 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf178.339 45.5217 mo(\000\003\000\003)[5.21954 0 ]xshKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf69.919 61.1215 mo(the)[3.53122 5.52609 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf84.199 61.1215 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf86.5993 61.1215 mo(first)[3.18562 2.38774 3.48389 3.95857 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf103.159 61.1215 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf105.559 61.1215 mo(day,)[5.51558 4.8605 3.96378 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf122.539 61.1215 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf124.939 61.1215 mo(January,)[3.34531 5.02533 5.50824 5.50824 5.02534 3.72433 4.02364 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf159.679 61.1215 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf162.08 61.1215 mo(7.0,)[5.33405 2.65648 5.33403 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf177.98 61.1215 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf180.38 61.1215 mo(2012)[5.28152 5.3414 5.3414 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf201.62 61.1215 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf240.02 45.5217 mo(In)[2.64075 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf248.18 45.5217 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf250.58 45.5217 mo(January)[3.35791 5.03793 5.52084 5.52084 5.03793 3.72433 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf283.519 45.5217 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf285.86 45.5217 mo(1)shKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf291.2 45.5217 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf293.6 45.5217 mo(of)[5.45679 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf302.241 45.5217 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf304.641 45.5217 mo(2012,)[5.3414 5.34137 5.3414 5.28152 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf328.581 45.5217 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf330.982 45.5217 mo(a)shKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf335.962 45.5217 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf338.362 45.5217 mo(magnitude)[8.39575 5.03586 4.86246 5.51559 2.41083 3.5239 5.51871 5.51874 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf384.382 45.5217 mo(\003r)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf387.623 45.5217 mo(7)shKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf392.903 45.5217 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf240.023 61.1215 mo(earthquake)[5.23532 5.03583 3.67081 3.52386 5.51874 5.51874 5.51871 5.03586 4.44467 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf288.743 61.1215 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf291.143 61.1215 mo(occurred)[5.52292 4.43106 4.43103 5.50192 3.65399 3.54376 5.21851 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf328.943 61.1215 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf331.344 61.1215 mo(in)[2.39508 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf339.264 61.1215 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf341.664 61.1215 mo(Japan.)[3.33691 5.01694 5.49982 5.01694 5.49985 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf368.664 61.1215 mo(\000\003)sh2.17714 34.0628 mo
428.777 34.0628 li
428.777 33.5828 li
2.17714 33.5828 li
cp
f
2.17714 65.3228 mo
2.65714 65.3228 li
2.65714 34.0628 li
2.17714 34.0628 li
cp
f
64.2771 65.3228 mo
64.7571 65.3228 li
64.7571 34.0628 li
64.2771 34.0628 li
cp
f
234.377 65.3228 mo
234.857 65.3228 li
234.857 34.0628 li
234.377 34.0628 li
cp
f
428.297 65.3228 mo
428.777 65.3228 li
428.777 34.0628 li
428.297 34.0628 li
cp
f
%ADOBeginSubsetFont: BAJRMX+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KEFPBE+Calibri gcheck setglobal} if
2 606 17 <000300ac00000401050e001e002b003800c8401a1f1810014d1f100f014d
1f100d014d1f180c014d1f200b014d1fb8022e40281a154010014d15400f
014d15150b2c1810014d2c100f014d2c100d014d2c180c014d2c200b014d
2cba02320000ffc0b50b014d002633b8ffe8b310014d33b8fff0b30f014d
33b8fff0b30d014d33b8fff6b30c014d33b8ffe8b30b014d33b80210400d
a00bc00b020b1a27f431310724b80109b2105134b8010bb10754003fed3f
ed12392fed39012f5de12b2b2b2b2b32d42be12b2b2b2b2b12392f2b2b39
e12b2b2b2b2b313001140e0423212226351134363321321e0215140e0207
1e0301342e0223231133323e0213342e0223231133323e0204011f384f63
7149feae17292917012674946332162b412a355c4528fefd1a385a4ab2c4
435236194e25476b51cefa3b58432601733d67523e2a151f270482271f2c
547a4d2e544738120a35526e02012f4c351cfe5d233b4ffddd3a583c1ffe
381c3752>KEFPBE+Calibri AddT42Char 
2 1220 24 <000200ac0000048f050e0012001f0077401d3f2101131810014d13100f01
4d13140d014d13120c014d13180b014d13bb02320000001affe8b310014d
1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8ffe8b30b
014d1abb021100090018010cb20e511bb80126b10554003fed3fed012fe1
2b2b2b2b2bd4e12b2b2b2b2b31305d01140e022321222635113436332132
1e0207342e0223231133323e02048f56a5f0a6feee172929170125a8e89d
51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e89969b5
844afc113e80c100>KEFPBE+Calibri AddT42Char 
2 2594 69 <000100acfffa047e0511003d0085b3270f0f14b8ffe8b310014d14b8ffe8
b30f014d14b8ffe8b30d014d14b8fff0b30c014d14b8ffe8b30b014d14b8
0211401e1e0a2e2e321810014d32180f014d32180d014d32100c014d3218
0b014d32b802114010001e38520a2e0f270419225119550654003f3f3f12
17393f012fd4e12b2b2b2b2b32113310e12b2b2b2b2b322f33313025140e
022323222e0227012626272316161511140e0223222e0235113436333332
1e0217011e03173326263511343e0233321e0215047e0d151a0d371a2723
2315fe6820411c02020208131f18181f12082c1a521d271f1d11013a1d36
32311801020108131f191620120847141c12080b1d322702e0397d3b4896
4afcf3070d070505070d0704aa28220a17291ffdc83463605d2f4fab4f02
be070c090404090c0700>KEFPBE+Calibri AddT42Char 
2 3772 122 <0001001efffa03c70514002a0059b90000ffe8b310014d00b8fff0b30f01
4d00b8fff0b30d014d00b8fff6b30c014d00b8ffe8b30b014d00ba021100
0cffc0b317014d0cb8ffc0400c0d014d0c25521b0612520655003f3f1239
3f012f2b2be12b2b2b2b2b31300111140e0223222e023511012626363633
321e02171316161733363637133e03333216160607024908142218192115
08fe920b050f27211e25160b05b319321a02173119b4030b13221a242910
050b01f7fe23080c070505070c0801dd02da171a0e0404070d0afe8c3574
3b39713701760a0e0704050e1a16>KEFPBE+Calibri AddT42Char 
2 4498 271 <00020099ffed03d50571002a003d0085b53f3f010a2136b8fff6b30c014d
36b8fff0b30d014d36b8ffe8b30b014d36b8fff0b40f10014c36b801f840
1b152b120c014d2b200d014d2b180b014d2b1810014d2b100f014d2bb802
0a400900150a363521040530b80105b6264a1b46104c39b80105b1054d00
3fed3f3f3fed121739012fd4e12b2b2b2b2b10e12b2b2b2b323931305d01
140e0223222e022715140e0223222e023511343e0233321e0215113e0333
321e0207342e0223220e020711161633323e0203d53363905d2b49464627
08121b15141c12060713201819201208284b484828628b5728ae15345640
203e404527447c433e58371901e775bb844611263a296e080c070404070c
080538080c080404080c08fde5293823104e83b0754582643d122a4232fe
9953573c637b>KEFPBE+Calibri AddT42Char 
2 11652 859 <0001002a037501730578001b0009b20b1747003fcd313001140e0207070e
0323222e02371335343e0233321e020173060e171189050d13191311170a
0104850b18241a1924170b05261f332f2d18ce070c070303070c0901137f
1a20120606122000>KEFPBE+Calibri AddT42Char 
KEFPBE+Calibri /CharStrings get begin
/B 17 def
/D 24 def
/N 69 def
/Y 122 def
/b 271 def
/quoteright 859 def
end
KEFPBE+Calibri /Encoding get
dup 66 /B put
dup 68 /D put
dup 78 /N put
dup 89 /Y put
dup 98 /b put
dup 146 /quoteright put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KEFPBE+Calibri*1 [44{/.notdef}rp /comma /.notdef /period /.notdef /zero /one /two 3{/.notdef}rp /six /seven 10{/.notdef}rp /B /.notdef /D /E 3{/.notdef}rp /I /J 3{/.notdef}rp /N 5{/.notdef}rp /T 4{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y 24{/.notdef}rp /quoteright 109{/.notdef}rp]KEFPBE+Calibri nfKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf69.9171 77.2025 mo(New)[6.78506 5.16495 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf89.3568 77.2025 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf91.7571 77.2025 mo(year,)[4.62424 5.22481 5.04004 2.7636 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf112.037 77.2025 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf114.437 77.2025 mo(happy,)[5.51558 5.04005 5.45573 5.45573 4.02362 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf142.577 77.2025 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf144.977 77.2025 mo(2012,)[5.28154 5.34138 5.3414 5.28154 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf168.858 77.2025 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf171.258 77.2025 mo(New)[6.78505 5.16498 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf190.638 77.2025 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf193.038 77.2025 mo(Year\222s)[4.31656 5.22479 5.04004 4.14435 1.98553 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf217.818 77.2025 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf69.9182 92.8024 mo(Day,)[6.47751 4.86049 4.02364 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf87.8585 92.8024 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf90.2588 92.8024 mo(healthy,)[5.49983 5.21642 5.01694 2.39194 3.50497 5.33604 4.02364 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf123.859 92.8024 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf126.199 92.8024 mo(Blessing,)[5.69737 2.38983 5.21431 4.09088 4.09087 2.38983 5.57544 5.04308 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf163.339 92.8024 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf165.739 92.8024 mo(happiness)[5.50719 5.02428 5.5072 5.50717 2.39929 5.5072 5.22375 4.10031 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf208.699 92.8024 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf240.019 77.2025 mo(Everyone)[4.85736 4.62311 5.22482 3.72433 4.62424 5.51663 5.51556 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf279.32 77.2025 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf281.72 77.2025 mo(blesses)[5.51138 2.4035 5.22794 4.10452 4.10452 5.22797 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf312.38 77.2025 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf314.78 77.2025 mo(happy)[5.5177 5.03479 5.51767 5.45575 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf341.061 77.2025 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf343.461 77.2025 mo(new)[5.51559 5.16495 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf361.641 77.2025 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf364.041 77.2025 mo(year)[4.62424 5.22479 5.04004 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf382.581 77.2025 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf384.981 77.2025 mo(in)[2.39508 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf392.901 77.2025 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf395.242 77.2025 mo(the)[3.53122 5.52609 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf409.522 77.2025 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf240.021 92.8024 mo(first)[3.18561 2.38776 3.48389 3.95856 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf256.581 92.8024 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf258.981 92.8024 mo(day)[5.51559 4.85944 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf274.101 92.8024 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf276.501 92.8024 mo(of)[5.51663 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf285.202 92.8024 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf287.602 92.8024 mo(2012)[5.3414 5.28152 5.3414 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf308.842 92.8024 mo(\000\003)sh2.17714 65.8029 mo
2.65714 65.8029 li
2.65714 65.3229 li
2.17714 65.3229 li
cp
f
64.2771 65.8029 mo
428.777 65.8029 li
428.777 65.3229 li
64.2771 65.3229 li
cp
f
2.17714 97.0028 mo
2.65714 97.0028 li
2.65714 65.8028 li
2.17714 65.8028 li
cp
f
64.2771 97.0028 mo
64.7571 97.0028 li
64.7571 65.8028 li
64.2771 65.8028 li
cp
f
234.377 97.0028 mo
234.857 97.0028 li
234.857 65.8028 li
234.377 65.8028 li
cp
f
428.297 97.0028 mo
428.777 97.0028 li
428.777 65.8028 li
428.297 65.8028 li
cp
f
KEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf9.19714 116.683 mo(The)[5.10615 5.50508 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf25.0374 116.683 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf27.4377 116.683 mo(second)[4.08877 5.21221 4.42474 5.51662 5.49564 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf57.6777 116.683 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf16.5776 132.282 mo(week)[7.38146 5.22481 5.22482 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf39.1977 132.282 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf41.598 132.282 mo(of)[5.51662 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf50.2983 132.282 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf22.8188 147.882 mo(2012)[5.34139 5.34138 5.34139 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf44.1191 147.882 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf69.9186 108.882 mo(reed,)[3.54375 5.2269 5.22691 5.51035 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf92.0589 108.882 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf94.4592 108.882 mo(steel)[3.95857 3.42096 5.22482 5.22481 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf114.679 108.882 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf117.079 108.882 mo(,)shKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf119.659 108.882 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf122.06 108.882 mo(Engineering,)[5.11671 5.5051 4.93806 2.3972 5.50508 5.22166 5.22166 3.65714 2.39719 5.50508 5.04309 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf175.22 108.882 mo(\000\003)sh180.557 127.303 mo
217.337 127.303 li
217.337 114.463 li
180.557 114.463 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
1 /0 /CSD get_res sepcs
1 sep
KEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf69.9171 124.483 mo(appearance,)[5.03374 5.51665 5.51663 5.23322 5.03374 3.42404 5.03374 5.51663 4.44576 5.2332 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf122.537 124.483 mo(\000\003)shKEFPBE+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf124.937 124.483 mo(engineering,)[5.16496 5.51558 4.94019 2.39929 5.50719 5.22375 5.22377 3.65923 2.39929 5.5072 5.04306 0 ]xshKEFPBF+Calibri [10.5 0 0 -10.5 0 0 ]msf178.157 124.483 mo(\000\003)sh1 /0 /CSD get_res sepcs
.801 sep
%ADOBeginSubsetFont: ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3210325d73000000cc000000606376
7420a11cd7eb0000012c000006546670676dcc79599a000007800000066e
676c7966eb59c26b00008fcc00082f5668656164da5fe34f00000df00000
0036686865611233162000000e2800000024686d747855dffbd600000e4c
0000355c6c6f6361371ea98c000043a8000035606d61787012b205df0000
7908000000206e616d650528ebc00000792800000ae47072657025d64dbf
0000840c00000bbe67646972000000000000000000000000000303880190
00050008059a05330000011b059a0533000003d1006602120805020b0604
020202020204e0002affc00078430000000900000000544d432000400020
fffc05d3fe510133073e01b2400001ffffff0000042605bb000000200004
05ba001905ba001a05a70019042600180000ffe70000ffe80000ffe7fe69
ffe805ba0019fe69ffe802ea000000b8000000b80000000000a800ad0169
00ad00bf00c201f0001800af00b900b400c800170044009c007c00940087
0006005a00c80089005200520005004400940119ffb4002f00a1000300a1
00cd00170057007e00ba00160118ffe9007f008503d300870085000d0022
00410050006f008d014cff75005c00df04830037004c006e00700180ff58
ff8eff92ffa400a500b903c8fffd000b001a0063006300cdffee05d8ffdc
002d005c0095009900df019209b500400057008000b9039d0072009a035d
0401ff67fffa00030021007700cd0004004d00cd01c0022b004c006500e7
0118017c034305d8ffa3ffb0ffc40003001c005d0068009a00ba01350147
0221055cff4dffcd0016002d00780080009900b200b600b600b800bd00da
010c05f0ffa4fff00019002c0049007f00b400ce01c003fefd81fe3f0000
00050018002900390049006f00be00c700d0012301c1026f050c05320540
057affd4001400310055005700a700b400e601f7027e027e027f03c60446
ff42000e0085009100bf00c200c500e1011a012f014f01560229026f029e
03720008002c00310031006400690089009800c700de012b01b6020c02cf
03a304ab04fb061dfee0ff0e00060026009b009d00c1010d011801200173
018201d601e30243025f029b02e2039404a904d20761001c005e006d008d
00ab00f7011201380151015b0168017c01870191019901cd01d001e80241
0254026b02ef0368037103bd044204420453047304830586058b06e8fe58
fec4fed1fef7ff32ff860051007c008100910095009e00b400b900cf00d9
00d900df00e20105010b010e010e012001210155017b017b017e018d01a2
01a801a901b401d001d001e201e901f201f501fb020002000206021b0221
022202220223027202770294029c02cf02cf02d002ec02f903170322032b
0335033c0359036f037103870390039003b503e1041a04cf04ff05320532
0596059f05a805ab05c205f0060c0782080008ccfca3fd2afddefe00fe88
fe96feb2feb4ffe100150019001a001c001f003c005100610061006a0078
009600a500af00d3010c0118011a012a013e014c0151015f016a01710178
01820184019a01a501a801a901ae01bc01cd01d701ef0200020d021c0221
0222022e02350242024f024f025e026502710290029202b402d602fa0307
030b030f0315032a0347035d036503740379039603b003cc03dd03e203f6
03fc03fc03ff040a041f04220426042b0447045f0475049e04e704e7055c
05cb05e5060a066d068606b806f10736073e07500751075d078f07b607d4
086000b600c300b500b700000000000000000000000001e00381034503b5
008e0233041902ce02ce002d005f0064034d023f000002a80188027d01b4
02240578063b023b014e00f00426029402c6029f02f6023b034d014b0153
006a0231000000000000061404aa0000003c04c300ed04bc026502ce03b5
0078060c017e02ef060c00b201000239000001c50330042b03cb00da03df
010704a100db040a011701ed02a70350010b01bd043e05580021039c00ae
0371017d00b5024500000afb088c012b014e01aa00870054013201f803ff
0003024e00b4003703e30083006b02d800ed00770088009701640467008e
0033017c00e700a6029e0329056e062a061501c90269048a021301b40002
04a9000002390124010305140084015d039a06ef02d9007500cf040a00de
03ac04bc02cf02ae034d04f005520168006d007d00860071ff8100790558
04d2016700030156002504e00094007c033204210094007f0072005c002f
00b6001800ba00b80041034d00720018001f004c016a01550099009a009a
009800b200040078006900140057006e00ce00b4065402b80067050e0165
00e7000004cbfe52005affa60099ff67006eff92002dffd40087ff7c00b8
00a800e5008f00a80185fe7b0070001e00d900de014c054602cf0546ff2d
028a02d90253029600b700000000000000000000000000000125011800ea
00ea00ae0000003e05bb008a04d70053003fff8cffd50015002800220099
0062004a00e4006d00ee00e5004803c00033fe4e02b1ff460370007905df
0051ffa7ff1f010a0068ff6c004f00bc00a507050061072b00ed04b001d2
00b6007b00650252ff740365fe690094008f005c00400086007500890089
4043555441403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b01723
70b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b00325
456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c
2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b1
2cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb01723
44b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb01723
44b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb01723
44b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c48
2d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a
23444565234520b00325606a20b009234223688a6a606120b01a8ab00052
7921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a
5279b31940201945208a54582321b03f1b235961442d2cb110114323430b
2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2c
b10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c4bb06451584569b00943608a103a1b21
2121592d2c01b005251023208af500b0016023edec2d2c01b00525102320
8af500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c
003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006
430b2d2c3eb02a2a2d2c352d2c76b8022323701020b802234520b0005058
b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423
648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb815
55621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb400
0100000015b00826b00826b00826b008260f10161345683ab001162d2cb4
000100000015b00826b00826b00826b008260f1016134568653ab001162d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb01343
58031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b212159
2d2cb012435c580cb00425b00425060c6423646164b807085158b00425b0
0425012046b01060482046b0106048590a21211b2121592d2cb012435c58
0cb00425b00425060c6423646164b807085158b00425b00425012046b8ff
f060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b
1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012
435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c
5a58381b2121592d2c4b5258b00425b0042549b00425b00425496120b000
5458212043b0005558b00325b00325b8ffc038b8ffc038591bb040545820
43b0005458b00225b8ffc038591b2043b0005458b00325b00325b8ffc038
b8ffc0381bb00325b8ffc03859595959212121212d2c462346608a8a4623
20468a608a61b8ff8062232010238ab902c202c28a70456020b0005058b0
0161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b140
0188535a58b910000020885458b202010243604259b12401885158b92000
0040885458b2020202436042b12401885458b2022002436042004b014b52
58b2020802436042591bb940000080885458b202040243604259b9400000
8063b80100885458b202080243604259b94000010063b80200885458b202
100243604259b94000020063b80400885458b20240024360425959595959
2d2cb0024354584b53234b515a58381b2121591b21212121592d00000001
000000050f5c93baa7385f0f3cf5081b080000000000a2e3272a00000000
c59b6257faaffd671000080c00000009000100010000000000010000073e
fe4e00431000faaffa7a1000000100000000000000000000000000000d57
06000100000000000239000002390000023900b002d7005e047300150473
0049071d0077055600580187005a02aa007c02aa007c031d004004ac0072
023900aa02aa0041023900ba0239000004730055047300df0473003c0473
00560473001a047300550473004d047300610473005304730055023900b9
023900aa04ac007004ac007204ac00700473005a081f006f0556fffd0556
009605c7006605c7009e055600a204e300a80639006d05c700a4023900bf
04000037055600960473009606aa009805c7009c063900630556009e0639
005805c700a10556005c04e3003005c700a105560009078d001905560009
0556000604e300290239008b023900000239002703c100360473ffe102aa
00590473004a0473008604000050047300460473004b0239001304730042
0473008701c7008801c7ffa20400008801c7008306aa0087047300870473
0044047300870473004802aa00850400003f02390024047300830400001a
05c700060400000f040000210400002802ac0039021400bc02ac002f04ac
00570556fffd0556fffd05c70068055600a205c7009c0639006305c700a1
0473004a0473004a0473004a0473004a0473004a0473004a040000500473
004b0473004b0473004b0473004b023900bd023900230239ffe502390009
047300870473004404730044047300440473004404730044047300830473
0083047300830473008304730049033300800473006b0473001b04730051
02cd006d044c000104e3009905e5000305e50003080000e102aa00de02aa
003d0464004e080000010639005305b4009a0464004e0464004d0464004d
0473fffd049c00a003f4003805b4007a069600a1046400000231000002f6
002f02ec002d0625007f071d004404e3008104e3009e02aa00e804ac0072
046400540473002e0464003304e5001a047300860473008c080000ef0556
fffd0556fffd0639006308000081078d00520473fffc0800000002aa0053
02aa004701c7008001c7006c0464004e03f4002f04000021055600060156
fe390473ffe402aa005c02aa005c040000170400001704730049023900b9
01c7006c02aa0047080000250556fffd055600a20556fffd055600a20556
00a20239008d0239ffe00239000402390015063900630639006306390063
05c700a105c700a105c700a1023900c602aa001902aa000602aa001d02aa
002e02aa00e502aa00a202aa006b02aa003a02aa004b02aa002804730000
01c700030556005c0400003f04e3002904000028021400bc05c7fffd0473
004905560006040000210556009e0473008704ac007204ac00a102aa006b
02aa001902aa002106ac006b06ac006b06ac0021047300000639006d0473
0042023900b10556005c0400003f05c700660400005005c7006604000050
04730046046bffe102aa00ee0556fffd0473004a0556fffd0473004a05c7
009e04eb004705c7fffd055600a20473004b055600a20473004b04730096
01c7004204730096025500880473009a02ac008305c7009c0473008705c7
009c04730087063900630473004405c700a102aa008505c700a102aa003c
0556005c0400003f04e300300239002404e300300300002305c700a10473
008305c700a10473008304e300290400002804e3002904000028046800a4
063900600662005504a00048047400480391006204f000440329002e0530
0048046bffe1040000b002eb005208c000330800004f040000990800004f
040000990800004f040000980400009807d5016a05c0009e04ab007204d5
009d04ac007104d5022204d5010505abffe9050001c905ab027e05abffe9
05ab027e05abffe905ab027e05abffe905abffe905abffe905abffe905ab
ffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe905abffe9
05ab027e05ab01c005ab01c005abffe905abffe905abffe905ab027e05ab
01c005ab01c005abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905ab02d605ab006605abffea05d5ffff04d50092
0800000007eb013007eb012007eb013007eb012004d500b204d5008004d5
002a082b0198086b01b807550010060000f40600006f0440003a05400037
04c0003f04150040040000250600005505e100bf038d008904d5ffd90180
008002d50086071500610296000f04d5009202d6008302d6008304d500b2
02d600700556fffd0473004a05c700660400005005c70066040000500556
00a20473004b055600a20473004b055600a20473004b0639006d04730042
0639006d047300420639006d0473004205c700a40473008705c7001f0473
00060239ffce0239ffce0239ffe40239ffe40239fff60239fff50239004b
01c700190400003701c7ffa20556009604000088040000860473009601c7
fffa05c7009c0473008705c900a50473008b063900630473004406390063
0473004405c700a102aa006b0556005c0400003f04e300300239000c05c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
078d001905c70006055600060400002101c700890556fffd0473004a0800
0001071d00440639005304e30081023900b9078d001905c70006078d0019
05c70006078d001905c70006055600060400002101c7008a02aaffe10473
001b04cd005a06ac006b06ac002206ac002206ac004a02aa00e202aa006b
02aa00de02aaffea0557ffff0646ffa706b4ffa80312ffa80632ffa706d8
ffa70605ffa701c7ff780556fffd055600960558fffe055600a204e30029
05c700a4023900bf055600960558000b06aa009805c7009c0533006d0639
006305c700a40556009e04f2009404e30030055600060556000906af007f
05fb0061023900040556000604a00048039100620473008b01c7006b0460
0088049a008c04000019038700480473008b0473005c01c7008904000086
04000018049c00a00400001a0395005c04730044048d008303db00560460
00880433001105b4007a063f005701c7ffc9046000880473004804600088
063f0057055700a206eb0032045500a105c000640556005c023900bf0239
0004040000370875000d081500a406d5003104a900a10515000a05c000a0
0556fffd054000a705560096045500a1056b0000055600a20763000704d5
004e05c000a105c000a104a900a10540001206aa009805c700a406390063
05c000a00556009e05c7006604e300300515000a061500520556000905eb
009f05550057075500a1078000a106550000071500a8054000a505c00055
081500a405c7001a0473004a0495005b0440008802eb008804ab00000473
004b055afffb03ab003204780087047800870380008604ab00180580008c
046b00880473004404550088047300870400005003aa0026040000210695
004b0400000f0495008a042b0045066b008d0695008d0500002805c0008b
042b008404150030060000890455001f0473004b0473000002eb00890415
004b0400003f01c700880239000901c7ffa2074000130680008304730000
0380008604000021046b008803e900a1034a008808000041089500a00585
002d000001010000001e0000003100000031000001010000007e0000007e
0000008c0000008c000001010000001000000101000001210310007d0000
008c023300d20000030b0000ff04023900b9048100690456003203310019
0411002d04d1009601f9009b030f005f04ca009b04b8008c01f9009b0413
002803b0005003b4003c04ca009b04cf005001f9009b02d2003c0498005a
043c00190488006e045f007303b1001903d4000a0466009604130028058e
00640524002803f2009b03f2009b03f2009b01e3005a0356005a0686009b
01f9ffac041300280413002803b4ff5703b4ff570448002d058e0064058e
0064058e0064058e00640481006904810069048100690456003203310019
0411002d04d10096024b0000034a000004b8008c024b00000413002803b0
005003b4003c04cf005002d2003c0498005a0488006e045f007303d4000a
0466009604130028058e00640524002801f9009b0456003203b00050045f
0073049b003c0000ffdc0000ff250000ffdc0000fe51028d00ab028d00a0
02da0043034d007901a8ffba000000460000004600000046000000460000
00480000004600000046000000460435017c0435012e043500b704350081
0435012c043500be043500af043500810435009a043500db04350085028d
00c1043500b3060001000600010002420036060001000435009e04350098
043500cb0600010006000100060001000600010006000100000000460600
010006000100060001000600010006000100060001000600010006000100
051bffba06000100060001000600010005b5003a05b5003a01f4ffba01f4
ffba060001000600010006000100060001000481003604350036043dffba
043dffba03e9004a03e9004a067f0014077600140327ffba041effba067f
0014077600140327ffba041effba051b003204b500240300fff706000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010000000030
0000004600000046000000400000004606000100060001000000ffdc0000
fe510000ff160000ff160000ff160000ff160000ff160000ff160000ff16
0000ff160000ff160000ffdc0000ff160000ffdc0000ff200000ffdc0473
004a08000000060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010006000100060001000600010006000100028d
007f028d005d0600010004ee0015034d007901a8000e01d6ffdc01a80056
01d60010037500320375003201a8002d01d60013051b003204b5002401f4
ffba01f4ffba01a8009301d6001305b5003a05b5003a01f4ffba01f4ffba
024200000300fff705b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba02b3
005f02b3005f02b3005f02b3005f03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0692003e0692003e043fffba043f
ffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5ffba
06c5ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7
ffba04a7ffba045a002a039a00360435ffba0327ffba045a002a039a0036
0435ffba0327ffba064f0027064f00270224ffba021affba04a7004604a7
00460224ffba021affba04cf002d04cf002d0327ffba0327ffba040d0047
040d004701a8ffba01a8ffba02b4002302b400230327ffba0327ffba0435
00450435004501f4ffba01f4ffba024200360300fff7039affba0327ffba
0375003203750032051b003204b50024051b003204b5002401f4ffba01f4
ffba045a004004ce0049045a002604ce0039045a005304ce004a045a0053
04ce004a0600010006000100000000460000004606000100060001000600
010000000046000000460600010006000100000000480000004606000100
060001000600010000000046000000460000004600000046000000400000
003006000100000000460000004606000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100028d00ca028d00c7028d
00c606000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000100ffba0800ffba1000ffba06dc0063053f004406d5
00a1055b00830000fddc0000fc2f0000fca60000fe540000fcd70000fd73
0000fe290000fe0d0000fd110000fc670000fd9d0000fbf50000fc720000
fed50000fed50000ff02041b00a006ac006b06ac00190000feb60000fd73
0000fe080000fca60000fe530000fd110000fbc80000faf40000faaf0000
fc720000fbaa0000fb6a0000fcf10000fc7d0000fbdd0000fcc10000fb98
0000fdea0000fe840000fdc20000fcf10000fd5f0000fe760000febc0000
fceb0000fd6c0000fd580000fc900000fd150000fc2c0000fc130000fc12
0000fb960000fb9601c700880556fffd0473004a0556fffd0473004a0556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a055600a20473004b055600a2
0473004b055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b0239006301c7001f
023900ba01c7007c06390063047300440639006304730044063900630473
004406390063047300440639006304730044063900630473004406390063
0473004406dc0063053f004406dc0063053f004406dc0063053f004406dc
0063053f004406dc0063053f004405c700a10473008305c700a104730083
06d500a1055b008306d500a1055b008306d500a1055b008306d500a1055b
008306d500a1055b00830556000604000021055600060400002105560006
040000210556fffd0473004a0239ffe201c7ffb0063900630473004405c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
05c700a1047300830000fefe0000fefe0000fefe0000fefe0455fffd02eb
000c07630007055afffb04a900a10380008604a900a10380008605c700a4
046b00880473fffd040000140473fffd04000014055600090400000f0555
0057042b0045055500a10473008706050063047300550639006004730044
05b5003a01f4ffba0224ffba021affba04a7004601f4009e01f4001001f4
001b01f4001001f4006b01f4fff90227ffce0000000f0000fff502aa00a4
02aa00a40000000e00000056000000560000ffcf01a8000f01d6ffbf01a8
fff501d6ffcd01a8001d01d6fff501a8009301d600130375003203750032
0375003203750032051b003204b5002405b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba0481003604350036043dffba043dffba048100360435
0036043dffba043dffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba02b3003202b3003202b3005f02b3005f
02b3005f02b3005f02b3003202b3003202b3005f02b3005f02b3005f02b3
005f02b3005f02b3005f02b3003802b3003802b3004902b3004903e9004a
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba045a
002a039a00360435ffba0327ffba064f0027064f0027064f00270224ffba
021affba064f0027064f00270224ffba021affba064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba04a7004604a7004604a7004604a70046093e0032093e
00320740ffba0740ffba067f0014077600140327ffba041effba04cf002d
04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba04cf
002d04cf002d0327ffba0327ffba067f0014077600140327ffba041effba
067f0014077600140327ffba041effba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba040d0047040d004701a8ffba01a8ffba040d0047040d004701a8
ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba043500450435004501f4ffba01f4ffba043500450435
00450435004504350045043500450435004501f4ffba01f4ffba04350045
043500450481003604350036043dffba043dffba024200360300fff7031a
001a031a001a031a001a0375003203750032037500320375003203750032
037500320375003203750032037500320375003203750032037500320375
0032037500320375003203750032051bffba04b5ffba051b003204b50024
01f4ffba01f4ffba0375003203750032051b003204b5002401f4ffba01f4
ffba051b003204b50024067f0045067f0045067f0045067f004501a80028
0000fe290000fea20000ff300000ff1d0000ff120000ff920000fe7e08fc
003208ad00320000ffb50000ffb60000feed0000ff640000fe7e0000ff9f
018d000002f6fffd0000fe820000ff1004cd00320000ff580000ff580000
ff640692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba045a002a039a00360435ffba0327ffba034d007902b400230242
003601f4ffba0290ffba01f4002f01f4003b01f4001201f400b101f4006d
067f00140776001401f9009b0000fed902bc000003f2009b045afff504ce
fff5045a005304ce004a045a005304ce004a045a005304ce004a045a0053
04ce004a045a005304ce004a045a005304ce004a04350071043500ad045a
000f04ce000f0473001406110014054000a7047300860540000a0473000a
05c7005105c700660400005005c7fffd067a00140540004a047300460474
00480556006e04d5005304e3ffc40639006d04fe000f070c008701c70083
0239001f055600960400008801c7001504000018072000a405c7ffb80473
008b0639006006f200630557004406090014047300860556009e0556006b
0400004f04f20094030b00440239002404e300140239002404e3003005fb
006105c700a1062e00100400002104e300290400002804e3002904e30031
045c0044045c003f0473003c0473005503ab003203e50024047300870214
00bc034e00bc04ac0072023900b00aaa009e09c7009e08640046087f0096
06aa0096039c008309c7009c078e009c062b0087047300550556fffd0473
004a0000fefe0556fffd0473004a08000001071d00440639006d0473001a
0639006d0473004205560096040000880639006304730044063900630473
004404e30029045c004c01c7ffa20aaa009e09c7009e086400460639006d
04730042084600a404f2009e05c7009c047300870556fffd0473004a0556
fffd0473004a055600a20473004b055600a20473004b0239ff8a0239ff64
023900040239fff60639006304730044063900630473004405c700a102aa
ffcc05c700a102aa006805c700a10473007605c700a1047300830556005c
0400003f04e3003002390024045c0051037e001305c700a40473008705a6
00a404d6005e0486005e04e30029040000280556fffd0473004a055600a2
0473004b06390063047300440000fefd0639006304730044063900630473
004406390063047300440556000604000021047300570473004804730086
04730086040000130400005004730046047300460473005505e9005503ab
004903ab0032050d0032040f00440239ffb9047300420473004204780050
0402001904ef00190473008b047300870473008701c7001901c7005702d9
0044029e0000026e001401c700830493008306aa008406aa008406aa0087
0473ffa60473008b046c00870473004406530044063f00570466004402aa
ffe402aaffe402aaffe402aa008502aa008502aa008502aaffe40455008a
0455008a0400003f01c7ffa20214ffb901c7ff7202cb00000239000f0239
002404730019048c0054046000880400001a05c700060400001804280019
0400002804540028045c004c045c00790400002404000050040000240400
00500639006304400088040f004904780050046b0088032e000004000008
033b008804730048040000240400005007b7004607400046080b004605b3
0024036f002405c00024061c0013054a0083050f008303e2001e04380063
03110064031100640146ffce01eb006401eb000001eb000002ea006403d9
0000029100000187005a02d7005e01c7008001c7006c01c7008a02aa00fb
02aa00fb02ca003202ca003204ac007004ac007004ac006504ac006502aa
012102aa00de02aa005902aa012102aa001d02aa005902aa00de023900b6
023900b602aa00fb02aa00fb02aa00a602aa00a602aa00a602aa001d02aa
ffe202aafffb029400000142006402b8003202a0000002ca003203100096
0310009603100096031000960310009602aa006202aa006202aa002802aa
001d02aa0047045700960457009604570096045700960457004304570043
045700430457004304570043031000430457002f0457002f0457002f0457
002f0457002f0310002f0457002504570025045700250457002504570025
0310002f0457001a0457001a0457001a0457001a0457001a0310001a0457
004204570042045700420457004204570042031000420457009604570096
045700960457009604570042045700420457004204570042045700420310
00420457002f0457002f0457002f0457002f0457002f0310002f0457002f
0457002f0457002f0457002f0457002f0310002f04570026045700260457
002604570026045700260310002604570042045700420457004204570042
045700420310004204570096045700960457009604570096045700420457
004204570042045700420457004203100042045700260457002604570026
045700260457002603100026045700230457002304570023045700230457
0023031000230457002f0457002f0457002f0457002f0457002f0310002f
0457004b0457004b0457004b0457004b0457004b0310004b045700960457
009604570096045700960457004204570042045700420457004204570042
031000420457001a0457001a0457001a0457001a0457001a0310001a0457
002404570024045700240457002404570024031000240457002f0457002f
0457002f0457002f0457002f0310002f0457004e0457004e0457004e0457
004e0457004e0310004e045700960457009604570096045700960000fec1
0000fec60000fdac0000fed80000ff920000fee90000ff4c0000fea00000
fec40000ffce0000ff660000fea00000fed80000fed80000ff970000ff98
0000ff990000fff40000ff420000ff420000ff440000ff5f0000fe870000
ffec0000ffa60000ff510000ff510000ff510000fec90000ff1c00000000
0000fee90000ff4c0000ff930000ff2a0000ff560000ffce0000fe870000
febb0000fec40000fec40000fed80000fed80000feb30000fec90000fdad
0000fec80000feb30000fec90000fdad0000fe160000fee60000ffa60000
fe870000ff440000feba0000ff230000ff9a0000fdac0000fe8800000000
0000feb00000ff980000fe930000ffa60000fe870000fe1c0000ff660000
ff440000feb00000feb00000feb00000ff030000ff520000fd1f0000ff53
0000ff530000ff530000feb50000feb50000ffc30000feae0000fedc0000
fec70000fec80000fedc0000fe1e0000ff420000ff510000feb70000feb0
02aa00de02aa005902aa00fa049a007004600000062e001407aa0000062e
0014047b004c063f005704cf0044063900630473004405c7007004000050
04e300a8033b008804ff0000043c0032060d000a049d0042072000a406aa
0084056500630473008b056400a40400000a0556006b0556006b04e00005
04c5001905e5005f046e004403b600140347002804cf00440495005b0400
005001c7ffa2063900600389004d03890050055600a205c000a10473004b
047800870ab4006d04fe00100639001404e70014079900bf05b500880558
000104000006072e00bf0590008806a10078057b007a086d00bf06f00088
04d5006603ab001f065f0039058200480639006004730044066d0009050c
001a066d0009050c001a08980063072c004406aa002004e6001c0987006d
06d000500000fe370ab4006d04fe001005c7006604000050040700140000
fea60000febc0000ff980000ff980000fc2b0000fc4c05c000a104780087
05400004042b00140556009e04730087055d00a40464008804d5004e03ab
003204a900040380000005ef002904490028070900a4052f0088091800a0
06f600880606003e042b002305c700660400005004e3003003aa00260767
00310587002605550057042b004506e4000a0554000a06e4000a0554000a
023900bf07630007055afffb055700a1046800860540001204ab001805c7
00a4046b008805c700a4046b008805550057042b004506aa00980580008c
02aa002e0556fffd0473004a0556fffd0473004a08000001071d00440556
00a20473004b060500630473005507630007055afffb04d5004e03ab0032
04d5004e045c004c05c000a10478008705c000a104780087063900630473
0044063900600473004405c0004a0415002b0515000a040000210515000a
040000210515000a0400002105550057042b0045071500a805c0008b0540
004a0473004607bf004a0703004607a6006606860053054d006604130053
07c3001207470018084600a4070700880639006d0478005005f900300553
00260000ff430000fec90000ff770000ffb00000ff470000ff560000ff74
0000fed70000feac000000000000ff520000ff56000000000000feac0000
fd9a000000000000ff6a0000ff7c0000ff690000ff560000feac0000ff7f
0000ff560000fdef0000ff430000ff690000ff7c000000000000fdae0000
ff8c000001020000fefe0000fefe0000fedf0000fedf0000ff580000ff20
0000fefe0556fffd0473004a055600960473008605560096047300860556
00960473008605c700660400005005c7009e0473004605c7009e04730046
05c7009e0473004605c7009e0473004605c7009e04730046055600a20473
004b055600a20473004b055600a20473004b055600a20473004b055600a2
0473004b04e300a8023900130639006d0473004205c700a40473008705c7
00a40473008705c700a40473008705c700930473006805c700a404730087
0239ffdf01c7ff9202390020023900060556009604000088055600960400
008805560096040000880473009601c7007e0473009601c7ffb904730096
01c7ffa50473009601c7ffa306aa009806aa008706aa009806aa008706aa
009806aa008705c7009c0473008705c7009c0473008705c7009c04730087
05c7009c0473008706390063047300440639006304730044063900630473
004406390063047300440556009e047300870556009e0473008705c700a1
02aa008505c700a102aa008505c700a102aa005e05c700a102aa00260556
005c0400003f0556005c0400003f0556005c0400003f0556005c0400003f
0556005c0400003f04e300300239002404e300300239002404e300300239
ffff04e300300239000e05c700a10473008305c700a10473008305c700a1
0473008305c700a10473008305c700a104730083055600090400001a0556
00090400001a078d001905c70006078d001905c70006055600090400000f
055600090400000f055600060400002104e300290400002804e300290400
002804e3002904000028047300870239000305c70006040000210473004a
01c7008904a0004804a0004804a0004804a0004804a0004804a0004804a0
004804a000480556fffd0556fffd06820013068200130682001306820013
068200560682005603910062039100620391006203910062039100620391
0062061e0000061e0000076c0000076c0000076c0000076c00000473008b
0473008b0473008b0473008b0473008b0473008b0473008b0473008b068f
0000068f0000081f0000081f0000081f0000081f0000081ffff3081ffff3
01c7008101c7008101c7ff9b01c7ff9b01c7ffeb01c7ffeb01c7ffa201c7
ffa20301000003010000049100000491000004910000049100000491fff3
0491fff3047300440473004404730044047300440473004404730044069d
0000069d0000082d0000082d000007c9000007c900000460008804600088
0460008804600088046000880460008804600088046000880682000007ae
00000812000007ae0006063f0057063f0057063f0057063f0057063f0057
063f0057063f0057063f0057065f0000065f000007ef000007ef0000078b
0000078b0000078bffff078bffff04a0004804a000480391006203910062
0473008b0473008b01c7ffe601c700680473004404730044046000880460
0088063f0057063f005704a0004804a0004804a0004804a0004804a00048
04a0004804a0004804a000480556fffd0556fffd06820013068200130682
00130682001306820056068200560473008b0473008b0473008b0473008b
0473008b0473008b0473008b0473008b068f0000068f0000081f0000081f
0000081f0000081f0000081ffff3081ffff3063f0057063f0057063f0057
063f0057063f0057063f0057063f0057063f0057065f0000065f000007ef
000007ef0000078b0000078b0000078bffff078bffff04a0004804a00048
04a0004804a0004804a0004804a0004804a000480556fffd0556fffd0556
fffd0556fffd0556fffd02aa00e502aa00fd02aa00e502aa000602aa0006
0473008b0473008b0473008b0473008b0473008b068200000682000006f3
000006f3000005c700a402aa001302aa001302aa000601c7ffbb01c7ffab
01c7ffca01c7ffca01c7ff9301c7ff930239001a0239fff5036500000365
000002aa001302aa001302aa000604600088046000880460008804600088
048d0083048d00830460008804600088055600060556000606e600000718
0000061e000002aaffea02aaffea02aa0059063f0057063f0057063f0057
063f0057063f005707650000069d000007270000065f000005fb006102aa
00de02aa00e50473000d05c7006605c7006606aa008705c70024095000a1
078d00190556001f04e30030080000290400003004c100660000ff530000
ff530000ff530000ff5301c7001901c7ffa2042b00050556001105740046
02cbffa3057a008702f0ffc8057f000a057f000a02aa008402aa008402aa
00c902aa00c902aa00a002aa005902aaffaf02aa003a02aa0006023900b9
02aa00a902aa00a902aa00a902aa00a9032e001e032e001e02aa003a0000
ff730000ffa50000fed80000ff230000ff720000ff720000fee70000ffa5
0000ff530000ff530000ff530556009e0473008703f8001905fb0019071d
00440440001904000050046900870469001903eb008703ab003201c70088
0361004104000088033600100580008c04780087047300440400001304de
004404de004404de000d078d005003a800440473004404730044042b0084
0455001f0455001f03aa00260460008804c6004405de004404c600440400
001a05c700060400002803ab0032036b003f04db001f02eb00880400001a
04550088042b008405b4007a04ab001803a00000054f0000035100320351
ffd103980032034800320348003203f80032036e0032015600690284002d
0366003202d000320415003203710032036f003204180032030f00320359
0032039c003203760031036f003204fb000002fa003202fa003203040032
04cc0032030500640305003202f9003202f90032028c0032028c00320304
00320142006402b6006404950064030f00640305003202d5003203050032
030500320306006401c20032030f00640342003204950064029200000320
00000315006402920000030600320385003202bf00000142006401eb0064
030f0064029200000315006402920000030900320385003202bf000005ed
00460a660046061300460689ffba0541ffba01e9003c045a00110000ff0d
0000ff350000fece0000feb70000fec90000ffcf0000ff4f0000ff9e0000
feca02b3005f02b3005f03e9004a03e9004a039affba0327ffba039affba
0327ffba05ad0069053d002d05fd009604dc005004e0003c05f6009b053f
00280650002804ac00720000fe3b0000fe660000fe660473fffc02aa0053
02d5ffce01a8ffba01a8ffba01a8ffba01a8ffba0658001509c500470400
000008000000040000000800000002ab0000020000000155000004730000
02390000019a000000ab00000000000005e5000305c7006606aa00980580
008c0744008307180046071800480556fffd05c70066040000140473000a
04e300300400004f0400002804a5001d000001020000ff420000febf0000
ff3a0000ff53048d000a05c7005105c7006605c70051045500a102eb0088
0000ff430000ff040000ffac02d200960000ff37021affba0250001e0000
ff3a0000ff5b0000ff5f0000ff7e0000ff940000ff4a0000fe9c05b5003a
05b5003a01f4ff9601f4ff9605b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba0481003604350036043dffba
043dffba0481003604350036043dffba043dffba02b3003202b3003202b3
005f02b3005f03e9004a03e9004a0692003e0692003e043fffba043fffba
045a002a039a00360435ffba0327ffba045a002a039a00360435ffba0327
ffba045a002a039a00360435ffba0327ffba064f0027064f00270224ffba
021affba064f0027064f00270224ffba021affba067f0014077600140327
ffba041effba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba02b4002302b400230327ffba0327ffba02b4002302b4
00230327ffba0327ffba043500450435004501f4ffba01f4ffba04350045
0435004501f4ffba01f4ffba043500450435004501f4ffba01f4ffba040d
0047040d004701a8ffba01a8ffba03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0473ff93047300460239ffbf06aa
ffd50473ffb70473ff9102aaffa402aaffa40400ffff0239ffb904000028
04730089030b0064047400480649002401c7001901c700190473001e0460
001e048c000a04730086047300460239001305b400420400008801c7fffc
06aa00870473008b0473008702aafffb0400003f0318ffa20400001a0400
000f040000280473004a04730048047300460473004b03ab004903ab0032
0534005501c700880400001301c7ffa204730083045c004c0304006402d5
003202c9003302fc0032028c003201d5003201d500000304003203110064
01420019014200640142006401420019022a000001420064014200090233
00640493006404930064030fffc9030f0064030e00640305003203000032
02b800320142ffca01c20032030f001d031a00320306006402d400640292
000002de003202de003202de003202f4003202ea00320000febc0000febc
0000ff730000fea9023900b902fa003202f900320305003202a0000002f9
00320639006d0556fffd0473000f05c7006602aa004104a0004804a00048
04a0004804a0004804a0004804a0004804a0004804a0004801c7ff9b01c7
ffab01c7ff9b01c7ffab01c7ff9b01c7ffbb01c7ff9b01c7ffbb04600088
0460008804600088046000880460008804600088046000880460008801c7
ffab01c7ffab01c7ffbb01c7ffbb04600088046000880460008804600088
045a005304ce004a03a000130556001105c700290558000b055600a20473
004b0400003301c7ffa205e600630473004805c7000002aa000f05560006
0400002104000013040000500400001301c700830455fffd02eb00010556
00090400000f055600090400000f04d5005303ab00490540001204ab0018
0000fec60000fed40000fec60000fed40000fe5f0000fe5f0000ff720000
ff730000fee7078b000a03eb004c040000130473000a01c700150473fff4
0556001105c700a1047300190239ff8b05c700a404730087055600960400
008804e30029040000280400003b049e00a403670088053000480000ff53
0000ffbc0000fefe0000fefe0000fea40000fea401c7008805c900a505c7
009c05c900a50000fecd0000ff480000fec90000fece0000fec50000fed0
0000fed10000feee0000fed60000fedc0000fdd90639005804730048078d
001905c70006059f00a40000feb905dc006304c60009084c001906ba0006
023900b9038000720187005a0187005a0400009904000099023900b00239
00b0023900b002aa0019000000000000002a0000002a0000002a0000002a
000000d60000017e00000320000005a60000074e000009380000097e0000
09fe00000aa400000b8400000bec00000c6400000caa00000ce600000d56
00000f1200000fee00001218000013f2000015520000170c000018e20000
198e00001c2200001e5600001eb200001f7000001ff200002062000020e8
000021da000023da000025840000271c000028560000299e00002a620000
2b1800002ca800002dae00002e9200002f7a000031b00000323a00003564
0000370e000038420000394800003b3c00003da800004052000041000000
422400004398000045d6000048e200004a8800004bc800004c3200004c9c
00004d0000004d8800004dbc00004e380000510a000052e80000549c0000
56500000580e0000596200005b5200005cf600005dea00005f020000619a
00006296000064c60000668c0000684e00006a1200006ba800006cae0000
70560000717a0000731800007536000079a000007bc400007e1c00008004
000081020000814e00008250000082f00000833c00008370000083ac0000
83ee000084540000849a000084ce000085040000853a0000858a000085cc
0000861e00008656000086a8000086de0000871e000087600000879e0000
87e800008828000088560000888e000088de00008914000089540000898e
000089d200008a1c00008a5800008a8800008acc00008b0400008b940000
8c1a00008e2800008fbc0000916c000091b80000924c00009470000096c4
000098b4000099a000009a2200009a8c00009baa00009d0600009f4e0000
a0b00000a13e0000a1e80000a2ac0000a3f40000a59e0000a68c0000a752
0000a7b60000a8240000a94e0000aa720000ab020000ace40000af3e0000
b2900000b3860000b42c0000b47c0000b5320000b6520000b7f00000b88a
0000b94e0000ba0e0000ba760000bab20000bb0a0000bb580000bd700000
bfb60000bfee0000c0200000c14a0000c2760000c3240000c3c80000c46a
0000c53c0000c5900000c5c60000c61e0000c7700000c7e20000c83c0000
c9b40000cb200000cc000000cc320000ccce0000cdf20000d0680000d0a2
0000d0e60000d1220000d1840000d1c60000d20c0000d2580000d28a0000
d2de0000d31c0000d34c0000d38a0000d3d00000d4120000d4500000d4d2
0000d5400000d6260000d6620000d6e20000d7160000d7b80000d8400000
d8ac0000d90e0000d97a0000da660000db580000db8c0000dbc00000dbf0
0000dc340000dcac0000de260000e0400000e0720000e0ac0000e1a60000
e3340000e36a0000e4ce0000e54a0000e62a0000e7200000e8b00000ea1a
0000ec080000ed040000ed4a0000ed7e0000edc00000edfa0000ee4e0000
ee960000eee00000ef100000ef400000f1280000f1660000f18e0000f1be
0000f1f20000f2180000f23e0000f2860000f43c0000f5b60000f5dc0000
f6020000f6460000f6760000f6a60000f6fc0000f7da0000f8ec0000f930
0000f9680000f9c20000fa000000fa340000fa640000faa00000fae00000
fb1e0000fb5a0000fb9c0000fbd20000fc0e0000fc4e0000fc740000fc98
0000fce80000fe440000fe9a0000fece0000ff1c0000ff680000ffaa0000
ffe20001001800010060000101020001029e00010466000105e8000107da
0001092c00010ab000010b9200010d2c00010d9600010dbe00010e5c0001
10de0001111e0001115e0001119e000111dc0001123a0001129800011306
0001132600011410000114b0000114e6000115340001157e000115c80001
15e40001160000011620000116400001166000011680000116a6000116cc
000116f200011718000117480001177000011798000117c4000117f00001
18240001184e0001187a000118b0000118da000119060001193c00011966
00011990000119c4000119f400011a2800011a6c00011a9c00011ad00001
1b1200011b4600011b7800011bba00011bee00011c1e00011c6000011ca4
00011cea00011d4600011d6200011d7e00011d9a00011db600011dd20001
1f40000121ec0001245c0001247800012492000124ae000124ca000124e6
000125020001255e0001259800012602000126cc0001276c000128420001
28c20001294a000129ba00012a5000012aae00012af400012b5200012bb4
00012c6c00012d2a00012d5600012db200012df600012f62000130560001
30800001309c000130c8000131000001314c0001318c000131c0000131f0
000132200001325000013294000132c4000132f400013334000133640001
3394000133c400013404000134340001346400013494000134ba000136be
000136ee0001371e0001386e00013a2400013a5400013a8200013ab20001
3ae000013b1000013b3e00013b6200013b8600013bb600013d2600013d5e
00013d8e00013f2000013f4e00013f7c00013faa00013fd2000141300001
42c800014300000143400001437c000143ac000143da000143f600014426
0001445600014546000146ae000146de0001471800014758000147880001
47b8000147fa000148200001484600014886000148c6000148f600014936
00014a2000014aa000014b8400014bb400014be400014c1400014c440001
4c8000014cb200014ce400014d1400014d4400014d8a00014dbc00014dec
00014e2200014e9400014ec8000150960001519800015328000155580001
57a80001593a0001599e00015a2800015a3800015ac600015cc400015df0
00015f5c0001604c000161d0000163ea0001661600016708000167180001
6728000168400001685000016860000168700001688000016890000169ae
000169be000169ce00016a4200016a5200016b2200016b3200016c440001
6c5400016c6400016c7400016dd200016fb000016ff2000170280001705e
0001708e000170be000171120001713a000172c40001740c000175600001
76c80001784c000178b000017a4200017b5e00017b6e00017b7e00017d04
00017d1400017e7a00017fd40001810800018266000183d40001859a0001
85da00018612000186480001866e0001869e000186c40001883a0001886a
000189a0000189b0000189c000018a0200018a1200018ba600018d520001
8edc00018f0400018f3400019090000190a0000191d8000191e800019282
000193e2000193f200019658000197e20001994a0001997a00019af00001
9c2200019c3200019c4200019c5200019d2c00019d3c00019d4c00019d5c
00019e5400019fce00019fde0001a1060001a23a0001a38c0001a5200001
a63e0001a7ca0001a8dc0001a9120001ab480001abe80001abf80001ad8e
0001af300001afb40001b1360001b1460001b3ae0001b52e0001b6ae0001
b6de0001b87e0001ba040001bbc80001bcf40001bd040001be340001be44
0001be540001bf140001bf240001c10a0001c11a0001c2500001c35e0001
c50a0001c6c00001c8020001c9720001caba0001cb0c0001ccee0001ce6a
0001cea80001d04e0001d0720001d1b20001d1c20001d1d20001d20a0001
d21a0001d3a60001d50e0001d6820001d6a60001d6d60001d8440001d8f6
0001d9b40001d9e20001db980001dc900001dd1e0001de440001def20001
dfc60001e0100001e0880001e1480001e1700001e1b40001e20a0001e2e6
0001e3300001e3640001e38c0001e3b40001e3e80001e42c0001e4700001
e4ae0001e5ec0001e6a40001e7c40001e83a0001e9080001e95a0001e9ec
0001ea9c0001eb900001ebe40001ec7a0001ed380001ee220001eed40001
eff40001f0460001f0f00001f2260001f2fe0001f3e40001f4ea0001f5d0
0001f6b20001f7a60001f8440001f94a0001fa440001fabc0001fb340001
fbaa0001fbe00001fc3c0001fd040001fd900001fdc80001fe0e0001fe3e
0001fea80001ff680001ff9c0001ffcc0002000000020030000200600002
00900002023000020268000202a8000202e000020318000203b4000204ae
000204de00020582000205b0000205f00002064000020670000206bc0002
0854000209ba00020b1a00020b6000020bb400020bec00020d5e00020d94
00020e2600020e6400020e9200020ed00002100000021028000211640002
11f40002129e00021320000213dc000214f40002160200021636000216bc
000218180002189a000218e4000219ee00021a3600021b3a00021bb60002
1c0e00021c9200021d7c00021e9200021f8e0002203800022128000221fa
000222e4000223cc0002247c000224fe0002275c00022786000227b00002
286800022892000229d400022ada00022bc400022bee00022c1800022c42
00022c6c00022c9600022e1600022e4000022e6a00022e9400022ebe0002
2ee800022f1200022f3c00022f6600022f9a00022fc400022fee00023018
00023192000231a2000232bc000232cc000232f6000233200002334a0002
33740002351e0002373a0002386800023878000239f400023a0400023b4a
00023d1600023e1c00023f9c0002413c00024360000244ba0002469c0002
47e00002490e000249fc00024a2600024a5000024a7a00024aa400024ace
00024af800024b2200024b4c00024b7600024ba000024bca00024bf40002
4c1e00024c4800024c7200024eae0002502a0002516e000253560002549e
000254c8000254f20002552200025552000255a2000255f2000256320002
56a4000256f800025756000257ac000257e2000258240002586a000258b4
000258e40002591c0002594c00025a8400025dca00025df400025e1e0002
5e4800025e7200025e9c00025ec600025ef000025f1a00025f4400025f6e
00025f9800025fc200025fec00026016000260400002606a000260940002
60be000260e8000261120002613c0002616600026190000261ba000261e4
0002620e0002623800026262000263000002631600026340000266200002
66300002674a0002686c000269aa00026aec00026c9200026ca200026de4
00026f3400027124000272f80002741000027420000274a2000275300002
763000027640000276e0000276f0000278060002795800027a8800027a98
00027b6600027b7600027cec00027cfc00027e1000027e2000027f540002
80ea000281a6000281b6000282b40002840e0002849a000284aa000285d4
000287600002881c0002882c000288c8000288d8000289a6000289b60002
8a8e00028a9e00028ba600028bb600028d7c00028d8c00028ee400028ef4
0002915e0002916e0002936800029378000294e2000294f2000295e20002
95f20002978a0002979a000298b8000298c800029a0800029a1800029a28
00029a3800029bb000029bc000029bd000029be000029d3200029e800002
9f4e0002a0320002a1b20002a3340002a4340002a5480002a68c0002a69c
0002a78a0002a8640002aa000002aa100002ab2e0002ac340002ae320002
ae420002ae520002ae620002afac0002afbc0002b0740002b0840002b192
0002b1a20002b28e0002b29e0002b3bc0002b3cc0002b46a0002b47a0002
b48a0002b5780002b6ec0002b8180002b9120002b9220002b9320002b942
0002bae00002bc9a0002bd680002bd780002bfd80002c21e0002c4a40002
c7080002c98c0002cbfe0002cdce0002cf840002cfae0002cfd80002cfe8
0002cff80002d0220002d04c0002d0760002d0860002d0960002d0c00002
d0ea0002d0fa0002d10a0002d1340002d15e0002d1880002d1980002d1a8
0002d1b80002d1c80002d1d80002d1e80002d2120002d2220002d2320002
d25c0002d2860002d2b00002d2da0002d3040002d32e0002d3580002d382
0002d3ac0002d3d60002d4000002d42a0002d4540002d47e0002d4a80002
d4d20002d4fc0002d5260002d5500002d57a0002d5a40002d5ce0002d5f8
0002d6220002d64c0002d6760002d6a00002d6ca0002d6f40002d71e0002
d7480002d7720002d79c0002d7c60002d7f00002d81a0002d8440002d86e
0002d8980002d8c20002d8ec0002d9160002d9400002d96a0002d9940002
d9be0002d9e80002da120002da3c0002da660002da900002daba0002dae4
0002db0e0002dbae0002dbf20002dc680002dc920002dcbc0002dce60002
dd100002dd3a0002dd640002dd8e0002ddb80002dde20002de0c0002de36
0002de600002de8a0002deb40002dede0002df080002df320002df5c0002
df860002dfb00002dfda0002e0040002e02e0002e0580002e08c0002e0c0
0002e0f40002e2860002e4220002e5be0002e74a0002e7900002e7d60002
e8440002e8a00002e8f20002e9620002ea3a0002eb060002ebde0002ecaa
0002ed4a0002ee640002ef180002ef9a0002eff40002f0340002f1520002
f29c0002f4340002f4900002f4ee0002f54a0002f5a60002f65a0002f710
0002f7bc0002f8680002f9140002f9cc0002fa840002fb3c0002fb4e0002
fb600002fb720002fb840002fb960002fc040002fc720002fd2a0002fd3c
0002fd4e0002fd600002fd700002fd820002fd940002fda60002fdb80002
fdca0002fddc0002fe8a0002ff360002ffe4000300900003012800030162
0003018c000301b60003020a0003025c000302d8000303220003039e0003
03f200030476000304c80003053e00030596000305fc00030652000306ac
0003072a00030776000307d40003083800030886000308d40003092c0003
09740003099e000309cc000309f200030a2600030a5600030a8600030ad8
00030b4600030b9c00030c1000030c6400030cd800030d1e00030d860003
0dcc00030e2800030e5800030e9200030eb800030ee800030f0e00030f34
00030f6600030f9600030fe80003104e000310a40003110a0003115e0003
11cc0003120e0003126e000312b0000312fc0003133600031372000313ac
000313e80003141c0003144e0003147e000314ae000314d8000314fe0003
15280003155600031580000315cc000316100003164600031682000316b6
000316e400031722000317520003178c000317b6000317e40003180a0003
18300003185c000318b8000318e8000319180003194800031980000319b4
000319e200031a1200031a4200031a7200031aa200031ad600031b2c0003
1b6000031bc000031bf400031c4c00031c8000031cdc00031d7a00031e48
00031f6800032030000320c000032156000323420003253e000326b60003
2832000329dc00032b8e00032c7600032dac00032ea400032fb6000330d4
0003320a00033374000334e200033678000337f400033904000339140003
3a4000033b7c00033cbe00033e4200033f1c00033f9200034048000340ee
0003425e0003429600034310000343d20003448c000344f4000345fa0003
4730000347fc0003495a000349d400034a4e00034b1a00034bd400034c88
00034ce400034d3e00034d8600034df600034e7200034ebc00034ef60003
4f3c00034f8000034fd200035024000350a6000351280003516a000351aa
000351e0000352160003524400035272000352a6000352da0003531c0003
535e0003539a000353d6000354100003544a0003547c000354ae000354e0
000355120003554c00035586000355c80003560a0003564c0003568e0003
56dc0003572a0003576c000357ae000357ee0003582e00035868000358a2
000358ee0003593a00035978000359b8000359fe00035a4400035a800003
5ad600035b1200035b4e00035b8e00035bce00035c0a00035c4600035c86
00035cc600035d0a00035d4e00035da200035e3000035e7200035eb40003
5f1c00035f8400035fb600035fe80003602000036058000360ee00036184
000361ce000362180003625400036290000362e60003633c000363860003
63d00003642800036480000364c0000365000003653800036570000365ba
000366040003664200036680000366c20003670400036758000367ac0003
67f2000368380003687e000368c40003691a00036970000369c600036a1c
00036a6800036ab400036b0000036b4c00036bc000036c3400036ca80003
6d1c00036d5a00036d9800036dd600036e1400036e5200036e9000036ed4
00036f1800036f6400036fb0000370100003705c0003709a000370e80003
71f80003724800037298000372d0000373080003735e000373b400037428
0003748c000374ce0003751000037566000375b4000376000003764c0003
768c000376cc000377140003775c000377c8000378220003785a00037892
000378d200037912000379e200037ade00037b9e00037c8c00037ce20003
7d3800037d8a00037dde00037e4200037ea600037efc00037f5200037fc8
0003803e00038080000380c2000381040003814600038188000381ca0003
822000038276000382c80003831c000383a400038426000384c600038568
000385a6000385e4000386220003865e0003869c000386da000387180003
8754000388380003892400038a3a00038b5600038c2000038cea00038de4
00038ede00038fdc000390da000391f8000393160003943c000395620003
966400039766000397f80003988a000398c80003990600039960000399ba
000399f200039a2a00039b3a00039b4a00039b9200039bda00039c320003
9c8a00039cbc00039cee00039d3000039d7200039dac00039de600039e2a
00039e6e00039ee600039f6000039ff00003a0340003a0740003a0f60003
a1780003a2d00003a2e00003a32e0003a37c0003a3b80003a3f40003a43a
0003a4800003a4ce0003a51c0003a56c0003a5bc0003a6180003a6740003
a7ea0003a9520003a98a0003a9c40003aa100003aa5c0003aaae0003ab00
0003ab520003aba80003abe40003ac200003ac760003acca0003ae020003
aea20003aef00003af300003af6a0003b1000003b3840003b4480003b5de
0003b73c0003b80a0003b9b00003bc040003be3c0003be820003beb40003
bf5e0003c0820003c0a60003c1400003c24c0003c35c0003c46c0003c57a
0003c7000003c7320003c7d40003c7fc0003c85e0003c8c00003c9220003
c9840003c9c20003ca000003ca3a0003ca740003caa00003caec0003cb26
0003cb600003ccbc0003ce100003ce200003cede0003d0140003d0720003
d18a0003d3180003d3be0003d5040003d5420003d5800003d5be0003d612
0003d63a0003d6940003d6f80003d7400003d7a20003d8020003d8740003
d8f00003d96c0003d9ee0003da7a0003db060003db900003dc100003dc4a
0003dc860003ddea0003deb40003dee40003df140003e04c0003e19c0003
e1ac0003e29a0003e36e0003e4660003e55c0003e6de0003e8380003e848
0003e9600003ea0c0003eb4e0003eca40003ed000003ee5e0003eeec0003
f0920003f2040003f3180003f3500003f3b40003f5640003f6ce0003f730
0003f8980003f99e0003fa540003fb000003fc280003fd160003fdf60003
ff36000400620004017c000402ec0004046600040476000405560004064c
000406fc000407f8000408a4000409ae00040a9a00040b6200040c860004
0d8a00040eb800040ff600041162000412980004142c000415d4000416cc
000417e00004191200041a0400041a3c00041a9200041b4000041b500004
1bb200041c0e00041c7400041cc000041d0000041d3800041d6400041d92
00041dcc00041f0200041f3600041fba00042070000420a0000421240004
21540004218c00042324000424b0000424fa000425340004258a000425d6
000425fc0004262200042664000426a6000426e800042718000427500004
2786000427bc000427fe0004282e0004285e0004295400042a5800042a8c
00042ac400042b0a00042b3e00042b6e00042ba600042bda00042c0e0004
2c3e00042c6e00042ca400042cda00042d0a00042d3a00042d6e00042da2
00042dd200042e0200042e3c00042e7000042ea200042ed400042f080004
2f3c00042f6c00042f9c00042fca00042ff80004310600043272000433a6
000434da0004350a00043544000435de00043748000438a4000439680004
3a7c00043aac00043ae000043bd800043d8800043de000043e5800043f94
00043fd20004404400044074000440a4000440de00044166000441960004
41c600044356000444a0000445ac000446ba000447e60004493c00044a98
00044bf800044d3200044ea40004500400045014000451ca000452f20004
538c000455140004552400045620000457a6000458fe000459b000045a80
00045b8c00045c3600045c8400045cd400045d8400045e2a00045ea60004
5ff6000460ea000461e0000462ec000463c40004649e0004653200046644
000467d4000468f2000469e800046a9200046b3c00046c0600046cae0004
6d8400046e0000046e5e00046fc0000470f4000472900004735200047452
0004752c0004766a00047716000477e0000478d00004799e00047a7a0004
7b8000047cb800047da800047e4600047f38000480a8000481f20004845e
00048530000485e4000486b2000487a6000488e4000488f400048a280004
8b3a00048b4a00048c5600048d8600048dda00048f4e000490760004918a
0004933c00049550000497e40004999e00049aca00049caa00049e6c0004
9ffe0004a0ca0004a2660004a2dc0004a38a0004a4660004a4f20004a594
0004a6360004a71a0004a8520004aaae0004abf60004ac060004ac160004
ac780004acd60004ad380004add60004ae6e0004af720004b0600004b070
0004b0800004b11a0004b1b40004b1f00004b26c0004b2e00004b3360004
b36a0004b3f00004b47c0004b4f40004b5520004b5ec0004b67e0004b6fe
0004b7800004b8140004b8480004b8aa0004b95c0004bb220004bb5a0004
bd360004be4a0004be5a0004be900004bed40004bf180004bf5c0004bf92
0004bfc40004c0060004c0a20004c0f80004c19e0004c2160004c29c0004
c30c0004c36e0004c3f40004c4540004c4be0004c5320004c5a20004c600
0004c6a60004c73e0004c7aa0004c83a0004c8980004c9060004c9ae0004
ca5a0004caf00004cb5a0004cbdc0004cc400004ccec0004cda40004ce50
0004cede0004cf3a0004cfa60004cffc0004d07e0004d0fc0004d1820004
d20e0004d2680004d2d40004d3440004d3b40004d4240004d4a80004d538
0004d59e0004d6180004d6940004d70c0004d7b20004d84e0004d8de0004
d93c0004d9da0004da560004dae80004db8a0004dc340004dccc0004dd28
0004dd7e0004dde60004de8c0004df340004dffe0004e0a40004e1060004
e15e0004e1be0004e24c0004e2d20004e3600004e3c00004e4240004e48e
0004e4f60004e55e0004e5dc0004e6640004e6f80004e7640004e7cc0004
e8300004e8d80004e9920004ea400004eace0004eb2c0004eb980004ec08
0004ecae0004ed580004ee1a0004eebc0004ef200004efb00004f0220004
f0b20004f1300004f1ac0004f2180004f2a60004f3020004f3600004f3e6
0004f4620004f4ca0004f52e0004f5820004f5f00004f6580004f6d60004
f74c0004f7c60004f8460004f8a20004f9080004f96c0004fa0c0004faae
0004fb640004fc140004fc700004fce80004fd460004fdd00004fe680004
fef80004ff5e0004ffbc0005004a000500bc00050150000501e800050258
000502c8000503400005039e000503fe00050478000504d2000505320005
058c000505e800050650000506de000507140005074c000507d800050802
00050844000508d8000509c600050a5600050a8c00050adc00050b4e0005
0bfa00050c8c00050ce400050d3e00050d9600050df000050e7400050efa
00050f9e0005104600051084000510f40005118800051220000512b60005
136000051392000513e2000514360005147c00051520000515aa00051630
00051690000516d400051722000517c200051852000518f2000519980005
1a3e00051b0200051b3400051b5e00051be400051c9400051cc600051cee
00051dbc00051e1a00051eb400051f0200051f68000520100005207e0005
20e400052170000521e2000522580005230c00052366000523d600052412
00052464000524ea0005254a000525ee000526ce000527f6000529860005
29e200052a3800052d5e00052df800052e5400052e9c0005300a0005315c
000531a2000532b000053348000534560005356000053602000536ea0005
377c000538180005390a00053a0a00053a8600053b0c00053b5400053c84
00053dc000053ea400053ef400053f28000540160005413e000542d80005
44080005451e000545e2000546fe0005476c0005480000054940000549f6
00054b6000054c9000054dc200054eee00054f9a00055060000551320005
528c0005540c0005553c00055658000558120005596400055a5000055b2c
00055bee00055d5800055ea800055eb800055ec800055ed800055f900005
604600056082000560b8000560f000056126000562ba000564ce000565b8
000566ce00056846000569b400056a6e00056b3000056c1400056d0c0005
6eaa00056ffe000571ec000573b20005758e000577260005780e000578ea
00057a3200057bb400057c9c00057db600057df800057e4200057fa00005
8116000582880005838000058560000586fc00058780000587b0000587fc
000588c40005899400058b2800058bb000058c1800058c6a00058cbc0005
8e6e0005909e000591d4000593b600059492000595ac0005975800059964
00059a6600059b5200059d4400059f4c0005a0b80005a23c0005a39c0005
a50a0005a5980005a6280005a7420005a84e0005a9f60005ab500005ad40
0005af0a0005af9e0005b03a0005b0d00005b1580005b23e0005b3160005
b4b00005b6420005b7a80005b8cc0005b8dc0005b90c0005b93c0005bab6
0005bc580005bd020005bde40005bea40005bf4e0005bfe80005c0ca0005
c1880005c2640005c41a0005c5540005c5e00005c6100005c6400005c674
0005c6a80005c6b80005c6c80005c6f80005c7280005c75c0005c7900005
c7c40005c7f80005c82c0005c8600005c9da0005c9ea0005ca1a0005ca4a
0005ca820005cab60005caea0005cb1e0005cb520005cb860005cbba0005
cbf20005cc280005cc580005cc980005ccd00005cd180005cd5e0005cd92
0005cdc60005ce000005ce380005ced80005cee80005d03a0005d2020005
d3a80005d5520005d69e0005d7b40005d8c20005d9d80005dad20005dbba
0005dcdc0005ddd80005deb00005dfa00005e05c0005e10e0005e1d80005
e24a0005e2f00005e3800005e3e40005e4f20005e5580005e6060005e6fc
0005e7640005e7cc0005e87c0005ea560005eb5a0005ebda0005ec180005
ecc40005ed520005ee3a0005eed20005ef380005f0360005f0f80005f1b2
0005f1f00005f2800005f3820005f4160005f45a0005f5780005f6a20005
f8840005fa460005fb7c0005fcaa0005fdaa0005fdd20005fdfa0005fe30
0005fe620005fe8e0005feb60005fede0005ff0c0005ff6a0005ffd80006
001000060048000600780006009e000600d2000601080006012e00060154
00060182000601b0000601dc000602520006027a000602dc000603020006
03280006034e00060374000603a4000603d4000604040006043e0006046e
000604a4000604d4000605060006052c0006055200060586000605bc0006
05ec0006061c00060642000606680006068e000606bc000606f000060776
000607ba000607f4000608280006086c000608a6000608e0000609060006
09300006097c000609be000609e400060a1200060a3800060a5e00060a9e
00060ad000060b0000060b3000060b5600060b7c00060bac00060bdc0006
0c0200060c2800060c4e00060c7400060c9a00060cc000060ce800060d70
00060d9a00060e0e00060e3600060eac00060ed400060f3600060f680006
0f9a00060fca0006100200061034000610620006109c000610c400061124
0006116600061196000611c2000611f2000612220006124a000612720006
129a000612fc0006132400061382000613c60006140a0006143a00061470
00061496000614be000614e40006150c000615320006155a000615820006
15ac000615d2000615f80006161e0006165000061678000616fe00061728
00061792000617c2000617f2000618180006183e00061896000618c60006
19020006192c0006195c0006198c000619c0000619f400061a2400061a64
00061a9e00061ae600061b0c00061b3200061b5800061b7e00061ba40006
1be400061c2400061c6000061c9000061cc000061cf000061d2000061d58
00061d9000061dd000061e1000061e4a00061e8400061ec000061efe0006
1f4800061f9200061fd80006201e00062060000620a2000620d200062102
000621360006216a000621a4000621de0006222a00062276000622ce0006
23260006237e000623dc0006240c0006243c00062472000624a8000624de
0006251a0006254e00062582000625d60006262a0006267e000626d20006
27260006277a000627d20006282a0006285800062886000628b8000628ea
0006293000062976000629a8000629da00062a2c00062a8400062ac80006
2b0c00062b5000062b9400062be800062c3c00062c6c00062c9c00062cd2
00062d0800062d4600062d8c00062de000062e2a00062e7c00062ece0006
2f2e00062f8e00062fbe00062ff00006302a00063064000630b60006310a
000631540006319c000631de0006324800063296000632e2000633140006
33460006337a000633ae000633e40006341a000634580006348e000634c0
000634fc00063552000635a80006360600063664000636ba000637100006
374400063774000637b8000637ee0006381e00063862000638a0000638d8
000639100006394600063982000639b2000639ee00063a2e00063a740006
3abe00063b0a00063b5600063bac00063c0200063c5000063c9e00063cec
00063d3c00063d9800063df400063e4c00063ea400063ef800063f4c0006
3f8e00063fd00006401800064060000640a8000640f60006413a0006417e
000641e40006424a000642b0000643160006437c000643e20006444c0006
44b6000644fe000645460006458e000645d6000646220006466e000646c2
0006470e00064752000647a00006480800064870000648e0000649500006
49b800064a2000064a6000064a9e00064ae800064b1200064b5800064b90
00064bde00064c0e00064c3e00064c7a00064cae00064cd400064d280006
4d6600064dba00064ea000064fc80006500a0006503000065086000650b6
000650f8000651400006518e000651d8000652280006524e000653360006
541a0006556c0006559a000655c80006565c000656e2000657100006579a
000657ca000657fa00065848000658960006597a00065a5600065b9a0006
5bca00065bfa00065c9000065d1800065d4800065d7800065da800065e38
00065e6800065e9800065eea00065f3200065f880006601e000660b60006
612a0006617c000661a6000661fc000662300006627a000662b200066302
000663400006638c000663b20006642e00066480000665920006679c0006
695000066ad200066c4400066ee6000671b600067376000674bc00067716
0006785800067a6e00067ac000067b1000067b6600067bbc00067c1e0006
7ca600067ef40006808600068292000683ae00068562000686e4000687a4
00068886000688ee00068950000689c600068a2e00068ada00068b4a0006
8bda00068cee00068db200068dfe00068e9400068f4000068fe40006908e
000690d80006911a00069190000691f80006928800069336000693a00006
94040006946a00069524000695ba00069618000696420006966c0006967c
0006968c0006974e0006985200069a5c00069bb200069bc200069c720006
9d5600069db600069dc600069e2200069e8000069fa00006a08e0006a09e
0006a0ae0006a0be0006a0ce0006a1b40006a2b40006a48c0006a6480006
a74e0006a7c80006a8420006a8f40006a9040006aa120006aa220006aa32
0006aaf40006ac280006ad140006ad240006ad340006ad440006aeaa0006
b0160006b1420006b1520006b1620006b1720006b1820006b2640006b274
0006b3d60006b4e00006b5de0006b7160006b7e80006b8660006b8e40006
ba040006ba800006bacc0006bb580006bc6c0006bcc00006be020006bec2
0006bf8e0006c0840006c18e0006c2400006c3a60006c40c0006c4d00006
c6d20006c8600006c9de0006cb0e0006cdc00006cf020006d0300006d1a8
0006d3200006d4a00006d62e0006d7e00006d84e0006d9b20006daea0006
dbee0006dd240006de560006df260006dff60006e1520006e22c0006e2cc
0006e3d00006e4fa0006e5f80006e7780006e8e20006ea200006eb980006
ece40006edc60006ee2e0006eed00006ef700006f06e0006f1d60006f310
0006f4a40006f5ee0006f6d20006f7300006f8360006f8cc0006f98e0006
fa340006fa740006fc200006fcf20006fdb80006fee0000700800007018c
000701e40007037c0007040a0007041c0007044c0007047c000704b40007
04ec000705220007055e00070594000705d00007073e0007078800070822
000708ba00070934000709b800070a1e00070aca00070b1600070c360007
0cec00070dc200070dfa00070e3800070eac00070fa6000710c4000711c6
000712080007124a000712b8000712c8000712d8000712e8000712f80007
130800071318000713280007133800071348000713580007136800071368
000714ec000714fc000715bc00071682000717b8000719ae00071bb00007
1dac00071fe2000721e20007224e00072360000724f20007264a000726fc
00072740000727de0007290e0007295e000729f400072b3000072b400007
2cf600072e2a00072e7a00072ed000072f9200072fd6000730180007309e
000730fc000731ee0007327c000732b20007332c000733a4000733f40007
3500000735f6000736a0000736ca000736f40007371e0007374800073788
000737c8000738000007383800073882000738cc0007390c0007394c0007
3996000739e000073a2000073a6000073aba00073b1400073b4e00073b88
00073bcc00073c1000073c5400073c9800073cec00073d4000073d8c0007
3dd800073e1600073e5a00073eaa00073efa00073f5400073fb200073fdc
00074006000740a00007413a0007417e000741c2000742d8000742e80007
433000074378000743ca0007441c00074486000744da0007452600074584
0007460e00074672000746b60007470000074768000747b2000747f20007
483a00074876000748b2000748ee000749280007496a000749ac000749ec
00074a2c00074a7600074ac000074b1600074b6e00074bbc00074c0a0007
4c4c00074c9a00074cdc00074d2600074d6800074dac00074e0800074e64
00074eb000074efc00074f4600074f9000074fce0007500c0007508a0007
5108000751420007517c00075216000752b00007538400075458000754b4
0007551000075584000755f8000757560007576600075850000758600007
5896000758cc00075906000759400007597c000759b8000759fe00075a44
00075baa00075d6000075eac0007606a000761e000076388000764b80007
65be000767dc0007692000076ab600076c3e00076cbc00076e0000077008
0007709c0007713000077284000773ae0007752800077668000777d40007
78c200077a8c00077c2000077ca200077dd400077ebe0007802600078108
000782be000783b0000785120007864e000787420007890600078a8e0007
8c3200078d9600078f32000790f000079276000793120007948600079578
00079660000797e00007993200079a5200079bea00079dc000079f4e0007
9ff80007a0ae0007a2600007a3040007a3920007a3de0007a42a0007a4a2
0007a5800007a5fa0007a69c0007a6f00007a8540007a9800007aa920007
ab940007ac5c0007add00007af100007b1360007b1e00007b30a0007b40e
0007b5ae0007b69a0007b7940007b8920007b9780007ba920007bc4c0007
bdfa0007bf680007bfe00007c0540007c1720007c1f60007c2f80007c484
0007c5fc0007c7320007c83c0007c9b20007cb2a0007cd1c0007cf0a0007
d0d00007d1440007d1f40007d2aa0007d35a0007d4180007d5120007d616
0007d7100007d81c0007d8a40007d9320007d9ba0007da4e0007db2a0007
dc200007dd040007ddfa0007de8e0007df4a0007dfde0007e09c0007e18c
0007e2940007e3920007e4a60007e5c80007e6dc0007e81c0007e9560007
ea780007eb8c0007ecd00007ee240007f0380007f1ea0007f29e0007f3ba
0007f4900007f5ae0007f68c0007f8200007f8da0007f9760007fa680007
fb500007fc3c0007fcba0007fdb40007fef20008001e0008005200080096
000800a600080146000801e8000802de000803ca000804a40008057c0008
06da0008083a000808d80008096e000809ac000809ec00080a2a00080a6a
00080ac400080b1c00080b7600080bda00080c6600080e6200080eb20008
0fde00081064000810e4000811be0008129200081396000815820008169a
0008170a0008179a0008185c0008192e0008199a00081a1800081b6c0008
1bb200081bf800081cdc00081d1800081d7600081db400081de600081e2a
00081e6c00081e9c00081f760008203e000821220008219e000821ec0008
22760008234c000823c40008247e000825300008257a0008264e00082700
0008275800082768000827780008278800082798000828ca000828dc0008
29be00082a6400082b6e00082c7a00082cbe00082d0200082d3600082d6a
00082dba00082e0a00082e5c00082eae00082f0000082f56000100000d57
00f2003c009d000700020010002f0056000004ac041d0005000200>
<0000003a02be0000000300000000006a00000000000300000001000a006a
0000000300000002000e00740000000300000003005e0082000000030000
0004000a006a0000000300000005001800b00000000300000006000e00e0
000000030000000700ba00ee00000003000000080030000e000000030000
0009008a01a8000000030000000d02aa02320001000000000000003504dc
000100000000000100050511000100000000000200070516000100000000
0003002f051d0001000000000004000505110001000000000005000c0534
00010000000000060007054c0001000000000007005d0553000100000000
0008001804e30001000000000009004505b0000100000000000d015505f5
0003000104030002000c074a000300010405000200100756000300010406
0002000c0766000300010407000200100772000300010408000200100782
0003000104090000006a00000003000104090001000a006a000300010409
0002000e00740003000104090003005e00820003000104090004000a006a
0003000104090005001800b00003000104090006000e00e0000300010409
000700ba00ee00030001040900080030000e0003000104090009008a01a8
000300010409000d02aa023200030001040a0002000c074a00030001040b
00020010079200030001040c0002000c074a00030001040e0002000c07a2
0003000104100002000e07ae0003000104130002001207bc000300010414
0002000c074a0003000104150002001007ce0003000104160002000c074a
0003000104190002000e07de00030001041b0002001007ec00030001041d
0002000c074a00030001041f0002000c074a0003000104240002000e07fc
00030001042a0002000e080a00030001042d0002000e081800030001080a
0002000c074a0003000108160002000c074a000300010c0a0002000c074a
000300010c0c0002000c074a00a900200032003000300038002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0041
007200690061006c0052006500670075006c00610072004d006f006e006f
0074007900700065003a0041007200690061006c00200052006500670075
006c00610072003a00560065007200730069006f006e00200035002e0030
003600200028004d006900630072006f0073006f00660074002900410072
00690061006c004d00540041007200690061006c00200069007300200061
002000740072006100640065006d00610072006b0020006f006600200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e00200069006e0020007400680065
00200055006e006900740065006400200053007400610074006500730020
0061006e0064002f006f00720020006f007400680065007200200063006f
0075006e00740072006900650073002e004d006f006e006f007400790070
006500200054007900700065002000440072006100770069006e00670020
004f006600660069006300650020002d00200052006f00620069006e0020
004e006900630068006f006c00610073002c002000500061007400720069
0063006900610020005300610075006e0064006500720073002000310039
003800320059006f00750020006d00610079002000750073006500200074
00680069007300200066006f006e007400200074006f0020006400690073
0070006c0061007900200061006e00640020007000720069006e00740020
0063006f006e00740065006e00740020006100730020007000650072006d
0069007400740065006400200062007900200074006800650020006c0069
00630065006e007300650020007400650072006d007300200066006f0072
0020007400680065002000700072006f006400750063007400200069006e
0020007700680069006300680020007400680069007300200066006f006e
007400200069007300200069006e0063006c0075006400650064002e0020
0059006f00750020006d006100790020006f006e006c0079002000280069
002900200065006d0062006500640020007400680069007300200066006f
006e007400200069006e00200063006f006e00740065006e007400200061
00730020007000650072006d006900740074006500640020006200790020
00740068006500200065006d00620065006400640069006e006700200072
00650073007400720069006300740069006f006e007300200069006e0063
006c007500640065006400200069006e0020007400680069007300200066
006f006e0074003b00200061006e00640020002800690069002900200074
0065006d0070006f0072006100720069006c007900200064006f0077006e
006c006f006100640020007400680069007300200066006f006e00740020
0074006f002000610020007000720069006e0074006500720020006f0072
0020006f00740068006500720020006f0075007400700075007400200064
0065007600690063006500200074006f002000680065006c007000200070
00720069006e007400200063006f006e00740065006e0074002ea9203230
303820546865204d6f6e6f7479706520436f72706f726174696f6e2e2041
6c6c205269676874732052657365727665642e417269616c526567756c61
724d6f6e6f747970653a417269616c20526567756c61723a56657273696f
6e20352e303620284d6963726f736f667429417269616c4d54417269616c
20697320612074726164656d61726b206f6620546865204d6f6e6f747970
6520436f72706f726174696f6e20696e2074686520556e69746564205374
6174657320616e642f6f72206f7468657220636f756e74726965732e4d6f
6e6f7479706520547970652044726177696e67204f6666696365202d2052
6f62696e204e6963686f6c61732c205061747269636961205361756e6465
72732031393832596f75206d617920757365207468697320666f6e742074
6f20646973706c617920616e64207072696e7420636f6e74656e74206173
207065726d697474656420627920746865206c6963656e7365207465726d
7320666f72207468652070726f6475637420696e20776869636820746869
7320666f6e7420697320696e636c756465642e20596f75206d6179206f6e
6c792028692920656d626564207468697320666f6e7420696e20636f6e74
656e74206173207065726d69747465642062792074686520656d62656464
696e67207265737472696374696f6e7320696e636c7564656420696e2074
68697320666f6e743b20616e6420286969292074656d706f726172696c79
20646f776e6c6f6164207468697320666f6e7420746f2061207072696e74
6572206f72206f74686572206f75747075742064657669636520746f2068
656c70207072696e7420636f6e74656e742e004e006f0072006d0061006c
006f00620079010d0065006a006e00e9006e006f0072006d0061006c0053
00740061006e0064006100720064039a03b103bd03bf03bd03b903ba03ac
004e006f0072006d00610061006c0069004e006f0072006d00e1006c004e
006f0072006d0061006c0065005300740061006e00640061006100720064
004e006f0072006d0061006c006e0079041e0431044b0447043d044b0439
004e006f0072006d00e1006c006e0065004e0061007600610064006e006f
0074006801b001a10300006e00670041007200720075006e00740061b900
540328b326181fd0bc032900e0032900020329b22b1d1fb90327031db23b
1f40b80323b31215320f412d03200001002f0320000100200320006f0320
00af032000bf03200004005f031e00010010031e007f031e0080031e00af
031e00bf031e00d0031e00060000031e0010031e0020031e006f031e009f
031e00e0031e0006031d031cb2201f1041270319007f03190002000f0317
00ef031700ff03170003001f0317002f0317004f0317005f0317008f0317
009f03170006000f0317005f0317006f0317007f031700bf031700f00317
000600400317b2923340b80317b28b3340b80317b36a6c3240b80317b261
3340b80317b35c5d3240b80317b357593240b80317b34d513240b80317b3
44493240b80317b23a3340b80317b331343240b80317b32e423240b80317
b3272c3240b80317b312253280b80317b30a0d32c04116031600d0031600
0200700316000102c4000f0101001f00a0031500b0031500020306000f01
01001f00400312b32426329fbf03040001030203010064001fffc00301b2
0d1132410a02ff02ef0012001f02ee02ed0064001fffc002edb30e11329f
414a02e200af02e200bf02e2000302e202e202e102e1007f02e000010010
02e0003f02e0009f02e000bf02e000cf02e000ef02e0000602e002e002df
02df02de02de000f02dd002f02dd003f02dd005f02dd009f02dd00bf02dd
00ef02dd000702dd02dd001002dc0001000002dc0001001002dc003f02dc
000202dc02dc001002db000102db02db000f02da000102da02daffc002d3
b2373932b9ffc002d3b22b2f32b9ffc002d3b21f2532b9ffc002d3b2171b
32b9ffc002d3b2121632b802d2b2f9291fb90326031cb23b1f40bb032200
3e00330322b225311fb80318b23c691fb802e3b3202b1fa0413002d400b0
02d40002000002d4001002d4002002d4005002d4006002d4007002d40006
006002d6007002d6008002d6009002d600a002d600b002d60006000002d6
001002d6002002ca002002cc002002d6003002d6004002d6005002d60008
02d0b2202b1fb802cfb226421f411602ce02c70017001f02cd02c8001700
1f02cc02c60017001f02cb02c50017001f02c902c5001e001f02ca02c6b2
1e1f00410b02c6000002c7001002c6001002c7002f02c5000502c1b32412
1fff411102bf0001001f02bf002f02bf003f02bf004f02bf005f02bf008f
02bf000602bf0222b2641f12410b02bb00ca0800001f02b200e90800001f
02a600a20800406a1f4026434932402043493240263a3d3240203a3d329f
209f26024026969932402096993240268e923240208e92324026848c3240
20848c3240267a813240207a813240266c763240206c76324026646a3240
20646a3240265a5f3240205a5f3240264f543240204f5432b8029eb72427
1f374f6b0120410f02770030027700400277005002770004027702770277
00f90400001f029bb22a2a1fb8029a402b292a1f80ba0180bc0180520180
a201806501807e01808101803c01805e01802b01801c01801e0180400180
bb0138000100800140b40180400180bb013800010080013940180180ca01
80ad018073018026018025018024018020013740b80221b2493340b80221
b2453340b80221b341423240b80221b33d3e320f410f0221003f0221007f
0221000300bf022100cf022100ff0221000300400221b320223240b80221
b3191e3240b80222b32a3f3240b80221b32e3a326f414802c3007f02c300
8f02c300df02c30004002f02c3006002c300cf02c30003000f02c3003f02
c3005f02c300c002c300ef02c300ff02c3000600df02220001008f022200
01000f0222002f0222003f0222005f0222007f022200ef0222000600bf02
2100ef02210002006f0221007f022100af02210003002f0221003f022100
4f0221000302c302c30222022202210221401d101c102b1048038f1c010f
1e014f1eff1e023700161600000012110811b8010db6f70df8f70d000941
09028e028f001d001f0290028f001d001f028fb2f91d1fb80198b226bb1f
41150197001e0401001f013900260125001f013800730401001f0135001c
0801001f0134001c02ab001f0132b21c561fb8010fb2262c1fba010e001e
0401b61ff91ce41fe91cb80201b61fe81cbb1fd720b80401b21fd51cb802
abb61fd41c891fc92fb80801b21fbc26b80101b21fba20b80201b61fb91c
381fadcab80401b21f8126b8019ab21f7e26b8019ab61f7d1c471f6b1cb8
0401b21f6526b8019ab21f5e73b80401400f1f52265a1f481c891f441c62
1f4073b80801b61f3f1c5e1f3c26b8019ab21f351cb80401b61f301cbb1f
2b1cb80401b61f2a1c561f291cb80101b21f231eb80401b21f5537b80168
402c07960758074f07360732072c0721071f071d071b071408120810080e
080c080a080808060804080208000814b8ffe0402b000001001406100000
010006040000010004100000010010020000010002000000010000020108
02004a00b013034b024b5342014bb0c063004b6220b0f65323b8010a515a
b005234201b0124b004b5442b0382b4bb807ff52b0372b4bb007505b58b1
01018e59b0382bb00288b801005458b801ffb101018e851bb0124358b900
010111858d1bb900010128858d5959001816763f183f123e113946443e11
3946443e113946443e113946443e11394660443e11394660442b2b2b2b2b
2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0aa1d59
b0324b5358b0ff1d594bb09353205c58b901f201f04544b901f101f04544
5958b9033e01f2455258b901f2033e4459594bb8015653205c58b9002001
f14544b9002601f145445958b9081e0020455258b90020081e4459594bb8
019a53205c58b9002501f24544b9002401f245445958b909090025455258
b9002509094459594bb8040153205c58b173244544b1242445445958b917
200073455258b9007317204459594bb8040153205c58b1ca254544b12525
45445958b9168000ca455258b900ca16804459594bb03e53205c58b11c1c
4544b11e1c45445958b9011a001c455258b9001c011a4459594bb0565320
5c58b11c1c4544b12f1c45445958b90189001c455258b9001c0189445959
4bb8030153205c58b11c1c4544b11c1c45445958b90de0001c455258b900
1c0de04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b01b33b59635c456523
456023456560234560b08b766818b080622020b163594565234520b00326
6062636820b003266165b059236544b063234420b13b5c4565234520b003
266062636820b003266165b05c236544b03b2344b1005c455458b15c4065
44b23b403b4523614459b347503437456523456023456560234560b08976
6818b080622020b134504565234520b003266062636820b003266165b050
236544b034234420b147374565234520b003266062636820b003266165b0
37236544b0472344b10037455458b137406544b24740474523614459004b
5342014b5058b108004259435c58b108004259b3020b0a124358601b2159
421610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342b00d
2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b0
124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b7475
737500184569444569444569447373737374757374752b2b2b2b74752b2b
2b2b2b737373737373737373737373737373737373737373737373732b2b
2b45b0406144737400004bb02a534bb03f515a58b1070745b04060445900
4bb03a534bb03f515a58b10b0b45b8ffc0604459004bb02e534bb03a515a
58b1030345b040604459004bb02e534bb03c515a58b1090945b8ffc06044
592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b752b2b2b2b2b2b2b435c58
b9008002bbb301401e017400735903b01e4b5402b0124b545ab012435c5a
58ba009f02220001007359002b7473012b01732b2b2b2b2b2b2b2b737373
732b2b2b2b2b002b2b2b2b2b2b0045694473456944734569447374754569
44734569444569444569447374456944456944732b2b2b2b2b732b002b73
2b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b737475732b7374757374752b2b
2b742b2b000000>
[15785 15901 16277 16265 16245 15965 14085 16161 16321 16209 15953 15469 14369
16281 16349 16097 16057 16313 14945 16169 16329 16261 16213 15869 16253 16133
16337 16305 16157 16201 13221 16201 16113 11631 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> ArialMT AddT42Char 
3 5876 71 <00020046ffe803df05ba0011001d015540a40a02040d250d340d440d0535
14351c5702540a5214531c6702640565096314601cc01fd405d513dd19e5
13e514ef17eb19e51de01fff1f161f1f2b1a3c163c1a4b1a701f901f072e
02240d2e163a02350d4b02450d4614491c570a560d670de506e716fa01f4
0e100115030e0b100f001b1c0b0711000a151c030b1833010025110f2510
10d011011011401160118011041f400b0b02551f400d0d02551112101002
5511b8fff440110f0f025511060e0e025511180d0d025511b8fff2400b0b
0b0655110e1010065511b8ffeeb40c0c065511b8fff840420d0d06551174
1224bf07cf07df07ff07041f073f074f0703071e0b0b025507180c0c0255
071e0d0d0255070c0b0b0655070c0d0d0655071a0c0c065507191e345018
2b4e10f42b2b2b2b2b2b5d714dedfd2b2b2b2b2b2b2b2b2b2b5d713c10ed
10fd3ce4003fed3f3c3fed3f3c11391112393130005d01715d0071213506
232226263534123633321617113311011416333236353426232206033865
c47fd5756ad48360962fb3fd20ac7576a5a87b78a1869e8cfba39f01038a
5141020efa460212cccac1c6daccc400>ArialMT AddT42Char 
3 7594 75 <00010087000003e805ba00140161b90016ffc0b315173403b8ffe0400e0d
0d0655250435034503ba0d0403b8ffe0403a1719341708110c1114030501
000f1c0507140b0a0c250940333634ff0901c0090116400b0b0255164010
10025509281010025509140e0e025509b8ffec40110d0d025509040c0c02
55091a0b0b025509b8fff6400b0b0b065509141010065509b8fff8400b0d
0d0655090a0f0f065509b8fff6b60c0c0655094e16b8ffc04017343634b0
16f016027016a016b016ff1604160214250100b8ffc04010333634f00001
00002000d000e0000400b8fffab41010025500b8fffa40170e0e02550004
0c0c025500080b0b025500040b0b065500b8fffa40160f0f065500020c0c
065500020d0d0655004e154750182b10f62b2b2b2b2b2b2b2b5d712b3cfd
3c105d712bf42b2b2b2b2b2b2b2b2b2b2b2b5d712bed003f3c3fed3f1139
113901123931304379400e060e07250e060c1b010d080f1b01002b012b2b
81002b5d2b012b33113311363332161615112311342623220606151187b4
7ec076ae4bb4756b508d3c05bafdf2925da49cfd5f02a1877b538e7dfdbb
>ArialMT AddT42Char 
3 10468 82 <00020044ffe80427043e000d0019016bb615180d0d065513b8ffe8b40d0d
06550fb8ffe840730d0d065519180d0d065512070a190c47064808560659
08670669080834103a123a16351845104b124b1645185c055c0952105d12
5d1652186d056d0964106d126d1664187701150906050d5b035405540a5b
0c6c036505650a6c0c0a171c0407111c0b0b14241b400d0d02551b400b0b
025507b8ffea40110f0f025507180d0d025507100b0b025507b8fff0b40b
0b065507b8fff0b40d0d065507b8fff0b40f0f065507b8fff0b40c0c0655
07b8ffc04013242534300701000710072007030731df1b011bb8ffc04049
1e2334301b011b0e24000c0e0f025500120d0d0255000c0c0c0255001c0b
0b0255000e0b0b0655000e0d0d0655000c1010065500160c0c0655004024
25341f003f000200311a3437182b10f65d2b2b2b2b2b2b2b2b2bed10712b
5df65d5d2b2b2b2b2b2b2b2b2b2bed003fed3fed313001715d0071435c58
4009530553096205620904015d59002b2b2b2b1310373633320015140606
23220013141633323635342623220644a489c5db01167beb8bdffeedb9b2
8786b2b38587b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca
>ArialMT AddT42Char 
3 12038 86 <0001003fffe803b1043e00300317407b042214223a094a09442456226522
7c098e098424a613ab2cc2030d09171a1817304b2cd617051b0255020210
32010a185c085c095c0a5c0b5c0c5c0d6a086a096a0a6a0b6a0c6a0db426
b4270f27262427242936245a0a590b64266428742374248024930a9c0c92
28972c9530a40aa90ca327a428b326c5261628b8fff4b40d0d065522b8ff
f4b40d0d065523b8fff4b40d0d065524b8fff4b40d0d065528b8fff4b40c
0c065522b8fff4b40c0c065523b8fff4b40c0c065524b8fff4b40c0c0655
1db8ffde40121e395a0827250c0a041a202615040b2e1d1ab802aa402219
2c0b0b02551f193f194f195f19af19cf19060f191f196f19df19041f198f
190219bd02550015000002aa0001ffc040140b0b025510014001021001d0
0102000110010201b8ffc0b314163401b8ffc040100e113401012e5c1d6c
1d021d1c150704b8fff4b40b0b025504b8ffe6b41010065504b8ffe64013
0f0f0655041c2e0b1f1a011a24194013183432b8ffc0402f0f0f02551918
0f0f025519180d0d025519160c0c025519201010065519200f0f06551910
0c0c065519160d0d065519b8025bb207242ab8ffc0b51c39d02a012ab8ff
e6b40c0c02552ab8ffe8b40f0f02552ab8ffe8b40c0c06552ab8ffeab60d
0d06552a1a32b8ffc04021272a346032c032023f32803202321001010124
00180d0d025500100d0d06550020b8fff4b40d0d025520b8fff4b4101006
5520b8fff440190f0f065520240f100b0b02550f160c0c02550f200d0d02
550fb8fffa40200f0f02550f0e0c0c06550f0c0d0d06550f22df00013f00
4f00020019313437182b4e10f45d714df42b2b2b2b2b2bed2b2b2b102b2b
ed724e105d712bf62b2b2b2b712b4dedf42b2b2b2b2b2b2b2b2bed72003f
ed2b2b2b3fed7112392f2b2b5d71722be410fd5d71722be4111239111239
0111121739313043794040272d1e2305142c261110121013100306220d20
1b000928071b01052d071b011e14201b00210e231b0022230d0c08290a1b
012827090a062b041b001f101d1b01002b2b103c103c2b103c103c2b012b
2b2b2b2a2b818181002b2b2b2b2b2b2b2b2b5d71015d72715d1337161633
323635342726272e02353436373636333216161707262623220615141716
1716171e02151406062322263fb20f897b7c78352593c6994f41382a9153
7dbd5a11b00c73697c6a16162f1b84bf975669c67dcfd9013d1c6b726544
3d2318253249814e4779281f2b487b6718525c5237231c1d130a2433417c
5c5a9f57ac00>ArialMT AddT42Char 
4 0 92 <00010021fe5103ee0426001a01f7b10202435458401d0a140f030b031c19
0f12060b061340120f200b400c200f180f0f02550f192f2b1add1a18cd1a
1910dd1a18cd003f3f3fed12173931301bb30f1c010fb8ffde406d1c3928
14560faf0a03400d400f020f202830341020283034070c0912160d181227
0b270c270d360c360d350e99110b28122813481659125913591569126913
69157906760d79117a147a15850d8a118c128c138914980aa80bbc10bb11
ba14ea0ae714f50dfd10f914ff1c1e12b106024354584016130b1c1b040f
440f840f030f190b031c190f12060b06003f3f3fed1112395d0111123939
1b40370f0f0c101112120a00031914131325120a1412120a0f0c0f110c25
0b0a140b0b0a1312120c0c0b06031c190f001c101c022f1cbf1c021cb802
3fb50f1340124014b80254400b3f124012025f12bf120212b80142b60f01
2200451b0ab8025440120f200b4040200c300c4f0c03500cff0c020cb801
42b32f0f010fb8023fb41b207c66182b1a1910fd71f45d711a18ed1a1910
ed1810f4e41910e45d71ed1a1810ed1910e45d7100183fed3f3c103c103c
87052e2b087d10c487052e182b0e7d10c400111239870e103c3c08c44bb0
0e534bb018515a58bb000cffe8000bffe80138385959313001435c58b900
14ffdeb637390a2237390eb8ffe8b51539112215392b2b2b2b595d712b2b
00715d2b015d591327163332363736373637013313161736371333010607
060623227f143b2c3c48171126050bfe6dc2dd2b221f2be3b4fe6c412430
7c5634fe67a91028241b6b0f1d0428fd9975817c76026bfbc8af42595300
>ArialMT AddT42Char 
2 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/space 3 def
/d 71 def
/h 75 def
/o 82 def
/s 86 def
/y 92 def
end
ArialMT /Encoding get
dup 32 /space put
dup 100 /d put
dup 104 /h put
dup 111 /o put
dup 115 /s put
dup 121 /y put
pop
end
%ADOEndSubsetFont
/KEFPBG+ArialMT /ArialMT findfont ct_VMDictPut/KEFPBG+ArialMT*1 [32{/.notdef}rp /space 67{/.notdef}rp /d 3{/.notdef}rp /h 6{/.notdef}rp /o 3{/.notdef}rp /s 5{/.notdef}rp /y 134{/.notdef}rp]KEFPBG+ArialMT nfKEFPBG+ArialMT*1 [10.5 0 0 -10.5 0 0 ]msf180.558 124.483 mo(shoddy )[5.23425 5.82224 5.82227 5.82224 5.8779 5.23425 0 ]xsh/KEFPBE+Calibri*1 uf/KEFPBE+Calibri uf/BAJRMX+Calibri uf/KEFPBG+ArialMT*1 uf/KEFPBG+ArialMT uf/ArialMT uf/KEFPBF+Calibri-Identity-H uf/KEFPBF+Calibri /CIDFont ur69.9171 142.483 mo
168.497 142.483 li
168.497 130.483 li
69.9171 130.483 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
1 /0 /CSD get_res sepcs
.801 sep
%ADOBeginSubsetFont: ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3210325d73000000cc000000606376
7420a11cd7eb0000012c000006546670676dcc79599a000007800000066e
676c7966eb59c26b00008fcc00082f5668656164da5fe34f00000df00000
0036686865611233162000000e2800000024686d747855dffbd600000e4c
0000355c6c6f6361371ea98c000043a8000035606d61787012b205df0000
7908000000206e616d650528ebc00000792800000ae47072657025d64dbf
0000840c00000bbe67646972000000000000000000000000000303880190
00050008059a05330000011b059a0533000003d1006602120805020b0604
020202020204e0002affc00078430000000900000000544d432000400020
fffc05d3fe510133073e01b2400001ffffff0000042605bb000000200004
05ba001905ba001a05a70019042600180000ffe70000ffe80000ffe7fe69
ffe805ba0019fe69ffe802ea000000b8000000b80000000000a800ad0169
00ad00bf00c201f0001800af00b900b400c800170044009c007c00940087
0006005a00c80089005200520005004400940119ffb4002f00a1000300a1
00cd00170057007e00ba00160118ffe9007f008503d300870085000d0022
00410050006f008d014cff75005c00df04830037004c006e00700180ff58
ff8eff92ffa400a500b903c8fffd000b001a0063006300cdffee05d8ffdc
002d005c0095009900df019209b500400057008000b9039d0072009a035d
0401ff67fffa00030021007700cd0004004d00cd01c0022b004c006500e7
0118017c034305d8ffa3ffb0ffc40003001c005d0068009a00ba01350147
0221055cff4dffcd0016002d00780080009900b200b600b600b800bd00da
010c05f0ffa4fff00019002c0049007f00b400ce01c003fefd81fe3f0000
00050018002900390049006f00be00c700d0012301c1026f050c05320540
057affd4001400310055005700a700b400e601f7027e027e027f03c60446
ff42000e0085009100bf00c200c500e1011a012f014f01560229026f029e
03720008002c00310031006400690089009800c700de012b01b6020c02cf
03a304ab04fb061dfee0ff0e00060026009b009d00c1010d011801200173
018201d601e30243025f029b02e2039404a904d20761001c005e006d008d
00ab00f7011201380151015b0168017c01870191019901cd01d001e80241
0254026b02ef0368037103bd044204420453047304830586058b06e8fe58
fec4fed1fef7ff32ff860051007c008100910095009e00b400b900cf00d9
00d900df00e20105010b010e010e012001210155017b017b017e018d01a2
01a801a901b401d001d001e201e901f201f501fb020002000206021b0221
022202220223027202770294029c02cf02cf02d002ec02f903170322032b
0335033c0359036f037103870390039003b503e1041a04cf04ff05320532
0596059f05a805ab05c205f0060c0782080008ccfca3fd2afddefe00fe88
fe96feb2feb4ffe100150019001a001c001f003c005100610061006a0078
009600a500af00d3010c0118011a012a013e014c0151015f016a01710178
01820184019a01a501a801a901ae01bc01cd01d701ef0200020d021c0221
0222022e02350242024f024f025e026502710290029202b402d602fa0307
030b030f0315032a0347035d036503740379039603b003cc03dd03e203f6
03fc03fc03ff040a041f04220426042b0447045f0475049e04e704e7055c
05cb05e5060a066d068606b806f10736073e07500751075d078f07b607d4
086000b600c300b500b700000000000000000000000001e00381034503b5
008e0233041902ce02ce002d005f0064034d023f000002a80188027d01b4
02240578063b023b014e00f00426029402c6029f02f6023b034d014b0153
006a0231000000000000061404aa0000003c04c300ed04bc026502ce03b5
0078060c017e02ef060c00b201000239000001c50330042b03cb00da03df
010704a100db040a011701ed02a70350010b01bd043e05580021039c00ae
0371017d00b5024500000afb088c012b014e01aa00870054013201f803ff
0003024e00b4003703e30083006b02d800ed00770088009701640467008e
0033017c00e700a6029e0329056e062a061501c90269048a021301b40002
04a9000002390124010305140084015d039a06ef02d9007500cf040a00de
03ac04bc02cf02ae034d04f005520168006d007d00860071ff8100790558
04d2016700030156002504e00094007c033204210094007f0072005c002f
00b6001800ba00b80041034d00720018001f004c016a01550099009a009a
009800b200040078006900140057006e00ce00b4065402b80067050e0165
00e7000004cbfe52005affa60099ff67006eff92002dffd40087ff7c00b8
00a800e5008f00a80185fe7b0070001e00d900de014c054602cf0546ff2d
028a02d90253029600b700000000000000000000000000000125011800ea
00ea00ae0000003e05bb008a04d70053003fff8cffd50015002800220099
0062004a00e4006d00ee00e5004803c00033fe4e02b1ff460370007905df
0051ffa7ff1f010a0068ff6c004f00bc00a507050061072b00ed04b001d2
00b6007b00650252ff740365fe690094008f005c00400086007500890089
4043555441403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b01723
70b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b00325
456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c
2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b1
2cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb01723
44b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb01723
44b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb01723
44b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c48
2d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a
23444565234520b00325606a20b009234223688a6a606120b01a8ab00052
7921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a
5279b31940201945208a54582321b03f1b235961442d2cb110114323430b
2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2c
b10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c4bb06451584569b00943608a103a1b21
2121592d2c01b005251023208af500b0016023edec2d2c01b00525102320
8af500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c
003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006
430b2d2c3eb02a2a2d2c352d2c76b8022323701020b802234520b0005058
b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423
648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb815
55621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb400
0100000015b00826b00826b00826b008260f10161345683ab001162d2cb4
000100000015b00826b00826b00826b008260f1016134568653ab001162d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb01343
58031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b212159
2d2cb012435c580cb00425b00425060c6423646164b807085158b00425b0
0425012046b01060482046b0106048590a21211b2121592d2cb012435c58
0cb00425b00425060c6423646164b807085158b00425b00425012046b8ff
f060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b
1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012
435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c
5a58381b2121592d2c4b5258b00425b0042549b00425b00425496120b000
5458212043b0005558b00325b00325b8ffc038b8ffc038591bb040545820
43b0005458b00225b8ffc038591b2043b0005458b00325b00325b8ffc038
b8ffc0381bb00325b8ffc03859595959212121212d2c462346608a8a4623
20468a608a61b8ff8062232010238ab902c202c28a70456020b0005058b0
0161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b140
0188535a58b910000020885458b202010243604259b12401885158b92000
0040885458b2020202436042b12401885458b2022002436042004b014b52
58b2020802436042591bb940000080885458b202040243604259b9400000
8063b80100885458b202080243604259b94000010063b80200885458b202
100243604259b94000020063b80400885458b20240024360425959595959
2d2cb0024354584b53234b515a58381b2121591b21212121592d00000001
000000050f5c93baa7385f0f3cf5081b080000000000a2e3272a00000000
c59b6257faaffd671000080c00000009000100010000000000010000073e
fe4e00431000faaffa7a1000000100000000000000000000000000000d57
06000100000000000239000002390000023900b002d7005e047300150473
0049071d0077055600580187005a02aa007c02aa007c031d004004ac0072
023900aa02aa0041023900ba0239000004730055047300df0473003c0473
00560473001a047300550473004d047300610473005304730055023900b9
023900aa04ac007004ac007204ac00700473005a081f006f0556fffd0556
009605c7006605c7009e055600a204e300a80639006d05c700a4023900bf
04000037055600960473009606aa009805c7009c063900630556009e0639
005805c700a10556005c04e3003005c700a105560009078d001905560009
0556000604e300290239008b023900000239002703c100360473ffe102aa
00590473004a0473008604000050047300460473004b0239001304730042
0473008701c7008801c7ffa20400008801c7008306aa0087047300870473
0044047300870473004802aa00850400003f02390024047300830400001a
05c700060400000f040000210400002802ac0039021400bc02ac002f04ac
00570556fffd0556fffd05c70068055600a205c7009c0639006305c700a1
0473004a0473004a0473004a0473004a0473004a0473004a040000500473
004b0473004b0473004b0473004b023900bd023900230239ffe502390009
047300870473004404730044047300440473004404730044047300830473
0083047300830473008304730049033300800473006b0473001b04730051
02cd006d044c000104e3009905e5000305e50003080000e102aa00de02aa
003d0464004e080000010639005305b4009a0464004e0464004d0464004d
0473fffd049c00a003f4003805b4007a069600a1046400000231000002f6
002f02ec002d0625007f071d004404e3008104e3009e02aa00e804ac0072
046400540473002e0464003304e5001a047300860473008c080000ef0556
fffd0556fffd0639006308000081078d00520473fffc0800000002aa0053
02aa004701c7008001c7006c0464004e03f4002f04000021055600060156
fe390473ffe402aa005c02aa005c040000170400001704730049023900b9
01c7006c02aa0047080000250556fffd055600a20556fffd055600a20556
00a20239008d0239ffe00239000402390015063900630639006306390063
05c700a105c700a105c700a1023900c602aa001902aa000602aa001d02aa
002e02aa00e502aa00a202aa006b02aa003a02aa004b02aa002804730000
01c700030556005c0400003f04e3002904000028021400bc05c7fffd0473
004905560006040000210556009e0473008704ac007204ac00a102aa006b
02aa001902aa002106ac006b06ac006b06ac0021047300000639006d0473
0042023900b10556005c0400003f05c700660400005005c7006604000050
04730046046bffe102aa00ee0556fffd0473004a0556fffd0473004a05c7
009e04eb004705c7fffd055600a20473004b055600a20473004b04730096
01c7004204730096025500880473009a02ac008305c7009c0473008705c7
009c04730087063900630473004405c700a102aa008505c700a102aa003c
0556005c0400003f04e300300239002404e300300300002305c700a10473
008305c700a10473008304e300290400002804e3002904000028046800a4
063900600662005504a00048047400480391006204f000440329002e0530
0048046bffe1040000b002eb005208c000330800004f040000990800004f
040000990800004f040000980400009807d5016a05c0009e04ab007204d5
009d04ac007104d5022204d5010505abffe9050001c905ab027e05abffe9
05ab027e05abffe905ab027e05abffe905abffe905abffe905abffe905ab
ffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe905abffe9
05ab027e05ab01c005ab01c005abffe905abffe905abffe905ab027e05ab
01c005ab01c005abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905ab02d605ab006605abffea05d5ffff04d50092
0800000007eb013007eb012007eb013007eb012004d500b204d5008004d5
002a082b0198086b01b807550010060000f40600006f0440003a05400037
04c0003f04150040040000250600005505e100bf038d008904d5ffd90180
008002d50086071500610296000f04d5009202d6008302d6008304d500b2
02d600700556fffd0473004a05c700660400005005c70066040000500556
00a20473004b055600a20473004b055600a20473004b0639006d04730042
0639006d047300420639006d0473004205c700a40473008705c7001f0473
00060239ffce0239ffce0239ffe40239ffe40239fff60239fff50239004b
01c700190400003701c7ffa20556009604000088040000860473009601c7
fffa05c7009c0473008705c900a50473008b063900630473004406390063
0473004405c700a102aa006b0556005c0400003f04e300300239000c05c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
078d001905c70006055600060400002101c700890556fffd0473004a0800
0001071d00440639005304e30081023900b9078d001905c70006078d0019
05c70006078d001905c70006055600060400002101c7008a02aaffe10473
001b04cd005a06ac006b06ac002206ac002206ac004a02aa00e202aa006b
02aa00de02aaffea0557ffff0646ffa706b4ffa80312ffa80632ffa706d8
ffa70605ffa701c7ff780556fffd055600960558fffe055600a204e30029
05c700a4023900bf055600960558000b06aa009805c7009c0533006d0639
006305c700a40556009e04f2009404e30030055600060556000906af007f
05fb0061023900040556000604a00048039100620473008b01c7006b0460
0088049a008c04000019038700480473008b0473005c01c7008904000086
04000018049c00a00400001a0395005c04730044048d008303db00560460
00880433001105b4007a063f005701c7ffc9046000880473004804600088
063f0057055700a206eb0032045500a105c000640556005c023900bf0239
0004040000370875000d081500a406d5003104a900a10515000a05c000a0
0556fffd054000a705560096045500a1056b0000055600a20763000704d5
004e05c000a105c000a104a900a10540001206aa009805c700a406390063
05c000a00556009e05c7006604e300300515000a061500520556000905eb
009f05550057075500a1078000a106550000071500a8054000a505c00055
081500a405c7001a0473004a0495005b0440008802eb008804ab00000473
004b055afffb03ab003204780087047800870380008604ab00180580008c
046b00880473004404550088047300870400005003aa0026040000210695
004b0400000f0495008a042b0045066b008d0695008d0500002805c0008b
042b008404150030060000890455001f0473004b0473000002eb00890415
004b0400003f01c700880239000901c7ffa2074000130680008304730000
0380008604000021046b008803e900a1034a008808000041089500a00585
002d000001010000001e0000003100000031000001010000007e0000007e
0000008c0000008c000001010000001000000101000001210310007d0000
008c023300d20000030b0000ff04023900b9048100690456003203310019
0411002d04d1009601f9009b030f005f04ca009b04b8008c01f9009b0413
002803b0005003b4003c04ca009b04cf005001f9009b02d2003c0498005a
043c00190488006e045f007303b1001903d4000a0466009604130028058e
00640524002803f2009b03f2009b03f2009b01e3005a0356005a0686009b
01f9ffac041300280413002803b4ff5703b4ff570448002d058e0064058e
0064058e0064058e00640481006904810069048100690456003203310019
0411002d04d10096024b0000034a000004b8008c024b00000413002803b0
005003b4003c04cf005002d2003c0498005a0488006e045f007303d4000a
0466009604130028058e00640524002801f9009b0456003203b00050045f
0073049b003c0000ffdc0000ff250000ffdc0000fe51028d00ab028d00a0
02da0043034d007901a8ffba000000460000004600000046000000460000
00480000004600000046000000460435017c0435012e043500b704350081
0435012c043500be043500af043500810435009a043500db04350085028d
00c1043500b3060001000600010002420036060001000435009e04350098
043500cb0600010006000100060001000600010006000100000000460600
010006000100060001000600010006000100060001000600010006000100
051bffba06000100060001000600010005b5003a05b5003a01f4ffba01f4
ffba060001000600010006000100060001000481003604350036043dffba
043dffba03e9004a03e9004a067f0014077600140327ffba041effba067f
0014077600140327ffba041effba051b003204b500240300fff706000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010000000030
0000004600000046000000400000004606000100060001000000ffdc0000
fe510000ff160000ff160000ff160000ff160000ff160000ff160000ff16
0000ff160000ff160000ffdc0000ff160000ffdc0000ff200000ffdc0473
004a08000000060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010006000100060001000600010006000100028d
007f028d005d0600010004ee0015034d007901a8000e01d6ffdc01a80056
01d60010037500320375003201a8002d01d60013051b003204b5002401f4
ffba01f4ffba01a8009301d6001305b5003a05b5003a01f4ffba01f4ffba
024200000300fff705b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba02b3
005f02b3005f02b3005f02b3005f03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0692003e0692003e043fffba043f
ffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5ffba
06c5ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7
ffba04a7ffba045a002a039a00360435ffba0327ffba045a002a039a0036
0435ffba0327ffba064f0027064f00270224ffba021affba04a7004604a7
00460224ffba021affba04cf002d04cf002d0327ffba0327ffba040d0047
040d004701a8ffba01a8ffba02b4002302b400230327ffba0327ffba0435
00450435004501f4ffba01f4ffba024200360300fff7039affba0327ffba
0375003203750032051b003204b50024051b003204b5002401f4ffba01f4
ffba045a004004ce0049045a002604ce0039045a005304ce004a045a0053
04ce004a0600010006000100000000460000004606000100060001000600
010000000046000000460600010006000100000000480000004606000100
060001000600010000000046000000460000004600000046000000400000
003006000100000000460000004606000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100028d00ca028d00c7028d
00c606000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000100ffba0800ffba1000ffba06dc0063053f004406d5
00a1055b00830000fddc0000fc2f0000fca60000fe540000fcd70000fd73
0000fe290000fe0d0000fd110000fc670000fd9d0000fbf50000fc720000
fed50000fed50000ff02041b00a006ac006b06ac00190000feb60000fd73
0000fe080000fca60000fe530000fd110000fbc80000faf40000faaf0000
fc720000fbaa0000fb6a0000fcf10000fc7d0000fbdd0000fcc10000fb98
0000fdea0000fe840000fdc20000fcf10000fd5f0000fe760000febc0000
fceb0000fd6c0000fd580000fc900000fd150000fc2c0000fc130000fc12
0000fb960000fb9601c700880556fffd0473004a0556fffd0473004a0556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a055600a20473004b055600a2
0473004b055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b0239006301c7001f
023900ba01c7007c06390063047300440639006304730044063900630473
004406390063047300440639006304730044063900630473004406390063
0473004406dc0063053f004406dc0063053f004406dc0063053f004406dc
0063053f004406dc0063053f004405c700a10473008305c700a104730083
06d500a1055b008306d500a1055b008306d500a1055b008306d500a1055b
008306d500a1055b00830556000604000021055600060400002105560006
040000210556fffd0473004a0239ffe201c7ffb0063900630473004405c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
05c700a1047300830000fefe0000fefe0000fefe0000fefe0455fffd02eb
000c07630007055afffb04a900a10380008604a900a10380008605c700a4
046b00880473fffd040000140473fffd04000014055600090400000f0555
0057042b0045055500a10473008706050063047300550639006004730044
05b5003a01f4ffba0224ffba021affba04a7004601f4009e01f4001001f4
001b01f4001001f4006b01f4fff90227ffce0000000f0000fff502aa00a4
02aa00a40000000e00000056000000560000ffcf01a8000f01d6ffbf01a8
fff501d6ffcd01a8001d01d6fff501a8009301d600130375003203750032
0375003203750032051b003204b5002405b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba0481003604350036043dffba043dffba048100360435
0036043dffba043dffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba02b3003202b3003202b3005f02b3005f
02b3005f02b3005f02b3003202b3003202b3005f02b3005f02b3005f02b3
005f02b3005f02b3005f02b3003802b3003802b3004902b3004903e9004a
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba045a
002a039a00360435ffba0327ffba064f0027064f0027064f00270224ffba
021affba064f0027064f00270224ffba021affba064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba04a7004604a7004604a7004604a70046093e0032093e
00320740ffba0740ffba067f0014077600140327ffba041effba04cf002d
04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba04cf
002d04cf002d0327ffba0327ffba067f0014077600140327ffba041effba
067f0014077600140327ffba041effba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba040d0047040d004701a8ffba01a8ffba040d0047040d004701a8
ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba043500450435004501f4ffba01f4ffba043500450435
00450435004504350045043500450435004501f4ffba01f4ffba04350045
043500450481003604350036043dffba043dffba024200360300fff7031a
001a031a001a031a001a0375003203750032037500320375003203750032
037500320375003203750032037500320375003203750032037500320375
0032037500320375003203750032051bffba04b5ffba051b003204b50024
01f4ffba01f4ffba0375003203750032051b003204b5002401f4ffba01f4
ffba051b003204b50024067f0045067f0045067f0045067f004501a80028
0000fe290000fea20000ff300000ff1d0000ff120000ff920000fe7e08fc
003208ad00320000ffb50000ffb60000feed0000ff640000fe7e0000ff9f
018d000002f6fffd0000fe820000ff1004cd00320000ff580000ff580000
ff640692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba045a002a039a00360435ffba0327ffba034d007902b400230242
003601f4ffba0290ffba01f4002f01f4003b01f4001201f400b101f4006d
067f00140776001401f9009b0000fed902bc000003f2009b045afff504ce
fff5045a005304ce004a045a005304ce004a045a005304ce004a045a0053
04ce004a045a005304ce004a045a005304ce004a04350071043500ad045a
000f04ce000f0473001406110014054000a7047300860540000a0473000a
05c7005105c700660400005005c7fffd067a00140540004a047300460474
00480556006e04d5005304e3ffc40639006d04fe000f070c008701c70083
0239001f055600960400008801c7001504000018072000a405c7ffb80473
008b0639006006f200630557004406090014047300860556009e0556006b
0400004f04f20094030b00440239002404e300140239002404e3003005fb
006105c700a1062e00100400002104e300290400002804e3002904e30031
045c0044045c003f0473003c0473005503ab003203e50024047300870214
00bc034e00bc04ac0072023900b00aaa009e09c7009e08640046087f0096
06aa0096039c008309c7009c078e009c062b0087047300550556fffd0473
004a0000fefe0556fffd0473004a08000001071d00440639006d0473001a
0639006d0473004205560096040000880639006304730044063900630473
004404e30029045c004c01c7ffa20aaa009e09c7009e086400460639006d
04730042084600a404f2009e05c7009c047300870556fffd0473004a0556
fffd0473004a055600a20473004b055600a20473004b0239ff8a0239ff64
023900040239fff60639006304730044063900630473004405c700a102aa
ffcc05c700a102aa006805c700a10473007605c700a1047300830556005c
0400003f04e3003002390024045c0051037e001305c700a40473008705a6
00a404d6005e0486005e04e30029040000280556fffd0473004a055600a2
0473004b06390063047300440000fefd0639006304730044063900630473
004406390063047300440556000604000021047300570473004804730086
04730086040000130400005004730046047300460473005505e9005503ab
004903ab0032050d0032040f00440239ffb9047300420473004204780050
0402001904ef00190473008b047300870473008701c7001901c7005702d9
0044029e0000026e001401c700830493008306aa008406aa008406aa0087
0473ffa60473008b046c00870473004406530044063f00570466004402aa
ffe402aaffe402aaffe402aa008502aa008502aa008502aaffe40455008a
0455008a0400003f01c7ffa20214ffb901c7ff7202cb00000239000f0239
002404730019048c0054046000880400001a05c700060400001804280019
0400002804540028045c004c045c00790400002404000050040000240400
00500639006304400088040f004904780050046b0088032e000004000008
033b008804730048040000240400005007b7004607400046080b004605b3
0024036f002405c00024061c0013054a0083050f008303e2001e04380063
03110064031100640146ffce01eb006401eb000001eb000002ea006403d9
0000029100000187005a02d7005e01c7008001c7006c01c7008a02aa00fb
02aa00fb02ca003202ca003204ac007004ac007004ac006504ac006502aa
012102aa00de02aa005902aa012102aa001d02aa005902aa00de023900b6
023900b602aa00fb02aa00fb02aa00a602aa00a602aa00a602aa001d02aa
ffe202aafffb029400000142006402b8003202a0000002ca003203100096
0310009603100096031000960310009602aa006202aa006202aa002802aa
001d02aa0047045700960457009604570096045700960457004304570043
045700430457004304570043031000430457002f0457002f0457002f0457
002f0457002f0310002f0457002504570025045700250457002504570025
0310002f0457001a0457001a0457001a0457001a0457001a0310001a0457
004204570042045700420457004204570042031000420457009604570096
045700960457009604570042045700420457004204570042045700420310
00420457002f0457002f0457002f0457002f0457002f0310002f0457002f
0457002f0457002f0457002f0457002f0310002f04570026045700260457
002604570026045700260310002604570042045700420457004204570042
045700420310004204570096045700960457009604570096045700420457
004204570042045700420457004203100042045700260457002604570026
045700260457002603100026045700230457002304570023045700230457
0023031000230457002f0457002f0457002f0457002f0457002f0310002f
0457004b0457004b0457004b0457004b0457004b0310004b045700960457
009604570096045700960457004204570042045700420457004204570042
031000420457001a0457001a0457001a0457001a0457001a0310001a0457
002404570024045700240457002404570024031000240457002f0457002f
0457002f0457002f0457002f0310002f0457004e0457004e0457004e0457
004e0457004e0310004e045700960457009604570096045700960000fec1
0000fec60000fdac0000fed80000ff920000fee90000ff4c0000fea00000
fec40000ffce0000ff660000fea00000fed80000fed80000ff970000ff98
0000ff990000fff40000ff420000ff420000ff440000ff5f0000fe870000
ffec0000ffa60000ff510000ff510000ff510000fec90000ff1c00000000
0000fee90000ff4c0000ff930000ff2a0000ff560000ffce0000fe870000
febb0000fec40000fec40000fed80000fed80000feb30000fec90000fdad
0000fec80000feb30000fec90000fdad0000fe160000fee60000ffa60000
fe870000ff440000feba0000ff230000ff9a0000fdac0000fe8800000000
0000feb00000ff980000fe930000ffa60000fe870000fe1c0000ff660000
ff440000feb00000feb00000feb00000ff030000ff520000fd1f0000ff53
0000ff530000ff530000feb50000feb50000ffc30000feae0000fedc0000
fec70000fec80000fedc0000fe1e0000ff420000ff510000feb70000feb0
02aa00de02aa005902aa00fa049a007004600000062e001407aa0000062e
0014047b004c063f005704cf0044063900630473004405c7007004000050
04e300a8033b008804ff0000043c0032060d000a049d0042072000a406aa
0084056500630473008b056400a40400000a0556006b0556006b04e00005
04c5001905e5005f046e004403b600140347002804cf00440495005b0400
005001c7ffa2063900600389004d03890050055600a205c000a10473004b
047800870ab4006d04fe00100639001404e70014079900bf05b500880558
000104000006072e00bf0590008806a10078057b007a086d00bf06f00088
04d5006603ab001f065f0039058200480639006004730044066d0009050c
001a066d0009050c001a08980063072c004406aa002004e6001c0987006d
06d000500000fe370ab4006d04fe001005c7006604000050040700140000
fea60000febc0000ff980000ff980000fc2b0000fc4c05c000a104780087
05400004042b00140556009e04730087055d00a40464008804d5004e03ab
003204a900040380000005ef002904490028070900a4052f0088091800a0
06f600880606003e042b002305c700660400005004e3003003aa00260767
00310587002605550057042b004506e4000a0554000a06e4000a0554000a
023900bf07630007055afffb055700a1046800860540001204ab001805c7
00a4046b008805c700a4046b008805550057042b004506aa00980580008c
02aa002e0556fffd0473004a0556fffd0473004a08000001071d00440556
00a20473004b060500630473005507630007055afffb04d5004e03ab0032
04d5004e045c004c05c000a10478008705c000a104780087063900630473
0044063900600473004405c0004a0415002b0515000a040000210515000a
040000210515000a0400002105550057042b0045071500a805c0008b0540
004a0473004607bf004a0703004607a6006606860053054d006604130053
07c3001207470018084600a4070700880639006d0478005005f900300553
00260000ff430000fec90000ff770000ffb00000ff470000ff560000ff74
0000fed70000feac000000000000ff520000ff56000000000000feac0000
fd9a000000000000ff6a0000ff7c0000ff690000ff560000feac0000ff7f
0000ff560000fdef0000ff430000ff690000ff7c000000000000fdae0000
ff8c000001020000fefe0000fefe0000fedf0000fedf0000ff580000ff20
0000fefe0556fffd0473004a055600960473008605560096047300860556
00960473008605c700660400005005c7009e0473004605c7009e04730046
05c7009e0473004605c7009e0473004605c7009e04730046055600a20473
004b055600a20473004b055600a20473004b055600a20473004b055600a2
0473004b04e300a8023900130639006d0473004205c700a40473008705c7
00a40473008705c700a40473008705c700930473006805c700a404730087
0239ffdf01c7ff9202390020023900060556009604000088055600960400
008805560096040000880473009601c7007e0473009601c7ffb904730096
01c7ffa50473009601c7ffa306aa009806aa008706aa009806aa008706aa
009806aa008705c7009c0473008705c7009c0473008705c7009c04730087
05c7009c0473008706390063047300440639006304730044063900630473
004406390063047300440556009e047300870556009e0473008705c700a1
02aa008505c700a102aa008505c700a102aa005e05c700a102aa00260556
005c0400003f0556005c0400003f0556005c0400003f0556005c0400003f
0556005c0400003f04e300300239002404e300300239002404e300300239
ffff04e300300239000e05c700a10473008305c700a10473008305c700a1
0473008305c700a10473008305c700a104730083055600090400001a0556
00090400001a078d001905c70006078d001905c70006055600090400000f
055600090400000f055600060400002104e300290400002804e300290400
002804e3002904000028047300870239000305c70006040000210473004a
01c7008904a0004804a0004804a0004804a0004804a0004804a0004804a0
004804a000480556fffd0556fffd06820013068200130682001306820013
068200560682005603910062039100620391006203910062039100620391
0062061e0000061e0000076c0000076c0000076c0000076c00000473008b
0473008b0473008b0473008b0473008b0473008b0473008b0473008b068f
0000068f0000081f0000081f0000081f0000081f0000081ffff3081ffff3
01c7008101c7008101c7ff9b01c7ff9b01c7ffeb01c7ffeb01c7ffa201c7
ffa20301000003010000049100000491000004910000049100000491fff3
0491fff3047300440473004404730044047300440473004404730044069d
0000069d0000082d0000082d000007c9000007c900000460008804600088
0460008804600088046000880460008804600088046000880682000007ae
00000812000007ae0006063f0057063f0057063f0057063f0057063f0057
063f0057063f0057063f0057065f0000065f000007ef000007ef0000078b
0000078b0000078bffff078bffff04a0004804a000480391006203910062
0473008b0473008b01c7ffe601c700680473004404730044046000880460
0088063f0057063f005704a0004804a0004804a0004804a0004804a00048
04a0004804a0004804a000480556fffd0556fffd06820013068200130682
00130682001306820056068200560473008b0473008b0473008b0473008b
0473008b0473008b0473008b0473008b068f0000068f0000081f0000081f
0000081f0000081f0000081ffff3081ffff3063f0057063f0057063f0057
063f0057063f0057063f0057063f0057063f0057065f0000065f000007ef
000007ef0000078b0000078b0000078bffff078bffff04a0004804a00048
04a0004804a0004804a0004804a0004804a000480556fffd0556fffd0556
fffd0556fffd0556fffd02aa00e502aa00fd02aa00e502aa000602aa0006
0473008b0473008b0473008b0473008b0473008b068200000682000006f3
000006f3000005c700a402aa001302aa001302aa000601c7ffbb01c7ffab
01c7ffca01c7ffca01c7ff9301c7ff930239001a0239fff5036500000365
000002aa001302aa001302aa000604600088046000880460008804600088
048d0083048d00830460008804600088055600060556000606e600000718
0000061e000002aaffea02aaffea02aa0059063f0057063f0057063f0057
063f0057063f005707650000069d000007270000065f000005fb006102aa
00de02aa00e50473000d05c7006605c7006606aa008705c70024095000a1
078d00190556001f04e30030080000290400003004c100660000ff530000
ff530000ff530000ff5301c7001901c7ffa2042b00050556001105740046
02cbffa3057a008702f0ffc8057f000a057f000a02aa008402aa008402aa
00c902aa00c902aa00a002aa005902aaffaf02aa003a02aa0006023900b9
02aa00a902aa00a902aa00a902aa00a9032e001e032e001e02aa003a0000
ff730000ffa50000fed80000ff230000ff720000ff720000fee70000ffa5
0000ff530000ff530000ff530556009e0473008703f8001905fb0019071d
00440440001904000050046900870469001903eb008703ab003201c70088
0361004104000088033600100580008c04780087047300440400001304de
004404de004404de000d078d005003a800440473004404730044042b0084
0455001f0455001f03aa00260460008804c6004405de004404c600440400
001a05c700060400002803ab0032036b003f04db001f02eb00880400001a
04550088042b008405b4007a04ab001803a00000054f0000035100320351
ffd103980032034800320348003203f80032036e0032015600690284002d
0366003202d000320415003203710032036f003204180032030f00320359
0032039c003203760031036f003204fb000002fa003202fa003203040032
04cc0032030500640305003202f9003202f90032028c0032028c00320304
00320142006402b6006404950064030f00640305003202d5003203050032
030500320306006401c20032030f00640342003204950064029200000320
00000315006402920000030600320385003202bf00000142006401eb0064
030f0064029200000315006402920000030900320385003202bf000005ed
00460a660046061300460689ffba0541ffba01e9003c045a00110000ff0d
0000ff350000fece0000feb70000fec90000ffcf0000ff4f0000ff9e0000
feca02b3005f02b3005f03e9004a03e9004a039affba0327ffba039affba
0327ffba05ad0069053d002d05fd009604dc005004e0003c05f6009b053f
00280650002804ac00720000fe3b0000fe660000fe660473fffc02aa0053
02d5ffce01a8ffba01a8ffba01a8ffba01a8ffba0658001509c500470400
000008000000040000000800000002ab0000020000000155000004730000
02390000019a000000ab00000000000005e5000305c7006606aa00980580
008c0744008307180046071800480556fffd05c70066040000140473000a
04e300300400004f0400002804a5001d000001020000ff420000febf0000
ff3a0000ff53048d000a05c7005105c7006605c70051045500a102eb0088
0000ff430000ff040000ffac02d200960000ff37021affba0250001e0000
ff3a0000ff5b0000ff5f0000ff7e0000ff940000ff4a0000fe9c05b5003a
05b5003a01f4ff9601f4ff9605b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba0481003604350036043dffba
043dffba0481003604350036043dffba043dffba02b3003202b3003202b3
005f02b3005f03e9004a03e9004a0692003e0692003e043fffba043fffba
045a002a039a00360435ffba0327ffba045a002a039a00360435ffba0327
ffba045a002a039a00360435ffba0327ffba064f0027064f00270224ffba
021affba064f0027064f00270224ffba021affba067f0014077600140327
ffba041effba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba02b4002302b400230327ffba0327ffba02b4002302b4
00230327ffba0327ffba043500450435004501f4ffba01f4ffba04350045
0435004501f4ffba01f4ffba043500450435004501f4ffba01f4ffba040d
0047040d004701a8ffba01a8ffba03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0473ff93047300460239ffbf06aa
ffd50473ffb70473ff9102aaffa402aaffa40400ffff0239ffb904000028
04730089030b0064047400480649002401c7001901c700190473001e0460
001e048c000a04730086047300460239001305b400420400008801c7fffc
06aa00870473008b0473008702aafffb0400003f0318ffa20400001a0400
000f040000280473004a04730048047300460473004b03ab004903ab0032
0534005501c700880400001301c7ffa204730083045c004c0304006402d5
003202c9003302fc0032028c003201d5003201d500000304003203110064
01420019014200640142006401420019022a000001420064014200090233
00640493006404930064030fffc9030f0064030e00640305003203000032
02b800320142ffca01c20032030f001d031a00320306006402d400640292
000002de003202de003202de003202f4003202ea00320000febc0000febc
0000ff730000fea9023900b902fa003202f900320305003202a0000002f9
00320639006d0556fffd0473000f05c7006602aa004104a0004804a00048
04a0004804a0004804a0004804a0004804a0004804a0004801c7ff9b01c7
ffab01c7ff9b01c7ffab01c7ff9b01c7ffbb01c7ff9b01c7ffbb04600088
0460008804600088046000880460008804600088046000880460008801c7
ffab01c7ffab01c7ffbb01c7ffbb04600088046000880460008804600088
045a005304ce004a03a000130556001105c700290558000b055600a20473
004b0400003301c7ffa205e600630473004805c7000002aa000f05560006
0400002104000013040000500400001301c700830455fffd02eb00010556
00090400000f055600090400000f04d5005303ab00490540001204ab0018
0000fec60000fed40000fec60000fed40000fe5f0000fe5f0000ff720000
ff730000fee7078b000a03eb004c040000130473000a01c700150473fff4
0556001105c700a1047300190239ff8b05c700a404730087055600960400
008804e30029040000280400003b049e00a403670088053000480000ff53
0000ffbc0000fefe0000fefe0000fea40000fea401c7008805c900a505c7
009c05c900a50000fecd0000ff480000fec90000fece0000fec50000fed0
0000fed10000feee0000fed60000fedc0000fdd90639005804730048078d
001905c70006059f00a40000feb905dc006304c60009084c001906ba0006
023900b9038000720187005a0187005a0400009904000099023900b00239
00b0023900b002aa0019000000000000002a0000002a0000002a0000002a
000000d60000017e00000320000005a60000074e000009380000097e0000
09fe00000aa400000b8400000bec00000c6400000caa00000ce600000d56
00000f1200000fee00001218000013f2000015520000170c000018e20000
198e00001c2200001e5600001eb200001f7000001ff200002062000020e8
000021da000023da000025840000271c000028560000299e00002a620000
2b1800002ca800002dae00002e9200002f7a000031b00000323a00003564
0000370e000038420000394800003b3c00003da800004052000041000000
422400004398000045d6000048e200004a8800004bc800004c3200004c9c
00004d0000004d8800004dbc00004e380000510a000052e80000549c0000
56500000580e0000596200005b5200005cf600005dea00005f020000619a
00006296000064c60000668c0000684e00006a1200006ba800006cae0000
70560000717a0000731800007536000079a000007bc400007e1c00008004
000081020000814e00008250000082f00000833c00008370000083ac0000
83ee000084540000849a000084ce000085040000853a0000858a000085cc
0000861e00008656000086a8000086de0000871e000087600000879e0000
87e800008828000088560000888e000088de00008914000089540000898e
000089d200008a1c00008a5800008a8800008acc00008b0400008b940000
8c1a00008e2800008fbc0000916c000091b80000924c00009470000096c4
000098b4000099a000009a2200009a8c00009baa00009d0600009f4e0000
a0b00000a13e0000a1e80000a2ac0000a3f40000a59e0000a68c0000a752
0000a7b60000a8240000a94e0000aa720000ab020000ace40000af3e0000
b2900000b3860000b42c0000b47c0000b5320000b6520000b7f00000b88a
0000b94e0000ba0e0000ba760000bab20000bb0a0000bb580000bd700000
bfb60000bfee0000c0200000c14a0000c2760000c3240000c3c80000c46a
0000c53c0000c5900000c5c60000c61e0000c7700000c7e20000c83c0000
c9b40000cb200000cc000000cc320000ccce0000cdf20000d0680000d0a2
0000d0e60000d1220000d1840000d1c60000d20c0000d2580000d28a0000
d2de0000d31c0000d34c0000d38a0000d3d00000d4120000d4500000d4d2
0000d5400000d6260000d6620000d6e20000d7160000d7b80000d8400000
d8ac0000d90e0000d97a0000da660000db580000db8c0000dbc00000dbf0
0000dc340000dcac0000de260000e0400000e0720000e0ac0000e1a60000
e3340000e36a0000e4ce0000e54a0000e62a0000e7200000e8b00000ea1a
0000ec080000ed040000ed4a0000ed7e0000edc00000edfa0000ee4e0000
ee960000eee00000ef100000ef400000f1280000f1660000f18e0000f1be
0000f1f20000f2180000f23e0000f2860000f43c0000f5b60000f5dc0000
f6020000f6460000f6760000f6a60000f6fc0000f7da0000f8ec0000f930
0000f9680000f9c20000fa000000fa340000fa640000faa00000fae00000
fb1e0000fb5a0000fb9c0000fbd20000fc0e0000fc4e0000fc740000fc98
0000fce80000fe440000fe9a0000fece0000ff1c0000ff680000ffaa0000
ffe20001001800010060000101020001029e00010466000105e8000107da
0001092c00010ab000010b9200010d2c00010d9600010dbe00010e5c0001
10de0001111e0001115e0001119e000111dc0001123a0001129800011306
0001132600011410000114b0000114e6000115340001157e000115c80001
15e40001160000011620000116400001166000011680000116a6000116cc
000116f200011718000117480001177000011798000117c4000117f00001
18240001184e0001187a000118b0000118da000119060001193c00011966
00011990000119c4000119f400011a2800011a6c00011a9c00011ad00001
1b1200011b4600011b7800011bba00011bee00011c1e00011c6000011ca4
00011cea00011d4600011d6200011d7e00011d9a00011db600011dd20001
1f40000121ec0001245c0001247800012492000124ae000124ca000124e6
000125020001255e0001259800012602000126cc0001276c000128420001
28c20001294a000129ba00012a5000012aae00012af400012b5200012bb4
00012c6c00012d2a00012d5600012db200012df600012f62000130560001
30800001309c000130c8000131000001314c0001318c000131c0000131f0
000132200001325000013294000132c4000132f400013334000133640001
3394000133c400013404000134340001346400013494000134ba000136be
000136ee0001371e0001386e00013a2400013a5400013a8200013ab20001
3ae000013b1000013b3e00013b6200013b8600013bb600013d2600013d5e
00013d8e00013f2000013f4e00013f7c00013faa00013fd2000141300001
42c800014300000143400001437c000143ac000143da000143f600014426
0001445600014546000146ae000146de0001471800014758000147880001
47b8000147fa000148200001484600014886000148c6000148f600014936
00014a2000014aa000014b8400014bb400014be400014c1400014c440001
4c8000014cb200014ce400014d1400014d4400014d8a00014dbc00014dec
00014e2200014e9400014ec8000150960001519800015328000155580001
57a80001593a0001599e00015a2800015a3800015ac600015cc400015df0
00015f5c0001604c000161d0000163ea0001661600016708000167180001
6728000168400001685000016860000168700001688000016890000169ae
000169be000169ce00016a4200016a5200016b2200016b3200016c440001
6c5400016c6400016c7400016dd200016fb000016ff2000170280001705e
0001708e000170be000171120001713a000172c40001740c000175600001
76c80001784c000178b000017a4200017b5e00017b6e00017b7e00017d04
00017d1400017e7a00017fd40001810800018266000183d40001859a0001
85da00018612000186480001866e0001869e000186c40001883a0001886a
000189a0000189b0000189c000018a0200018a1200018ba600018d520001
8edc00018f0400018f3400019090000190a0000191d8000191e800019282
000193e2000193f200019658000197e20001994a0001997a00019af00001
9c2200019c3200019c4200019c5200019d2c00019d3c00019d4c00019d5c
00019e5400019fce00019fde0001a1060001a23a0001a38c0001a5200001
a63e0001a7ca0001a8dc0001a9120001ab480001abe80001abf80001ad8e
0001af300001afb40001b1360001b1460001b3ae0001b52e0001b6ae0001
b6de0001b87e0001ba040001bbc80001bcf40001bd040001be340001be44
0001be540001bf140001bf240001c10a0001c11a0001c2500001c35e0001
c50a0001c6c00001c8020001c9720001caba0001cb0c0001ccee0001ce6a
0001cea80001d04e0001d0720001d1b20001d1c20001d1d20001d20a0001
d21a0001d3a60001d50e0001d6820001d6a60001d6d60001d8440001d8f6
0001d9b40001d9e20001db980001dc900001dd1e0001de440001def20001
dfc60001e0100001e0880001e1480001e1700001e1b40001e20a0001e2e6
0001e3300001e3640001e38c0001e3b40001e3e80001e42c0001e4700001
e4ae0001e5ec0001e6a40001e7c40001e83a0001e9080001e95a0001e9ec
0001ea9c0001eb900001ebe40001ec7a0001ed380001ee220001eed40001
eff40001f0460001f0f00001f2260001f2fe0001f3e40001f4ea0001f5d0
0001f6b20001f7a60001f8440001f94a0001fa440001fabc0001fb340001
fbaa0001fbe00001fc3c0001fd040001fd900001fdc80001fe0e0001fe3e
0001fea80001ff680001ff9c0001ffcc0002000000020030000200600002
00900002023000020268000202a8000202e000020318000203b4000204ae
000204de00020582000205b0000205f00002064000020670000206bc0002
0854000209ba00020b1a00020b6000020bb400020bec00020d5e00020d94
00020e2600020e6400020e9200020ed00002100000021028000211640002
11f40002129e00021320000213dc000214f40002160200021636000216bc
000218180002189a000218e4000219ee00021a3600021b3a00021bb60002
1c0e00021c9200021d7c00021e9200021f8e0002203800022128000221fa
000222e4000223cc0002247c000224fe0002275c00022786000227b00002
286800022892000229d400022ada00022bc400022bee00022c1800022c42
00022c6c00022c9600022e1600022e4000022e6a00022e9400022ebe0002
2ee800022f1200022f3c00022f6600022f9a00022fc400022fee00023018
00023192000231a2000232bc000232cc000232f6000233200002334a0002
33740002351e0002373a0002386800023878000239f400023a0400023b4a
00023d1600023e1c00023f9c0002413c00024360000244ba0002469c0002
47e00002490e000249fc00024a2600024a5000024a7a00024aa400024ace
00024af800024b2200024b4c00024b7600024ba000024bca00024bf40002
4c1e00024c4800024c7200024eae0002502a0002516e000253560002549e
000254c8000254f20002552200025552000255a2000255f2000256320002
56a4000256f800025756000257ac000257e2000258240002586a000258b4
000258e40002591c0002594c00025a8400025dca00025df400025e1e0002
5e4800025e7200025e9c00025ec600025ef000025f1a00025f4400025f6e
00025f9800025fc200025fec00026016000260400002606a000260940002
60be000260e8000261120002613c0002616600026190000261ba000261e4
0002620e0002623800026262000263000002631600026340000266200002
66300002674a0002686c000269aa00026aec00026c9200026ca200026de4
00026f3400027124000272f80002741000027420000274a2000275300002
763000027640000276e0000276f0000278060002795800027a8800027a98
00027b6600027b7600027cec00027cfc00027e1000027e2000027f540002
80ea000281a6000281b6000282b40002840e0002849a000284aa000285d4
000287600002881c0002882c000288c8000288d8000289a6000289b60002
8a8e00028a9e00028ba600028bb600028d7c00028d8c00028ee400028ef4
0002915e0002916e0002936800029378000294e2000294f2000295e20002
95f20002978a0002979a000298b8000298c800029a0800029a1800029a28
00029a3800029bb000029bc000029bd000029be000029d3200029e800002
9f4e0002a0320002a1b20002a3340002a4340002a5480002a68c0002a69c
0002a78a0002a8640002aa000002aa100002ab2e0002ac340002ae320002
ae420002ae520002ae620002afac0002afbc0002b0740002b0840002b192
0002b1a20002b28e0002b29e0002b3bc0002b3cc0002b46a0002b47a0002
b48a0002b5780002b6ec0002b8180002b9120002b9220002b9320002b942
0002bae00002bc9a0002bd680002bd780002bfd80002c21e0002c4a40002
c7080002c98c0002cbfe0002cdce0002cf840002cfae0002cfd80002cfe8
0002cff80002d0220002d04c0002d0760002d0860002d0960002d0c00002
d0ea0002d0fa0002d10a0002d1340002d15e0002d1880002d1980002d1a8
0002d1b80002d1c80002d1d80002d1e80002d2120002d2220002d2320002
d25c0002d2860002d2b00002d2da0002d3040002d32e0002d3580002d382
0002d3ac0002d3d60002d4000002d42a0002d4540002d47e0002d4a80002
d4d20002d4fc0002d5260002d5500002d57a0002d5a40002d5ce0002d5f8
0002d6220002d64c0002d6760002d6a00002d6ca0002d6f40002d71e0002
d7480002d7720002d79c0002d7c60002d7f00002d81a0002d8440002d86e
0002d8980002d8c20002d8ec0002d9160002d9400002d96a0002d9940002
d9be0002d9e80002da120002da3c0002da660002da900002daba0002dae4
0002db0e0002dbae0002dbf20002dc680002dc920002dcbc0002dce60002
dd100002dd3a0002dd640002dd8e0002ddb80002dde20002de0c0002de36
0002de600002de8a0002deb40002dede0002df080002df320002df5c0002
df860002dfb00002dfda0002e0040002e02e0002e0580002e08c0002e0c0
0002e0f40002e2860002e4220002e5be0002e74a0002e7900002e7d60002
e8440002e8a00002e8f20002e9620002ea3a0002eb060002ebde0002ecaa
0002ed4a0002ee640002ef180002ef9a0002eff40002f0340002f1520002
f29c0002f4340002f4900002f4ee0002f54a0002f5a60002f65a0002f710
0002f7bc0002f8680002f9140002f9cc0002fa840002fb3c0002fb4e0002
fb600002fb720002fb840002fb960002fc040002fc720002fd2a0002fd3c
0002fd4e0002fd600002fd700002fd820002fd940002fda60002fdb80002
fdca0002fddc0002fe8a0002ff360002ffe4000300900003012800030162
0003018c000301b60003020a0003025c000302d8000303220003039e0003
03f200030476000304c80003053e00030596000305fc00030652000306ac
0003072a00030776000307d40003083800030886000308d40003092c0003
09740003099e000309cc000309f200030a2600030a5600030a8600030ad8
00030b4600030b9c00030c1000030c6400030cd800030d1e00030d860003
0dcc00030e2800030e5800030e9200030eb800030ee800030f0e00030f34
00030f6600030f9600030fe80003104e000310a40003110a0003115e0003
11cc0003120e0003126e000312b0000312fc0003133600031372000313ac
000313e80003141c0003144e0003147e000314ae000314d8000314fe0003
15280003155600031580000315cc000316100003164600031682000316b6
000316e400031722000317520003178c000317b6000317e40003180a0003
18300003185c000318b8000318e8000319180003194800031980000319b4
000319e200031a1200031a4200031a7200031aa200031ad600031b2c0003
1b6000031bc000031bf400031c4c00031c8000031cdc00031d7a00031e48
00031f6800032030000320c000032156000323420003253e000326b60003
2832000329dc00032b8e00032c7600032dac00032ea400032fb6000330d4
0003320a00033374000334e200033678000337f400033904000339140003
3a4000033b7c00033cbe00033e4200033f1c00033f9200034048000340ee
0003425e0003429600034310000343d20003448c000344f4000345fa0003
4730000347fc0003495a000349d400034a4e00034b1a00034bd400034c88
00034ce400034d3e00034d8600034df600034e7200034ebc00034ef60003
4f3c00034f8000034fd200035024000350a6000351280003516a000351aa
000351e0000352160003524400035272000352a6000352da0003531c0003
535e0003539a000353d6000354100003544a0003547c000354ae000354e0
000355120003554c00035586000355c80003560a0003564c0003568e0003
56dc0003572a0003576c000357ae000357ee0003582e00035868000358a2
000358ee0003593a00035978000359b8000359fe00035a4400035a800003
5ad600035b1200035b4e00035b8e00035bce00035c0a00035c4600035c86
00035cc600035d0a00035d4e00035da200035e3000035e7200035eb40003
5f1c00035f8400035fb600035fe80003602000036058000360ee00036184
000361ce000362180003625400036290000362e60003633c000363860003
63d00003642800036480000364c0000365000003653800036570000365ba
000366040003664200036680000366c20003670400036758000367ac0003
67f2000368380003687e000368c40003691a00036970000369c600036a1c
00036a6800036ab400036b0000036b4c00036bc000036c3400036ca80003
6d1c00036d5a00036d9800036dd600036e1400036e5200036e9000036ed4
00036f1800036f6400036fb0000370100003705c0003709a000370e80003
71f80003724800037298000372d0000373080003735e000373b400037428
0003748c000374ce0003751000037566000375b4000376000003764c0003
768c000376cc000377140003775c000377c8000378220003785a00037892
000378d200037912000379e200037ade00037b9e00037c8c00037ce20003
7d3800037d8a00037dde00037e4200037ea600037efc00037f5200037fc8
0003803e00038080000380c2000381040003814600038188000381ca0003
822000038276000382c80003831c000383a400038426000384c600038568
000385a6000385e4000386220003865e0003869c000386da000387180003
8754000388380003892400038a3a00038b5600038c2000038cea00038de4
00038ede00038fdc000390da000391f8000393160003943c000395620003
966400039766000397f80003988a000398c80003990600039960000399ba
000399f200039a2a00039b3a00039b4a00039b9200039bda00039c320003
9c8a00039cbc00039cee00039d3000039d7200039dac00039de600039e2a
00039e6e00039ee600039f6000039ff00003a0340003a0740003a0f60003
a1780003a2d00003a2e00003a32e0003a37c0003a3b80003a3f40003a43a
0003a4800003a4ce0003a51c0003a56c0003a5bc0003a6180003a6740003
a7ea0003a9520003a98a0003a9c40003aa100003aa5c0003aaae0003ab00
0003ab520003aba80003abe40003ac200003ac760003acca0003ae020003
aea20003aef00003af300003af6a0003b1000003b3840003b4480003b5de
0003b73c0003b80a0003b9b00003bc040003be3c0003be820003beb40003
bf5e0003c0820003c0a60003c1400003c24c0003c35c0003c46c0003c57a
0003c7000003c7320003c7d40003c7fc0003c85e0003c8c00003c9220003
c9840003c9c20003ca000003ca3a0003ca740003caa00003caec0003cb26
0003cb600003ccbc0003ce100003ce200003cede0003d0140003d0720003
d18a0003d3180003d3be0003d5040003d5420003d5800003d5be0003d612
0003d63a0003d6940003d6f80003d7400003d7a20003d8020003d8740003
d8f00003d96c0003d9ee0003da7a0003db060003db900003dc100003dc4a
0003dc860003ddea0003deb40003dee40003df140003e04c0003e19c0003
e1ac0003e29a0003e36e0003e4660003e55c0003e6de0003e8380003e848
0003e9600003ea0c0003eb4e0003eca40003ed000003ee5e0003eeec0003
f0920003f2040003f3180003f3500003f3b40003f5640003f6ce0003f730
0003f8980003f99e0003fa540003fb000003fc280003fd160003fdf60003
ff36000400620004017c000402ec0004046600040476000405560004064c
000406fc000407f8000408a4000409ae00040a9a00040b6200040c860004
0d8a00040eb800040ff600041162000412980004142c000415d4000416cc
000417e00004191200041a0400041a3c00041a9200041b4000041b500004
1bb200041c0e00041c7400041cc000041d0000041d3800041d6400041d92
00041dcc00041f0200041f3600041fba00042070000420a0000421240004
21540004218c00042324000424b0000424fa000425340004258a000425d6
000425fc0004262200042664000426a6000426e800042718000427500004
2786000427bc000427fe0004282e0004285e0004295400042a5800042a8c
00042ac400042b0a00042b3e00042b6e00042ba600042bda00042c0e0004
2c3e00042c6e00042ca400042cda00042d0a00042d3a00042d6e00042da2
00042dd200042e0200042e3c00042e7000042ea200042ed400042f080004
2f3c00042f6c00042f9c00042fca00042ff80004310600043272000433a6
000434da0004350a00043544000435de00043748000438a4000439680004
3a7c00043aac00043ae000043bd800043d8800043de000043e5800043f94
00043fd20004404400044074000440a4000440de00044166000441960004
41c600044356000444a0000445ac000446ba000447e60004493c00044a98
00044bf800044d3200044ea40004500400045014000451ca000452f20004
538c000455140004552400045620000457a6000458fe000459b000045a80
00045b8c00045c3600045c8400045cd400045d8400045e2a00045ea60004
5ff6000460ea000461e0000462ec000463c40004649e0004653200046644
000467d4000468f2000469e800046a9200046b3c00046c0600046cae0004
6d8400046e0000046e5e00046fc0000470f4000472900004735200047452
0004752c0004766a00047716000477e0000478d00004799e00047a7a0004
7b8000047cb800047da800047e4600047f38000480a8000481f20004845e
00048530000485e4000486b2000487a6000488e4000488f400048a280004
8b3a00048b4a00048c5600048d8600048dda00048f4e000490760004918a
0004933c00049550000497e40004999e00049aca00049caa00049e6c0004
9ffe0004a0ca0004a2660004a2dc0004a38a0004a4660004a4f20004a594
0004a6360004a71a0004a8520004aaae0004abf60004ac060004ac160004
ac780004acd60004ad380004add60004ae6e0004af720004b0600004b070
0004b0800004b11a0004b1b40004b1f00004b26c0004b2e00004b3360004
b36a0004b3f00004b47c0004b4f40004b5520004b5ec0004b67e0004b6fe
0004b7800004b8140004b8480004b8aa0004b95c0004bb220004bb5a0004
bd360004be4a0004be5a0004be900004bed40004bf180004bf5c0004bf92
0004bfc40004c0060004c0a20004c0f80004c19e0004c2160004c29c0004
c30c0004c36e0004c3f40004c4540004c4be0004c5320004c5a20004c600
0004c6a60004c73e0004c7aa0004c83a0004c8980004c9060004c9ae0004
ca5a0004caf00004cb5a0004cbdc0004cc400004ccec0004cda40004ce50
0004cede0004cf3a0004cfa60004cffc0004d07e0004d0fc0004d1820004
d20e0004d2680004d2d40004d3440004d3b40004d4240004d4a80004d538
0004d59e0004d6180004d6940004d70c0004d7b20004d84e0004d8de0004
d93c0004d9da0004da560004dae80004db8a0004dc340004dccc0004dd28
0004dd7e0004dde60004de8c0004df340004dffe0004e0a40004e1060004
e15e0004e1be0004e24c0004e2d20004e3600004e3c00004e4240004e48e
0004e4f60004e55e0004e5dc0004e6640004e6f80004e7640004e7cc0004
e8300004e8d80004e9920004ea400004eace0004eb2c0004eb980004ec08
0004ecae0004ed580004ee1a0004eebc0004ef200004efb00004f0220004
f0b20004f1300004f1ac0004f2180004f2a60004f3020004f3600004f3e6
0004f4620004f4ca0004f52e0004f5820004f5f00004f6580004f6d60004
f74c0004f7c60004f8460004f8a20004f9080004f96c0004fa0c0004faae
0004fb640004fc140004fc700004fce80004fd460004fdd00004fe680004
fef80004ff5e0004ffbc0005004a000500bc00050150000501e800050258
000502c8000503400005039e000503fe00050478000504d2000505320005
058c000505e800050650000506de000507140005074c000507d800050802
00050844000508d8000509c600050a5600050a8c00050adc00050b4e0005
0bfa00050c8c00050ce400050d3e00050d9600050df000050e7400050efa
00050f9e0005104600051084000510f40005118800051220000512b60005
136000051392000513e2000514360005147c00051520000515aa00051630
00051690000516d400051722000517c200051852000518f2000519980005
1a3e00051b0200051b3400051b5e00051be400051c9400051cc600051cee
00051dbc00051e1a00051eb400051f0200051f68000520100005207e0005
20e400052170000521e2000522580005230c00052366000523d600052412
00052464000524ea0005254a000525ee000526ce000527f6000529860005
29e200052a3800052d5e00052df800052e5400052e9c0005300a0005315c
000531a2000532b000053348000534560005356000053602000536ea0005
377c000538180005390a00053a0a00053a8600053b0c00053b5400053c84
00053dc000053ea400053ef400053f28000540160005413e000542d80005
44080005451e000545e2000546fe0005476c0005480000054940000549f6
00054b6000054c9000054dc200054eee00054f9a00055060000551320005
528c0005540c0005553c00055658000558120005596400055a5000055b2c
00055bee00055d5800055ea800055eb800055ec800055ed800055f900005
604600056082000560b8000560f000056126000562ba000564ce000565b8
000566ce00056846000569b400056a6e00056b3000056c1400056d0c0005
6eaa00056ffe000571ec000573b20005758e000577260005780e000578ea
00057a3200057bb400057c9c00057db600057df800057e4200057fa00005
8116000582880005838000058560000586fc00058780000587b0000587fc
000588c40005899400058b2800058bb000058c1800058c6a00058cbc0005
8e6e0005909e000591d4000593b600059492000595ac0005975800059964
00059a6600059b5200059d4400059f4c0005a0b80005a23c0005a39c0005
a50a0005a5980005a6280005a7420005a84e0005a9f60005ab500005ad40
0005af0a0005af9e0005b03a0005b0d00005b1580005b23e0005b3160005
b4b00005b6420005b7a80005b8cc0005b8dc0005b90c0005b93c0005bab6
0005bc580005bd020005bde40005bea40005bf4e0005bfe80005c0ca0005
c1880005c2640005c41a0005c5540005c5e00005c6100005c6400005c674
0005c6a80005c6b80005c6c80005c6f80005c7280005c75c0005c7900005
c7c40005c7f80005c82c0005c8600005c9da0005c9ea0005ca1a0005ca4a
0005ca820005cab60005caea0005cb1e0005cb520005cb860005cbba0005
cbf20005cc280005cc580005cc980005ccd00005cd180005cd5e0005cd92
0005cdc60005ce000005ce380005ced80005cee80005d03a0005d2020005
d3a80005d5520005d69e0005d7b40005d8c20005d9d80005dad20005dbba
0005dcdc0005ddd80005deb00005dfa00005e05c0005e10e0005e1d80005
e24a0005e2f00005e3800005e3e40005e4f20005e5580005e6060005e6fc
0005e7640005e7cc0005e87c0005ea560005eb5a0005ebda0005ec180005
ecc40005ed520005ee3a0005eed20005ef380005f0360005f0f80005f1b2
0005f1f00005f2800005f3820005f4160005f45a0005f5780005f6a20005
f8840005fa460005fb7c0005fcaa0005fdaa0005fdd20005fdfa0005fe30
0005fe620005fe8e0005feb60005fede0005ff0c0005ff6a0005ffd80006
001000060048000600780006009e000600d2000601080006012e00060154
00060182000601b0000601dc000602520006027a000602dc000603020006
03280006034e00060374000603a4000603d4000604040006043e0006046e
000604a4000604d4000605060006052c0006055200060586000605bc0006
05ec0006061c00060642000606680006068e000606bc000606f000060776
000607ba000607f4000608280006086c000608a6000608e0000609060006
09300006097c000609be000609e400060a1200060a3800060a5e00060a9e
00060ad000060b0000060b3000060b5600060b7c00060bac00060bdc0006
0c0200060c2800060c4e00060c7400060c9a00060cc000060ce800060d70
00060d9a00060e0e00060e3600060eac00060ed400060f3600060f680006
0f9a00060fca0006100200061034000610620006109c000610c400061124
0006116600061196000611c2000611f2000612220006124a000612720006
129a000612fc0006132400061382000613c60006140a0006143a00061470
00061496000614be000614e40006150c000615320006155a000615820006
15ac000615d2000615f80006161e0006165000061678000616fe00061728
00061792000617c2000617f2000618180006183e00061896000618c60006
19020006192c0006195c0006198c000619c0000619f400061a2400061a64
00061a9e00061ae600061b0c00061b3200061b5800061b7e00061ba40006
1be400061c2400061c6000061c9000061cc000061cf000061d2000061d58
00061d9000061dd000061e1000061e4a00061e8400061ec000061efe0006
1f4800061f9200061fd80006201e00062060000620a2000620d200062102
000621360006216a000621a4000621de0006222a00062276000622ce0006
23260006237e000623dc0006240c0006243c00062472000624a8000624de
0006251a0006254e00062582000625d60006262a0006267e000626d20006
27260006277a000627d20006282a0006285800062886000628b8000628ea
0006293000062976000629a8000629da00062a2c00062a8400062ac80006
2b0c00062b5000062b9400062be800062c3c00062c6c00062c9c00062cd2
00062d0800062d4600062d8c00062de000062e2a00062e7c00062ece0006
2f2e00062f8e00062fbe00062ff00006302a00063064000630b60006310a
000631540006319c000631de0006324800063296000632e2000633140006
33460006337a000633ae000633e40006341a000634580006348e000634c0
000634fc00063552000635a80006360600063664000636ba000637100006
374400063774000637b8000637ee0006381e00063862000638a0000638d8
000639100006394600063982000639b2000639ee00063a2e00063a740006
3abe00063b0a00063b5600063bac00063c0200063c5000063c9e00063cec
00063d3c00063d9800063df400063e4c00063ea400063ef800063f4c0006
3f8e00063fd00006401800064060000640a8000640f60006413a0006417e
000641e40006424a000642b0000643160006437c000643e20006444c0006
44b6000644fe000645460006458e000645d6000646220006466e000646c2
0006470e00064752000647a00006480800064870000648e0000649500006
49b800064a2000064a6000064a9e00064ae800064b1200064b5800064b90
00064bde00064c0e00064c3e00064c7a00064cae00064cd400064d280006
4d6600064dba00064ea000064fc80006500a0006503000065086000650b6
000650f8000651400006518e000651d8000652280006524e000653360006
541a0006556c0006559a000655c80006565c000656e2000657100006579a
000657ca000657fa00065848000658960006597a00065a5600065b9a0006
5bca00065bfa00065c9000065d1800065d4800065d7800065da800065e38
00065e6800065e9800065eea00065f3200065f880006601e000660b60006
612a0006617c000661a6000661fc000662300006627a000662b200066302
000663400006638c000663b20006642e00066480000665920006679c0006
695000066ad200066c4400066ee6000671b600067376000674bc00067716
0006785800067a6e00067ac000067b1000067b6600067bbc00067c1e0006
7ca600067ef40006808600068292000683ae00068562000686e4000687a4
00068886000688ee00068950000689c600068a2e00068ada00068b4a0006
8bda00068cee00068db200068dfe00068e9400068f4000068fe40006908e
000690d80006911a00069190000691f80006928800069336000693a00006
94040006946a00069524000695ba00069618000696420006966c0006967c
0006968c0006974e0006985200069a5c00069bb200069bc200069c720006
9d5600069db600069dc600069e2200069e8000069fa00006a08e0006a09e
0006a0ae0006a0be0006a0ce0006a1b40006a2b40006a48c0006a6480006
a74e0006a7c80006a8420006a8f40006a9040006aa120006aa220006aa32
0006aaf40006ac280006ad140006ad240006ad340006ad440006aeaa0006
b0160006b1420006b1520006b1620006b1720006b1820006b2640006b274
0006b3d60006b4e00006b5de0006b7160006b7e80006b8660006b8e40006
ba040006ba800006bacc0006bb580006bc6c0006bcc00006be020006bec2
0006bf8e0006c0840006c18e0006c2400006c3a60006c40c0006c4d00006
c6d20006c8600006c9de0006cb0e0006cdc00006cf020006d0300006d1a8
0006d3200006d4a00006d62e0006d7e00006d84e0006d9b20006daea0006
dbee0006dd240006de560006df260006dff60006e1520006e22c0006e2cc
0006e3d00006e4fa0006e5f80006e7780006e8e20006ea200006eb980006
ece40006edc60006ee2e0006eed00006ef700006f06e0006f1d60006f310
0006f4a40006f5ee0006f6d20006f7300006f8360006f8cc0006f98e0006
fa340006fa740006fc200006fcf20006fdb80006fee0000700800007018c
000701e40007037c0007040a0007041c0007044c0007047c000704b40007
04ec000705220007055e00070594000705d00007073e0007078800070822
000708ba00070934000709b800070a1e00070aca00070b1600070c360007
0cec00070dc200070dfa00070e3800070eac00070fa6000710c4000711c6
000712080007124a000712b8000712c8000712d8000712e8000712f80007
130800071318000713280007133800071348000713580007136800071368
000714ec000714fc000715bc00071682000717b8000719ae00071bb00007
1dac00071fe2000721e20007224e00072360000724f20007264a000726fc
00072740000727de0007290e0007295e000729f400072b3000072b400007
2cf600072e2a00072e7a00072ed000072f9200072fd6000730180007309e
000730fc000731ee0007327c000732b20007332c000733a4000733f40007
3500000735f6000736a0000736ca000736f40007371e0007374800073788
000737c8000738000007383800073882000738cc0007390c0007394c0007
3996000739e000073a2000073a6000073aba00073b1400073b4e00073b88
00073bcc00073c1000073c5400073c9800073cec00073d4000073d8c0007
3dd800073e1600073e5a00073eaa00073efa00073f5400073fb200073fdc
00074006000740a00007413a0007417e000741c2000742d8000742e80007
433000074378000743ca0007441c00074486000744da0007452600074584
0007460e00074672000746b60007470000074768000747b2000747f20007
483a00074876000748b2000748ee000749280007496a000749ac000749ec
00074a2c00074a7600074ac000074b1600074b6e00074bbc00074c0a0007
4c4c00074c9a00074cdc00074d2600074d6800074dac00074e0800074e64
00074eb000074efc00074f4600074f9000074fce0007500c0007508a0007
5108000751420007517c00075216000752b00007538400075458000754b4
0007551000075584000755f8000757560007576600075850000758600007
5896000758cc00075906000759400007597c000759b8000759fe00075a44
00075baa00075d6000075eac0007606a000761e000076388000764b80007
65be000767dc0007692000076ab600076c3e00076cbc00076e0000077008
0007709c0007713000077284000773ae0007752800077668000777d40007
78c200077a8c00077c2000077ca200077dd400077ebe0007802600078108
000782be000783b0000785120007864e000787420007890600078a8e0007
8c3200078d9600078f32000790f000079276000793120007948600079578
00079660000797e00007993200079a5200079bea00079dc000079f4e0007
9ff80007a0ae0007a2600007a3040007a3920007a3de0007a42a0007a4a2
0007a5800007a5fa0007a69c0007a6f00007a8540007a9800007aa920007
ab940007ac5c0007add00007af100007b1360007b1e00007b30a0007b40e
0007b5ae0007b69a0007b7940007b8920007b9780007ba920007bc4c0007
bdfa0007bf680007bfe00007c0540007c1720007c1f60007c2f80007c484
0007c5fc0007c7320007c83c0007c9b20007cb2a0007cd1c0007cf0a0007
d0d00007d1440007d1f40007d2aa0007d35a0007d4180007d5120007d616
0007d7100007d81c0007d8a40007d9320007d9ba0007da4e0007db2a0007
dc200007dd040007ddfa0007de8e0007df4a0007dfde0007e09c0007e18c
0007e2940007e3920007e4a60007e5c80007e6dc0007e81c0007e9560007
ea780007eb8c0007ecd00007ee240007f0380007f1ea0007f29e0007f3ba
0007f4900007f5ae0007f68c0007f8200007f8da0007f9760007fa680007
fb500007fc3c0007fcba0007fdb40007fef20008001e0008005200080096
000800a600080146000801e8000802de000803ca000804a40008057c0008
06da0008083a000808d80008096e000809ac000809ec00080a2a00080a6a
00080ac400080b1c00080b7600080bda00080c6600080e6200080eb20008
0fde00081064000810e4000811be0008129200081396000815820008169a
0008170a0008179a0008185c0008192e0008199a00081a1800081b6c0008
1bb200081bf800081cdc00081d1800081d7600081db400081de600081e2a
00081e6c00081e9c00081f760008203e000821220008219e000821ec0008
22760008234c000823c40008247e000825300008257a0008264e00082700
0008275800082768000827780008278800082798000828ca000828dc0008
29be00082a6400082b6e00082c7a00082cbe00082d0200082d3600082d6a
00082dba00082e0a00082e5c00082eae00082f0000082f56000100000d57
00f2003c009d000700020010002f0056000004ac041d0005000200>
<0000003a02be0000000300000000006a00000000000300000001000a006a
0000000300000002000e00740000000300000003005e0082000000030000
0004000a006a0000000300000005001800b00000000300000006000e00e0
000000030000000700ba00ee00000003000000080030000e000000030000
0009008a01a8000000030000000d02aa02320001000000000000003504dc
000100000000000100050511000100000000000200070516000100000000
0003002f051d0001000000000004000505110001000000000005000c0534
00010000000000060007054c0001000000000007005d0553000100000000
0008001804e30001000000000009004505b0000100000000000d015505f5
0003000104030002000c074a000300010405000200100756000300010406
0002000c0766000300010407000200100772000300010408000200100782
0003000104090000006a00000003000104090001000a006a000300010409
0002000e00740003000104090003005e00820003000104090004000a006a
0003000104090005001800b00003000104090006000e00e0000300010409
000700ba00ee00030001040900080030000e0003000104090009008a01a8
000300010409000d02aa023200030001040a0002000c074a00030001040b
00020010079200030001040c0002000c074a00030001040e0002000c07a2
0003000104100002000e07ae0003000104130002001207bc000300010414
0002000c074a0003000104150002001007ce0003000104160002000c074a
0003000104190002000e07de00030001041b0002001007ec00030001041d
0002000c074a00030001041f0002000c074a0003000104240002000e07fc
00030001042a0002000e080a00030001042d0002000e081800030001080a
0002000c074a0003000108160002000c074a000300010c0a0002000c074a
000300010c0c0002000c074a00a900200032003000300038002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0041
007200690061006c0052006500670075006c00610072004d006f006e006f
0074007900700065003a0041007200690061006c00200052006500670075
006c00610072003a00560065007200730069006f006e00200035002e0030
003600200028004d006900630072006f0073006f00660074002900410072
00690061006c004d00540041007200690061006c00200069007300200061
002000740072006100640065006d00610072006b0020006f006600200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e00200069006e0020007400680065
00200055006e006900740065006400200053007400610074006500730020
0061006e0064002f006f00720020006f007400680065007200200063006f
0075006e00740072006900650073002e004d006f006e006f007400790070
006500200054007900700065002000440072006100770069006e00670020
004f006600660069006300650020002d00200052006f00620069006e0020
004e006900630068006f006c00610073002c002000500061007400720069
0063006900610020005300610075006e0064006500720073002000310039
003800320059006f00750020006d00610079002000750073006500200074
00680069007300200066006f006e007400200074006f0020006400690073
0070006c0061007900200061006e00640020007000720069006e00740020
0063006f006e00740065006e00740020006100730020007000650072006d
0069007400740065006400200062007900200074006800650020006c0069
00630065006e007300650020007400650072006d007300200066006f0072
0020007400680065002000700072006f006400750063007400200069006e
0020007700680069006300680020007400680069007300200066006f006e
007400200069007300200069006e0063006c0075006400650064002e0020
0059006f00750020006d006100790020006f006e006c0079002000280069
002900200065006d0062006500640020007400680069007300200066006f
006e007400200069006e00200063006f006e00740065006e007400200061
00730020007000650072006d006900740074006500640020006200790020
00740068006500200065006d00620065006400640069006e006700200072
00650073007400720069006300740069006f006e007300200069006e0063
006c007500640065006400200069006e0020007400680069007300200066
006f006e0074003b00200061006e00640020002800690069002900200074
0065006d0070006f0072006100720069006c007900200064006f0077006e
006c006f006100640020007400680069007300200066006f006e00740020
0074006f002000610020007000720069006e0074006500720020006f0072
0020006f00740068006500720020006f0075007400700075007400200064
0065007600690063006500200074006f002000680065006c007000200070
00720069006e007400200063006f006e00740065006e0074002ea9203230
303820546865204d6f6e6f7479706520436f72706f726174696f6e2e2041
6c6c205269676874732052657365727665642e417269616c526567756c61
724d6f6e6f747970653a417269616c20526567756c61723a56657273696f
6e20352e303620284d6963726f736f667429417269616c4d54417269616c
20697320612074726164656d61726b206f6620546865204d6f6e6f747970
6520436f72706f726174696f6e20696e2074686520556e69746564205374
6174657320616e642f6f72206f7468657220636f756e74726965732e4d6f
6e6f7479706520547970652044726177696e67204f6666696365202d2052
6f62696e204e6963686f6c61732c205061747269636961205361756e6465
72732031393832596f75206d617920757365207468697320666f6e742074
6f20646973706c617920616e64207072696e7420636f6e74656e74206173
207065726d697474656420627920746865206c6963656e7365207465726d
7320666f72207468652070726f6475637420696e20776869636820746869
7320666f6e7420697320696e636c756465642e20596f75206d6179206f6e
6c792028692920656d626564207468697320666f6e7420696e20636f6e74
656e74206173207065726d69747465642062792074686520656d62656464
696e67207265737472696374696f6e7320696e636c7564656420696e2074
68697320666f6e743b20616e6420286969292074656d706f726172696c79
20646f776e6c6f6164207468697320666f6e7420746f2061207072696e74
6572206f72206f74686572206f75747075742064657669636520746f2068
656c70207072696e7420636f6e74656e742e004e006f0072006d0061006c
006f00620079010d0065006a006e00e9006e006f0072006d0061006c0053
00740061006e0064006100720064039a03b103bd03bf03bd03b903ba03ac
004e006f0072006d00610061006c0069004e006f0072006d00e1006c004e
006f0072006d0061006c0065005300740061006e00640061006100720064
004e006f0072006d0061006c006e0079041e0431044b0447043d044b0439
004e006f0072006d00e1006c006e0065004e0061007600610064006e006f
0074006801b001a10300006e00670041007200720075006e00740061b900
540328b326181fd0bc032900e0032900020329b22b1d1fb90327031db23b
1f40b80323b31215320f412d03200001002f0320000100200320006f0320
00af032000bf03200004005f031e00010010031e007f031e0080031e00af
031e00bf031e00d0031e00060000031e0010031e0020031e006f031e009f
031e00e0031e0006031d031cb2201f1041270319007f03190002000f0317
00ef031700ff03170003001f0317002f0317004f0317005f0317008f0317
009f03170006000f0317005f0317006f0317007f031700bf031700f00317
000600400317b2923340b80317b28b3340b80317b36a6c3240b80317b261
3340b80317b35c5d3240b80317b357593240b80317b34d513240b80317b3
44493240b80317b23a3340b80317b331343240b80317b32e423240b80317
b3272c3240b80317b312253280b80317b30a0d32c04116031600d0031600
0200700316000102c4000f0101001f00a0031500b0031500020306000f01
01001f00400312b32426329fbf03040001030203010064001fffc00301b2
0d1132410a02ff02ef0012001f02ee02ed0064001fffc002edb30e11329f
414a02e200af02e200bf02e2000302e202e202e102e1007f02e000010010
02e0003f02e0009f02e000bf02e000cf02e000ef02e0000602e002e002df
02df02de02de000f02dd002f02dd003f02dd005f02dd009f02dd00bf02dd
00ef02dd000702dd02dd001002dc0001000002dc0001001002dc003f02dc
000202dc02dc001002db000102db02db000f02da000102da02daffc002d3
b2373932b9ffc002d3b22b2f32b9ffc002d3b21f2532b9ffc002d3b2171b
32b9ffc002d3b2121632b802d2b2f9291fb90326031cb23b1f40bb032200
3e00330322b225311fb80318b23c691fb802e3b3202b1fa0413002d400b0
02d40002000002d4001002d4002002d4005002d4006002d4007002d40006
006002d6007002d6008002d6009002d600a002d600b002d60006000002d6
001002d6002002ca002002cc002002d6003002d6004002d6005002d60008
02d0b2202b1fb802cfb226421f411602ce02c70017001f02cd02c8001700
1f02cc02c60017001f02cb02c50017001f02c902c5001e001f02ca02c6b2
1e1f00410b02c6000002c7001002c6001002c7002f02c5000502c1b32412
1fff411102bf0001001f02bf002f02bf003f02bf004f02bf005f02bf008f
02bf000602bf0222b2641f12410b02bb00ca0800001f02b200e90800001f
02a600a20800406a1f4026434932402043493240263a3d3240203a3d329f
209f26024026969932402096993240268e923240208e92324026848c3240
20848c3240267a813240207a813240266c763240206c76324026646a3240
20646a3240265a5f3240205a5f3240264f543240204f5432b8029eb72427
1f374f6b0120410f02770030027700400277005002770004027702770277
00f90400001f029bb22a2a1fb8029a402b292a1f80ba0180bc0180520180
a201806501807e01808101803c01805e01802b01801c01801e0180400180
bb0138000100800140b40180400180bb013800010080013940180180ca01
80ad018073018026018025018024018020013740b80221b2493340b80221
b2453340b80221b341423240b80221b33d3e320f410f0221003f0221007f
0221000300bf022100cf022100ff0221000300400221b320223240b80221
b3191e3240b80222b32a3f3240b80221b32e3a326f414802c3007f02c300
8f02c300df02c30004002f02c3006002c300cf02c30003000f02c3003f02
c3005f02c300c002c300ef02c300ff02c3000600df02220001008f022200
01000f0222002f0222003f0222005f0222007f022200ef0222000600bf02
2100ef02210002006f0221007f022100af02210003002f0221003f022100
4f0221000302c302c30222022202210221401d101c102b1048038f1c010f
1e014f1eff1e023700161600000012110811b8010db6f70df8f70d000941
09028e028f001d001f0290028f001d001f028fb2f91d1fb80198b226bb1f
41150197001e0401001f013900260125001f013800730401001f0135001c
0801001f0134001c02ab001f0132b21c561fb8010fb2262c1fba010e001e
0401b61ff91ce41fe91cb80201b61fe81cbb1fd720b80401b21fd51cb802
abb61fd41c891fc92fb80801b21fbc26b80101b21fba20b80201b61fb91c
381fadcab80401b21f8126b8019ab21f7e26b8019ab61f7d1c471f6b1cb8
0401b21f6526b8019ab21f5e73b80401400f1f52265a1f481c891f441c62
1f4073b80801b61f3f1c5e1f3c26b8019ab21f351cb80401b61f301cbb1f
2b1cb80401b61f2a1c561f291cb80101b21f231eb80401b21f5537b80168
402c07960758074f07360732072c0721071f071d071b071408120810080e
080c080a080808060804080208000814b8ffe0402b000001001406100000
010006040000010004100000010010020000010002000000010000020108
02004a00b013034b024b5342014bb0c063004b6220b0f65323b8010a515a
b005234201b0124b004b5442b0382b4bb807ff52b0372b4bb007505b58b1
01018e59b0382bb00288b801005458b801ffb101018e851bb0124358b900
010111858d1bb900010128858d5959001816763f183f123e113946443e11
3946443e113946443e113946443e11394660443e11394660442b2b2b2b2b
2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0aa1d59
b0324b5358b0ff1d594bb09353205c58b901f201f04544b901f101f04544
5958b9033e01f2455258b901f2033e4459594bb8015653205c58b9002001
f14544b9002601f145445958b9081e0020455258b90020081e4459594bb8
019a53205c58b9002501f24544b9002401f245445958b909090025455258
b9002509094459594bb8040153205c58b173244544b1242445445958b917
200073455258b9007317204459594bb8040153205c58b1ca254544b12525
45445958b9168000ca455258b900ca16804459594bb03e53205c58b11c1c
4544b11e1c45445958b9011a001c455258b9001c011a4459594bb0565320
5c58b11c1c4544b12f1c45445958b90189001c455258b9001c0189445959
4bb8030153205c58b11c1c4544b11c1c45445958b90de0001c455258b900
1c0de04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b01b33b59635c456523
456023456560234560b08b766818b080622020b163594565234520b00326
6062636820b003266165b059236544b063234420b13b5c4565234520b003
266062636820b003266165b05c236544b03b2344b1005c455458b15c4065
44b23b403b4523614459b347503437456523456023456560234560b08976
6818b080622020b134504565234520b003266062636820b003266165b050
236544b034234420b147374565234520b003266062636820b003266165b0
37236544b0472344b10037455458b137406544b24740474523614459004b
5342014b5058b108004259435c58b108004259b3020b0a124358601b2159
421610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342b00d
2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b0
124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b7475
737500184569444569444569447373737374757374752b2b2b2b74752b2b
2b2b2b737373737373737373737373737373737373737373737373732b2b
2b45b0406144737400004bb02a534bb03f515a58b1070745b04060445900
4bb03a534bb03f515a58b10b0b45b8ffc0604459004bb02e534bb03a515a
58b1030345b040604459004bb02e534bb03c515a58b1090945b8ffc06044
592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b752b2b2b2b2b2b2b435c58
b9008002bbb301401e017400735903b01e4b5402b0124b545ab012435c5a
58ba009f02220001007359002b7473012b01732b2b2b2b2b2b2b2b737373
732b2b2b2b2b002b2b2b2b2b2b0045694473456944734569447374754569
44734569444569444569447374456944456944732b2b2b2b2b732b002b73
2b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b737475732b7374757374752b2b
2b742b2b000000>
[15785 15901 16277 16265 16245 15965 14085 16161 16321 16209 15953 15469 14369
16281 16349 16097 16057 16313 14945 16169 16329 16261 16213 15869 16253 16133
16337 16305 16157 16201 13221 16201 16113 11631 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> ArialMT AddT42Char 
2 3052 15 <000100aafede018300cd000a004eb50a030007ab06b80150402601033c02
02010a013c000a020301033c000638073a4f005f006f007f00a0000500a0
0ba198182b10f45df4e410ed3c103c003fed3c103c10ed10fded01111239
31303335331514060727363637b6cd505732393603cdcd718b264d19615b
>ArialMT AddT42Char 
3 4240 68 <0002004affe8041c043e00280037022d402c090d092a190d1a2a290d2a2a
390d3615371b3a2a492a5d0d5d2a6a0d692a60308a0d86299a169b1aa90d
1528b8ffe8b40b0b065527b8ffe840190b0b0655a619aa28b619bb28c419
cf28d215dd28084416011eb8fff440110c0c065512120c0c0655050c0c0c
065535b8ffe040550c0c06551f171f182b2c2a343904392c4904482c5608
592b6608692b760c870cc90cf90df92b1137340e0104102f243417322114
185f296f2902291c2f0e3f0e8f0e9f0eff0e059f0eaf0eef0e030e0c0f0f
02550eb8ffeab4101002550eb8fff44015101006550e0c0d0d06550e060f
0f06550e0e1c0317b802aab61895141c1c0700b8fff4401a0c0c06550045
270a321c030b2961106100060d0d025500252124b8ffecb41010025524b8
ffec400b0d0d025524040c0c025524b8ffe4b40b0b025524b8fff4b40b0b
065524b8ffdc400b1010065524060f0f065524b8fffcb40c0c065524b802
5b400e27400026102620263026af260539b8ffc0b40e0e025526b8ffd6b6
0e0e0255263139b8ffc0400d1e23343039c03902a039013917b8fff44041
10100655172518222f24bf06cf06021f063f0602060e0f0f0255060c0d0d
025506180c0c0255060c0b0b0255060c0b0b0655060e0d0d065506100c0c
065506313810f62b2b2b2b2b2b2b5d71edf4ed2b105d712bf62b2b5dedf4
2b2b2b2b2b2b2b2b3cfd2be5e5003fed3fe42b3fedfde41112392f2b2b2b
2b2b5d71ed711112391112393901111217393130005d2b2b2b2b01715d2b
2b0071250606232226353436363736373637363534272623220607273e02
333216161716151514161723260306070e02151416333236373635033c64
b96aafbc477348356bda67013345887f791db0186ed08988aa5010091722
bc1c1762c46f5c326d6968a2261d835546ab854e814e140e0d1a24250a6e
2d3d597118718b4b40614a2e78f0fb853d3801dd281c10284d2f48605b4f
3d77>ArialMT AddT42Char 
3 5440 70 <00010050ffe803ed043e001a015ab1020243545840340e7f0f010f0b0140
0050007000030004121c0b07181c040b010e1507080e0e0255070c0d0d02
55070c0c0c025507100b0b0255072f2b2b2b2bcdd4c6003fed3fed10c45d
3210c45d3231301b4047090c011f1c4313431753135317601360179b029b
039a0da410a41a0c080d190a6a0269036a05750c700d800da60cb509b60a
b50c0c160c860ce302030e225f0f6f0f7f0f030f01b802aa407930004000
5000600070009000a000e000f00009000f0f0b000004121c0b07181c040b
1c0f010f240e080d0d06550e221b000100240b2b1f010100010101400b0b
065501401010065501480c0c0655011a0d0d065501491c1524cf07011f07
3f0702070e0b0b0655070a1010065507120c0c065507311b34c4182b10f6
2b2b2b5d71ed10f62b2b2b2b5d724b53234b515a58b90001ffc03859ed72
f42bed72003fed3fed12392f11392f105de4105de43130005d71015d7159
011706062322001134123633321617072626232206151416333236033cb1
1defaedafef772e989addc1faf197f5a88aaa4846a8e018517b7cf011d01
0aac010281afa11b6b6cc3d3d6c28200>ArialMT AddT42Char 
3 8014 76 <000200880000013c05ba0003000700cd405e09360b0b02554f099009a009
b009c009df09f0090700091f09700980099f09b009c009df09e009ff090a
1f09010001070402030906037e0100060506040a0607250500049f04a004
b004c004e00406c004f0040200042004d004e0040404b8fff8b410100255
04b8fffa40170e0e025504040c0c0255040a0b0b025504140b0b065504b8
ffeab41010065504b8fffeb40d0d065504b8fffc400a0c0c0655044e0847
50182b10f62b2b2b2b2b2b2b2b5d71723cfd3c003f3f3c3fed0111123939
111239393130015d72712b133533150311331188b4b4b404ebcfcffb1504
26fbda00>ArialMT AddT42Char 
3 9202 79 <000100830000013705ba000300e3b605360b0b025505b8ffc0b337383405
b8ffc0b334353405b8ffc0b330313405b8ffc0b322253405b8ffc0402515
17340f051f059f05df05044f05df05f005031f0570058005ff0504010000
0a0203250100b8ffc0b337383400b8ffc040153335349f0001c000f00002
00002000d000e0000400b8fff8b41010025500b8fffa401d0e0e02550004
0c0c0255000a0b0b025500140b0b065500081010065500b8fffeb40d0d06
5500b8ffffb40c0c065500b8fffc400a0c0c0655004e044750182b10f62b
2b2b2b2b2b2b2b2b5d71722b2b3cfd3c003f3f3130015d71722b2b2b2b2b
2b3311331183b405bafa4600>ArialMT AddT42Char 
3 9454 80 <0001008700000626043e002301c7b9000dfff4b40d0d065508b8fff4b40d
0d065509b8ffd8404d0b0d342504e404e409e117e52005d505f620021708
202309181b20090303231e1c06151c0b0b06070106231a19100ad0250190
25a025022517171a0e2590110111041010025511180f0f025511b8ffec40
0b0e0e025511140c0c025511b8ffe840170b0b025511020b0b0655110c10
10065511060f0f065511b8fffab40c0c065511b8fff8b40d0d065511b801
5d400c1825901b011b180f0f02551bb8ffec400b0e0e02551b140c0c0255
1bb8ffee40110b0b02551b040b0b06551b0a101006551bb8fffe400b0d0d
06551b0c0f0f06551bb8fffcb40c0c06551bb8015d4016000233232501d0
00019000a000021f003f004f000300b8fffe401d0e0e025500100d0d0255
00100c0c0255000c0b0b025500160b0b065500b8fffcb41010065500b8ff
f440140f0f0655000a0c0c0655000e0d0d065500192425b80178b3214750
182b2b4ef42b2b2b2b2b2b2b2b2b5d71723c4dfde410f42b2b2b2b2b2b2b
2b2b5dedf42b2b2b2b2b2b2b2b2b2b5dfd4e456544e67172003f3c3c3c3f
3f3c4d10ed10ed11173901111239123931304379400e0c141326140c111b
01120d151b01002b012b2b81015d005d2b2b2b3311331536363332161736
3332161511231134262623220615112311342623220606151187a132a66a
76971f7eca9eaab3235c3e7094b458644c813a0426954e5f6258baafb6fd
27029d6c5f3a95a4fd9702b27878509a91fdd900>ArialMT AddT42Char 
3 10014 81 <00010087000003e6043e0016017d40130503061302a810b810e303e713f0
03f6130604b8fff0403c0b0d347910019810d018e018ff18042008140e14
16121c05070106160d0a0d0e0c0e2418401010025518400b0b02550b2810
1002550b140e0e02550bb8ffec40110d0d02550b040c0c02550b220b0b02
550bb8fff4400b0b0b06550b14101006550bb8fff9400b0d0d06550b0a0f
0f06550bb8fff640120c0c06550b40333634ff0b01ff0b010b4e18b8ffc0
401a343634b018f018027018a018b018c01804180302331516250100b8ff
f6b41111025500b8fffab41010025500b8fffa40170e0e025500040c0c02
55000a0b0b025500040b0b065500b8fffa40110f0f065500020c0c065500
040d0d065500b8ffc04012333634f0000100002000d000e00004004e1710
f65d712b2b2b2b2b2b2b2b2b2b3cfd3cf43c105d712bf65d712b2b2b2b2b
2b2b2b2b2b2b2b2bed3c103c003f3c3f3fed113901123931304379401606
11090a080a070a0306102611060e1b010f0a121b01002b012b2b2a81015d
71002b5d71331133153633321616171615112311342626232206151187a2
75dd60a150100ab42a6b4873a7042697af45704d327dfd7302866e6d4192
ccfdbc00>ArialMT AddT42Char 
3 10468 82 <00020044ffe80427043e000d0019016bb615180d0d065513b8ffe8b40d0d
06550fb8ffe840730d0d065519180d0d065512070a190c47064808560659
08670669080834103a123a16351845104b124b1645185c055c0952105d12
5d1652186d056d0964106d126d1664187701150906050d5b035405540a5b
0c6c036505650a6c0c0a171c0407111c0b0b14241b400d0d02551b400b0b
025507b8ffea40110f0f025507180d0d025507100b0b025507b8fff0b40b
0b065507b8fff0b40d0d065507b8fff0b40f0f065507b8fff0b40c0c0655
07b8ffc04013242534300701000710072007030731df1b011bb8ffc04049
1e2334301b011b0e24000c0e0f025500120d0d0255000c0c0c0255001c0b
0b0255000e0b0b0655000e0d0d0655000c1010065500160c0c0655004024
25341f003f000200311a3437182b10f65d2b2b2b2b2b2b2b2b2bed10712b
5df65d5d2b2b2b2b2b2b2b2b2b2bed003fed3fed313001715d0071435c58
4009530553096205620904015d59002b2b2b2b1310373633320015140606
23220013141633323635342623220644a489c5db01167beb8bdffeedb9b2
8786b2b38587b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca
>ArialMT AddT42Char 
3 11776 85 <00010085000002c6043e001100c9403b2f13011004012304340443045304
66047404060911080908090d1311090d000308010b1c06070106000a0928
900801082220130113022211250100b8ffc04010333634f0000100002000
d000e0000400b8fff8b41010025500b8fff840110e0e025500040c0c0255
00060b0b025500b8fffcb41010065500b8fff440160f0f065500060c0c06
5500080d0d0655004e1247c4182b10f62b2b2b2b2b2b2b2b5d712b3cfde4
105df472e4003f3f3fed11393911393901111239390010c9870e7dc43130
005d72015d33113315363633321707262322060706151185a23e693f5b5e
3e42423b5e141e0426a171483aa727473f6072fdd400>ArialMT AddT42Char 
3 12038 86 <0001003fffe803b1043e00300317407b042214223a094a09442456226522
7c098e098424a613ab2cc2030d09171a1817304b2cd617051b0255020210
32010a185c085c095c0a5c0b5c0c5c0d6a086a096a0a6a0b6a0c6a0db426
b4270f27262427242936245a0a590b64266428742374248024930a9c0c92
28972c9530a40aa90ca327a428b326c5261628b8fff4b40d0d065522b8ff
f4b40d0d065523b8fff4b40d0d065524b8fff4b40d0d065528b8fff4b40c
0c065522b8fff4b40c0c065523b8fff4b40c0c065524b8fff4b40c0c0655
1db8ffde40121e395a0827250c0a041a202615040b2e1d1ab802aa402219
2c0b0b02551f193f194f195f19af19cf19060f191f196f19df19041f198f
190219bd02550015000002aa0001ffc040140b0b025510014001021001d0
0102000110010201b8ffc0b314163401b8ffc040100e113401012e5c1d6c
1d021d1c150704b8fff4b40b0b025504b8ffe6b41010065504b8ffe64013
0f0f0655041c2e0b1f1a011a24194013183432b8ffc0402f0f0f02551918
0f0f025519180d0d025519160c0c025519201010065519200f0f06551910
0c0c065519160d0d065519b8025bb207242ab8ffc0b51c39d02a012ab8ff
e6b40c0c02552ab8ffe8b40f0f02552ab8ffe8b40c0c06552ab8ffeab60d
0d06552a1a32b8ffc04021272a346032c032023f32803202321001010124
00180d0d025500100d0d06550020b8fff4b40d0d025520b8fff4b4101006
5520b8fff440190f0f065520240f100b0b02550f160c0c02550f200d0d02
550fb8fffa40200f0f02550f0e0c0c06550f0c0d0d06550f22df00013f00
4f00020019313437182b4e10f45d714df42b2b2b2b2b2bed2b2b2b102b2b
ed724e105d712bf62b2b2b2b712b4dedf42b2b2b2b2b2b2b2b2bed72003f
ed2b2b2b3fed7112392f2b2b5d71722be410fd5d71722be4111239111239
0111121739313043794040272d1e2305142c261110121013100306220d20
1b000928071b01052d071b011e14201b00210e231b0022230d0c08290a1b
012827090a062b041b001f101d1b01002b2b103c103c2b103c103c2b012b
2b2b2b2a2b818181002b2b2b2b2b2b2b2b2b5d71015d72715d1337161633
323635342726272e02353436373636333216161707262623220615141716
1716171e02151406062322263fb20f897b7c78352593c6994f41382a9153
7dbd5a11b00c73697c6a16162f1b84bf975669c67dcfd9013d1c6b726544
3d2318253249814e4779281f2b487b6718525c5237231c1d130a2433417c
5c5a9f57ac00>ArialMT AddT42Char 
3 12974 87 <00010024fff2022a0599001700d8b9000affc0b323263409b8ffc0404123
263480190100010c0d0a0103001610092b0f0a06161c030b0f1022002201
0d12250c01ff070845094560077007800790070400072007a007b007c007
d0070607b8ffeeb41010025507b8fff4b40f0f025507b8fff2b40e0e0255
07b8fff8b40d0d025507b8fff8b40c0c025507b8fffab41010065507b8ff
f0400b0f0f065507060c0c065507b8ffe8b40d0d065507ba026a00180136
b166182b10f62b2b2b2b2b2b2b2b2b5d71f4e410ed3cfd3c10e4f43c003f
ed3f3cfd3c1139123911333310c93130015d2b2b25170623222626351123
353311371133152311141616333202101a4c3c626c2c8484b3b5b5132b28
1ea19f103e65a202638c01076cfe8d8cfd934d2c1a00>ArialMT AddT42Char 
3 13266 88 <00010083ffe803e004260018014fb9001affc0400915173402201316340f
b8fff040331214342b1301240813160c0113160b06000a111c030b003316
251817403336341a401010025517281010025517120e0e025517b8ffec40
0b0d0d025517040c0c025517b8fff4400b0b0b065517141010065517b8ff
f8400b0d0d0655170c0f0f065517b8fff6400d0c0c0655ff1701c0170117
4e1ab8ffc04015343634b01af01a02701aa01ab01aff1a041a0c2509b8ff
c04010333634f0090100092009d009e0090409b8fff8b41010025509b8ff
f840110e0e025509040c0c0255090a0b0b065509b8fff640160f0f065509
020c0c065509020d0d0655094e194750182b10f62b2b2b2b2b2b2b5d712b
ed105d712bf65d712b2b2b2b2b2b2b2b2b2b2b3cfde4003fed3f3f3c3939
0111123931304379401a04100e0d0f0d0206070806080508030610040c1b
000d08111b00002b012b2a2a81005d012b2b2b2135062322262627263511
3311141716163332363635113311033f7cd55ea34f100bb40b116e51518e
3bb49cb4486d4f35730292fdb38d314751538f880239fbda>ArialMT AddT42Char 
2 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/space 3 def
/comma 15 def
/a 68 def
/c 70 def
/i 76 def
/l 79 def
/m 80 def
/n 81 def
/o 82 def
/r 85 def
/s 86 def
/t 87 def
/u 88 def
end
ArialMT /Encoding get
dup 32 /space put
dup 44 /comma put
dup 97 /a put
dup 99 /c put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
pop
end
%ADOEndSubsetFont
/KEFPBH+ArialMT /ArialMT findfont ct_VMDictPut/KEFPBH+ArialMT*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma 52{/.notdef}rp /a /.notdef /c 5{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /u 138{/.notdef}rp]KEFPBH+ArialMT nfKEFPBH+ArialMT*1 [10.5 0 0 -10.5 0 0 ]msf69.9171 140.263 mo(construction, criminal)[5.25 5.838 5.838 5.25 2.91901 3.49641 5.838 5.25 2.91901 2.33099 5.838 5.838 2.91901 2.94209 5.25 3.49641 2.33101 8.74641 2.33101 5.838 5.838 0 ]xsh/KEFPBH+ArialMT*1 uf/KEFPBH+ArialMT uf/ArialMT uf1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LXOQMX+Calibri-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (LXOQMX+Calibri)%%Title: (LXOQMX+Calibri Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /LXOQMX+Calibri def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-503 -307 1240 964} def/FontInfo 4 dict dup begin/FSType 8 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 3878 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 2 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B7A086528E2CBE7FD4F03CC1C545DFC3C53F52C692334252531335C4AFD91E9493A7B9787114ADBF50CAD0D8D8F4E0FD112CA0EDC244BC77AFB35E52902467E4B7D65BC23E8AB084EE08EDC3C9FE17948A4E93ECA5D5D8A99AF099DAB98A96A7EEC3487AD5909F63F36A9F52E364FE794F0586CEACB0693AEA3E3B131EDB924E9018AC085D5D058B3A8419D5096479413ADE107D9F5302816818EECEB683CD82FAAA79E358EAA71283CC02664EE09C62BDF6E0D9BC98D9F308DF8AEA61A9B7C090BD7FD96A3223C7AE0D3D1A8F2E623FA6B7C467CA6FECDBA0B792188DFEEBD3D01BCE6CC077D778842DE1B5E36F7F8EB4C68A439269E0981B28AD1790AA058065E4B6AD27A659E12C7322A5BE1E7DF9729C0030192F3688A380035351BB0945D5DC7515959F458727E2B8854977E466D6DDC900E997B52F6BAB4C73A178A3B47EBB3C3FC842F51CC6E114336F3E4E5E72B20D8F94A7BA3BA965E83BF37BAA664C34B8502BB9E9B9BEDD7EBC5DCBC4FFF5EBCA9C032449885D42A9DCCBA2A816B59D7978373DF4208E5608F69A2EAF492AC156CC637D5A11AF573B17CF9F38> |3 <001C60D8A8C9B888C146> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /LXOQMX+Calibri-Identity-H /Identity-H 0 [/LXOQMX+Calibri] ct_ComposeFont pop end end
%ADOEndSubsetFont
/KEFPBI+Calibri-Identity-H /LXOQMX+Calibri-Identity-H findfont ct_VMDictPutKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf168.497 140.263 mo(\000\003)sh%ADOBeginSubsetFont: BAJRMX+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /BAJRMX+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9ddb6d7000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c7966038ad5cd0000b0980000398868656164ecde32e100000f640000
0036686865610dad126500000f9c00000024686d74785230b9e300000fc0
00003c946c6f6361030a0f9e00004c5400003c9c6d617870214726250000
88f0000000206e616d65eb68cfcb0000891000000377707265706baf02fe
00008c8800002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
feff0600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d0000000100000005b852cd5c66be5f0f3cf500190800
00000000bbeb7ccc00000000cbdab383fbfafd8b09ec07b6000000090002
000100000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000f24040e0000000000000000000001cf000004a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
04a1002304a1002304a10023061bffcc061bffcc045a00ac044400610444
00610444006104440061044400610444006104ec00ac04ec009704ff001b
04ff001b03e800ac03e8004503e800ac03e8004603e8004603e8006303e8
005f03e8008103e800ac03e800ac03ad00ac050c005b050c005b050c005b
050c005b050c005b04fc00ac04fc00ac05400020020400ac0204ff4a0204
00280204ff390204ff310204ff500204ff4f0204ff7b0204001e02040027
049200ac028d0007028dffa9042800ac042800ac035d00ac035d00810362
00ac035d00ac0370001c045e00ac06d700ac052a00ac052a00ac052a00ac
052a00ac052a00ac050700ac054c0063054c0063054c0063054c0063054c
0063054c0063054c0063054c0063054c0063054f0063054f006306ef0063
042200ac042200ac05620063045800ac045800ac04580053045800ac03ad
004703ad004703ad001503ad001803ad004703ad004703e6000f03e6000f
03e6000f03e6000f052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa048a0022071e003d
071e003d071e003d071e003d071e003d0427003003e6001e03e6001e03e6
001e03e6001e03e6001e03bf003b03bf003b03bf001a03bf003b03f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f40010055cffe2055cffe2040400a103cb006d03cb006d
03cb006d03cb006d03cb006d03cb006d046500a10465006a047700320477
0032038000a103800030038000a103800020038000200380002c03800029
03800042038000a1038000a1035000a10482006c0482006c0482006c0482
006c0482006c047800a10478008c049d004001ec00a101ecff5801ec0019
01ecff4801ecff2701ecff5501ecff5201ecff7101ec001101ec0018041b
00a1023e0000023eff8c03c900a103c900a102e000a102e0008702e600a1
02e000a102f0003203d500a1060600a1049100a1049100a1049100990491
0078049100a1046600a104aa006604aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006604ba006604ba00660606006603c5
00a103c500a104b1006603ed00a103ed00a103ed004503ed00a1034f0049
034f0049034ffff5034ffff6034f0049034f00490359001c0359fffe0359
001c0359001c048d009f048d009c048d009f048d0097048d0075048d009f
048d009f048d009f048d009f048d009f048d009f03fd0021063e0037063e
0037063e0037063e0037063e003703cc0036038300100383001003830010
03830010038300100369004403690044036900080369004403d5005c03d5
005c03d5005c03d5005c03d5001e03d5005c03d5005c03d5005c03d5005c
03d5005c03d5005c062f005c062f005c043400990362005a0362005a0362
004e036200570362005a0362005a076f005a06dd005a0601005a0601005a
04340060048c0060046a00600434006103fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d02710025
069a002508d5002504ab0025069b002508d50025043c0025043c0025043c
0025043c0025044f0025044f0025044f0025044f0025043c0025043c0025
067600250676002506760025067600250689002506890025068900250689
00250676002506760025043c0025043c0025067600250609002508430025
043c0025043c002504830025043c00250676002504ed002504ed00250513
00250728002503c4003503c4003503c4003503c4003503c4003504340060
04340060043400600434006004340060043400990434ffad0443fff901d6
008501d6ff6e01d6000f01d6ff5a01d6ff2001d6ff7201d6ff5801d6ff67
01d6001101d6009903c00085041e008801eaffd501eaffd501eaff6303a3
009903a3009903a3009901d6009901d6002a021c009901d6004b01fb001c
02fd0099066400990434009904340099043400990434004e0434009904a2
ff9d043400990438005a0438005a0438005a0438005a0438004f0438005a
0438005a0438005a0438005a043c005a043c005a06cc005a043400990434
00990434006002ca009902ca009902cafff902ca006e0321005103210051
0321fffe0321fffd032100510321005105ae005105ae00510438009901f1
009902ae002102c4002102ae002102bc002604e600210475002104750021
047500210475002104750021047500210475002104750021047500210475
002105130021074b002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002106d90021043400940434008e0434
0094043400860434004d0434008904340086043400940434009404340094
04340094039d002205b8003505b8003505b8003505b8003505b800350377
0029039f0022039f0022039f0022039f0022039f00220329005903290059
032900070329005903380072036100640378005d02ac004402e5006c024e
004402e5004802b8004701c100240297002a02e9006c01630061016dffd8
0297006c015e006c0456006c02e6006c02e6004502e5006c02e5004801f6
006c0230004201e3002302e9006c0285001f03ef002c027e00280286001f
023700420254000002750000029400000000fd080000fce8025600000275
0000029400000000fd080000fce803290000035f0000039400000000fc9f
0000fc6703290000035f0000039400000000fc9d0000fc6901ff0000039a
000003a2000003a800000000fc650000fc600324000002f5000003460000
036700000000fca00000fc7e0327000003490000036a00000000fc9d0000
fc7d030c0000030f0000031100000000fcac0000fca90291000002980000
02a000000000fce90000fce202cf000002c2000002b5000003c1000003e1
0000040000000000fc520000fc3101ce000001d6000001ce000001ce0000
0000fd4d0000fd4d027500840000fd7a027f00840000fd7601f700840231
000004a1002304a1ff89045a00ac035300ac0484003a03e800ac03e8fec7
03bf003b04fc00ac04fcfe9e054c0063020400ac0204feb20204ff520428
00ac0495002406d700ac052a00ac03ef0053054c0063054cff1604fc00ac
042200ac03ab004603e6000f03e6001e03e6fe6e03e6001e061300000427
0030060000900550005e0550fef903f4001003f40010040400a102fb00a1
03c90023038000a1038000a103690044047800a1047800a104b4006601ec
00a101ec000001ecff5403c900a103e10011060600a1049100a10387005e
04aa006604aa0066047800a103c500a1035b004b0359001c038300100383
0010038300100552000003cc00360558008704b1006604b10066048a0061
048a00610440009904320064039200180430000003a5005903a5005902c8
004e044c0099044c00990441006004780006023200940232ffec0232ff7a
0232ff0f03a3009903b4000004660099039700220302004d0303004d0438
005a0438005a046c002804120076044100590349005c0319000304550090
045500900455007d0455001605360055053b00550369001205a900940592
006405920064028900000000fd0a03f400000000fc360205009702050097
020500970224004801ff006e01ff006e04a10023044d00ad045a00ac0370
00ac037000ac037600ac0527000303e800ac03e8004503e8006106680055
03ca004b052200ac052200ac052200ac020400ac0204ff50028d00070458
00ac045800ac04e3000306fa000306d700ac04fc00ac070300ac054c0063
054c006304f900ac042200ac0444006103ad004703e6000f0438000f0438
000f04b800220594000004270030051c00ac04f500ac0472007406f200ac
071e00ac04eb000f061800ac044000ac0462005d04610062070800ac0471
005304ff000f04f2000f0504000003f4001003ee00a2040400a1031400a1
031400a1032700a10480000e038000a1038000300380002c057800440380
0057048900a1048900960489009501ec00a101ecff55023e000003ca00a1
03ca00a104320001060600a1047800a104aa006604a90066046a00a103c5
00a103cb006d034f00490359001c039d001e039d001b042f0022050a0000
03cc0036048e00a1046900a103fa006d062300a1064500a1045f00170583
00a103e800a103e4006b03f00066063200a103ff005c045f001f0463001f
044d000006010001063200a103d5005c044300000430000003d5009902c4
009902c4009902d5009901d6ff58047700170434006003fb005d03fb005d
03fb005d0583003e0362004b04530099045300780453008801d6008501d6
ff7201eaffd503b6009903b6009904150016060200130569005f04470099
062800990438005a0431005a042a009904340086043400990362005a0321
00510319000a06640099039f0022039f001803d2002204fe005103770029
045500990433009903c0004205d4009905fe0099044a000a0554009903c2
0099038b004d038d005d05c6009903cb00380453fff90443fff904270018
036e0000036e0000036e00000000fca50000fca5029b010a029b00bf029b
00bf03b5008503b5005e03b5005e03de0064026000ed026000b10364007a
0361005f01ff002a02240048022400bb020500970586009601ff008c01ff
002a01ff008c01ff002a035900880359002b035900880359002b01ff002a
0359002b02b6007402b600c002b6007402b600c004190075041900ad0419
0075041900ad0317000102df001f03af018a03fc01ae0317000b02df002d
027300450273004503fcfff603fcfff6073e0095073e0095073e0095073e
009503fcfff903fc00c10205009702050097026d0085026d007a027400bf
0274005a0284005602840075024000840240007a024a00b0024a0067026d
0085026d007a027400bf0274005a028400560284007503fc009e03fc0077
03fc007803fc007604b0006b043d006e03fc006a03fc003d01c4008b0335
008b057500000556000007f7000007270000073c00000727000006ad00af
06ad00af040e008005a4003f05ac004d02b6000003fc003f04b30049040e
002a03fc0057040e00600434005803fc00b903fc004a040e005303fc006d
0419002b040e003403f30035039f006103be005f039f0058039f00250621
0049083300ac03fc002406e300a10411001d0494005f02cb002303ec0062
03ec00510455002203d700510436007e03b20035043600630436005c040e
0048040e00ae040e0072040e0067040e0020040e0065040e006b040e0063
040e0052040e005204430067028d00190381005c0373005903ac00260368
006103b7006e0349002f03b5004b03bc0052039f0050039f008d039f0065
039f0062039f003a039f0067039f0061039f005e039f0051039f00500494
005f02cb002303ec006203ec00510428002203d700510436007e03b20035
043600630436005c040e0048040e00ae040e0072040e0067040e0030040e
0065040e006b040e0063040e0052040e00520321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc00580321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc0058029d003801f500310252003c
0249002d024a001402460032025100300238002202570025024d0023029d
003801f500310252003c0249002d024a0014024600320251003002380022
02570025024d002302b1ff4b03130044055f004405690044051700440569
0044052e00440553004405c9004e05c9004e0567004705b7004705a20047
05cd0027057d004505a20045052a003505b80048084e0048057d005c07c9
005c03fc004603fc004c03fc006003fc002b03fc005e03fc006003fc0059
03fc004503fc006503fc004c03fc005503fc005603fc003d05e9002c0405
003506d300690443006102ed000703fc00080484003a0550005e04660099
066500660454005b0416004a073e009a073e0096073e00c9073e00c9070e
00af070e013a070e00af070e013a0a4e009a0638009f04660028018a0000
01da00000466000004660000046600000466000004660000046600000466
000004660000046600000466000004660000046600000466000004660000
0466000004660000046601d004a1002304a1002304a1002304a1001904a1
001504a1001d04a1002304a1001c04a1001c04a1001c04a1001d04a10023
03e800ac03e800ac03e8003703e8ffe803e8ffe903e8ffe803e8ffe803e8
003702040015020400a0054c0063054c0063054c0063054c0063054c0063
054c0063054c006305940063059400630594006305940063059400630594
0063052200aa052200aa05c600aa05c600aa05c600aa05c600aa05c600aa
05c600aa03e6001e03e6001e03e6001e03d5005c03d5005c03d5ffbb03d5
ffb103d5ffb803d5ffb803d5005703d5ffb803d5ffb803d5ffb803d5ffb8
03d5005c03fb005d03fb005d03fb003003fbffdb03fbffdb03fbffd903fb
ffcb03fb005d01d6002601d600850438005a0438005a0438ffe80438ffea
0438ffe80438ffea0438005a04a0005a04a0005a04a0005a04a0005a04a0
004904a0005a043400940434009404d2009404d2009404d2008c04d20094
04d2004604d20094039f0022039f0002039f0022046a00530466003803f4
001003f4001003f4ffbd03f4ffc003f4ffbd03f4ffc803f4001003f4ffc8
03f4ffc803f4ffc803f4ffc803f40010038000a1038000a10380fff00380
ffa70380ffa00380ffa20380ff8e0380001101ec000901ec009404aa0066
04aa006604aa002104aa002204aa002104aa002204aa006604ec006604ec
006604ec006604ec006604ec006604ec0066048d009f048d009f0515009f
0515009f0515009a0515009f051500750515009f038300100383fff10383
001001da0000046600000466000004660000046600000466000004660000
046600000466000004c10066052400ac052400ac050600ac049300a10493
00a1047c00a103e6000f02ae00210359001c01d60011043c0025043c0025
043c002506760025067600250676002502f5001c02e7008e0306005a034b
008e02a8008e028c008e0344005a035b008e01a6008e01cb000502e0008e
025b008e046d008e0375008d0375005a02d8008e0375005a029b00570280
0046025700040314005702e3001a0445002202b5001c028b001c02b80050
0000fdfd0000fdfd0466ffff0466ffff0466ffff0466ffff03c1ffff03c1
0000030cffff030c0000030cffff030c0002023100000231000001ffffff
01ffffff01ffffff01ffffff0000fd090000fd0902aa008202aa008202aa
009802aa009801ce008402aa008202aa008202aa008202aa0082027f008e
027f008e0324000002910084046601fd02aa001402aa0013032900000329
0000032900000329ffff039a00000327000003fcfff903fcfff9039a0000
039a00000000ff080000fe4c0000fdfb0000fdfb0000fe3f0000fe3f0000
fdc20000fdc201ce008402aa00140291008302aa001502aa009302aa0093
039a014c039a00000000fdfd0000fdfd0000fd090000fce90000fd090000
feb702aa001402aa001403fcfff90466ffff02aa0098039a0000039a0000
039a0000039a0000039a0000039a000004010014040101470000000002aa
ffff02aaffff01ceffff01ceffff030c0000030c000002aa009302aa00c8
02aa00c803f100c801ceffff01ceffff01ce000001ce000002aa00a003b1
008402aaffff02aaffff075c003c075cffff075cffff075cffff075cffff
075c003f06d0ffff06d0ffff075c0003075c0003075c004001df003001df
003001e7003201e7003200f8004400f8004402070030020700300209004c
0209004c019d0030019d003002070032020700320209004c0209004c0309
004c0309004c015f004c015f004c015200180152001801c3001601c30016
01bf001c01bf001c032700510327005103270051032700510000ffab03bd
ffff041a0000041a00000416000104160001041a0001041a0001041a0001
041a000104010002040100020401000204010002015f004c02aa00c801ce
00c803f100c804ec000f044d00ad0440001e0462005d049d006104ff001b
057e000f044d004c03e8006c0525006403ca005a03adffd6050e005b048a
001c025000ac0226001b042800ac070900aa052affd6054c0063062f0061
04e4000f045800ac03ad004703ab0046043f000f03e6000f0550005e0522
00aa0442001e03bf003b03ca004b03ca005a040e006808ab00ac081500ac
060300ac054700ac07b700ac071400ac04a100230204ff3a054c00630522
00aa052200aa052200aa052200aa052200aa04a1002304a10023061bffcc
050c005b050c005b04280073054c0063054c006303ca0008089500ac0815
00ac050c005b072800ac04d400ac052a00ac04a1ffef04a1002303e8ffe1
03e8006e0204feac0204ff4c054c003b054c00630458ffbf0458006e0522
002f052200aa03ca004b04fc00ac052400ac040e004d03ef003b04a10023
03e800ac054c0063054c0063054c0063054c006303e6001e04a1ffd90444
ffe7035d001b03e6ffb803940064046b001b0545001b0495002403e8ff9e
02a10007050a00630469001a04a0001b04a10023045a00ac045a00ac045a
00990444006104ec00ac04ec00ac04ec00ac04ec00ac04ec00ac03e80084
03e8008403e8008203e8003403e8008103ad00ac050c005b04fc00ac04fc
00ac04fc00ac04fc002804fc00ac0204ff360204ff71042800ac042800ac
042800a0035d00ac035d0035035d0060035d006606d700ac06d700ac06d7
00ac052a00ac052a00ac052a00ac052a00ac054c0063054c0063054c0063
054c0063042200ac042200ac045800ac045800ac04580077045800ac03ad
004703ad004703ad004703ad004703ad004703e6000f03e6000f03e6000f
03e6000f052200aa052200aa052200aa052200aa052200aa048a0022048a
0022071e003d071e003d042700300427003003e6001e03bf001503bf003b
03bf003b035d001b03c2ff9b0433001b045800ac052400ac047100ac03e2
003b0444003803ad005903b500ac046a0027043400990434000403b3005a
043400600430005d0271ffee064300990434009903a300990241002703b4
0014044c0099053e0059043400990321005102e0002102ae002103fc001b
0329005903ca004b0366003a03680050075d006003c00099061e009903d5
005601d6ff570438005a0434007a04340088043400880434008804340088
03fb006203d5005803d50058062f005c044cffe203c4003503a3003a0438
005a0438005a03ca002e01eaff60075d006003c400350434009903d5ffbf
03d5005c03fbffe203fb005d01d6fece01d6ff650438ffed0438005a02ca
ff7302ca00100434ffff0434008703ca004b0434005104cd0060040e0052
034c005903d5005c03fb005d0438005a0438004f0438005a0438005a039f
00220289009804eb009902ae002106930060069200600362fff003210051
032900590394006403fb003c0240fff70240fff70434006002ff002703e2
002203720049040e00720321005101f300ad032900ad049700ac029b010a
03d5005c0434009904340099043400860362005a04340060043400600434
0060043400600434006003fb005d03fb005d03fb005d03fb003f03fb005d
0271002503c40035043400990434009904340067043400130434009401d6
ff1f01d6ff1f01d6ff5a03a3009903a3009903a3006b01d6008901d6ff58
01d6ff5801d6ff5906640099066400990664009904340099043400990434
0086043400860438004f0438004f0438005a0438005a0434009904340099
02ca009902ca008a02ca000a02caffff0321005103210051032100510321
00030321005102ae002102ae002102aeffd202aeffd20434008904340041
0434007b0434004d04340086039d0001039d002205b8003505b800350377
002903770029039f00220329000103290059032900000434008602aeffc6
05b80035039f002203d5005c01f100530241002703d5002902aeff960463
009903db00990344005903c200360362003b02ee003c03190099053b0055
0471000803ee00a203ee001403cb004803fc006d0477003204d3000803ee
00530380007204a40066038a00680350ffe80482006c03f300130232008e
01ecfffe03c900a1063200910491ffe804aa00660592006e0433000803ed
00a1034f0053035b004b038300080359001c04b10066048d009f03b70010
03690044039000570393006b0398005507ce00a1085500ac055a00a105cd
00ac06cf00a1076800ac03f4001001ecff4704aa0066048d0096048d009f
048d009f048d009f048d009f03f4001003f40010055cffe20482006c0482
006c03c9005204aa006604aa00660390000007ce00a1085500ac0482006c
065500a1046200a0049100a103f4ffc503f400100380ffb10380004d01ec
fed001ecff7004aa001d04aa006603edffa403ed0064048d0000048d009f
039000570478008c049300a103c50057038c004403f40010038000a104aa
006604aa006604aa006604aa00660383001003f4001003cb002402e00027
0359ffeb0339005004040027048d002703fd00210380ffff023e0000048b
006603ed00270383000c039000550339005001f300ac032900ac049700ac
026000ed03f40010040400a1040400a10404006e03cb006d046500a10465
00a104650081046500a1046500950380002a038000260380004103800000
0380004a035000a10482006c047800a1047800a10478009a047800200478
00a101ecff2a01ecff5503c900a103c900a103c9007e02e000a102e00000
02e0002802e00024060600a1060600a1060600a1049100a1049100a10491
00a1049100a104aa006604aa006604aa006604aa006603c500a103c500a1
03ed00a103ed00a103ed003e03ed0091034f0049034f0049034f0049034f
0000034f00490359001c0359001c0359001803590019048d009f048d0079
048d009f048d0075048d009f03fd002103fd0021063e0037063e003703cc
003603cc003603830010036900050369004403690020047800a10359000a
063e00370383001003f4001002e00027035effa703c5002703ed00a104b6
00a103ef00a10369004403cb004803500060039900a1043c0025043c0025
0447002504470025043c0025043c0025044f0025043c0025043c00250676
002506760025068200250682002506760025067600250689002506760025
067600250475002104750021047500210475002104750021047500210475
0021047500210475002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002103d5009604340060043400990434
00990362003b039b005a043400600434006003fb006203fb0062051b0065
0362005a0362004b0435004b043b005d0241fff704340060043400600451
005a039d001f03d0001e0433009404340099043400990241002701d6fff3
0232009401d6009902e7ffa702f9002701d6009904860099066300940663
0094066400990434ffc204340099045300990438005a05b3005a05920064
0536005502ca002302ca002302ca002302ca009902ca0099028e0094028e
002303980085039800850321005101eaffd50242fff801eaffd5028affc4
02ae004102ae002104a400270476004904550090039d002205b80035039f
00220351001f0329005903d3005903bc004b03bb0056039400640394005e
039400640362005a0507005f03d50099043b005a046b005a04470099028a
ffc403a300270319009904340060039400640394005e066f006006d40060
0719006004f3002103c40021057a0021060c002504ae00990469009903ef
002c03ef00700434ffd5044dffd503d60010050fffe3062f006204120027
03cb006a0444009904590030033f0099036f005501d60085022700000391
009802f000300569005f045300990474005a03cb006304a9006604a80066
0528001406cc00560368003a0438005a0438005a03a8009903cf005203cf
0052033f001b046a009a0465004b05c7004b0664014c03de0020060e0035
034f0042032f00380321005103d0001e02f2009903de00200450009903a8
0099052f0083040e000102f5001c03f1000002e7008e02fb0027034b008e
02a8008e02a800500344005a035b008e01a6008e01cb000502e0008e025b
008e046d008e0375008d0375008d0375005a02b2004802d8008e029b0057
02570004031400570445002202ac004402ac006c02e50048042b004402e5
006c02e5004802b8004702b8004702770046027700460297002a01630061
0297006c0456006c02e6006c02e60045024e003602e6004502e6004502e5
006c01e3002302e9006c02db00460456006c0285001f024a000d02be006c
024600230283002803650055025f00180163006101f6006c02e9006c0285
001f02be006c0246002302e5006c03650050025f00180694009404bbffa7
04bd0060030affa7069cffe504b4002204beffa70352ffa7031affa7039d
0014030fffa70329ffc203c4003b0304006e03c400350688002102410027
026900270468002704db002704c40027043400990451006002710025054c
0060041e009901f0006b067f0099045100990434009902ca006a037b0051
02faffd5039d002203ed0029033c0059047c005c04d800600434006003fb
005d0362005a0362004b03fb006201d600850362003b0233001e04d80094
0376004b02e5006b024e0044026e004402b200440277004201c1002401c1
00070297002a02e9006c0192000001aa006c0163006d0192000001e50000
0194006c017b00530224006e0456006c0456006c031b0000031c006c0304
006e02e600450336004502300042016dffd801e4002302e9000002b8002c
02e6006e02e6006e0285001f023700420294004202a600420272003c02e6
004502e9006c02e9006c016dffd801f6006c01f6002502030025028b006c
03ef002c0286001f01c400540334005401ff008c01ff002a01ff008c01ce
008401ce0084029900650299006c03fc004503fc0065044b0044044b0044
025100f20256000002540000025100f20327000002540000025600000239
00980239009801ce008401ce008402aa008202aa008202aa008202aa0082
02aa004b02aa009302610024015e006c02300042027e00280299006c0310
009603100096031000960310009603100096045700960457009604570096
045700960310004304570043045700430457004304570043045700430457
00430457002f0457002f0457002f0457002f0457002f0310002f04570025
045700250457002504570025045700250310001a0457001a0457001a0457
001a0457001a0457001a0310004204570042045700420457004204570042
045700420457009604570096045700960457009603100042045700420457
0042045700420457004204570042045700420457002f0457002f0457002f
0457002f0457002f0310002f0457002f0457002f0457002f0457002f0457
002f03100026045700260457002604570026045700260457002603100042
045700420457004204570042045700420457004204570096045700960457
009604570096031000420457004204570042045700420457004204570042
031000260457002604570026045700260457002604570026031000230457
0023045700230457002304570023045700230310002f0457002f0457002f
0457002f0457002f0457002f0310004b0457004b0457004b0457004b0457
004b0457004b045700960457009604570096045700960310004204570042
045700420457004204570042045700420310001a0457001a0457001a0457
001a0457001a0457001a0310002404570024045700240457002404570024
045700240310002f0457002f0457002f0457002f0457002f0457002f0310
004e0457004e0457004e0457004e0457004e0457004e0457009604570096
045700960457009602aa006202aa006203290000049a00000359002b02aa
008502aa008502aa00c802aa00c8029100840254000003c1ffff03c10000
039a0000022400bb02aa009802aa009802aa009802aa00980440fff60440
fff60302009803270000032700000324000002aa0000071200d4071200d4
02ac004402b8004702e60045027e002802b8004701d9ffff01d9ffff01d9
000001d90000028900000289000002890000028900000000fc660000fc66
032900000329000003290000032900000324000003240000032900000329
00000329000003290000032400000324000003f4000003f4000003f40000
03f40000032400000324000003270000030c000001ffffff01d900000327
000003290000032900000329000004660000046600000466000004660000
03f4000003f4000003f4000003f40000023200b6023200b6054c00630444
006104440043044400610444004303e6000e0456fec803e6000e03ad00ac
054c0063045d001e059700ac04a2000f04440061042200ac043200640375
005a037500420478000604d700510684001404120076041200030362005a
0362003b0362005a0362003b053b0055037800940438005a0399001404c5
009904a2000f0349005c01eaffd50476ffd504d7005104a9006603cb006d
03cb004803cb006d03cb00480389001a0389fe6f0389001a035000a104b1
005b03e2001e050000a1045d002a03db006d03c500a104a1ffc504a1fe8a
04a1fe6204a1ff2204a1ffc604a1fe8b04a1fe6204a1ff2204a1ff8004a1
ff5804a1002304a1002304a1002304a1ffc504a1fe8a04a1fe6204a1ff22
04a1ffc604a1fe8b04a1fe6204a1ff22066500230665ffc50665fe8a0665
fe620665ff220665ffc60665fe8b0665fe620665ff2203e8fef004bdfe82
04bdfe7a03e8fef004c1fe8604bdfe7a03e8fea403e8fe9504fcfef005d1
fe8205d1fe7a0559feaa04fcfef005d1fe8205d1fe7a0559feaa04fcfea4
04fcfe9504fc00ac04fcfef005d1fe8205d1fe7a0559feaa04fcfef005d1
fe8205d1fe7a0559feaa06c000ac06c0fef00795fe820795fe7a071dfeaa
06c0fef00795fe820795fe7a071dfeaa0204fef002d9fe8202d9fe7a0261
feaa0204fef002d9fe8202d9fe7a0261feaa0204fea40204fe950204ff4e
0204ff7a054cff0605f5fe82060cfe7b054cff0605f2fe7f0605fe74054c
fecf054cfeac0422fef003e6fe940517fe820513fe7e049ffeaa03e6fe47
03e6fe4703e6001e03e6001e0550ff0605f2fe7b060dfe780599feaa0550
ff0605f2fe7b0611fe7c0599feaa0550fecf0550feac0550005e0550ff06
05f2fe7b060dfe780599feaa0550ff0605f2fe7b0611fe7c0599feaa0714
005e0714ff0607b6fe7b07d1fe78075dfeaa0714ff0607b6fe7b07d5fe7c
075dfeaa048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a0061048a005a048a0061048a0061048a0061
048a0061048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a005a03a5005903a5005903a5004f03a50059
03a5005203a5005203a5005903a50059044c0099044c0092044c008f044c
0094044c0099044c0092044c0092044c0094044c0099044c0099044c0059
044c0099044c0099044c0092044c008f044c0094044c0099044c0092044c
0092044c0094044c0099044c0099044c0059023200010232ff860232ff83
0232ff62023200000232ff860232ff860232ff600232ff100232fecf0232
ff600232ffef0232ff7b0232ff290232ff690232ff680438005a0438005a
0438005a0438005a0438005a0438005a0438005a0438005a041200760412
007604550090045500820455008204550084045500900455008204550082
045500840455001204550010045500800455009004550090045500410455
00710455007d059200640592006405920064059200640592006405920064
059200640592006405920064059200640592006405920064059200640592
006405920064059200640592006405920064059200640592006405920064
059200640592006403f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f4001003f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001005b9001005b9001005b9001005b9001005b9001005b90010
05b9001005b9001005b90010038000a10380004903800049038000a10380
004903800049038000a10380007b047800a1047800a1047800a1047800a1
047800a1047800a1047800a1047800a1047800a1047800a10478006f0478
00a1047800a1047800a1047800a1047800a1047800a1047800a1047800a1
047800a1063c00a1063c00a1063c00a1063c00a1063c00a1063c00a1063c
00a1063c00a1063c00a101ec000901ecff6201ecff6201ecff6501ec0009
01ecff6201ecff6201ecff6501ecff1001ecfee901ecff6401ec000001ec
ff8c01ecff2a01ecff5301ecff7004aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006603c500a103c500a1038300100389
001a038300100389001a038300100389001a038300100389001a03830010
0389001a038300100389001a038300100389001a038300100389001a0383
00100389001a038300100389001a0383fff50389fff5038300100389001a
038300100389001a04b1006604b1006604b1006604b1006604b1006604b1
006604b1006604b1006604b1006604b1006604b1006604b1006604b10066
04b1006604b1006604b1006604b1006604b1006604b1006604b100660675
006606750066067500660675006606750066067500660675006606750066
0675006604a1002304a1ffc504a1fe8a04a1fe6204a1ff2204a1ffc604a1
fe8b04a1fe6204a1ff2204fc00ac04fcfef005d1fe8205d1fe7a0559feaa
04fcfef005d1fe8205d1fe7a0559feaa0550005e0550ff0605f2fe7b060d
fe780599feaa0550ff0605f2fe7b0611fe7c0599feaa066500230665ffc5
0665fe8a0665fe620665ff220665ffc60665fe8b0665fe620665ff2206c0
00ac06c0fef00795fe820795fe7a06c0fe4d06c0fef00795fe820795fe7a
06c0fe4d0714005e0714ff0607b6fe7b07d1fe780714fe610714ff0607b6
fe7b07d5fe7c0714fe6101d9ffff01d900000289000002890000039a0000
03290000032900000324000003290000032900000324000003f4000003f4
00000324000001d9000003270000030c0000023200b601c4007901c40079
01c40079054e00ac0440000a042200ac0366001b044100ac06b2005503ca
004b04a500ac045800ac046a001b050c000f052400ac05b100ac073800ac
052b00630444006103e6000f03e6001e03e6001e0476003005d2000f049a
007404720074047200ad05f6002805f60028020400ac06680055045f00ac
050e000304fc00ac04fc00ac04720074070700ac04a1002304a10023061b
ffcc03e8005905250064052500640668005503ca001503ca004b052200ac
052200ac054c0063054c0063054c00630462004c0438000f0438000f0438
000f04720071035300ac061800ac0366001b048500300427003004400035
065d0037061d003d041a003d070f0003072800ac0515005b0521000f03ca
005a05090003045f009903df00270434009902f90027039f009905c0003e
0362004b03f4009903b6009903eb00270447000a0471009904d8009905f1
0099046f00590362005a0319000a039d0022039d002203b2002904c5000a
03ea004203c0004203c0009904c8001904c800190583003e03cf00990421
0016044700990454009903c0004205b6005f020400ac03d5002e03d50058
062f005c03fb005603fb006203fb00620583003e0362000803bc004b0453
0095045300970438005a0431005a0431005a038b0004039f0022039f0022
039f002203c0002902c400990554009902f9002703b10029037700290434
006006550060059b004b03ba004b061f001606500099044500500481000a
0362005a042b001604a800a103e8002703c500a10314002703ec00a105d0
004403800057041c00a103ca00a103ca002704530017049800a1050100a1
067700a104a2006503cb006d0359001c0383001003830010041300360545
001c041a006d03fa006d03fa00a1054f0020054f002001ec00a105780044
03ff00a1045a0001047800a104a100a103fa006d062f00a103f4001003f4
0010055cffe20380004204a2006504a20065057800440380000303900057
048900a0048900a004aa006604a9006604a9006603e4001e039d001e039d
001e039d001e03fa0044031400a1058300a1031400270417003603cc0036
03e8004a0588004a0559007203d8007205d20001061900a10488006c0444
001c03800068045c00010400000008000000040000000800000002af0000
02000000015500000450000001bc00000199000001000000000000000000
ffdc0000ff25040e0024040e00240329000003fcfff901ff008c03580088
01c400540334005404a400540476010a03fcfffb0273004404ee004f0444
00610444006103ad0027040e005306640099052a0020076000ac064800ac
071e002005f500ac0428001b03e6000f08a80032043afffe0482002104b2
005b0495002003ad0020044400610621004906210065057800e6059d00e6
03fc005e070100bc03fc0062045201d7045200be0400fff6040001bd0400
01bd0400fff6040001bd0400fff6070900aa045c005b047200ad04440071
04d0003a0562007403c9001006640094042f005f04180015035a0053040b
00300441006f03260010032700030327000303270003025400c0025400c0
025400c8025400c802aaff8c02aaff8c04e0005907f4000a07e200140798
0003076c0061064100ac050b002406a700ac05c80055073f00ac03ca0021
0600009004b8001c085c0063054c003b076c0061076c006104440061056a
0022053400990433001b05af00990480001b060b0099034e001605a90094
03d2ffc40745005a049c005a06420059056a00220362005a06b8006d05c3
00a10453001205c000a1050b0046066400a10380002205580087042e0022
07f10066050f006806b0006d06b8006d039c006d03c7009602aa00db040e
008d0000ffdc0000fe5101cf0000022400bb01c700000163006102b1ff4b
0aa000b404d5009202d5008302d5008304d500b202d500700aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0000fc48000000000000fd170000000000000000039a0000039a00000324
00000324000003240000039a000003240000032400000256000003290000
0329000003bdffff02aaff8c055001e5027f008403240000039a00000256
000000000027000000e1000000ed0000001b032400000324000003240000
032400000324000003240000032400000324000003240000032400000000
0000000000000000000000000000039a0000039a00000346000000000027
03c10000030f00000346000003460000039a0000034800000348000003a2
000003a2000002560000035f00000000009e00000067000000220000009e
0000009e0000009e0000009e0000009e0517fe820513fe7e049ffeaa03e6
fe4703e6fe4703e6000e03e6000e03f4001003f4001003f4001005b80010
05b8001005b80010047800a1047800a10478006f063c00a1063c00a1063c
006f0383ffc80383ffc80383001004b1006604b1006604b1006606750066
06750066067500660000fdbc0000fd1a0000fd770000fd4f0000fbfe0000
fbfa0000fc000000fbfa0000fc000000fbfa0000fc000000fbfa0000fc00
0000fc000000fc000000fc000000fc000000fc000000fc000000fc000000
fdd00000fc300000fc300000fbff0000fbff0000fbff0000fbff0000fbff
0000fc000000fcac0000fcad0000fcac0000fcac0000fd1b0000fd1b0000
fd340000fd340000fd340000fd340000fd600000fd600000fd730000fd73
0000fdcf0000fd5f0000fd5f0000fd5f0000fd5f0000fd7f0000fd7f0000
fca10000fd6f0000fdfd0000fcef0000fcf20000fca00000fca00000fcae
0000fcad0000fc660000fca00000fc2f0000fc2f0000fc660000fc5f0000
fdd00000fcf10000fd6d0000fcf30000fd710000fd710000fdb10000fc65
0000fcf10000fcf10000fc2f0000fbff0000fd770000fc660000fc660000
fc650000fc650000fc650000fc650000fc460000fd790000fcde0000fcde
0000fd4b0000fd4b0000fca80000fca80000fd710000fda60000fda60000
fce30000fd4c0000fd4c0000fd4b0000fd4b0000fd7e0000fcdf0000fcde
0000fcde0000fc8f0000fc520000fc520000fc520000fc520000fc920000
fc970000fc970000fc560000fc560000fc910000fd820000fd820000fd70
0000fd700000fdfa0000fdfa0000fd5f0000fd5f0000fd790000fd790000
fd8f0000fd8f0000fd6e0000fd6e0000fd7a0000fd7a0000fcfb0000fcfb
0000fdb60000fdb60000fda80000fda80000fd680000fd680000fd710000
fd710000fcf10000fcf10000fcf10000fcf10000fc540000fc260000fc26
0000fc290000fc290000fc270000fc270000fc270000fc270000fc350000
fc350000fc350000fc350000fdb60000fda80000fda80000fce30000fd46
0000fd460000fd470000fd470000fd020000fd020000fd020000fd020000
fc650000fc660000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca1
0000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca10000fc370000
fc370000fc370000fc370000fca00000fca00000fc9f0000fcad0000fd33
0000fd470000fc9f0000fc9f0000fc9f0000fc9f0000fbff0000fc020000
fbff0000fc000000fc370000fc370000fc370000fc370000fdbd0000fdbd
0000fca20000fca30000fca30000fdd10000fdd10000fdd10000fdd10000
fc6a0000fc6a03e6fe940389ffcb0389ffcb0389001a01d6008904340060
043400600434006004340060043c0025067600250aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4047d
00a3040e00230054001b00>
<00000000000001420000014200000142000001420000025e0000025e0000
025e0000025e0000025e0000025e0000025e0000025e0000025e0000025e
0000025e0000025e0000025e000003ca000004c4000004c4000004c40000
04c4000004c4000004c40000059e0000059e0000059e0000059e00000696
000006960000069600000696000006960000069600000696000006960000
069600000696000007680000076800000768000007680000076800000768
000007680000076800000768000007fe000007fe000007fe000007fe0000
07fe000007fe000007fe000007fe000007fe000007fe000007fe000008c8
000008c8000008c8000008c8000008c8000008c8000008c8000008c80000
08c8000008c800000a2200000b5800000b5800000b5800000b5800000b58
00000b5800000b5800000b5800000b5800000b5800000b5800000b580000
0b5800000b5800000b5800000b5800000b5800000b5800000c4a00000c4a
00000c4a00000c4a00000c4a00000c4a00000c4a00000dee00000dee0000
0dee00000dee00000dee00000dee00000ebc00000ebc00000ebc00000ebc
00000ebc00000ebc00000ebc00000ebc00000ebc00000ebc00000ebc0000
0ebc00000ebc00000ebc00000ebc00000ebc00000ebc00000ebc00000ebc
00000ebc00000ebc00000ebc00000f9c00000f9c00000f9c00000f9c0000
0f9c00001034000010340000103400001034000010340000103400001034
000010340000103400001034000010340000103400001034000010340000
103400001034000010340000103400001034000010340000103400001034
000010340000103400001034000010340000103400001034000010340000
103400001034000010340000103400001034000010340000103400001034
000010340000103400001034000010340000103400001034000010340000
103400001034000010340000103400001034000010340000103400001034
000010340000103400001034000010340000103400001034000010340000
103400001034000010340000103400001034000010340000103400001034
000010340000103400001034000010340000103400001034000010340000
103400001034000010340000103400001034000010340000103400001034
000010340000103400001034000010340000103400001034000010340000
103400001034000010340000103400001034000010340000103400001034
000010340000103400001034000010340000103400001034000010340000
103400001034000010340000103400001034000010340000103400001034
000010340000103400001034000010340000103400001034000010340000
103400001034000010340000103400001034000010340000103400001034
000010340000103400001034000010340000119200001192000011920000
119200001192000011920000119200001192000011920000119200001192
0000119200001192000012c4000013dc000013dc000013dc000013dc0000
13dc000013dc000013dc000013dc000013dc000013dc0000150a0000150a
0000150a0000150a0000164c0000164c0000164c0000164c0000164c0000
164c0000164c0000164c0000164c0000164c000017520000175200001752
000017520000175200001752000017520000175200001752000017520000
175200001752000017520000175200001752000017520000175200001752
000017520000175200001752000017520000175200001752000017520000
175200001752000017520000175200001752000017520000175200001752
000017520000175200001752000017520000175200001752000017520000
192c0000192c0000192c0000192c0000192c0000192c0000192c0000192c
0000192c0000192c00001a3400001a3400001a3400001b2600001b260000
1b2600001b2600001b2600001b2600001b2600001b2600001b2600001b26
00001b2600001b2600001b2600001b2600001b2600001c5a00001c5a0000
1c5a00001ce000001ce000001ce000001ce000001ce000001ce000001ea2
00001fc400001fc400001fc400001fc400001fc400001fc400001fc40000
20e0000020e0000020e0000020e0000020e0000020e0000020e0000020e0
000020e0000020e0000020e0000020e00000220e0000220e000023400000
2432000024320000243200002432000025be000025be000025be000025be
000025be000025be000025be000025be000025be000025be000026b60000
26b6000026b6000026b6000026b6000026b6000026b6000026b6000026b6
000026b6000026b6000026b6000026b6000026b6000026b6000026b60000
26b6000026b6000026b6000026b6000026b6000026b6000026b6000026b6
000026b6000026b6000026b6000027d6000027d6000027d6000027d60000
27d6000027d6000027d6000027d6000027d6000027d6000027d600002944
00002af400002af400002af400002af400002af400002c1400002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002cde
00002cde00002cde00002cde00002cde00002cde00002cde00002cde0000
2cde00002cde00002cde00002cde00002cde00002cde00002cde00002d40
00002d4000002d4000002d8400002d8400002d8400002de600002de60000
2de600002de600002de600002de600002de600002de600002de600002de6
00002de600002de600002de600002de600002de600002de600002de60000
2de600002de600002de600002de600002de600002de600002de600002de6
00002de600002de600002de600002de600002de600002de600002de60000
2de600002de600002de600002de600002de600002de600002de600002de6
00002de600002de600002de600002de600002de600002de600002de60000
2de600002de600002de600002de600002de600002de600002de600002de6
00002de600002de600002de600002de600002de600002de600002de60000
2de600002de600002de600002de600002de600002de600002de600002de6
00002de600002de600002de600002de600002de600002de600002de60000
2de600002de600002de600002de600002de600002de600002de600002de6
00002de600002de600002de600002de600002de600002de600002de60000
2de600002de600002de600002de600002de600002de600002de600002de6
00002de600002de600002de600002de600002de600002de600002de60000
2de600002de600002de600002de600002f4200002f4200002f4200002f42
00002f4200002f4200002f4200002f4200002f4200002f4200002f420000
2f4200002f4200002f4200002f4200002f4200002f4200002f4200002f42
00002f4200002f4200002f4200002f4200002f4200002f4200002f420000
2f4200002f4200002f4200002f4200002f4200002f4200002f4200002f42
000030a800003216000033560000353e000036c8000036c8000036d80000
381600003816000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000039880000398800003988000039880000398800003988
000039880000398800003988000039880000398800003988000039880000
398800003988000100000f260120001000c3000700020010002f00650000
11902410000400010000000e00ae00000003000000000064000000000003
00000007007600640001000000000000003200da0001000000000003000e
010c0001000000000004000e011a0001000000000006000e012800010000
00000007003b01360003000104090000006401710003000104090001001c
01d50003000104090002000e01f10003000104090003001c01ff00030001
04090004001c021b0003000104090006001c023700030001040900070076
025300a9002000320030003100320020004d006900630072006f0073006f
0066007400200043006f00720070006f0072006100740069006f006e002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064002e00430061006c006900620072006900200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200074006800650020004d006900630072006f0073006f00660074
002000670072006f007500700020006f006600200063006f006d00700061
006e006900650073002ea92032303132204d6963726f736f667420436f72
706f726174696f6e2e20416c6c205269676874732052657365727665642e
504f504346462b43616c69627269504f504346462b43616c69627269504f
504346462b43616c6962726943616c696272692069732061207472616465
6d61726b206f6620746865204d6963726f736f66742067726f7570206f66
20636f6d70616e6965732e00a9002000320030003100320020004d006900
630072006f0073006f0066007400200043006f00720070006f0072006100
740069006f006e002e00200041006c006c00200052006900670068007400
73002000520065007300650072007600650064002e0050004f0050004300
460046002b00430061006c00690062007200690052006500670075006c00
6100720050004f0050004300460046002b00430061006c00690062007200
690050004f0050004300460046002b00430061006c006900620072006900
50004f0050004300460046002b00430061006c0069006200720069004300
61006c006900620072006900200069007300200061002000740072006100
640065006d00610072006b0020006f006600200074006800650020004d00
6900630072006f0073006f00660074002000670072006f00750070002000
6f006600200063006f006d00700061006e006900650073002e00b2090320
b80284b40918014a20b80283b40918014a20b80282b40918014a20b80281
b40918014a20b80280b40918014a20b8027fb40918014a20b8027eb40918
014a20b8027db40918014a20b8027cb40918014a20b8027bb40918014a20
b8027ab40918014a20b80279b40918014a20b80278b40918014a20b80277
b40918014a20b80276b40918014a20b80275b40918014a20b80274b40918
014a20b80273b40918014a20b80271b40918014a20b80270b40918014a20
b8026fb40918014a20b8026eb40918014a20b8026db40918014a20b8026c
b40918014a20b8026bb40918014a20b8026ab40918014a20b80269b40918
014a20b80268b40918014a20b80267b40918014a20b80266b40918014a20
b80265b40918014a20b80264b40918014a20b80263b40918014a20b80262
b40918014a20b80261b40918014a20b80260b40918014a20b8025fb40918
014a20b8025eb40918014a20b8025db40918014a20b8025cb40918014a20
b8025bb40918014a20b8025ab40918014a20b80259b40918014a20b80258
b40918014a20b80257b40918014a20b80256b40918014a20b80255b40918
014a20b80254b40918014a20b80253b40918014a20b80252b40918014a20
b80251b40918014a20b80250b40918014a20b8024fb40918014a20b8024e
b40918014a20b8024db40918014a20b8024cb40918014a20b8024bb40918
014a20b8024ab40918014a20b80249b40918014a20b80248b40918014a20
b80247b40918014a20b80246b40918014a20b80245b40918014a20b80244
b40918014a20b80243b40918014a20b80242b40918014a20b80241b40918
014a20b80240b40918014a20b8023fb40918014a20b8023eb40918014a20
b8023db40918014a20b8023cb40918014a20b8023bb40918014a20b8023a
b40918014a20b80239b40918014a20b80238b40918014a20b80237b40918
014a20b80236b40918014a20b80235b40918014a20b80234b40918014a20
b80233b40918014a20b80232b40918014a20b80231b40918014a20b80230
b40918014a20b8022fb40918014a20b8022eb40918014a20b8022db40918
014a20b8022cb40918014a20b8022bb40918014a20b8022ab40918014a20
b80229b40918014a20b80228b40918014a20b80227b40918014a20b80226
b40918014a20b80225b40918014a20b80224b40918014a20b80223b40918
014a20b80222b40918014a20b80221b40918014a20b80220b40918014a20
b8021fb40918014a20b8021eb40918014a20b8021db40918014a20b8021c
b40918014a20b8021bb40918014a20b8021ab40918014a20b80219b40918
014a20b80218b40918014a20b80217b40918014a20b80216b40918014a20
b80215b40918014a20b80214b40918014a20b80213b40918014a20b80212
b40918014a20b80211b40918014a20b80210b40918014a20b8020fb40918
014a20b8020eb40918014a20b8020db40918014a20b8020cb40918014a20
b8020bb40918014a20b8020ab40918014a20b80209b40918014a20b80208
b40918014a20b80207b40918014a20b80206b40918014a20b80205b40918
014a20b80204b40918014a20b80203b40918014a20b80202b40918014a20
b80201b40918014a20b80200b40918014a20b801ffb40918014a20b801fe
b40918014a20b801fdb40918014a20b801fcb40918014a20b801fbb40918
014a20b801fab40918014a20b801f9b40918014a20b801f8b40918014a20
b801f7b40918014a20b801f6b40918014a20b801f5b40918014a20b801f4
b40918014a20b801f3b40918014a20b801f2b40918014a20b801f1b40918
014a20b801f0b40918014a20b801efb40918014a20b801eeb40918014a20
b801edb40918014a20b801ecb40918014a20b801ebb40918014a20b801ea
b40918014a20b801e9b40918014a20b801e8b40918014a20b801e7b40918
014a20b801e6b40918014a20b801e5b40918014a20b801e4b40918014a20
b801e3b40918014a20b801e2b40918014a20b801e1b40918014a20b801e0
b40918014a20b801dfb40918014a20b801deb40918014a20b801ddb40918
014a20b801dcb40918014a20b801dbb40918014a20b801dab40918014a20
b801d9b40918014a20b801d8b40918014a20b801d7b40918014a20b801d6
b40918014a20b801d5b40918014a20b801d4b40918014a20b801d3b40918
014a20b801d2b40918014a20b801d1b40918014a20b801d0b40918014a20
b801cfb40918014a20b801ceb40918014a20b801cdb40918014a20b801cc
b40918014a20b801cbb40918014a20b801cab40918014a20b801c9b40918
014a20b801c8b40918014a20b801c7b40918014a20b801c6b40918014a20
b801c5b40918014a20b801c4b40918014a20b801c3b40918014a20b801c2
b40918014a20b801c1b40918014a20b801c0b40918014a20b801bfb40918
014a20b801beb40918014a20b801bdb40918014a20b801bcb40918014a20
b801bbb40918014a20b801bab40918014a20b801b9b40918014a20b801b8
b40918014a20b801b7b40918014a20b801b6b40918014a20b801b5b40918
014a20b801b4b40918014a20b801b3b40918014a20b801b2b40918014a20
b801b1b40918014a20b801b0b40918014a20b801afb40918014a20b801ae
b40918014a20b801adb40918014a20b801acb40918014a20b801abb40918
014a20b801aab40918014a20b801a9b40918014a20b801a8b40918014a20
b801a7b40918014a20b801a6b40918014a20b801a5b40918014a20b801a4
b40918014a20b801a3b40918014a20b801a2b40918014a20b801a1b40918
014a20b801a0b40918014a20b8019fb40918014a20b8019eb40918014a20
b8019db40918014a20b8019cb40918014a20b8019bb40918014a20b8019a
b40918014a20b80199b40918014a20b80198b40918014a20b80197b40918
014a20b80196b40918014a20b80195b40918014a20b80194b40918014a20
b80193b40918014a20b80192b40918014a20b80191b40918014a20b80190
b40918014a20b8018fb40918014a20b8018eb40918014a20b8018db40918
014a20b8018cb40918014a20b8018bb40918014a20b8018ab40918014a20
b80189b40918014a20b80188b40918014a20b80187b40918014a20b80186
b40918014a20b80185b40918014a20b80184b40918014a20b80183b40918
014a20b80182b40918014a20b80181b40918014a20b80180b40918014a20
b8017fb40918014a20b8017eb40918014a20b8017db40918014a20b8017c
b40918014a20b8017bb40918014a20b8017ab40918014a20b80179b40918
014a20b80178b40918014a20b80177b40918014a20b80176b40918014a20
b80175b40918014a20b80174b40918014a20b80173b40918014a20b80172
b40918014a20b80171b40918014a20b80170b40918014a20b8016fb40918
014a20b8016eb40918014a20b8016db40918014a20b8016cb40918014a20
b8016bb40918014a20b8016ab40918014a20b80169b40918014a20b80168
b40918014a20b80167b40918014a20b80166b40918014a20b80165b40918
014a20b80164b40918014a20b80163b40918014a20b80162b40918014a20
b80161b40918014a20b80160b40918014a20b8015fb40918014a20b8015e
b40918014a20b8015db40918014a20b8015cb40918014a20b8015bb40918
014a20b8015ab40918014a20b80159b40918014a20b80158b40918014a20
b80157b40918014a20b80156b40918014a20b80155b40918014a20b80154
b40918014a20b80153b40918014a20b80152b40918014a20b80150b40918
014a20b8014fb40918014a20b8014eb40918014a20b8014cb40918014a20
b8014bb40918014a20b8014ab40918014a20b80149b40918014a20b80148
b40918014a20b80147b40918014a20b80146b40918014a20b80145b40918
014a20b80144b40918014a20b80143b30918014ab80284b21e3e1fb80283
b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8027fb21e
3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027bb21e3e1f
b8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d431fb802
76b21d431fb80275b21d411fb80274b21d431fb80273b21d431fb80272b2
1d411fb80271b21d421fb80270b21d421fb8026fb21d421fb8026eb21d43
1fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab21c451fb8
0269b21c451fb80268b21c451fb80267b21c451fb80266b21c441fb80265
b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb80261b21c
451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025db21c451f
b8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c451fb802
58b21c451fb80257b21c451fb80256b21c451fb80255b21c451fb80254b2
1c451fb80253b21c451fb80252b21c451fb80251b21c451fb80250b21c45
1fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb21c451fb8
024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a1fb80247
b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb80243b21b
4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023fb21b4a1f
b8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b4b1fb802
3ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1fb80236b2
1b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb80232b21b4a
1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb21b4c1fb8
022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c1fb80229
b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb80225b21b
4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221b21b4b1f
b80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b4c1fb802
1cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1fb80218b2
1a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb80214b21a4f
1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b21a4e1fb8
020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e1fb8020b
b21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb80207b21a
4f1fb80206b219501fb80205b219511fb80204b219511fb80203b219501f
b80202b219511fb80201b219511fb80200b219511fb801ffb219511fb801
feb219501fb801fdb219511fb801fcb219511fb801fbb219511fb801fab2
19501fb801f9b219511fb801f8b219511fb801f7b219511fb801f6b21951
1fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b218541fb8
01f1b218541fb801f0b218531fb801efb218541fb801eeb218541fb801ed
b218541fb801ecb218531fb801ebb218531fb801eab218541fb801e9b218
541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5b218541f
b801e4b218531fb801e3b218541fb801e2b218541fb801e1b218541fb801
e0b218531fb801dfb218531fb801deb218541fb801ddb218541fb801dcb2
18541fb801dbb218541fb801dab218531fb801d9b218541fb801d8b21854
1fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b217571fb8
01d3b217571fb801d2b217571fb801d1b217571fb801d0b217561fb801cf
b217561fb801ceb217571fb801cdb217571fb801ccb217571fb801cbb217
571fb801cab217561fb801c9b217561fb801c8b217571fb801c7b217571f
b801c6b217571fb801c5b217571fb801c4b217571fb801c3b217561fb801
c2b217571fb801c1b217571fb801c0b217571fb801bfb217561fb801beb2
17561fb801bdb217571fb801bcb217571fb801bbb217571fb801bab21757
1fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b217571fb8
01b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b1fb801b1
b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb801adb216
5b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9b2163f1f
b801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b2165b1fb801
a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801a0b2
165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb8019cb2165b
1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2163e1fb8
0197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e1fb80193
b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8018fb216
5b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018bb2165b1f
b8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b2165b1fb801
86b215611fb80185b215621fb80184b215621fb80183b215661fb80182b2
15661fb80181b215551fb80180b215451fb8017fb215361fb8017eb21536
1fb8017db215611fb8017cb215621fb8017bb215621fb8017ab215641fb8
0179b215661fb80178b215661fb80177b215661fb80176b215661fb80175
b215661fb80174b215661fb80173b215451fb80172b215621fb80171b215
621fb80170b215631fb8016fb215641fb8016eb215661fb8016db215661f
b8016cb215661fb8016bb215661fb8016ab215661fb80169b215621fb801
68b215621fb80167b215611fb80166b215641fb80165b215641fb80164b2
15661fb80163b215661fb80162b215661fb80161b215661fb80160b21566
1fb8015fb215661fb8015eb215551fb8015db215451fb8015cb215451fb8
015bb215361fb8015ab215611fb80159b215621fb80158b215621fb80157
b215631fb80156b215641fb80155b215661fb80154b215661fb80153b215
661fb80152b215661fb80151b214401fb80150b214551fb8014fb214561f
b8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214401fb801
4ab214411fb80149b214401fb80148b214401fb80147b214411fb80146b2
147e1fb80145b214871fb80144b2147f1fb80143b214801fb80142b21246
1fb80141b212461fb80140b212461fb8013fb212461fb8013eb212441fb8
013db212461fb8013cb211591fb8013bb211591fb8013ab2115b1fb80139
b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb80135b211
5b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131b211551f
b80130b211571fb8012fb211571fb8012eb211581fb8012db211591fb801
2cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1fb80128b2
115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb80124b21156
1fb80123b211571fb80122b211581fb80121b211591fb80120b2115a1fb8
011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8011b
b2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb80117b210
5f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113b2105f1f
b80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb2105f1fb801
0eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1fb8010ab2
105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb80106b2105d
1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2105f1fb8
0101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f621f
fb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f641ff40f
621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641fed0f621f
ec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e671fe50e
681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681fde0e681f
dd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d311fd60d
6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1f
ce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d
691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f40ffc00d
311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c741f
b80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c741fb10c
741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1f
a90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b
791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f
9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f930b
7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f
8503251f8403381f8301381f8255805581ab80557f557d557eab7d550b7d
010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a557955775578
ab7755ba028600660285403c5576ab755504751475747503f47501ab7501
44750130750102007510752075030c7455725573ab7255007250728072b0
72043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c720d104671
556f5570ab6f556e666d556a03251f6938675568ab67556638645565ab64
5563386255613860555f385d555eab5d555c385a555bab5a555938585557
03251f5638545555ab54555338515552ab51554f384e554e03251f4d384b
554cab4b554a38485549ab4855473846554503381f001c101c201c0310b8
ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc01b03120f
1a1f1a02290f1901434f19016f197f198f19030f18cf18024018292c460f
17cf17df17ef1704134017292e460016101620160315b8ffc0b3164d5446
b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f15010f15
1f1502451f15010011e011f0110315bf10cf10020f0f010f0fff0f02400f
3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f0d1f0dff
0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f0b02400b
3f4346400b2d30460003012001010001100120010308b8ffc0b301151f46
b80100b316010501b80190b154532b2b4bb80800524bb008505bb00188b0
2553b00188b040515ab00688b000555a5b58b101018e59b101024354b014
4b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0805358b0
401d594bb0ff5358b0001db1160042592b5e7375732b2b745e732b2b5e73
742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b7374755e73
5e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b
2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2bb1000243545841ff0284006402830064028200640281
006402800064027f0064027e0064027d0064027c0064027b0064027a0064
027900640278006402770064027600640275006402740064027300640271
006402700064026f0064026e0064026d0064026c0064026b0064026a0064
026900640268006402670064026600640265006402640064026300640262
00640261006402600064025f0064025e0064025d0064025c0064025b0064
025a00640259006402580064025700640256006402550064025400640253
0064025200640251006402500064024f0064024e0064024d0064024c0064
024b0064024a006402490064024800640247006402460064024500640244
006402430064024200640241006402400064023f0064023e0064023d0064
023c0064023b0064023a0064023900640238006402370064023600640235
00640234006402330064023200640231006402300064022f0064022e0064
022d0064022c0064022b0064022a00640229006402280064022700640226
0064022500640224006402230064022200640221006402200064021f0064
021e0064021d0064021c0064021b0064021a006402190064021800640217
006402160064021500640214006402130064021200640211006402100064
020f0064020e0064020d0064020c0064020b0064020a0064020900640208
0064020700640206006402050064020441ff006402030064020200640201
00640200006401ff006401fe006401fd006401fc006401fb006401fa0064
01f9006401f8006401f7006401f6006401f5006401f4006401f3006401f2
006401f1006401f0006401ef006401ee006401ed006401ec006401eb0064
01ea006401e9006401e8006401e7006401e6006401e5006401e4006401e3
006401e2006401e1006401e0006401df006401de006401dd006401dc0064
01db006401da006401d9006401d8006401d7006401d6006401d5006401d4
006401d3006401d2006401d1006401d0006401cf006401ce006401cd0064
01cc006401cb006401ca006401c9006401c8006401c7006401c6006401c5
006401c4006401c3006401c2006401c1006401c0006401bf006401be0064
01bd006401bc006401bb006401ba006401b9006401b8006401b7006401b6
006401b5006401b4006401b3006401b2006401b1006401b0006401af0064
01ae006401ad006401ac006401ab006401aa006401a9006401a8006401a7
006401a6006401a5006401a4006401a3006401a2006401a1006401a00064
019f0064019e0064019d0064019c0064019b0064019a0064019900640198
006401970064019600640195006401940064019300640192006401910064
01900064018f0064018e0064018d0064018c0064018b0064018a00640189
006401880064018700640186006401850064418001840064018300640182
00640181006401800064017f0064017e0064017d0064017c0064017b0064
017a00640179006401780064017700640176006401750064017400640173
0064017200640171006401700064016f0064016e0064016d0064016c0064
016b0064016a006401690064016800640167006401660064016500640164
006401630064016200640161006401600064015f0064015e0064015d0064
015c0064015b0064015a0064015900640158006401570064015600640155
006401540064015300640152006401500064014f0064014e0064014c0064
014b0064014a006401490064014800640147006401460064014500640144
0064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[14729 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 11486 853 <0001002afede017300e0001b000ab20b171c0010d4cd313025140e020707
0e0323222e02371335343e0233321e020173060e171189050d1319131117
0a0104850b18241a1924170b8f1f342e2d19ce070a080303070c08011380
1b20100606102000>BAJRMX+Calibri AddT42Char 
2 11584 856 <00010097fff7016e00e0000b0017b10006b8ffc0b60c014d0609034c003f
cd012f2bc13130251406232226353436333216016e2f3e3c2e2f3e3c2e6d
472f2e45472f2e00>BAJRMX+Calibri AddT42Char 
2 1896 47 <000100acfffa0158051400150050b73f174f17af170300b8ffe8b310014d
00b8fff0b30f014d00b8fff0b30d014d00b8fff6b30c014d00b8ffe8b30b
014d00ba0211000affc0b715014d0a10520555003f3f012f2be12b2b2b2b
2b31305d25140e0223222e023511343e0233321e02150158081421191822
140809152117192114081a080c070505070c0804da080c070505070c0800
>BAJRMX+Calibri AddT42Char 
2 2904 87 <000200acfffa03c7050e001c00290078b12406b8ffe8b310014d06b8fff0
b30f014d06b8fff0b30d014d06b8fff6b30c014d06b8ffe8b30b014d06b8
02114017111d1810014d1d100f014d1d100c0d014c1d200b014d1db80232
b2001125b8010ab306060c23b8010bb315510c55003f3fed12392fed012f
d4e12b2b2b2b10e12b2b2b2b2b32313001140e02232311140e0223222e02
351134363321321e0407342e0223231133323e0203c74077ad7893091321
19192114082a1a01152a4d696d4c29b53b575d2c9f9b4e6746240393619c
6e3cfe2e080c070505070c0804aa282207173f5c79574f6a340efdf92847
6300>BAJRMX+Calibri AddT42Char 
2 4148 258 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>BAJRMX+Calibri AddT42Char 
2 4498 271 <00020099ffed03d50571002a003d0085b53f3f010a2136b8fff6b30c014d
36b8fff0b30d014d36b8ffe8b30b014d36b8fff0b40f10014c36b801f840
1b152b120c014d2b200d014d2b180b014d2b1810014d2b100f014d2bb802
0a400900150a363521040530b80105b6264a1b46104c39b80105b1054d00
3fed3f3f3fed121739012fd4e12b2b2b2b2b10e12b2b2b2b323931305d01
140e0223222e022715140e0223222e023511343e0233321e0215113e0333
321e0207342e0223220e020711161633323e0203d53363905d2b49464627
08121b15141c12060713201819201208284b484828628b5728ae15345640
203e404527447c433e58371901e775bb844611263a296e080c070404070c
080538080c080404080c08fde5293823104e83b0754582643d122a4232fe
9953573c637b>BAJRMX+Calibri AddT42Char 
2 4804 272 <0001005affed032003c900350089b11c00b8ffc0b310014d00b8ffe0b30d
014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f014d27b8ff
eeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b400d2f0e01
0e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48312cb801
06b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b2b2b3231
3025140e0623222e0235343e0233321e0615140623222e0223220615141e
0233323e0233321e020320020507193c4b582f61966535417199592b5144
3518090602120d0f273c553a777f21405d3c39563f2b0c070a0703a21119
110d19251d12407bb37585bf7a3b101a22180e131812271f212821b7ae57
83582b242b2308131d00>BAJRMX+Calibri AddT42Char 
2 5084 282 <00020060ffed039c056d00260039008b401f3f3b010b1b39100d014d390a
0c014d391010014d39100f014d39180b014d39bb01f90000002fffe0b30d
014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d2fb8ffe8
b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a34b80104
b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b2b
323931305d25140e0223222e023535060623222e0235343e023332161711
343e0233321e021503262623220e0215141e0233323e0237039c07111c14
151c120847995b638c57283262915f4f834007141f1819201209a6437d44
3f58371915345641213d40462719080c070404070c08774d564d83b16274
bb84474543020b070d070505070d07fd4553573c627c404482653d122a43
3100>BAJRMX+Calibri AddT42Char 
2 5386 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>BAJRMX+Calibri AddT42Char 
2 5708 296 <00010025fffa02860578003c0064b2161000b8ffe0b40b014d001bb8fff0
b30d014d1bb8fff0b40f10014c1bb8fff6b30c014d1bb8ffe8b30b014d1b
b801f9b2302a25b8ffd040121011014c250aed36471a26ed3048204c1048
003f3f3fed323fed012f2bc433f12b2b2b2bc42b33c4313001140e022322
2e0223220e02151533321e02151406232311140e0223222e023511232226
35343e02333335343e0233321e0402860405080607151e291b2534200ec9
080b0905120fc908132018182013087f101004080c087f23486d4a234224
0c0803050f13170e05090b091833513a6207111a132420fceb080b080404
080b0803152024131a11075d5e8756290d0f0c131b00>BAJRMX+Calibri AddT42Char 
2 5970 336 <00030035fe93038903c8003e004e005f00d04015122d47100f014d47080c
014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d3fb8ffe0
b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707b8ffe0b3
10014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040340b014d
0058100f014d58201012014c582a25400b12014c250f300703384ada0c53
e81515603803e93c482a2042d9384a5bd9204f003fed3fed12393fed1112
392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b1112173910
cd2b10cd2b2b2b10cd2b2b2b10cd31300114062323161615140e02232226
27060615141617171e0315140e0223222e0235343e023726263534363726
2635343e023332161721321601342623220e0215141633323e0213342627
270e0315141633323e020389130f81231c325d804e37631b12174136eb43
70522e346ba6716d99622c10213120312f32251f24345c814c29471f0110
1111fefe655d30472f17655b31482f17535f51e92029180984764b653e1b
0374231f24572f4e78532c1d16122e1e232e020a02213d593b3e70553125
405934213e383319194c2c3d6026255d424d7a542d090821fef15c672038
492859661f3748fd5e3a3f0208192d29281541431d303e00>BAJRMX+Calibri AddT42Char 
2 6444 346 <00010099fffa03a0057100320079b43f34012a13b8ffe8b30b014d13b8ff
f0b40f10014c13b8fff6b30c014d13b8fff0b30d014d13b801f840171e0b
0a0c014d0b100d014d0b180b014d0b100f10014c0bb801f8400a00400c01
4d001e2a1910b80106b72d4a2446194c054c003f3f3f3fed1239012f2f2b
e12b2b2b2b10e12b2b2b2b3931305d25140e0223222e023511342e022322
060711140e0223222e023511343e0233321e021511363633321e021503a0
0812201819201208182e49303e7c44081220191820130707132018192012
084790495a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08
0404080b080538080c080404080c08fde54b493d66896100>BAJRMX+Calibri AddT42Char 
2 6708 349 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
2900>BAJRMX+Calibri AddT42Char 
2 7258 367 <00010099fffa013e057100150040b73f174f176f170300b8fff0b30d014d
00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00b801f8b4
0a1046054c003f3f012fe12b2b2b2b31305d25140e0223222e023511343e
0233321e0215013e0812201918201307071320181920120819080b080404
080b080538080c080404080c0800>BAJRMX+Calibri AddT42Char 
2 7842 374 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>BAJRMX+Calibri AddT42Char 
2 8132 381 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>BAJRMX+Calibri AddT42Char 
2 8416 393 <00020099fe9403d503ca002a003d0080b53f3f0121360ab8fff0b30d014d
0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0ab801f840
17152b200d014d2b120c014d2b180f10014c2b180b014d2bb8020a400900
150a363521040530b80105b6264a1b49104f39b80105b1054d003fed3f3f
3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d01140e022322
2e022711140e0223222e023511343e0233321e0215153e0333321e020734
2e0223220e020711161633323e0203d53363925e28444140240812201918
20130706121c14151b1207294c4d512d628a5728ae15335640203e404627
447a433e59371a01e976bc834710223423fe3e080c080404080c0804e909
0b080303080b09792a3e29154c84af754581643c13294331fe9a53583c64
7c00>BAJRMX+Calibri AddT42Char 
2 9024 396 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>BAJRMX+Calibri AddT42Char 
2 9266 400 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>BAJRMX+Calibri AddT42Char 
2 9662 410 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>BAJRMX+Calibri AddT42Char 
2 9910 437 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>BAJRMX+Calibri AddT42Char 
2 10198 448 <00010022fffa037b03bc002c00e3b90023fff840170b0c014c1f080b0c01
4c251f011e080b0c014c251e0116b8fff0b30b014d15b8fff0b30b014d14
b8ffe8b30b014d13b8ffe8b30b014d12b8ffe8b30b014d11b8fff040370b
014d37110126110127100128050122280b014d3d220124220121280b014d
3f210124210120280b014d3d2001242001270f0176210121b8ffd0400911
1548212013014d21b8ffe8400910014d21200f014d21b8ffe8b30c014d21
b8fff0400c0b014d212849210b1a490b4c003f3f12393f012f2b2b2b2b2b
002b5d31305d5d5d2b5d5d2b5d5d2b015d5d5d5d2b2b2b2b2b2b5d2b5d2b
2b01140e0207010e0323222e0227012e0235343e0233321e021713173713
3e0333321e02037b01020302fecd040d1a281e1e28190e04fece04050108
131f171d23130904fe0403fb020a13211b171e1107039f04090a0c07fca9
0b0e080304080e0a03570c120903080c070203080c09fd1a0c0c02e6090c
080302080b00>BAJRMX+Calibri AddT42Char 
2 10564 449 <00010035fffa058403bc004500deb90047ffc0403d0f014d38080c014d29
380137080c014d252e01262101262001261f01261e01261d01271c012804
012903013a3b013b3a013b2d013c2c01102015014d10b8ffe0b310014d10
b8ffe0400a0d014d10200c014d100fb8ffe0b310014d0fb8ffe0400c0d01
4d0f200c014d0f414910b8ffe040200f014d3f104f106f107f1004104012
164810334925493a902c012c200f014d2cb8ffc04010131648672c772c02
452c012c174c094c003f3fd55d5d2b2b5dc43f3fcd2b5d2b3f012f2b2b2b
2f2b2b2b2b3130005d5d5d5d015d5d5d5d5d5d5d5d5d2b5d2b2b01140607
010e0323222e0227032707030e0323222e022701262635343e0233321e02
17131737133e0333321e0217131737133e0333321e0205840405fef7030d
17281e1f2a190c03bd0202af030d1a291e1f27190c03fef9050408132017
1c22120803d90202c70209121f19181f120802d70201d6020913211a181d
1107039f07140ffca90b0e080304080e0a028d0909fd730b0e080304080e
0a03570f1407090b070203070d09fd1a090902e6090d070303070c08fd18
090902e6090d070302080a00>BAJRMX+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>BAJRMX+Calibri AddT42Char 
BAJRMX+Calibri /CharStrings get begin
/comma 853 def
/period 856 def
/I 47 def
/P 87 def
/a 258 def
/b 271 def
/c 272 def
/d 282 def
/e 286 def
/f 296 def
/g 336 def
/h 346 def
/i 349 def
/l 367 def
/n 374 def
/o 381 def
/p 393 def
/r 396 def
/s 400 def
/t 410 def
/u 437 def
/v 448 def
/w 449 def
end
BAJRMX+Calibri /Encoding get
dup 44 /comma put
dup 46 /period put
dup 73 /I put
dup 80 /P put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
pop
end
%ADOEndSubsetFont
/KEFPBJ+Calibri /BAJRMX+Calibri findfont ct_VMDictPut/KEFPBJ+Calibri*1 [44{/.notdef}rp /comma /.notdef /period 26{/.notdef}rp /I 6{/.notdef}rp /P 16{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u /v /w 136{/.notdef}rp]KEFPBJ+Calibri nfKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf240.017 108.882 mo(In)[2.64075 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf248.177 108.882 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf250.577 108.882 mo(an)[5.04004 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf261.137 108.882 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf263.537 108.882 mo(accident,)[5.02954 4.44156 4.44153 2.40454 5.51245 5.229 5.39587 3.48083 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf302.117 108.882 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf304.518 108.882 mo(a)shKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf309.558 108.882 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf311.898 108.882 mo(car)[4.38168 5.04004 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf324.978 108.882 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf327.378 108.882 mo(crashed)[4.43839 3.42404 5.0264 4.10242 5.50928 5.22586 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf360.558 108.882 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf362.958 108.882 mo(through)[3.51968 5.51453 3.48389 5.51663 5.51453 4.94754 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf396.978 108.882 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf399.379 108.882 mo(the)[3.53122 5.52609 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf413.659 108.882 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf240.019 124.482 mo(guardrail)[4.94647 5.51349 5.03058 3.54376 5.51349 3.42404 5.03058 2.40558 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf277.819 124.482 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf280.22 124.482 mo(into)[2.39508 5.3959 3.42096 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf296.96 124.482 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf299.36 124.482 mo(the)[3.53122 5.52609 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf313.64 124.482 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf316.04 124.482 mo(river.)[3.65924 2.39929 4.62311 5.22482 2.58401 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf337.16 124.482 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf339.56 124.482 mo(People)[5.16388 5.22482 5.57648 5.51556 2.39511 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf368.66 124.482 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf371.06 124.482 mo(found)[2.93784 5.5166 5.51559 5.51559 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf396.081 124.482 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf398.481 124.482 mo(that)[3.53122 5.52609 4.92032 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf415.941 124.482 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf240.021 140.082 mo(the)[3.53122 5.52609 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf254.301 140.082 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf256.702 140.082 mo(guardrail)[4.94647 5.51349 5.03058 3.54376 5.51349 3.42404 5.03058 2.40558 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf294.502 140.082 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf296.842 140.082 mo(was)[7.38147 5.04004 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf313.342 140.082 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf315.742 140.082 mo(built)[5.50824 5.50824 2.40033 2.40036 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf335.122 140.082 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf337.522 140.082 mo(with)[7.5148 2.4119 3.52493 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf356.422 140.082 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf358.822 140.082 mo(reed)[3.54373 5.22482 5.22482 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf378.322 140.082 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf380.722 140.082 mo(which)[7.5043 5.50931 2.40137 4.43842 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf406.102 140.082 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf240.022 155.682 mo(should)[4.09613 5.50296 5.52399 5.50299 2.39508 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf268.582 155.682 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf270.983 155.682 mo(be)[5.51559 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf281.723 155.682 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf284.123 155.682 mo(built)[5.50824 5.50824 2.40033 2.40036 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf303.503 155.682 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf305.904 155.682 mo(with)[7.5148 2.4119 3.52493 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf324.863 155.682 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf327.264 155.682 mo(steel)[3.95856 3.42099 5.22479 5.22482 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf347.484 155.682 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf349.884 155.682 mo(bar.)[5.45889 4.97598 2.58405 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf365.603 155.682 mo(\000\003)sh2.17714 97.4828 mo
428.777 97.4828 li
428.777 97.0029 li
2.17714 97.0029 li
cp
f
2.17714 159.883 mo
2.65714 159.883 li
2.65714 97.4828 li
2.17714 97.4828 li
cp
f
64.2771 159.883 mo
64.7571 159.883 li
64.7571 97.4828 li
64.2771 97.4828 li
cp
f
234.377 159.883 mo
234.857 159.883 li
234.857 97.4828 li
234.377 97.4828 li
cp
f
428.297 159.883 mo
428.777 159.883 li
428.777 97.4828 li
428.297 97.4828 li
cp
f
%ADOBeginSubsetFont: BAJRMX+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KEFPBJ+Calibri gcheck setglobal} if
2 12098 1004 <00020048ffed03c705210013002b00ea4019281201291101260d01260c01
2608012507012a03012902012db8ffc040250f024d602d01141810014d14
100f014d14160d014d140a0c014d14200b014d14180c014d14bb022d0000
0020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8fff6b30c
014d20b8ffe8b60c014d24200120b8022d40090a200030004000030ab8ff
f040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00b8ffc040
0a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003fed3fed11
120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b2b2b3130
5d2b5d5d5d5d5d5d5d5d01140e0223222e0235343e0233321e0207342e04
23220e0215141e0233323e0403c72f6db0817aa7662b306cb0807ba7662b
b00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b16157a9f7
a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e7285>KEFPBJ+Calibri AddT42Char 
2 12456 1005 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a00>KEFPBJ+Calibri AddT42Char 
2 12822 1006 <000100720000039c0521003e0094400d2936012b1e01291d01261e0140b8
ffc040170f024d604001161810014d16100c0d014c16200b014d16b8022d
b633253325330039b8ffe8b310014d39ba027f000bffc0b30c014d0bb8ff
e0400b0f014d0b1138392020391bb8012eb63316062e531039b80128b106
54003fed323f123939ed11392f123939012f2b2be12bcd39392f2f10e12b
2b2b31305d2b005d015d5d5d25140e022321222e0235343e0237133e0335
342e0223220e0223222e0235343e0633321e0215140e02070721321e0203
9c05090f09fd350e150f07030a0f0cfb576939121c3550343d6149310c07
0b0704020508183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c13
0907101e16141e17170d010a5c9278622b2b4d3a2222282208121e150f16
100e15242318355c7a453e7b8faf72d609121b00>KEFPBJ+Calibri AddT42Char 
2 13142 1007 <00010067ffed0392052100580105b9005affc0401c0f024d605a01310810
014d31100f014d31100c0d014c31200b014d31b80235400a4e53264e4e18
13014d40b8ffe840260f014d26200f014d40264e4e2640030e1b0810014d
1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8022db500
080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b30f014d0e
b8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ffc0b30f01
4d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf320200549
5316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b5d2b2b01
2f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910e12b2b2b
2b31305d2b01140e0223222e0635343633321e0233323e0235342e022323
222e0235343e023333323e0235342e0223220e0223222e0235343e063332
1e0215140e0207151e0303923e74aa6b4171583a0f0806030e0d0935536f
44426444222b53794d7b080f0b07060b0e0971426949271a3451353a614c
320a070b0703020608133a556f405a885b2d203e5a3b436f502d0172598f
6637151d1f0e0e141d15241c202520223e55323758402207101a1513190f
07224059372849361f232823050f1b160f17110e132423182e5475473d69
51390b020735506b>KEFPBJ+Calibri AddT42Char 
2 13630 1008 <00020030fffa03d30514002a002e00fb403a252e01262d01272c01242701
242601251c01261b01231a01241901251801251701261601261501261401
261001260f012405012404012b1b0130b8ffc040120f024d6030012d1618
0f024d162010014d16b8ffe0b30f014d16b8ffe0b70c014d161c2e2e10b8
fffc401d0f024d101810014d10100f014d10100d014d100a0c014d10100b
014d10bb021100270004ffd4b30f024d04b8ffd0b30c014d04b8ffe0400a
0b014d0404302f271b2eb8010b400a042b2110100a21520a55003f3f1239
2f123933ed3232111201392f2b2b2b33e12b2b2b2b2b2b321133cd2b2b2b
2b3231305d2b005d015d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d011406
232311140e0223222e02351121222e0235343e0237013e0333321e021511
3332160123012103d31412920814201918201307fdea0c100d0502060a07
01d205131e2c1e21311e10921115fea102fe5b01a701702126fef0080b08
0404080b08011006101e18131e19170d0312080c080305080d09fcc62302
e9fd3a00>KEFPBJ+Calibri AddT42Char 
2 322 4 <00020023fffa047e051400220026009db90024ffe8b40c10014c23b8ffe8
b40c10014c26b8fff0b40b10014c0bb8fff0b40b10014c0ab8fff0401a0b
10014c25100b10014c0d100b10014c0c100b10014c40280125b8fff0402c
0b014d24232625f40c0b0c18221d230a0d0116040c000c100c02af23bf23
cf2303230c230c121d5212550555003f3f3f1239392f2f5d5d1117391112
3939113310ed3211333130012b5d2b2b2b2b2b2b002b2b25161606062322
2e02270321030e03232226263637013e0333321e02170723032104750801
10251f1f251309046ffde66a030a13231c1d250f010801b2040d19271e20
2a1a0e047b01df01c23d161b0e0403070c09013bfec9090d0904050e1b16
04b20b0e080303080f0b8dfd7b00>KEFPBJ+Calibri AddT42Char 
2 2046 58 <00010007ffee01e4051400280058b90000ffe8b310014d00b8fff0b30f01
4d00b8fff0b30d014d00b8fff6b30c014d00b8ffe8b30b014d00ba021100
1dffc0b711014d1d0e235209bb013200130018012eb10556003ffdd4ed3f
012f2f2be12b2b2b2b2b313001140e0223222e0635343e0233321e023332
3e023511343e0233321e021501e41c446f521c372e220b07050203080b08
0819232e1f22302010081421191822130901464d805a31090f110c0c1119
12161d11070f120f112e5141039e070c080404080c07>KEFPBJ+Calibri AddT42Char 
2 2248 68 <000100acfffa062b050e003c00ac4010603e703e020d3030172f2f0a2e18
181ab8ffe8b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b3
0c014d1ab8ffe8b30b014d1ab80211401e24310c0c0a1810014d0a100f01
4d0a100d014d0a0a0c014d0a180b014d0aba02110000ffc040190b014d00
2436510b18170d2f18312e061f28511f5512550555003f3f3f3f12173911
333f012fd42be12b2b2b2b2b32113310e12b2b2b2b2b32113311393d2f33
33113331305d25140e0223222e02351123010e0323222e0227012311140e
0223222e02351134363333321e02170133013e033333321e0215062b0814
1f191721130802fe33030b151d14151e140b02fe47010814201918201307
2c1b68203024180901770501860b1a1f26196d0f1b130c1a080c07050507
0c080467fb94070a070304070a06046cfb99080c070505070c0804a62a24
0c1a281bfc5703a61e2a190b09131d15>KEFPBJ+Calibri AddT42Char 
2 3146 94 <00010047ffed03630521004900e7b90041ffe8b40f10014c41b8fff0b30d
014d41b8fff0b310014d41b8fff0b30c014d41b8ffe8b30b014d41b8022c
402b32401314014c324011014d243224320c1b180f10014c1b100d014d1b
1010014d1b100c014d1b180b014d1bba02310000ffc0b31b014d00b8ffc0
b319014d00b8ffc0b314014d00b8ffc0b60f11014c000c2ebb0127003700
0a0126400b1120370137400b0c014c11b8ffc0400a0b0c014c3711371116
3cb8010cb5411b05295316b80129b10556003fed3f123939ed1139392f2f
2b2b5d10ed10ed012fd42b2b2b2be12b2b2b2b2b1239392f2f2b2be12b2b
2b2b2b313001140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0603634377a15d41
6f573b170b04080c080e3350714a385d43243252696e6852333b6991542b
574d3c1306040203060b070b2f445d3a3650341a32536a6e6a5333016b5b
8e633216202218251f161d12072228231e375033374e3b31333e54714f51
7f562d0f191f130b111813121c13091c231d1d304225364e3c32333d5371
>KEFPBJ+Calibri AddT42Char 
2 3566 100 <0001000ffffa03d7050e00220065b718400d014d181100b8ffc0b40d014d
0006b8ffe8b310014d06b8fff0b30f014d06b8fff0b30d014d06b8fff6b3
0c014d06b8ffe8b30b014d06ba02110011ffc0b50d014d110612b80128b3
1d510c55003f3fed32012f2bf12b2b2b2b2bc52b10c42b313001140e0223
2111140e0223222e02351121222e0235343e023321321e0203d704090d08
fe940814211918221408fe94080d080505080d080384080d090404c4131c
1108fb9e080c070505070c08046208111c13131d120808121d00>KEFPBJ+Calibri AddT42Char 
2 6950 364 <00010099fffa037c057100340095400c3f3601293101314012014d31b8ff
d0b40f10014c31b8ffe0b30d014d31b8ffeab30c014d31b8ffe0b30b014d
31bb02270022000cfff0b40f10014c0cb8fff0b30d014d0cb8fff6b30c01
4d0cb8ffe8b30b014d0cb801f8401a162d2d00400f014d00400c014d0016
220b0528491c46114c054c003f3f3f3f123939012fc42b2b392f10f12b2b
2b2b32e02b2b2b2b2b31305d5d25140e0223222e02270111140e0223222e
023511343e0233321e021511013e0333321e021514060701011616037c08
13221a1b23180f06fe840812201918201307071320181920120801540812
192218192215090d0ffeba016e0d0b1a080c080403070d0901f2fe0d080b
080404080b080538080c080404080c08fcd201760a0d090303070b090c18
10febafe25111500>KEFPBJ+Calibri AddT42Char 
2 11284 455 <00010022fe94037c03bc00240052b9001bfff040350b014d371b01291b01
18180b014d261801260e360e022709011a400b014d3a1a0119380b014d3b
19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b5d2b015d
5d5d2b5d5d2b2103060623222e023713262627012634363633321e021701
33133e023332161614070233780631321a201102067c091003febf081024
1e1e22140905010103f8061122201c241106feb51011050c140e01390412
0a035c15180e0503080f0dfd2e02d6130b05050e1812>KEFPBJ+Calibri AddT42Char 
KEFPBJ+Calibri /CharStrings get begin
/zero 1004 def
/one 1005 def
/two 1006 def
/three 1007 def
/four 1008 def
/A 4 def
/J 58 def
/M 68 def
/S 94 def
/T 100 def
/k 364 def
/y 455 def
end
KEFPBJ+Calibri /Encoding get
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 65 /A put
dup 74 /J put
dup 77 /M put
dup 83 /S put
dup 84 /T put
dup 107 /k put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KEFPBJ+Calibri*1 [44{/.notdef}rp /comma /.notdef /period /.notdef /zero /one /two /three /four 12{/.notdef}rp /A 7{/.notdef}rp /I /J 2{/.notdef}rp /M 2{/.notdef}rp /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /.notdef /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]KEFPBJ+Calibri nfKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf14.0571 171.823 mo(The)[5.10615 5.50508 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf29.8974 171.823 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf32.2977 171.823 mo(third)[3.51967 5.51453 2.40665 3.54373 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf52.8179 171.823 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf16.5782 187.422 mo(week)[7.38146 5.22481 5.22482 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf39.1983 187.422 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf41.5986 187.422 mo(of)[5.51662 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf50.2989 187.422 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf22.8194 203.022 mo(2012)[5.34139 5.34138 5.34139 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf44.1197 203.022 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf69.9192 171.823 mo(Apple,)[6.07524 5.50824 5.50824 2.40033 5.22482 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf97.2791 171.823 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf99.6794 171.823 mo(4S,)[5.32039 4.81635 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf112.459 171.823 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf114.859 171.823 mo(iphone,)[2.39088 5.49879 5.49878 5.51978 5.49879 5.21536 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf147.139 171.823 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf149.54 171.823 mo(line)[2.39929 2.39929 5.50719 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf165.08 171.823 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf167.48 171.823 mo(up,)[5.51558 5.51558 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf181.16 171.823 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf183.561 171.823 mo(scalper,)[4.03207 4.36804 5.04004 2.39508 5.51559 5.22482 2.76358 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf215.541 171.823 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf69.9203 187.422 mo(Sanlitun)[4.81949 5.02954 5.51245 2.40454 2.40454 3.51756 5.51244 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf104.661 187.422 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf240.02 171.823 mo(Many)[8.99426 5.04633 5.33603 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf264.14 171.823 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf266.54 171.823 mo(scalpers)[4.09088 4.42682 5.01486 2.38983 5.49774 5.21429 3.48389 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf300.68 171.823 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf303.08 171.823 mo(lined)[2.39929 2.39929 5.50717 5.22379 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf324.14 171.823 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf326.54 171.823 mo(up)[5.51559 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf337.58 171.823 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf339.98 171.823 mo(to)[3.42096 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf348.92 171.823 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf351.32 171.823 mo(buy)[5.45575 5.51556 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf367.04 171.823 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf369.44 171.823 mo(the)[3.53122 5.52609 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf383.72 171.823 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf386.12 171.823 mo(Apple)[6.07419 5.5072 5.50717 2.39929 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf410.841 171.823 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf245.301 187.422 mo(iphone)[2.40244 5.51035 5.51035 5.53131 5.51035 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf275.001 187.422 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf277.401 187.422 mo(4S)[5.3414 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf287.541 187.422 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf289.941 187.422 mo(when)[7.5043 5.50931 5.22586 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf313.702 187.422 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf316.102 187.422 mo(it)[2.39508 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf322.042 187.422 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf324.442 187.422 mo(started)[3.99637 3.40836 5.04007 3.60358 3.40836 5.22482 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf354.622 187.422 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf357.023 187.422 mo(to)[3.36008 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf365.903 187.422 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf368.303 187.422 mo(sell)[4.09296 5.21643 2.39194 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf382.403 187.422 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf384.804 187.422 mo(at)[4.92035 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf393.264 187.422 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf245.304 203.022 mo(Sanlitun)[4.81949 5.02954 5.51245 2.40454 2.40454 3.51755 5.51245 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf280.044 203.022 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf282.444 203.022 mo(Apple)[6.07419 5.5072 5.50717 2.39929 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf307.165 203.022 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf309.565 203.022 mo(store)[3.98376 3.39578 5.5166 3.54376 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf331.225 203.022 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf333.626 203.022 mo(in)[2.39508 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf341.546 203.022 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf343.946 203.022 mo(January)[3.3663 5.04633 5.52927 5.45572 5.04636 3.68127 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf376.826 203.022 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf379.226 203.022 mo(13)[5.3414 0 ]xshKEFPBJ+Calibri*1 [7.02 0 0 -7.02 0 0 ]msf389.897 198.042 mo(th)[2.34052 0 ]xshKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf395.897 203.023 mo(.)shKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf398.477 203.023 mo(\000\003)sh2.17714 160.363 mo
428.777 160.363 li
428.777 159.883 li
2.17714 159.883 li
cp
f
2.17714 207.223 mo
2.65714 207.223 li
2.65714 160.363 li
2.17714 160.363 li
cp
f
64.2771 207.223 mo
64.7571 207.223 li
64.7571 160.363 li
64.2771 160.363 li
cp
f
234.377 207.223 mo
234.857 207.223 li
234.857 160.363 li
234.377 160.363 li
cp
f
428.297 207.223 mo
428.777 207.223 li
428.777 160.363 li
428.297 160.363 li
cp
f
%ADOBeginSubsetFont: BAJRMX+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KEFPBJ+Calibri gcheck setglobal} if
2 14358 1013 <00020052ffed03a605210030004200bd4013292e012a0501290401290301
2a2601260a0144b8ffc040200f024d60440131080d014d31100c0d014c1d
7a3101393149316931032b310131b8022c4009000e0e200070000200b8ff
e0b30f024d00b8ffe0b40f014d003bb8fff8b30d014d3bb8fff040120c0d
014c753b01363b463b663b03243b013bb8022b400e2f25012540f2202007
36f42a5318b80108b10756003fed3fed12392fed012f5de15d5d5d2b2bc4
2b2b5d392f10e15d5d5d322b2b31305d2b005d5d015d5d5d5d01140e0423
222e0435343e0233321e0233323e0237060623222e0235343e0233321e04
07342e0223220e0215141e0233323603a61430517ba9702b51412c140903
060b080b283d5233618b582c023594606c935927326aa472517d5c402711
af2242603f415c3b1c19385a424b8c02ba54ac9f8b683b0b1012121f1a16
1a0e050f120f4b7ea65c1f303b668c53569b7646294d6d8aa14680af6c30
2f4f64353b6244252d00>KEFPBJ+Calibri AddT42Char 
2 606 17 <000300ac00000401050e001e002b003800c8401a1f1810014d1f100f014d
1f100d014d1f180c014d1f200b014d1fb8022e40281a154010014d15400f
014d15150b2c1810014d2c100f014d2c100d014d2c180c014d2c200b014d
2cba02320000ffc0b50b014d002633b8ffe8b310014d33b8fff0b30f014d
33b8fff0b30d014d33b8fff6b30c014d33b8ffe8b30b014d33b80210400d
a00bc00b020b1a27f431310724b80109b2105134b8010bb10754003fed3f
ed12392fed39012f5de12b2b2b2b2b32d42be12b2b2b2b2b12392f2b2b39
e12b2b2b2b2b313001140e0423212226351134363321321e0215140e0207
1e0301342e0223231133323e0213342e0223231133323e0204011f384f63
7149feae17292917012674946332162b412a355c4528fefd1a385a4ab2c4
435236194e25476b51cefa3b58432601733d67523e2a151f270482271f2c
547a4d2e544738120a35526e02012f4c351cfe5d233b4ffddd3a583c1ffe
381c3752>KEFPBJ+Calibri AddT42Char 
2 970 18 <00010061fff0040c051e00390062b31c003b2bb8ffe8b310014d2bb8fff0
b30f014d2bb8ffecb30d014d2bb8ffeeb30c014d2bb8ffe8b30b014d2bbe
0233000e0018012f00210026012cb2135304bb012a00350030012eb10956
003ffdd4ed3ffdd4ed012fe12b2b2b2b2b10d6c4313025140e0623222e02
35343e0233321e0615140e0223222e0223220e0215141e0233323e023332
1e02040c02050814405f7b497ecb8f4d5396d17f386a5a461b0805030408
0b080e324f714f568d64373563905b4d7351340f070a0603b71018120e14
29271b54a4f19da1fcaf5c15202a1b0e131a12141c1309272f274586c17c
7bbd7f41262f2606111e>KEFPBJ+Calibri AddT42Char 
2 1220 24 <000200ac0000048f050e0012001f0077401d3f2101131810014d13100f01
4d13140d014d13120c014d13180b014d13bb02320000001affe8b310014d
1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8ffe8b30b
014d1abb021100090018010cb20e511bb80126b10554003fed3fed012fe1
2b2b2b2b2bd4e12b2b2b2b2b31305d01140e022321222635113436332132
1e0207342e0223231133323e02048f56a5f0a6feee172929170125a8e89d
51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e89969b5
844afc113e80c100>KEFPBJ+Calibri AddT42Char 
2 1686 38 <000100acfffa0354050e0027005cb10713b8ffe8b310014d13b8fff0b30f
014d13b8fff0b30d014d13b8fff6b30c014d13b8ffe8b30b014d13b80211
b50d1d001e1d07b8010cb313131906b80128b322511955003f3fed12392f
ed012f2fc41139e12b2b2b2b2b32313001140e0223211121321e0215140e
02232111140e0223222e02351134363321321e020354040a0d07fe2601c0
070d0a04040a0d07fe400814201a1822140829170246070d0a0404c4131c
1108fe4807101b15131b1109fde5070d070505070d0704ae271f08121d00
>KEFPBJ+Calibri AddT42Char 
2 3772 122 <0001001efffa03c70514002a0059b90000ffe8b310014d00b8fff0b30f01
4d00b8fff0b30d014d00b8fff6b30c014d00b8ffe8b30b014d00ba021100
0cffc0b317014d0cb8ffc0400c0d014d0c25521b0612520655003f3f1239
3f012f2b2be12b2b2b2b2b31300111140e0223222e023511012626363633
321e02171316161733363637133e03333216160607024908142218192115
08fe920b050f27211e25160b05b319321a02173119b4030b13221a242910
050b01f7fe23080c070505070c0801dd02da171a0e0404070d0afe8c3574
3b39713701760a0e0704050e1a16>KEFPBJ+Calibri AddT42Char 
2 3996 127 <0001003b00000394050e0029001ab12211b80126b31b510c27b80127b105
54003fed323fed32313025140e02232122263535343e02370121222e0235
343e02332132161515140e020701213216039404090d09fd041a20030a12
0d0255fdb20a0e090404090e0a02d01b1f040a110efdae0278111248131b
12082023250d16191f1503a608111b12141c12081f202710191a1e14fc5e
2200>KEFPBJ+Calibri AddT42Char 
2 7392 373 <00010099fffa05d003ca005000ea401b12100b014d13180b014d26100b0c
014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b014d13b8
fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8401e1e16
0d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f10014c0ab801
f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27b8fff0b3
10014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200100106b2
4b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f1239393f
ed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b2b2b2b39
31305d002b2b2b2b25140e0223222e023511342e022322060711140e0223
222e023511342e022322060711140e0223222e023511343e0233321e0215
15363633321e02173e0333321e021505d00812201819201308142c442e39
73450813201817211307162c432e397444081220191820130706121c1716
1d10074c8f4938594430102d514b47245776491f19080b080404080b0802
23395e44245855fd8b080b080404080b080223395e44245855fd8b080b08
0404080b080384080b090303090b0877554f1a2f412831442a133d66894c
>KEFPBJ+Calibri AddT42Char 
KEFPBJ+Calibri /CharStrings get begin
/nine 1013 def
/B 17 def
/C 18 def
/D 24 def
/F 38 def
/Y 122 def
/Z 127 def
/m 373 def
end
KEFPBJ+Calibri /Encoding get
dup 57 /nine put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 89 /Y put
dup 90 /Z put
dup 109 /m put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KEFPBJ+Calibri*1 [44{/.notdef}rp /comma /.notdef /period /.notdef /zero /one /two /three /four 4{/.notdef}rp /nine 7{/.notdef}rp /A /B /C /D /.notdef /F 2{/.notdef}rp /I /J 2{/.notdef}rp /M 2{/.notdef}rp /P 2{/.notdef}rp /S /T 4{/.notdef}rp /Y /Z 6{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]KEFPBJ+Calibri nfKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf10.9971 250.303 mo(The)[5.10615 5.50508 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf26.8374 250.303 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf29.2377 250.303 mo(fourth)[2.93782 5.51662 5.51559 3.66344 3.54066 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf55.9382 250.303 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf16.5779 265.902 mo(week)[7.38146 5.22481 5.22482 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf39.198 265.902 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf41.5983 265.902 mo(of)[5.51662 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf50.2986 265.902 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf22.8191 281.502 mo(2012)[5.34139 5.34138 5.34139 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf44.1194 281.502 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf69.9189 219.102 mo(Benshan)[5.70787 5.22481 5.50824 4.10136 5.50824 5.02533 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf106.519 219.102 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf108.919 219.102 mo(Zhao,)[4.91928 5.51768 5.03479 5.33603 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf132.379 219.102 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf134.78 219.102 mo(Year)[4.31654 5.22481 5.04005 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf153.019 219.102 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf155.419 219.102 mo(of)[5.51662 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf164.12 219.102 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf166.52 219.102 mo(the)[3.53122 5.52608 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf180.8 219.102 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf183.14 219.102 mo(Dragon,)[6.43027 3.42404 5.00223 4.91812 5.50613 5.48514 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf216.561 219.102 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf69.921 234.702 mo(short)[4.09506 5.50194 5.52293 3.65398 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf92.2409 234.702 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf94.6412 234.702 mo(comic)[4.40269 5.49457 8.40207 2.39508 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf119.781 234.702 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf122.182 234.702 mo(act,)[5.00433 4.41635 3.54066 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf137.781 234.702 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf140.182 234.702 mo(2012,)[5.28154 5.34138 5.3414 5.28154 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf164.062 234.702 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf166.462 234.702 mo(The)[5.10614 5.5051 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf182.303 234.702 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf184.643 234.702 mo(Spring)[4.81531 5.50824 3.66028 2.40033 5.50824 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf211.463 234.702 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf69.9232 250.302 mo(Festival,)[4.61475 5.22481 3.95857 3.54066 2.45494 4.56326 5.04004 2.3951 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf104.363 250.302 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf106.763 250.302 mo(evening)[5.16496 4.62311 5.22481 5.51558 2.45496 5.51558 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf140.184 250.302 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf142.584 250.302 mo(party,)[5.52188 5.039 3.67393 3.52702 4.02362 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf166.944 250.302 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf169.345 250.302 mo(sign)[4.08562 2.38458 4.92548 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf186.264 250.302 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf188.665 250.302 mo(out)[5.52606 5.5051 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf203.245 250.302 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf240.025 219.102 mo(Benshan)[5.70786 5.22482 5.50824 4.10138 5.50821 5.02536 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf276.625 219.102 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf279.025 219.102 mo(Zhao,)[4.91928 5.51767 5.03479 5.33603 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf302.486 219.102 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf304.886 219.102 mo(the)[3.53122 5.52609 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf319.106 219.102 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf321.506 219.102 mo(most)[8.38736 5.53131 3.95859 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf342.926 219.102 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf345.327 219.102 mo(famous)[2.99768 4.98019 8.40204 5.51663 5.51559 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf376.827 219.102 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf379.227 219.102 mo(comedy)[4.40268 5.4946 8.40204 5.22482 5.51559 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf413.006 219.102 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf240.026 234.702 mo(actor)[5.03479 4.44681 3.42096 5.51663 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf262.107 234.702 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf264.507 234.702 mo(in)[2.39508 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf272.427 234.702 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf274.827 234.702 mo(China,)[5.5766 5.49249 2.38458 5.49249 5.00958 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf301.467 234.702 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf303.867 234.702 mo(announced)[5.02954 5.51242 5.51245 5.53342 5.51245 5.51242 4.44156 5.229 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf351.688 234.702 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf354.028 234.702 mo(that)[3.50076 5.49564 4.92035 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf371.488 234.702 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf373.889 234.702 mo(he)[5.51559 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf384.629 234.702 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf387.029 234.702 mo(would)[7.38147 5.5166 5.51559 2.39508 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf413.37 234.702 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf240.029 250.302 mo(singn)[4.09192 2.3909 5.49878 4.93176 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf262.469 250.302 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf264.869 250.302 mo(out)[5.52606 5.5051 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf279.45 250.302 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf281.85 250.302 mo(the)[3.53122 5.52609 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf296.13 250.302 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf298.47 250.302 mo(Dragon)[6.46176 3.42404 5.03372 4.86249 5.53763 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf329.31 250.302 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf331.71 250.302 mo(Spring)[4.81531 5.50821 3.66031 2.40033 5.50824 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf358.59 250.302 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf360.99 250.302 mo(Festival)[4.61475 5.22482 3.95856 3.54068 2.39508 4.56326 5.04004 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf392.731 250.302 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf395.131 250.302 mo(for)[2.99768 5.5166 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf407.311 250.302 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf240.031 265.901 mo(the)[3.53122 5.52609 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf254.311 265.901 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf256.712 265.901 mo(first)[3.18561 2.38776 3.48389 3.95856 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf273.271 265.901 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf275.672 265.901 mo(time)[3.52701 2.414 8.3989 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf295.232 265.901 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf297.573 265.901 mo(since)[4.09717 2.39615 5.50403 4.43314 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf319.233 265.901 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf321.633 265.901 mo(1990.)[5.3414 5.34137 5.3414 5.3414 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf345.633 265.901 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf348.033 265.901 mo(The)[5.07675 5.47568 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf363.814 265.901 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf366.214 265.901 mo(short)[4.09506 5.50195 5.52292 3.65399 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf388.534 265.901 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf390.934 265.901 mo(comic)[4.40268 5.4946 8.40204 2.39511 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf416.074 265.901 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf240.035 281.501 mo(acts)[5.04425 4.45624 3.53226 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf257.117 281.503 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf259.517 281.503 mo(of)[5.51663 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf268.218 281.503 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf270.618 281.503 mo(Benshan)[5.70786 5.22482 5.50824 4.10135 5.50824 5.02536 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf307.218 281.503 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf309.618 281.503 mo(Zhao)[4.91928 5.51767 5.03479 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf330.618 281.503 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf333.018 281.503 mo(had)[5.51978 5.0369 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf349.038 281.503 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf351.439 281.503 mo(become)[5.47778 5.19437 4.40689 5.49878 8.40204 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf385.638 281.503 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf388.038 281.503 mo(the)[3.53122 5.52609 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf402.318 281.503 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf240.019 297.102 mo(most)[8.38736 5.53131 3.95859 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf261.439 297.102 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf263.839 297.102 mo(popular)[5.51349 5.53448 5.51349 5.51346 2.40561 5.03058 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf297.019 297.102 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf299.36 297.102 mo(part)[5.51559 5.03268 3.66763 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf317.119 297.102 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf319.52 297.102 mo(on)[5.51663 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf330.559 297.102 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf332.96 297.102 mo(Spring)[4.81531 5.50821 3.66031 2.40033 5.50824 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf359.78 297.102 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf362.18 297.102 mo(Festival)[4.61475 5.22482 3.95856 3.54068 2.39508 4.56326 5.04004 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf393.921 297.102 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf396.321 297.102 mo(for)[2.99768 5.51663 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf408.501 297.102 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf240.021 312.702 mo(many)[8.401 5.04111 5.33603 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf263.541 312.702 mo(\000\003)shKEFPBJ+Calibri*1 [10.5 0 0 -10.5 0 0 ]msf265.941 312.702 mo(years.)[4.62424 5.22479 5.04004 3.48392 4.07932 0 ]xshKEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf291.022 312.702 mo(\000\003)sh2.17714 207.703 mo
428.777 207.703 li
428.777 207.223 li
2.17714 207.223 li
cp
f
2.17714 317.383 mo
2.65714 317.383 li
2.65714 207.703 li
2.17714 207.703 li
cp
f
2.17714 317.383 mo
64.2771 317.383 li
64.2771 316.903 li
2.17714 316.903 li
cp
f
64.2771 317.383 mo
64.7571 317.383 li
64.7571 207.703 li
64.2771 207.703 li
cp
f
64.7571 317.383 mo
234.377 317.383 li
234.377 316.903 li
64.7571 316.903 li
cp
f
234.377 317.383 mo
234.857 317.383 li
234.857 207.703 li
234.377 207.703 li
cp
f
234.857 317.383 mo
428.297 317.383 li
428.297 316.903 li
234.857 316.903 li
cp
f
428.297 317.383 mo
428.777 317.383 li
428.777 207.703 li
428.297 207.703 li
cp
f
428.297 317.383 mo
428.777 317.383 li
428.777 316.903 li
428.297 316.903 li
cp
f
KEFPBI+Calibri-Identity-H [10.5 0 0 -10.5 0 0 ]msf7.81714 328.783 mo(\000\003)shgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/KEFPBJ+Calibri*1 uf/KEFPBJ+Calibri uf/BAJRMX+Calibri uf/KEFPBI+Calibri-Identity-H-Identity-H uf/KEFPBI+Calibri-Identity-H /CIDFont urAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
