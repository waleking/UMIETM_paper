%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: job_82-234_xlsx.pdf
%%Creator: Adobe Acrobat 10.1.9
%%For: huangwaleking
%%CreationDate: 6/3/14, 10:18 AM
%%BoundingBox: -1 0 356 212
%%HiResBoundingBox: 0 0 355.5058 211.3100
%%CropBox: 0 0 355.5058 211.3100
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 541 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2014-06-03T10:16:10+08:00"
   xmp:ModifyDate="2014-06-03T10:16:10+08:00"
   pdf:Producer="Apple pstopdf"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -211.31 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-1.52588e-05 0 mo
-1.52588e-05 211.31 li
355.506 211.31 li
355.506 0 li
cp
clp
false sop
0 0 0 1 cmyk
%ADOBeginSubsetFont: FCKAAA+SimSun-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (FCKAAA+SimSun)%%Title: (FCKAAA+SimSun Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /FCKAAA+SimSun def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-8 -145 1000 859} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 43 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 18 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B5EE31F4> |34 <001C60D8A8C9B7A73DD90B4F3776B02451FBABF49548192505688CF8D4D49322F8D916FFB8C1CE84BB93BBE5DEDBF14EC319382BF6E61D35C8D3E4EA3057E5A423D97EF99E6B50A024A5644F885CE43BA5467F65C4F8B9A0736E62EAB31DFED581BC288D1C60D6B990AD0764C0032E63DA6C12FCB234B90E7A3304747BB10A5A563E32C4CAAD3BECD16EFC6F2A89D45EB95D5865BE4B29A71AC0E11BB912E9732834A18D8C0D5621721869A8E4C91EE286B7A946548A352593B7AEA037A793574B8C10416EB233B02C04646EDE5783B4C5E2200E15A76CBE32899A86A100EA2A0713AA700BD2190A73119895DE7E56B00EE9176BC5CEFF2969D015C6FF1235D77A890C208E62DF27D04C2668DD079509CF7F719A4B5B1D82AA3950CB6AD82311C5820AE9544B66598F14> |29 <001C60D8A8C9B7A73DB98653E05A9FC5B5EAD8DF8918156B7D8947B729586A5D71329F6C61A9A77AF57C287F000D704E2B1B8CE249B18DAE67C644BB123047F50A6EBCD98C07AA66C4DD0A76B159CD29A711636C3E8E96322D91698FC417EE3AF0100BFDDAD67B2B21BC41C61402F09AAFDEE7C5AD30CCB232A8E6E155DC86AE132158E832A6F89E6610BEA8A0F39564C0D8550E916722019256CE98C6F85F19B9209778C83C794FC8FCC2A636A7723F212BA81A84D9872C4C2FD1780D4C0FEF29C2CA6714F970CE098037D79A9F77359866B81A5DE84625B772E4DD26697EBD5449FC251873E5600E23E1D84B36167C98937F9631E4A9D2B4C07FC06858BF43> |30 <001C60D8A8C9B7A73DB9CA3CB59A9362C567E6693756DF87B8701FBEA8981D0FB41BC57FB14082E0302C46C467D65EA7EED5997CA9CC4C07D177F85EA6142B8109737791C7B75F03EC4D414D20766F94E802E055EF0E5AF698799D84806F83F6347388411C500D7944BE94549DBBADCD7CDD5F3B250E41D2BDB64BE408C88E0783A9CB9044EA5B4469936D654710860D0CE082D416E670610318DCB9A758B604E445D057A118ED8BE989140932> |38 <001C60D8A8C9B7A73DB97983BCC759D7FB3A4FDCE0D7570A90897AA8C8EA8ECEF21D0ADDAE48E4C2C151543F8FE94C2CFE5334E7C112EDD213EE7FCABA02F4CD205203DB96FAD5A454F9150CF55CB167547B51DFFAB62E26249B4B6315E152E19443D6D50F823CFDA3D9AAD4D3303BA4D9AAE7C7FA1FE29108CE854B2CFB5B30C4109037D5F7B223F54042062F52C2C78BC21D26FA34466A968737A83F11F03801922C455FAFBE38BA73E0C12E73ECA1C41E6D6C81> |36 <001C60D8A8C9B7A73DB69981D0C259376C8A5DD6859FA4C644174BA1BD9378F08BC6C5746C8458A0F5EDE6F68F6FE26D9C5EB4C467C31A5FE9E90E9C2A36375CB86A13DDC85D1181B4F95BD95E297453C2C6FDF82458BD6B7FC4C12762A2F00ECB6B5D5B25661F7C0083F60573172BA4A0B97A5807D9A9EE9E0EA705666F4A2711E064C01F> |1 <001C60D8A8C9B7A73D40> |37 <001C60D8A8C9B7A73DB908748451047989C3955B3615A9F2D9EE298C080D8F17A9D1C3483A13F08B4EB80001FB7761FA7D0D6D5DB57802D55DBCBC6B437AAA40FE1510E64CEA182416A019139BE7F60301A7D8A91B4F38E2718FDBC3B7ED3031955A110C4AD1CDBB7F1E367454238726CEF3B69F05282B637168CDB9C6AA032D0D08B972FCD2E5B226446097D0E5C40BE80E2018590029953AE8D6A5919F42BEEBECD706A215638672E54810132F62B73FEFFB6E380BDAE51571B3B5C454056E570D4DFC8A597357FA5C26970EA6FE6D098E87646A392A> |31 <001C60D8A8C9B7A73DB937B4101DBBF46DCDCD34C66331F9C4BC9617541C58225F0813F84C9B99CE106C877AC69B6618F22D5116137A9BBCC8BBD2B6E99F1515F40D5047C1870B45E96B1FB58B60D6847A662BC240FFE5567D9F452FAC8C3A6A6C8EF10951B46DD67811A39E791E248501B427AEB3F7D65FADC7A32C27A8280DAD3EE5A5DC8377> |32 <001C60D8A8C9B7A73DB9569388B530AA69A814780F04C0D0891B66556132542C171BD2EA0875B17FB62A498137AA36ED9317F24C9A265F4E9A80213C75817936CF88855AE783C3200ED8BAB3E514B0F3675AC005A984E1300BE3AB9F059A1E769D0B04C27E73DE797CBE27CEE57EFD8A61BE00EE7A34C5DEA0BC689053998C549C598091C265DC92224E3190B4EB4422DF93A2E24E69A294E18C> |39 <001C60D8A8C9B7A73DB923D5A49D04CBD65263719474C80BA97F6F133EAA4FCBFFA43F60F895C3C414B7030ECA67E2674F62D2101C594B032EE90D99376AB7F0760AFAD806D2D95642E44E5A2972877B76376DEB7CB434DCD68736F1E6E5DBDFA54FD232EB08D99648B487B3E4ED2484C351F3C5ECD6F9DC9B48E8E90C5C9E57A52E4F0E9F094FF68532358CE3A23923A3205C06E22076925C0822C6231637F06A3E9B8D1291F9E72FC9834B88C703249C81A90955A609860869BCF7333D96CF9A54D009C595DB9C0AD3F8C33F579CD709F88D0AB96D869C241E584F1BDA4F8C3C79B3580F4553FAE866201562F5C8B6C736572DF3A478581D720C8E0B81> |35 <001C60D8A8C9B7A73DB97D2EA733FEF9D2030029A5B2CF3B73FD3A017E403C7A7F9D86A600F5CA059F84CCCD28FD5E3C2836D8BCB466DDAA22DF5C96BA4E9D33A71AF7D3DB5B984D37F308AF6E98148C08AC3D8187DD889E07605A4D6C2791634517BDF87F17CE0B8D6E5CB87F3548E78F04628C0A6D80958439CE6AAB2F332503B61365172184BDB9AB347893A9B5FBCB8B7E77E4909B88C3FAAA5D8ABA37287B6C4E30FB1A38837394659F56FAACCFFEF31089BC2720E27F908DB1CF2A91E8283B42A9> |2 <001C60D8A8C9B7A73DB6FF40517F96FDA56DF770D5AB2E35EB5139177FED19AED2BBCA94D25E62816A4BB361A14E7AF2F3D07CCA4976924145BE9ECCF42B691C8EB53762215C5B752B249D> |17 <001C60D8A8C9B7A73DB6DF131CE6F3EE21C84A46A92D434A47D143D69BAC197CF64D537A> |9 <001C60D8A8C9B7A73DB9C40DC66A19F12FCC46A7E640D743ED53FA7295A43DE3EC7E9B681DA33149D24718CE5D426133EBD66F9D5E8289C5FC680EB1BD5511E9F35487E00F68F96BABBC437694A499B7C213A6D37AB8AE4738C346FD7C7DFC770F44C2FBE794D1804AE6C00B62E884CB9F85DCC57FE56A5E45A5D60D298F4F6BF4F3E8DF96B64F237001E04644A1F2D9FB96DBDA12E110EC8C42272DB8261CAE0449E62177813A4A3994D81F50552CF9F0C33E903AA9F82919DB8C7F47A2D644C25D1DA098B0> |3 <001C60D8A8C9B7A73DB9634681296F8CD01FDEF8A610947E91058A48A9E79274F05B04949618A6C12665FD74F239E66D051B6D6E1BE1349F56553E67DA230FCC4A903B788CEC8F0182D1531D8023> |18 <001C60D8A8C9B7A73DAAF4CAA1ECAF5A9E6B4A4C527244CD8FFF984A93426DB5C3994345> |8 <001C60D8A8C9B7A73DB9873C4F791E79ACF81EB19D63BA2E94321160B0EECE1160759126177329F8F00C47A8A8F4A33D8FBA50DC1553DA219B007F3C368EFE0E3D89022F9962E4AED1DF1DE74F2DB52F8805EE1738AD59A4DE7E4CBB52EB00> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /FCKAAA+SimSun-Identity-H /Identity-H 0 [/FCKAAA+SimSun] ct_ComposeFont pop end end
%ADOEndSubsetFont
/OVLNAV+SimSun /FCKAAA+SimSun-Identity-H findfont ct_VMDictPutOVLNAV+SimSun [11.04 0 0 -11.04 0 0 ]msf51.7053 -83.3274 mo(\000"\000\035\000\036\000&\000$\000\001\000%\000&\000\037\000\036\000 \000'\000 \000$\000#\000\001\000\002\000'\000\036\000$\000&\000\037\000\021\000\011\000\003)sh192.825 -83.3274 mo(\000"\000\035\000\036\000&\000$\000\001\000%\000&\000\037\000\036\000 \000'\000 \000$\000#\000\001\000\002\000'\000\036\000$\000&\000\037\000\022\000\021\000\010\000\003)sh.928038 .671229 0 0 cmyk
%ADOBeginSubsetFont: FCKAAA+SimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/FCKAAA+SimSun 2 GetGlyphDirectory19 <001C60D8A8C9B7A73DB9B9E1707C7E8963D484CD5920B6A8B02191C73996D075781D6206026BD10F69C2602E2C82D9142F1AA537EB9FA05CEC07CD89E132F883D9F0B2F740587E003BE906AE8569D1F902DB0635D2F3EF4CD94FA537A5B8C75F97FC02A9B8E4924A7B3A359833F43F89E24B86EA773123962821287A6C2576596DEFE7472ED5F3F97423EEA520260E72E4EF786B13CA880250ACFA478138737F564FBC9978670F3F8F0CF4CC2F4B6E009BA0E06D9B685BCC8C7544C2E01D67DDAEA4A80DB7E3852003A7327ED06EA2EECE6E75500A1F5077A5F5FF3734BE4C20879840B01281B6D3FF4B0C7062552229063D9D2FCE7667735C06A31DCCC057B78F2D52F26CA0FAF093E1D09B39171A080CA288F524FD1B8007C167F6528203D3C093BAC6C6971111C23F0939E4444D279D85C1E94D1ACFE59F9CCEE1B957DEC19D9D955F1ED5B0B9A43AFD> |33 <001C60D8A8C9B7A73DB9D188C786AB32B60FD4436CF75A6F7B413ED93AD8ED9D59D1E291E297907C77CC5E5CC6F06D306C7D982E92CF61E2BA59E2CD6A737222E105C4E017966BC41F54F0786F0C226455EEE344A0749445270044ABD4A52ABA8AC4378254F4E3CBCC783D8A4994D7DA929CDD6424FF54994C29A9E160BE451CC9A73F9262111D3EEB19A8A2B123A5F4869AB68E965A04C54D690ED38A8A38B21B500B2142291B9B20794926E6A490A103E5D9AF4EFB4155AF1F0096133F80F30CCC67> |!endend end
%ADOEndSubsetFont
OVLNAV+SimSun [11.04 0 0 -11.04 0 0 ]msf362.745 -83.3274 mo(\000%\000&\000\037\000\036\000 \000'\000 \000$\000#\000\023\000!\000\001\000\021\000\011)sh362.745 -82.3673 mo
439.785 -82.3673 li
439.785 -82.1273 li
362.745 -82.1273 li
cp
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: FCKAAA+SimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/FCKAAA+SimSun 23 GetGlyphDirectory28 <001C60D8A8C9B7A73DB91F24FA593883F86807010158503C6105A3929C4C7E32A8C5DC1D32B398C5FED0B84C8BD2D10A38BBF18499C9FD421A31009D08611A3FED87191BF41424827EE45F4B47862BF52F83A175DF11D2DF352CD55FE7D47BE7A12B1A234209DF03D51E5D75FE7310AD5DD8EBE5A3AB541FB740745814AA18D2D8C25CDF4D92254534799AFAC9E159EC2D8AA0A317C28D466F1BA527751F3C7274> |26 <001C60D8A8C9B7A73DB987322EDD44B1DF5405863ACED3B083D42BDC3CA1425C498E01A1A6F64FDE260D8348135FE57044BB589DB85A7B2403D17C109F67BBA086E6D4F909213C7237AE42BC80977AD42AC646ACA0940F4F63BB92FC411CC7E84797EB3055F01B1CBCF10D6CB38B050E79477808B065131DA19434E95AF0401CC12700FB39D2A859560EC5A5FC62E01F1350431C233B2FD6E62066C2B556BFF9> |23 <001C60D8A8C9B7A73DB9696D477FC5C77CC13F785D0DEFFCFE399F8154672C738C7542738E124DFEDA4F33708349FE4D7ECBEDDDE92AFC81C7A51B45AEECCE4AEBB160C3CBB2056F1DB3B4BB9EAEADC6349A0E672BA304F2323994F5EFB4AD37BAA9> |22 <001C60D8A8C9B7A73DF57E9D1DDB7FD5A23EFFB294E5EA5FE2303FD1DA4258EE46FD7724AB8251625B7636792049ACA1CEA11343EEF4F129C7E921B9EAD08FAF39ED21A6C6AEFE79CE0559645FB29DC5888C91AF1ACC16AFFF9BFD799BA160BB869D28023AD10077CCA5A725965FB6B361A4B026F5B1647875F566A62726BD277911A8A8F69164E5D81055A8E2627A1B38074F3515ED2699246983B3CBDC1A0C0DB2C5AE72FBEFC0E5B99B657032C2094EBC60188466B247> |27 <001C60D8A8C9B7A73DB9D5181D8B2E9B717FF670137DD5C74B01C45437E19CDD270110C87A6C8B51852CD7A5F8C89E9502C8B78539C3E37CD4EAF21FA20678904092A16ACC99DA5D8612817D5237BAA559BC26D5CB80594A97474365F2CC4092A60D10D10ABB1C2B393EAF135270F9C8447300CA5BF6342B6B35F09D2231D53265F4E3> |25 <001C60D8A8C9B7A73DB6F0590FAD12859204DEA257E54F86B4BDA7417844DC8362919B07F9DC32458304EEB077BD8AA57F8A3676E8BBE7AD5470116967681E51ACE4B14C5EBF5B5493E120A915820A3039A7CF7795E297378E203A53394EA202DFFA655B18FD83701F215EC1634A56CB4C2086678421D404EB9002CCE0F6F212B841A2AB0DEC080E595881BA4060FEB9F58AD45A01A53B28FBDE1B0B716497BF15BDC766299D12B1B2D88DEC2D> |5 <001C60D8A8C9B7A73DB6DF1C647A79F74FB5FAC3D2DC46> |7 <001C60D8A8C9B7A73DB9C905ACF192092A32D48104654574FAAEA640C94E7914E057A40B4F4EC73D1638A183DD3D35D2272B8079D68C280644A127E87BDB50A83757A63B325ED3147A21E61D53282F8D91D4F97882F0CB49D995F40DDF11A056E59E349DF82DF6BC5E3315CFB071B8868360D1DD3F226A476FB44E32855576DD801A6B1D0110> |6 <001C60D8A8C9B7A73DB91CE24174F2CF611360AC54B6CDE32A31064392735D7CA4A7A886BDB7AF1F2941CD8DBC8BE2C2D14C6C9983983EB9DFB9D2C6495FFF30BC926D91EE3877> |10 <001C60D8A8C9B7A73DB691F1F492A12A1AD970B57BB40C7B83E4ADDE6D04415C8D07338B694E1B6536A65BBC322B80C5564E2B0096FF26D0C221A1918414063D2A5D19E693094A776EABE510FA0F4CDBD4E5EF437243F96A1361AB4C3EF9738520EB9A39239487A0AAD2A4BE77FCBBA53CE286A931AFD5C53C56CCAB2B7E22EC2725AE5D53EE5C0805AD435450E1C909201A1B5A895A0C5B7C224EB7BD29024C444FDBC67C47741571559797CB4724D0E4774F21A1DCC042166E7B9109B8678C9E52EBF01CAA709A576B29CEEBD17C87A5A378CECECA1C70D6825A283DBC4149ED90762AFC90C00311F03062B97501F450E1A1943A8CBD85B5873802E865204094F69510145770CB02B8757CA4E4> |14 <001C60D8A8C9B7A73DB6F423A42B28F866048A9AF5F7E9554B13147028E52E2DFCE0E47E213DBFD89D82994FA6FC9701F52E681CBB7DF039FFEF63CA226BE1255AB66402C4BC88986BBE084A069DAE5708F72775D008343F218FA963DDA3A0F9623D8099031FDAAD8A66ABD27D633917F5F90C> |11 <001C60D8A8C9B7A73DB9DE1B8EE62A1035D520FDDE7347DE754DA40CA9210161A14706ED21E0C20738AB3E04296AE73BB643797B2B2E4C68171E1F718335307B410848E0962E661F9269B126BBF27D221C91C6E5ABDBA29A518469343FB415> |12 <001C60D8A8C9B7A73DB970C1254639A1FB27DF05BAF012C722697CEDB342BEA6C71FD271140918003D590AF88AF51B4CB49A5B22CCA7BC520FD663632437025902D91FEC15DF971BB55115B3A57167EAD1AA5814ED499C7040D6B1CC9C3F781E04C326D6DEE4AE2C2D172DF15C7BF4F0C077F41E39011D0BB402E0EABCDA2309FE4A389179176E6AA8175818C8C68124A412A5D600BD0683385A4314FD4BA919DB8FE9DB98187A47781D302D506490EC931E35506AF4C02BB57CA24723FF> |16 <001C60D8A8C9B7A73DB9050AB16091DC5C795ECCFB570B8DF797095792E10F764DFE57117215ECE9DC836544763CCB6EE3040729E29B6FB954ED99A179780C8D7D0F55CF78DCA4AD6714BEAF3B4D66D53CA6E98C45DB0B680CC5309868CCEA268976544884791D26C70B04DD4E2447315BF002DB94631BC55F7812553C53B9DC2E60F98FCB8BFA1FD31FFD1628762BC38A91D6B63226D8B35ABA1EFD91BB1D721FB5EF347F14AC0C51D9FE0971531ED99AB2D1DDDB966939F71BE8C8C20590D5D1E48AAB24056C4388658DCF007F7D2C7816C50470B78BD89A38215E27C55FD470E4B6BC2C9E578FAF65> |40 <001C60D8A8C9B7A73DB95A84ADEFC27CA3118991A6B06AA4BCC9E401A199AD2ED0215A3F452FFBD87E172E65C43C3D01B21353688DD3BB2DFBBF62609414A723D4BE0F998947300EBE6F71534F58F1FD8E961B2033B7C6342D1571C25D270CD36FEE40498320DC6EEF544393F5BA4E9A1B022D> |24 <001C60D8A8C9B7A73DB914F33C23AAE67CDFE632CC6CF5A267C5D97160BE42069A03F1CABCD9455E8501C7BA35640CD1110A07CD17F11741B1FE53ABBEDDF30F81B47393043E33331AB78D6C97D34A21FDE495675094AC3B92906C19A23D699295EC9426C061F0271B55ADB8BFB90BC3AD54D99B> |21 <001C60D8A8C9B7A73DB9C530A911993F5F0F963DBD4138909D2A91F47A2FAEE044110870DBA5E81BE74AE075AFAD57FFF392DCDFE49F56F14C5997693546A7A50BF7A6492C33E08DB002146761DC55B352B29C77B7853AB2DCECB62B412E688CA7AEC5AE55F16DE00B855136E33120DD9354A7BD30980B7895FEDC26E4F6ACB167418D83F584F965FAD281699D235B9B41D9AB5A34DD1539B5> |20 <001C60D8A8C9B7A73DB9D2D67B03BABA16DE71088E91FDA0365C2DC5F0B4E238C107979A1BB6C942939C3841566B30D37A08137C1E84B536C3470D5FC886B167970ABECCA7AC50839057124E257C720FD39309BA1A816166D7E735D90459C18987BA30E000006CD065F37B91215EF51643DE4E333253E6C5E54C9253984B> |15 <001C60D8A8C9B7A73DB92A3094D0FF0A2D447C2BD81376D6230BCCB1557D7F4E39C0BFD72FD87D86463529A216F7CE4DDA7ABF22B40A071DCCD080DD434394589D4D10F6C392C201A669987442001D6A4A2B39543039869CC2A95D74F0DEBD4BF4CF20D62D1ACEB40535232447BAA39BC3D30803DA319A8201A70B4BB024CBDB49D23F4F9968DA9A3B0A36B1EEE75356957FB599227BDD057FDF5F85E26E2D78EB4B5F06A77F028DE9DA108F89A51D4F48E69E2827A222F7519962822269AF9CED1378D5F0E005FAAC02A5E60D41662332A86442A49C10991878210F3A11D0CC17113AFB495757B9AC60E3A766975C77D24F9CC48E657365C050> |13 <001C60D8A8C9B7A73DB9748B4C33082052E35A6F82F9DA0CC0E764955B79DEB49589CE7B95F9BEE348686F9FA9F1DCD8C0D88090A77BBCDE84CD107C90328427F2D78DEE74DD2AE027A01A2E4E1C868FE39441BEFAAAE494D264CA359EC8CF5256A9A1C27380FE468F43DB220CADBB9070B44509319C27FE45078D6B3969C91A320AFD1D52A0F47E841F969AB6901B2657DEE0F022F1F63A600D63803867F40600B7A1C92B4B3ACB77A420247C8201B85B9F7912CDCAA30C4C46115AC99830ADF2F9F04E800E32AA58775A66E462CF649A74DC58535207FCA7682BF9284A8F89C6551A3523C599AA> |41 <001C60D8A8C9B5EE312335D7C969221AC803DA174B9721847824CB1FD2C4581042A2DFD4C4420BDE50F2DD55F7755328034B5E54130FBDE5EF6C0D1A7F3A20226D63F15A2BEA0944E875A81051D3524E48FB96E99715B8FC8B709547B1D12067E6B08FC3EB2115240BAC10583145C232021550F151574170E20A95B3C4170C6221E6C6B246FA4F5A9CB4DCACEE774BE4A2A23C8F44EE8CD3A3964F29DDF85D4EF8E3F69BA1A1042D27AA0D3CA0D769F6350AAE084E> |42 <001C60D8A8C9B5EE31023EA36644D68A73F53848ED78577CBCB02534E83FD45C11957C4574C7F0F978A0FF04ED9BBACC89C3BC09FBFB720F549708DF1FF4CFF9D73ED68E742A5B1A3FCFABD830F7954E7BD155F4B470433FDA132AEB2695C40820FD45C6A854765AAC314D15F44365655CF785786A90F7C6C5B8E9A50623A44777A84C98B03D18E6F94105814B320AD3B40C200264F5F2CE94825B48F4D647065C9499F2517071C7225ADA053BA3B396292D24CF59CA730F8A65372331538DECD09D3C5D83290FC922839697FF642F32AFB6811F0707A3DEDF4A6011510A5F79ED512894EC16A6E97861E50EB7FEDDF8CF0D11D272F6D10DC93D0361E22DE9ACD139E4D6AB0CED3CE3CDEA455751BC573F08FA6E557CE7E6F4234AE738AB3354071835984C642D87A128FDCFE218C2FE0D6CD19784F4BF83033138961F340F1437C61EFBF11D9F79ADCA5B9606745DE169> |4 <001C60D8A8C9B7A73DBE9CAD5C073E152BA708892DCE9858257074EFFF151CC2CAE59B880D4928B72124933A4E869A246F956E0C13D88CF15CCD30D46B07018EC563E08A1D50804112D40E938B42C2D693093FD887AF16> |!endend end
%ADOEndSubsetFont
OVLNAV+SimSun [11.04 0 0 -11.04 0 0 ]msf-20.2947 -69.4074 mo(\000\034\000\032\000\027\000\026\000\033\000\031\000\002\000\005\000\003)sh161.385 -69.4074 mo(\000\007\000\006\000\010\000\012)sh331.305 -69.4074 mo(\000\007\000\006\000\012\000\016)sh434.265 -69.4074 mo(\000\007\000\006\000\010\000\012)sh-20.2947 -55.4871 mo(\000\027\000\026\000\033\000\031)sh161.385 -55.4871 mo(\000\007\000\006\000\011\000\013)sh331.305 -55.4871 mo(\000\007\000\006\000\014\000\014)sh434.265 -55.4871 mo(\000\007\000\006\000\011\000\013)sh-20.2947 -41.5667 mo(\000\034\000\032\000\027\000\026\000\033\000\031)sh161.385 -41.5667 mo(\000\007\000\006\000\011\000\016)sh331.305 -41.5667 mo(\000\007\000\006\000\013\000\020)sh434.265 -41.5667 mo(\000\007\000\006\000\011\000\007)sh-20.2947 -27.6464 mo(\000\(\000 \000"\000\037\000\034\000'\000\037\000&\000\030\000\025\000\024)sh128.265 -27.6464 mo(\000\007\000\006\000\007\000\014\000\017\000\012\000\012\000\012\000\012\000\012\000\012)sh298.185 -27.6464 mo(\000\007\000\006\000\010\000\007\000\013\000\010\000\015\000\015\000\015\000\015\000\016)sh-20.2947 28.0339 mo(\000\)\000*\000\010)sh51.7049 28.0339 mo(\000\031\000\035\000\036\000&\000$\000\024\000\032\000\011)sh331.305 28.0339 mo(\000\007\000\006\000\010\000\012)sh-20.2947 41.9542 mo(\000\)\000*\000\011)sh51.7049 41.9542 mo(\000\031\000\035\000\036\000&\000$\000\024\000\032\000\011)sh331.305 41.9542 mo(\000\007\000\006\000\011\000\013)sh-20.2947 55.8746 mo(\000\)\000*\000\012)sh51.7049 55.8746 mo(\000\031\000\035\000\036\000&\000$\000\024\000\032\000\011)sh331.305 55.8746 mo(\000\007\000\006\000\011\000\007)sh-20.2947 69.7949 mo(\000\)\000*\000\010)sh51.7049 69.7949 mo(\000\031\000\035\000\036\000&\000$\000\024\000\032\000\010\000\004\000\011)sh331.305 69.7949 mo(\000\007\000\006\000\012\000\016)sh-20.2947 83.7153 mo(\000\)\000*\000\011)sh51.7049 83.7153 mo(\000\031\000\035\000\036\000&\000$\000\024\000\032\000\010\000\004\000\011)sh331.305 83.7153 mo(\000\007\000\006\000\014\000\014)sh-20.2947 97.6356 mo(\000\)\000*\000\012)sh51.7049 97.6356 mo(\000\031\000\035\000\036\000&\000$\000\024\000\032\000\010\000\004\000\011)sh331.305 97.6356 mo(\000\007\000\006\000\013\000\020)sh-20.2947 111.556 mo(\000\)\000*\000\010)sh51.7049 111.556 mo(\000\031\000 \000\036\000&\000$\000\024\000\032\000\011)sh331.305 111.556 mo(\000\007\000\006\000\010\000\012)sh-20.2947 125.476 mo(\000\)\000*\000\011)sh51.7049 125.476 mo(\000\031\000 \000\036\000&\000$\000\024\000\032\000\011)sh331.305 125.476 mo(\000\007\000\006\000\011\000\013)sh-20.2947 139.397 mo(\000\)\000*\000\012)sh51.7049 139.397 mo(\000\031\000 \000\036\000&\000$\000\024\000\032\000\011)sh331.305 139.397 mo(\000\007\000\006\000\011\000\007)sh-20.2947 153.317 mo(\000\)\000*\000\010)sh51.7049 153.317 mo(\000\031\000 \000\036\000&\000$\000\024\000\032\000\010\000\004\000\011)sh331.305 153.317 mo(\000\007\000\006\000\012\000\016)sh-20.2947 167.237 mo(\000\)\000*\000\011)sh51.7049 167.237 mo(\000\031\000 \000\036\000&\000$\000\024\000\032\000\010\000\004\000\011)sh331.305 167.237 mo(\000\007\000\006\000\014\000\014)sh-20.2947 181.158 mo(\000\)\000*\000\012)sh51.7049 181.158 mo(\000\031\000 \000\036\000&\000$\000\024\000\032\000\010\000\004\000\011)sh331.305 181.158 mo(\000\007\000\006\000\013\000\020)sh-3.27467 -4.86731 mo
464.265 -4.86731 li
464.265 215.473 li
-3.27467 215.473 li
cp
0 0 0 0 cmyk
f
39.0203 8.13269 mo
339.165 8.13269 li
339.165 186.456 li
39.0203 186.456 li
cp
f
147.905 39.1527 mo
176.905 39.1527 li
176.905 21.1527 li
147.905 21.1527 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 73.0947 211.31 ]ct
[29 0 0 18 74.8107 172.157 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 87 
/H 54 
/M[87 0 0 -54 0 54 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&ZN/>Rq>uKRJcOL)r;sq?r;u?dJcLB&quH]t
!<WMD#6=u1rW:@FJcMDCrW30,#7:b&$f29j$3US="Teb-!.k3f!"&c/!s8c8$P*d['?h-u'GM,j%gr^L
#6P#/NW=Y2kQ(M\%0?S7#7:tR'GhZ.*?H9K+:9/2*?5k3'G(WW#Q=eS!.k3C!"8o1!s]2E'H&#<-R^M8
/_hoc.OQJa)A`tp#R:G5ZN,RW^]4cE!s])@'H&&D/ho:DcoV.e$o^+$0.eIj((UcX!s4VcJcOa0%KZ_;
$P=0u.l'.N6q0[:cq+^;7n#a-2D-9o'+G3N!s7umJcLH(rrNQ3#RqFe-S[\N92JR3<t/,,:.IT-/KkoA
$3pY7ciAXtV#V#-!sK#B(*G4i78-]a?=.(-@cLo-?X?o9:e*](,T.7&#6P%2!.k3j!"Au3#7(kW,V_PV
<Es'Gc"R2kA.)aH:II)j*>8ec!s4J_JcOs6%fuh<$P=7&1IOu?@q][sDpWG5Des0">uX9R.ioH8#R(:r
!.k3-!!WK,#7D1`-O;Lr;d<sOE,fmEEt32/D.m9Y8NJFG((CNQ!m:Rq!3-#0!WrZ8'-&DX79!Q+D/jZ>
l#u96%Wl]/C1C@<4"_Zm%1!+=WW7VNb5_tQ!s]2I*%3^7<*a0SF3Sk4F)Yl(=A(d]/g(r>#R(9d!.k4;
!"T,5#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=k5^)6kQ%L\%fuh<$POL.2F^\QBl8$9G3jG7
G7Je<E,9&f90FmM(C^WR!j)HS!6>-N!WrZ8'-&DY7TEc/DKL&Fd!#V9FDu&,$!Bna/g(r>#R(9g!.k48
!"T,5#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=l2ZD9MZ="a!s]2I*%3^7#$"uDDKL&Fd!#tC
FDu&,=\Cn1+;YIm"TldGJcMkP%fuh<$POL.2F^\QBl8$9G3=)7G7Je<E,9&f90FmM(C^WR!iQ*N!6kKS
!WrZ8'-&DY7TEc/DKL&Fd!#e>FDu&,=\Cn1+9WJi#R(9b!.k4=!"T,5#7D1b-oOOp?>4;!G';5V%X)r5
Ch-[A4Y@in%1!+=jT'l4O8o^k!s]2I*%3^7<F0BWFT6O2G7Je<E,9&f90FmM(C^WR!lP(j!3lM7!WrZ8
'-&DY7TEc/DKL&Ficjj8%X)r5Ch-[A4Y@in%1!+=UB#lGdJsdZ!s]2I*%3^7<F0BWFEViSG7Je<E,9&f
90FmM(C^WR!eLE(!:p1$!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"TmT^JcM&9%fuh<$POL.
2F^\QBl8$9G5c^7G7Je<E,9&f90FmM(C^WR!l"a!!.k3s!"T,5#7D1b-oOOp?>4;!G';5V$[-W2Ch-[A
4Y@in%0?e=!egW+!:Tt!!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"Tm]aJcLr6%fuh<$POL.
2F^\QBl8$9G0kFCG'%\>A6DPg/g(r>#R(:H!.k3W!"T,5#7D1b-oOOp?>4;!G';efnTPIdFDu&,=\Cn1
+;YIm"Tk@tJcO:#%fuh<$POL.2F^\QBl8$9G0kFEG'%\>A6DPg/g(r>#R(80!.k3&!;-=&!WrZ8'-&DY
7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"TmN\JcM,;%fuh<$POL.2F^\QBl8$9G5QR7G7Je<E,9&f90FmM
(C^WR!keSc!4W">!WrZ8'-&DY7TEc/DKL&FgNW@8%X)r5Ch-[A4Y@in%1!+=S,e-@f`2Na!s]2I*%3^7
<F0BWFEViSG7Je<E,9&f90FmM(C^WR!r;nK!.k4I!"T,5#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in
%1!+=f`6U(S,a'$!s]2I*%3^7<F0BWFEVj%GM76NG'%\>A6DPg/g(r>#R(:>!.k3a!"T,5#7D1b-oOOp
?>4;!G';G\qf`NnFDu&,=\Cn1+;YIm"TnW&JcLB&pAb^*!s]2I*%3^7<F0BWFEViSG7Je<E,9&f90FmM
(C^WR!o*d-!1<ft!WrZ8'-&DY7TEc/DKL&FqKLP8%X)r5Ch-[A4Y@in%1!+=])[E_\c<6B!s]2I*%3^7
<F0BWFEVi\GPH@lG'%\>A6DPg/g(r>#R(9u!.k4*!"T,5#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in
%1!+=p],mGJcP]K%fuh<$POL.2F^\QBl8$9G0kFCG'%\>A6DPg/g(r>#R(:]!.k3B!"T,5#7D1b-oOOp
?>4;!G'<P&gij6OFDu&,=\Cn1+;YIm"Tl+4JcNOc%fuh<$POL.2F^\QBl8$9G1:a7G7Je<E,9&f90FmM
(C^WR!rW+L~>

%%EndBinary
grestore
np
222.905 73.1527 mo
251.905 73.1527 li
251.905 39.1527 li
222.905 39.1527 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 73.0947 211.31 ]ct
[29 0 0 34 149.811 138.157 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 87 
/H 102 
/M[87 0 0 -102 0 102 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&[K+PRpB$9RJcOO*r;ls$rWUFLrrrE)rW;Kf
JcLB&r;cfu!<WN)#65%R$NCD1#64r,!mUdt!2'>k!X&Z1#R_%+&)@a$%1NXL"Tnf-XoO%R_Z9Z;#m1>9
$4RR](Ddt7)?:W_)&X2(&J#<U#6P#/NW=Y2kQ(P]rW3B0#RV+V)''kF,L%MB,U=NS)A`tp$3pV6df=t"
T)]9$!X/i:&/Q?4-n[50nMB#Xr\=g5.O6/T'+G9R!s5e/JcNRd%KZ\8$4dgk,V:f54[).tdR"I25s[b!
3]/Q=+W1k$#6P$j!.k41!"T,4!s]/F)'^^l5t4L@:/B86%o5tr91MB20de"V%1!%;!q?8B!/(@P!Y#;<
$PXU/1I+N0='/^4d9R8f>Zk-)9L:`l+W1dt"TnhQ!.k3I!"T,4"U>PS+=fHD;HR77A7Y+>jCJj4A7K"N
<(]D1,oR@&"Tnh0!.k3j!"]25"UYbX,;22Q=(#TRCi!t:D?F`lBkIf_=\qRG-lj!/#6P$f!.k46!"K&3
"UYeY,VhY^>\.YfE6`G4D/<`i<(8o!*Y\te!s7fhJcLW-"p+i0$5".%#Vn\D?"IklF*#`O%s)f2D/!BX
7lr:F((1?L!m:Rq!3-#/!WiN4&KE)S6<%9)Df^'bG3=#XF)Pf&=%PJ++;P=i!s5J&JcNso%fue9$5"7(
2*t;MBlA*9G0tL>G'7tHCh$R>3sI;[((1?L!f6o/!:0[r!WiN4&KE)S6<.B,Dfg,Fd<?+EG'%\>@ou>b
/g(o;#6P%j!.k47!2ff-!WiN4&KE)S6<.B,Dfg,Fm!%T9%sE,<E,9#d8inXJ((1?L!j)HS!6>-N!WiN4
&KE)S6<.B,Dfg,Fd<>b;G'%\>@gQ704"_Wk$O6b8Mu\G0kl;4q!X/oC*$mI/<F9HYFEMcSG7Sk?FDu&+
=@tY-+;P=i!s7`fJcL]/#Qb&2$5"7(2*qLI?YOG#F`u/V%sE,<E,9#d8inXJ((1?L!m(Fo!3?/2!WiN4
&KE)S6<.B,Dfg,FkBH69%sE,<E,9#d8inXJ((1?L!iQ*N!6kKS!WiN4&KE)S6<.B,Dfg,Fd<>q@G'%\>
@ou>b/g(94$O6b8LB)o+mJmb!!X/oC*$mI/<F9HYFEMcSG7Sk?FDu&+=@tY-+;P=i!s7QaJcLl4%0?S7
$5"7(2*t;MBlA(oF`u/V%sE,<E,9#d8inXJ((1?L!lP(j!3lM7!WiN4&KE)S6<.B,Dfg,Ficjm9%sE,<
E,9#d8inXJ((1?L!i#aI!7CiX!WiN4&KE)S6<.B,Dfg,Fd<?+EG'%\>@ou>b/g(o;#6P$Z!.k4B!"T,4
"UYh],rJ"h?YOG#F`u/V%sE,<E,9#d8inXJ((1?L!oO'1!0mNp!WiN4&KE)S6<.B,Dfg,Frcck9%sE,<
E,9#d8inXJ((1?L!l"a!!.k3s!"T,4"UYh],rJ"h?YOG#F`u/V%!Hf9E,9#d8inXJ((10K!s4/VJcP9?
%fue9$5"7(2*t;MBlA*9G0tLEG'7tHCh$R>4"_Wk$O6b8irFZ2OoQ!o!X/oC*$mI/<F9HYFEMcSG7Sk?
FDu&+=@tY-+;P=i!s6=>JcN+W%fue9$5"7(2*t;MBlA*9G2RT8G7Sk?FDu&+=@tY-+;P=i!s5.rJcO:#
%fue9$5"7(2*t;MBlA*9G0tLGG'7tHCh$R>4"_Wk$O6b8!!%TNJcPHD%fue9$5"7(2*t;MBlA*9G0tLE
G'7tHCh$R>4"_Wk$O6b8h>i--QN.Nt!X/oC*$mI/<F9HYFEMd)GLgsKG'7tHCh$R>4"_Wk$O6b8]`<Wa
\,[$@!X/oC*$mI/<F9HYFEMc]GP?:lG'7tHCh$R>4"_Wk$O6b8S,e-@f`2Na!X/oC*$mI/<F9HYFEMcS
G7Sk?FDu&+=@tY-+;P=i!s8<!JcLB&q>_$-!X/oC*$mI/<F9HYFEMcSG7Sk?FDu&+=@tY-+;P=i!s7-U
JcM;@%fue9$5"7(2*t;MBlA*9G5$48G7Sk?FDu&+=@tY-+;P=i!s5t4JcNIa%fue9$5"7(2*t;MBlA*9
G1Lm8G7Sk?FDu&+=@tY-+;P=i!s8E$JcLB&pAb^*!X/oC*$mI/<F9HYFEMcSG7Sk?FDu&+=@tY-+;P=i
!s76XJcM2=%fue9$5"7(2*t;MBlA*9G5?F8G7Sk?FDu&+=@tY-+;P=i!s6(7JcN@^%fue9$5"7(2*t;M
BlA*9G1h*8G7Sk?FDu&+=@tY-+;P=i!s4nkJcOO*%fue9$5"7(2*t;MBlA*9G0tLEG'7tHCh$R>4"_Wk
$O6b8p],mGJcP]K%fue9$5"7(2*t;MBlA*9G0tLEG'7tHCh$R>4"_Wk$O6b8f)UC&ScB9&!X/oC*$mI/
<F9HYFEMd"GMRHRG'7tHCh$R>4"_Wk$O6b8[K(mZ^AncG!X/oC*$mI/<F9HYFEMcVGQ)dsG'7tHCh$R>
4"_Wk$O6b8PlQC9huF8h!X/oC*$mI/<F9HYFEMcSG7Sk?FDu&+=@tY-+;P=i!s8&oJcLB&%fue9$5"7(
2*t;MBlA*9G0tLEG'7tHCh$R>4"_Wk$O6b8dK"k!UAtf+!X/oC*$mI/<F9HYFEMcrGN*fWG'7tHCh$R>
4"_Wk$O6b8YlK@U_uL;L!X/oC*$mI/<F9HYFEMcSGQ2gqFDu&+=@tY-+;P=i!s4PaJcP!7rW!H1!X/oC
*$mI/<F9HYFEMcSG7Sk?FDu&+=@tY-+;P=i!s7!QJcMGD%fue9$5"7(2*t;MBlA*9G4Tq8G7Sk?FDu&+
=@tY-+;P=i!s5h0JcNUe%fue9$5"7(2*t;MBlA*9G1(RGGBS.OE,9#d8inXJ((1?L!g<V9!9*th!WiN4
&KE)S6<.B,Dfg,Fd<?+EG'%\>@ou>b/g(o;#6P%t!.k3(!<3*0"UYh],rJ"h?YOG#F`u/V%sE,<E,9#d
8inXJ((1?L!mgq!!2TZ+!WiN4&KE)S6<.B,Dfg,FmW[`9%sE,<E,9#d8inXJ((1?L!j;TU!6,!L!WiN4
&KE)S6<.B,Dfg,Fd<>\9G'%[2Ch$R>4"_Wk$O6b8NW=Y2k5Z"o!X/oC*$mI/<F9HYFEMcSG7Sk?FDu&+
=@tY-+;P=i!s7fhJcLW-"p+i0$5"7(#W4qK?YOG#F`u/V%sE,<E,9#d8inXJ((1?L!m:Rq!3-#0!WiN4
&KE)S6<.B,Dfg,Fl$)B9%sE,<E,9#d8inXJ((1?L!ic6P!6Y?Q!WiN4&KE)S6<.B,Dfg,Fd<>k>G'%\>
@ou>b"th#6$O6b8M#`,-li7Ot!X/oC*$mI/<F9HYFEMcSG7Sk?FDu&+=@tY-+;P=i!s7WcJcP!7VZ75/
!X/oC*$mI/<F9HYFEMcnGNO)[G'7tHCh$R>4"_Wk$O6b8XT3qQa8c_P!X/oC*$mI/<F9HYFEMcSG6N/5
FDu&+$!9e]/g(o;#6P$d!.k48!"T,4"UYh],rJ"h?YOG#F`u/V%sE,<E,9#d8inXJ((1?L!pTc;!/gg_
!WiN4&KE)S63^FsBlA*9G0tLEG'7tHCh$R>4"_Wk$O6b8aT-nmX8ib4!X/oC*$mI/<F9HYFEMciGO'G`
G'7tHCh$R>4"_Wk$O6b8VuVDLblA7U!X/oC*$mI/<F9HYFEMcSG7&M:FDu&+=@tY-+9WGf#6P$_!.k4=
!"T,4"UYh],rJ"h?YOG#F`u/V%sE,<E,9#d8inXJ((1?L!p'E6!0@0i!WiN4&KE)S6<.B,Dfc#&G0tLE
G'7tHCh$R>4"_Wk$O6b8_uPAhYlG:9!X/oC*$mI/<F9HYFEMcdGOTeeG'7tHCh$R>4"_Wk$O6b8UB#lG
dJsdZ!X/oC*$mI/<F9HYFEMcSG7Sk?FDu&+=@tY-+;P=i!s4&SJcPBB%fue9$5"7(2*t;MBlA*9G0tLE
G'7tHCh$R>4"_Wk$O6b8huJ?/PlM<r!X/oC*$mI/<F9HYFEMd+GLUgIG'7tHCh$R>4"_Wk$O6b8^B!Ht
JcO*s%fue9$5"7(2*t;MBlA*9G0tLBG'7tHCh$R>4"_Wk$N^P8!egW+!:Tt!!WiN4&KE)S6<.B,Dfg,F
d<?+EG'%\>@ou>b/g(o;#6P%f!.k36!"T,4"UYh],rJ"h?YOG#F`u/V%sE,<E,9#d8inXJ((1?L!l=qh
!4)Y9!WiN4&KE)S6<.B,Dfg,Fi-4a9%sE,<E,9#d8inXJ((1?L!hfUG!7UuZ!WiN4&KE)S6<.B,Dfg,F
d<?1GG'%\>@ou>b/g(o;#6P#-!.k3&!;-=&!WiN4&KE)S6<.B,Dfg,Fd<?+EG'%\>@ou>b/g(o;#6P%a
!.k3;!"T,4"UYh],rJ"h?YOG#Fa!\,eoqXJG'%\>@ou>b/g(o;#6P%@!.k3\!"T,4"UYh],rJ"h?YOG#
F`uM`pNI-kG'%\>@ou>b/g(o;#6P$t!.k4(!"T,4"UYh],rJ"h?YOG#F`u/V%sE,<E,9#d8inXJ((1?L
!r;nK!.k4I!"T,4"UYh],rJ"h?YOG#F`u/V%sE,<E,9#d8inXJ((1?L!ndR*!1X$"!WiN4&KE)S6<.B,
Dfg,FpNPA9%sE,<E,9#d8inXJ((1?L!k85^!5/@C!WiN4&KE)S6<.B,Dfg,Fep%%9%sE,<E,9#d8inXJ
((1?L!rW+N!.k4F!"T,4"UYh],rJ"h?YOG#F`u/V%sE,<E,9#d8inXJ((1?L!o*d-!1<ft!WiN4&KE)S
6<.B,Dfg,FqKLS9%sE,<E,9#d8inXJ((1?L!kSGa!4i.@!WiN4&KE)S6<.B,Dfg,Ffm!79%sE,<E,9#d
8inXJ((1?L!h'+@!8@Ja!WiN4&KE)S6<.B,Dfg,Fd<?+EG'%\>@ou>b/g(o;#6P&&!.k3&!;lg-!WiN4
&KE)S6<.B,Dfg,Fd<?+EG'%\>@ou>b/g(o;#6P%Z!.k3B!"T,4"UYh],rJ"h?YOG#Fa!G%h00BQG'%\>
@ou>b/g(o;#6P%9!.k3c!"T,4"UYh],rJ"h?YOG#F`u8Yrc\lrG'%\>@ou>b/g(o;#6P$m!.k4/!"T,4
"UYh],rJ"h?YOG#F`u/V%sE,<E,9#d8inXJ((1?L!rW+L~>

%%EndBinary
grestore
np
147.905 73.1527 mo
176.905 73.1527 li
176.905 39.1527 li
147.905 39.1527 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 73.0947 211.31 ]ct
[29 0 0 34 74.8107 138.157 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 87 
/H 102 
/M[87 0 0 -102 0 102 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&pAb^*!s]2I*%3^7<F0BWFEViSG7Je<E,9&f90FmM(C^WR!o*d-!1<ft!WrZ8'-&DY7TEc/DKL&F
qKLP8%X)r5Ch-[A4Y@in%1!+=])[E_\c<6B!s]2I*%3^7<F0BWFEVi\GPH@lG'%\>A6DPg/g(r>#R(9u
!.k4*!"T,5#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=p],mGJcP]K%fuh<$POL.2F^\QBl8$9
G0kFCG'%\>A6DPg/g(r>#R(:]!.k3B!"T,5#7D1b-oOOp?>4;!G'<P&gij6OFDu&,=\Cn1+;YIm"Tl+4
JcNOc%fuh<$POL.2F^\QBl8$9G1:a7G7Je<E,9&f90FmM(C^WR!gNb;!8mhf!WrZ8'-&DY7TEc/DKL&F
d!#tCFDu&,=\Cn1+;YIm"Tn8qJcLB&%fuh<$POL.2F^\QBl8$9G0kFCG'%\>A6DPg/g(r>#R(:X!.k3G
!"T,5#7D1b-oOOp?>4;!G'<A!iHGcTFDu&,=\Cn1+;YIm"Tkq/JcN^h%fuh<$POL.2F^\QBl8$9G0kF5
Fq&P4Ch-[A4Y@in%1!+=O8sk4kQ(S^%fuh<$POL.2F^\QBl8$9G0kFCG'%\>A6DPg/g(r>#R(:[!.k3D
!"T,5#7D1b-oOOp?>4;!G'<J$hKKHQFDu&,=\Cn1+;YIm"Tl%2JcNUe%fuh<$POL.2F^\QBl8$9G1(RG
GB\4PE,9&f90FmM(C^WR!g<V9!9*th!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"Tn2oJcLH(
!<N?4#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=ciAXtV#V#-!s]2I*%3^7<F0BWFEViqGN3lW
G'%\>A6DPg/g(r>#R(:5!.k3j!"T,5#7D1b-oOOp?>4;!G';5V!d8[)$Z'?V90FmM(C^WR!fd84!9X=m
!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"Tn#jJcLW-"p+l3$POL.#W>.P?>4;!G';5V%X)r5
Ch-[A4Y@in%1!+=b5d+oWW3P2!s]2I*%3^7<F0BWFEVilGNa5\G'%\>A6DPg/g(r>#R(:0!.k3o!"T,5
#7D1b-oOOp?>4;!G';5V#Bk3.Ch-[A4U*M](C^WR!f6o/!:0[r!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,
=\Cn1+;YIm"TmieJcP!7VZ75/!s]2I*%3^7<F0BWFEVioGNF#YG'%\>A6DPg/g(r>#R(:3!.k3l!"T,5
#7D1b-oOOp?>4;!G';5V"Enm+Ch*iT90FmM(C^WR!fR,2!9jIo!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,
=\Cn1+;YIm"TmrhJcL]/#Qb)5$POL.2F[mN?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=aT-nmX8ib4!s]2I
*%3^7<F0BWFEVijGNsA^G'%\>A6DPg/g(r>#R(:.!.k3q!"T,5#7D1b-oOOp?>4;!G';5V$$LE0Ch-[A
4Y@i[(C^WR!f$c-!:Bgt!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"TmccJcLl4%0?V:$POL.
2F^\QBl8%mG0kFCG'%\>A6DPg/g(r>#R(:J!.k3U!"T,5#7D1b-oOOp?>4;!G';khmro7bFDu&,=\Cn1
+;YIm"TkG!JcO4!%fuh<$POL.2F^\QBl8$9G0kFCG'%\>A6DPg/g(r>#R(9]!.k4B!"T,5#7D1b-oOOp
?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=huJ?/PlM<r!s]2I*%3^7<F0BWFEVj,GLLaGG'%\>A6DPg/g(r>
#R(:E!9aE7!7(WU!WrZ8'-&DY7TEc/DKL&Fd!#k@FDu&,=\Cn1+;YIg#R(9`!.k4?!"T,5#7D1b-oOOp
?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=irFZ2OoQ!o!s]2I*%3^7<F0BWFEViSG7Je<E,9&f90FmM(C^WR
!l=qh!4)Y9!WrZ8'-&DY7TEc/DKL&Fi-4^8%X)r5Ch-[A4Y@in%1!+=T`BZEe,U!\!s]2I*%3^7<F0BW
FEViSG7\q>E,9&f90FmM(C^WR!WW4P!.k4D!"T,5#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=
h>i--QN.Nt!s]2I*%3^7<F0BWFEVj*GL^mIG'%\>A6DPg/g(r>#R(:C!.k3\!"T,5#7D1b-oOOp?>4;!
G';Vap3.!iFDu&,=\Cn1+;YIm"Tk1oJcOI(%fuh<$POL.2F^\QBl8$9G0kFCG'%\>A6DPg/g(r>#R(;+
!.k3&!;Z[+!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"Tm?WJcM;@%fuh<$POL.2F^\QBl8$9
G5$47G7Je<E,9&f90FmM(C^WR!k85^!5/@C!WrZ8'-&DY7TEc/DKL&Fep%"8%X)r5Ch-[A4Y@in%1!+=
r;_ELJcPNF%fuh<$POL.2F^\QBl8$9G0kFCG'%\>A6DPg/g(r>#R(:b!.k3=!"T,5#7D1b-oOOp?>4;!
G'<_+f67^JFDu&,=\Cn1+;YIm"Tl:9JcN@^%fuh<$POL.2F^\QBl8$9G1h*7G7Je<E,9&f90FmM(C^WR
!h'+@!8@Ja!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"TnH!JcLB&qu@6/!s]2I*%3^7<F0BW
FEViSG7Je<E,9&f90FmM(C^WR!nRF(!1j0$!WrZ8'-&DY7TEc/DKL&Folo28%X)r5Ch-[A4Y@in%1!+=
[K(mZ^AncG!s]2I*%3^7<F0BWFEViWGPu^qG'%\>A6DPg/g(r>#R(9p!.k4/!"T,5#7D1b-oOOp?>4;!
G';5V%X)r5Ch-[A4Y@in%1!+=o)O@BJcH;_!s]2I*%3^7<F0BWFEViSG7Je<E,9&f90FmM(C^WR!n%(#
!2BN)!WrZ8'-&DY7TEc/DKL&Fn9<i8%X)r5Ch-[A4Y@in%1!+=YlK@U_uL;L!s]2I*%3^7<F0BWFEViS
G5udqFDu&,=\Cn1+;YIm"TjbcJcP!7rW!H1!s]2I*%3^7<F0BWFEViSG7Je<E,9&f90FmM(C^WR!n@:&
!2'<&!WrZ8'-&DY7TEc/DKL&Fo69&8%X)r5Ch-[A4Y@in%1!+=ZiG[X_#OuI!s]2I*%3^7<F0BWFEViU
G7\tBG'%\>A6DPg/g(r>#R(9n!.k41!"T,5#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=nGn.@
KE)#S!t>JC'-&DY7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"Tm$NJcMVI%fuh<$POL.2F^\QBl8$9G4'S7
G7Je<E,9&f90FmM(C^WR!j;TU!6,!L!WrZ8'-&DY7TEc/DKL&Fd!#P7FDqV(A6DPg/g(r>#R(9i!.k46
!"T,5#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=li;V;M#[_]!s]2I*%2(N7TEc/DKL&Fd!#tC
FDu&,=\Cn1+;YIm"TljIJcMeN%fuh<$POL.2F^\QBl8$9G3O57G7Je<E,9&f90FmM(C^WR!ic6P!6Y?Q
!WrZ8'-&DY7TEc/DKL&Fd!#_<FDu&,=\Cm^/g(r>#R(9d!.k4;!"T,5#7D1b-oOOp?>4;!G';5V%X)r5
Ch-[A4Y@in%1!+=k5^)6kQ%L\%fuh<$POL.2F^\QBl8$9G3jG7G7Je<E,9&f90FmM(C^WR!j)HS!6>-N
!WrZ8'-&DY7TEc/DKL&Fd!#V9FDu&,$!Bna/g(r>#R(9g!.k48!"T,5#7D1b-oOOp?>4;!G';5V%X)r5
Ch-[A4Y@in%1!+=l2ZD9MZ="a!s]2I*%3^7#$"uDDKL&Fd!#tCFDu&,=\Cn1+;YIm"TldGJcMkP%fuh<
$POL.2F^\QBl8$9G3=)7G7Je<E,9&f90FmM(C^WR!iQ*N!6kKS!WrZ8'-&DY7TEc/DKL&Fd!#e>FDu&,
=\Cn1+9WJi#R(9b!.k4=!"T,5#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=jT'l4O8o^k!s]2I
*%3^7<F0BWFT6O2G7Je<E,9&f90FmM(C^WR!lP(j!3lM7!WrZ8'-&DY7TEc/DKL&Ficjj8%X)r5Ch-[A
4Y@in%1!+=UB#lGdJsdZ!s]2I*%3^7<F0BWFEViSG7Je<E,9&f90FmM(C^WR!eLE(!:p1$!WrZ8'-&DY
7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"TmT^JcM&9%fuh<$POL.2F^\QBl8$9G5c^7G7Je<E,9&f90FmM
(C^WR!l"a!!.k3s!"T,5#7D1b-oOOp?>4;!G';5V$[-W2Ch-[A4Y@in%0?e=!egW+!:Tt!!WrZ8'-&DY
7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"Tm]aJcLr6%fuh<$POL.2F^\QBl8$9G0kFCG'%\>A6DPg/g(r>
#R(:H!.k3W!"T,5#7D1b-oOOp?>4;!G';efnTPIdFDu&,=\Cn1+;YIm"Tk@tJcO:#%fuh<$POL.2F^\Q
Bl8$9G0kFEG'%\>A6DPg/g(r>#R(80!.k3&!;-=&!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm
"TmN\JcM,;%fuh<$POL.2F^\QBl8$9G5QR7G7Je<E,9&f90FmM(C^WR!keSc!4W">!WrZ8'-&DY7TEc/
DKL&FgNW@8%X)r5Ch-[A4Y@in%1!+=S,e-@f`2Na!s]2I*%3^7<F0BWFEViSG7Je<E,9&f90FmM(C^WR
!r;nK!.k4I!"T,5#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=f`6U(S,a'$!s]2I*%3^7<F0BW
FEVj%GM76NG'%\>A6DPg/g(r>#R(:>!.k3a!"T,5#7D1b-oOOp?>4;!G';G\qf`NnFDu&,=\Cn1+;YIm
"TnW&JcLB&pAb^*!s]2I*%3^7<F0BWFEViSG7Je<E,9&f90FmM(C^WR!o*d-!1<ft!WrZ8'-&DY7TEc/
DKL&FqKLP8%X)r5Ch-[A4Y@in%1!+=])[E_\c<6B!s]2I*%3^7<F0BWFEVi\GPH@lG'%\>A6DPg/g(r>
#R(9u!.k4*!"T,5#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=p],mGJcP]K%fuh<$POL.2F^\Q
Bl8$9G0kFCG'%\>A6DPg/g(r>#R(:]!.k3B!"T,5#7D1b-oOOp?>4;!G'<P&gij6OFDu&,=\Cn1+;YIm
"Tl+4JcNOc%fuh<$POL.2F^\QBl8$9G1:a7G7Je<E,9&f90FmM(C^WR!gNb;!8mhf!WrZ8'-&DY7TEc/
DKL&Fd!#tCFDu&,=\Cn1+;YIm"TnW&J,~>

%%EndBinary
grestore
np
222.905 104.153 mo
251.905 104.153 li
251.905 73.1527 li
222.905 73.1527 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 73.0947 211.31 ]ct
[29 0 0 31 149.811 107.157 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 87 
/H 93 
/M[87 0 0 -93 0 93 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&pAb^*!X/oC*$mI/<F9HYFEMcSG7Sk?FDu&+=@tY-+;P=i!s76XJcM2=%fue9$5"7(2*t;MBlA*9
G5?F8G7Sk?FDu&+=@tY-+;P=i!s6(7JcN@^%fue9$5"7(2*t;MBlA*9G1h*8G7Sk?FDu&+=@tY-+;P=i
!s4nkJcOO*%fue9$5"7(2*t;MBlA*9G0tLEG'7tHCh$R>4"_Wk$O6b8p],mGJcP]K%fue9$5"7(2*t;M
BlA*9G0tLEG'7tHCh$R>4"_Wk$O6b8f)UC&ScB9&!X/oC*$mI/<F9HYFEMd"GMRHRG'7tHCh$R>4"_Wk
$O6b8[K(mZ^AncG!X/oC*$mI/<F9HYFEMcVGQ)dsG'7tHCh$R>4"_Wk$O6b8PlQC9huF8h!X/oC*$mI/
<F9HYFEMcSG7Sk?FDu&+=@tY-+;P=i!s8&oJcLB&%fue9$5"7(2*t;MBlA*9G0tLEG'7tHCh$R>4"_Wk
$O6b8dK"k!UAtf+!X/oC*$mI/<F9HYFEMcrGN*fWG'7tHCh$R>4"_Wk$O6b8YlK@U_uL;L!X/oC*$mI/
<F9HYFEMcSGQ2gqFDu&+=@tY-+;P=i!s4PaJcP!7rW!H1!X/oC*$mI/<F9HYFEMcSG7Sk?FDu&+=@tY-
+;P=i!s7!QJcMGD%fue9$5"7(2*t;MBlA*9G4Tq8G7Sk?FDu&+=@tY-+;P=i!s5h0JcNUe%fue9$5"7(
2*t;MBlA*9G1(RGGBS.OE,9#d8inXJ((1?L!g<V9!9*th!WiN4&KE)S6<.B,Dfg,Fd<?+EG'%\>@ou>b
/g(o;#6P%t!.k3(!<3*0"UYh],rJ"h?YOG#F`u/V%sE,<E,9#d8inXJ((1?L!mgq!!2TZ+!WiN4&KE)S
6<.B,Dfg,FmW[`9%sE,<E,9#d8inXJ((1?L!j;TU!6,!L!WiN4&KE)S6<.B,Dfg,Fd<>\9G'%[2Ch$R>
4"_Wk$O6b8NW=Y2k5Z"o!X/oC*$mI/<F9HYFEMcSG7Sk?FDu&+=@tY-+;P=i!s7fhJcLW-"p+i0$5"7(
#W4qK?YOG#F`u/V%sE,<E,9#d8inXJ((1?L!m:Rq!3-#0!WiN4&KE)S6<.B,Dfg,Fl$)B9%sE,<E,9#d
8inXJ((1?L!ic6P!6Y?Q!WiN4&KE)S6<.B,Dfg,Fd<>k>G'%\>@ou>b"th#6$O6b8M#`,-li7Ot!X/oC
*$mI/<F9HYFEMcSG7Sk?FDu&+=@tY-+;P=i!s7WcJcP!7VZ75/!X/oC*$mI/<F9HYFEMcnGNO)[G'7tH
Ch$R>4"_Wk$O6b8XT3qQa8c_P!X/oC*$mI/<F9HYFEMcSG6N/5FDu&+$!9e]/g(o;#6P$d!.k48!"T,4
"UYh],rJ"h?YOG#F`u/V%sE,<E,9#d8inXJ((1?L!pTc;!/gg_!WiN4&KE)S63^FsBlA*9G0tLEG'7tH
Ch$R>4"_Wk$O6b8aT-nmX8ib4!X/oC*$mI/<F9HYFEMciGO'G`G'7tHCh$R>4"_Wk$O6b8VuVDLblA7U
!X/oC*$mI/<F9HYFEMcSG7&M:FDu&+=@tY-+9WGf#6P$_!.k4=!"T,4"UYh],rJ"h?YOG#F`u/V%sE,<
E,9#d8inXJ((1?L!p'E6!0@0i!WiN4&KE)S6<.B,Dfc#&G0tLEG'7tHCh$R>4"_Wk$O6b8_uPAhYlG:9
!X/oC*$mI/<F9HYFEMcdGOTeeG'7tHCh$R>4"_Wk$O6b8UB#lGdJsdZ!X/oC*$mI/<F9HYFEMcSG7Sk?
FDu&+=@tY-+;P=i!s4&SJcPBB%fue9$5"7(2*t;MBlA*9G0tLEG'7tHCh$R>4"_Wk$O6b8huJ?/PlM<r
!X/oC*$mI/<F9HYFEMd+GLUgIG'7tHCh$R>4"_Wk$O6b8^B!HtJcO*s%fue9$5"7(2*t;MBlA*9G0tLB
G'7tHCh$R>4"_Wk$N^P8!egW+!:Tt!!WiN4&KE)S6<.B,Dfg,Fd<?+EG'%\>@ou>b/g(o;#6P%f!.k36
!"T,4"UYh],rJ"h?YOG#F`u/V%sE,<E,9#d8inXJ((1?L!l=qh!4)Y9!WiN4&KE)S6<.B,Dfg,Fi-4a9
%sE,<E,9#d8inXJ((1?L!hfUG!7UuZ!WiN4&KE)S6<.B,Dfg,Fd<?1GG'%\>@ou>b/g(o;#6P#-!.k3&
!;-=&!WiN4&KE)S6<.B,Dfg,Fd<?+EG'%\>@ou>b/g(o;#6P%a!.k3;!"T,4"UYh],rJ"h?YOG#Fa!\,
eoqXJG'%\>@ou>b/g(o;#6P%@!.k3\!"T,4"UYh],rJ"h?YOG#F`uM`pNI-kG'%\>@ou>b/g(o;#6P$t
!.k4(!"T,4"UYh],rJ"h?YOG#F`u/V%sE,<E,9#d8inXJ((1?L!r;nK!.k4I!"T,4"UYh],rJ"h?YOG#
F`u/V%sE,<E,9#d8inXJ((1?L!ndR*!1X$"!WiN4&KE)S6<.B,Dfg,FpNPA9%sE,<E,9#d8inXJ((1?L
!k85^!5/@C!WiN4&KE)S6<.B,Dfg,Fep%%9%sE,<E,9#d8inXJ((1?L!rW+N!.k4F!"T,4"UYh],rJ"h
?YOG#F`u/V%sE,<E,9#d8inXJ((1?L!o*d-!1<ft!WiN4&KE)S6<.B,Dfg,FqKLS9%sE,<E,9#d8inXJ
((1?L!kSGa!4i.@!WiN4&KE)S6<.B,Dfg,Ffm!79%sE,<E,9#d8inXJ((1?L!h'+@!8@Ja!WiN4&KE)S
6<.B,Dfg,Fd<?+EG'%\>@ou>b/g(o;#6P&&!.k3&!;lg-!WiN4&KE)S6<.B,Dfg,Fd<?+EG'%\>@ou>b
/g(o;#6P%Z!.k3B!"T,4"UYh],rJ"h?YOG#Fa!G%h00BQG'%\>@ou>b/g(o;#6P%9!.k3c!"T,4"UYh]
,rJ"h?YOG#F`u8Yrc\lrG'%\>@ou>b/g(o;#6P$m!.k4/!"T,4"UYh],rJ"h?YOG#F`u/V%sE,<E,9#d
8inXJ((1?L!qQDD!.k1]!WiN4&KE)S6<.B,Dfg,Fd<?+EG'%\>@ou>b/g(o;#6P%U!.k3G!"T,4"UYh]
,rJ"h?YOG#Fa!7uicboVG'%\>@ou>b/g(o;#6P%4!.k3h!"T,4"UYh],rJ"h?YOG#F`u/Vs)ninE,9#d
8inXJ((1?L!g!D6!9aF^!"T,4"UYh],rJ"h?YOG#F`u/V%sE,<E,9#d8inXJ((1?L!n@:&!2'<&!WiN4
&KE)S6<.B,Dfg,Fo69)9%sE,<E,9#d8inXJ((1?L!jhrZ!5SXG!WiN4&KE)S6<.B,Dfg,FdWZ7HG'7tH
Ch$R>4"_Wk$O6b8P5p17iW'Jj!X/oC*$mI/<F9HYFEMcSG7Sk?FDu&+=@tY-+;P=i!s7umJcLH(rrNW5
$5"7(2*t;MBlA*9G0tLEG'7tHCh$R>4"_Wk$O6b8ciAXtV#V#-!X/oC*$mI/<F9HYFEMcpGN<rYG'7tH
Ch$R>4"_Wk$O6b8Y5j.S`W-MN!X/oC*$mI/<F9HYFEMcSG6<#3FDqV(@ou>b/g(o;#6P$f!.k46!"T,4
"UYh],rJ"h?YOG#F`u/V%sE,<E,9#d8inXJ((1?L!pfo=!/U[[!WiN4&KE)&2*t;MBlA*9G0tLEG'7tH
Ch$R>4"_Wk$O6b8b5d+oWW3P2!X/oC*$mI/<F9HYFEMckGNj;^G'7tHCh$R>4"_Wk$O6b8WW7VNb5`%S
!X/oC*$mI/<F9HYFEMcSG6iA8FDu&+=@tXZ/g(o;#6P$a!.k4;!"T,4"UYh],rJ"h?YOG#F`u/V%sE,<
E,9#d8inXJ((1?L!p9Q8!9aE\!"T,4"UYh],rJ"h?YOG#Fa!+qk'%>ZG'%\>@ou>b/g(o;#6P%0!.k3l
!"T,4"UYh],rJ"h?YOG#F`u/V"a5'2E,9"j=@tY-+;P=i!s4D]JcP$8%fue9$5"7(2*t;MBlA*9G0tLE
G'7tHCh$R>4"_Wk$O6b8l2ZD9MZ="a!X/oC*$mI/#$##EDfg,Fd<?+EG'%\>@ou>b/g(o;#6P%L!.k3P
!"T,4"UYh],rJ"h?YOG#F`uqllZWk_G'%\>@ou>b/g(o;#6P%+!.k3q!"T,4"UYh],rJ"h?YOG#F`u/V
$?gT7E,9#d8inXJ";V@M!s45XJcP3=%fue9$5"7(2*t;MBlA*9G0tLEG'7tHCh$R>4"_Wk$O6b8jT'l4
O8o^k!X/oC*$mI/<F9HYF9-N-d<?+EG'%\>@ou>b/g(o;#6P%G!.k3U!"T,4"UYh],rJ"h?YOG#F`ubg
n95CdG'%\>@ou>b/g(o;#6P%&!.k4!!"T,4"UYh],rJ"h?YOG#F`u/V%sE,<E,9#d8inXJ((1?L!eLE(
!:p1$!WiN4&KE)S6<.B,Dfg,Fd<?+EG'%\>@ou>b/g(o;#6P%c!.k39!"T,4"UYh],rJ"h?YOG#Fa!b.
e9;FHG'%\>@ou>b/g(o;#6P%B!9aE7!7(WU!WiN4&KE)S6<.B,Dfg,Fd<?"BG'%\>@ou>b/g(o;!XAf/
K`H])n,Nt#!X/oC*$mI/<F9HYFEMcSG7Sk?FDu&+=@tY-+;P=i!s7K_JcLr6%fue9$5"7(2*t;MBlA*9
G0tLEG'7tHCh$R>4"_Wk$O6b8_>o/fZN(L;!X/oC*$mI/<F9HYFEMcbGOfqgG'7tHCh$R>4"_Wk$O6b8
T`BZEe,U!\!X/oC*$mI/<F9HYFEMcSG7f"AFDu&+=@tY-+;P=i!s/H&JcLB&o`,L(!X/oC*$mI/<F9HY
FEMcSG7Sk?FDu&+=@tY-+;P=i!s7<ZJcM,;%fue9$5"7(2*t;MBlA*9G5QR8G7Sk?FDu&+=@tY-+;P=i
!s6.9JcN:\%fue9$5"7(2*t;MBlA*9G2%68G7Sk?FDu&+=@tY-+;P=i!s4tmJcOI(%fue9$5"7(2*t;M
BlA*9G0tLEG'7tHCh$R>4"_Wk$O6b8q>c*IJcPWI%fue9$5"7(2*t;MBlA*9G0tLEG'7tHCh$R>4"_Wk
$O6b8f`6U(S,a'$!X/oC*$mI/<F9HYFEMd$GM@<PG'7tHCh$R>4"_Wk$O6b8r;_?~>

%%EndBinary
grestore
np
147.905 104.153 mo
176.905 104.153 li
176.905 73.1527 li
147.905 73.1527 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 73.0947 211.31 ]ct
[29 0 0 31 74.8107 107.157 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 87 
/H 93 
/M[87 0 0 -93 0 93 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&pAb^*!s]2I*%3^7<F0BWFEViSG7Je<E,9&f90FmM(C^WR!o*d-!1<ft!WrZ8'-&DY7TEc/DKL&F
qKLP8%X)r5Ch-[A4Y@in%1!+=])[E_\c<6B!s]2I*%3^7<F0BWFEVi\GPH@lG'%\>A6DPg/g(r>#R(9u
!.k4*!"T,5#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=p],mGJcP]K%fuh<$POL.2F^\QBl8$9
G0kFCG'%\>A6DPg/g(r>#R(:]!.k3B!"T,5#7D1b-oOOp?>4;!G'<P&gij6OFDu&,=\Cn1+;YIm"Tl+4
JcNOc%fuh<$POL.2F^\QBl8$9G1:a7G7Je<E,9&f90FmM(C^WR!gNb;!8mhf!WrZ8'-&DY7TEc/DKL&F
d!#tCFDu&,=\Cn1+;YIm"Tn8qJcLB&%fuh<$POL.2F^\QBl8$9G0kFCG'%\>A6DPg/g(r>#R(:X!.k3G
!"T,5#7D1b-oOOp?>4;!G'<A!iHGcTFDu&,=\Cn1+;YIm"Tkq/JcN^h%fuh<$POL.2F^\QBl8$9G0kF5
Fq&P4Ch-[A4Y@in%1!+=O8sk4kQ(S^%fuh<$POL.2F^\QBl8$9G0kFCG'%\>A6DPg/g(r>#R(:[!.k3D
!"T,5#7D1b-oOOp?>4;!G'<J$hKKHQFDu&,=\Cn1+;YIm"Tl%2JcNUe%fuh<$POL.2F^\QBl8$9G1(RG
GB\4PE,9&f90FmM(C^WR!g<V9!9*th!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"Tn2oJcLH(
!<N?4#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=ciAXtV#V#-!s]2I*%3^7<F0BWFEViqGN3lW
G'%\>A6DPg/g(r>#R(:5!.k3j!"T,5#7D1b-oOOp?>4;!G';5V!d8[)$Z'?V90FmM(C^WR!fd84!9X=m
!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"Tn#jJcLW-"p+l3$POL.#W>.P?>4;!G';5V%X)r5
Ch-[A4Y@in%1!+=b5d+oWW3P2!s]2I*%3^7<F0BWFEVilGNa5\G'%\>A6DPg/g(r>#R(:0!.k3o!"T,5
#7D1b-oOOp?>4;!G';5V#Bk3.Ch-[A4U*M](C^WR!f6o/!:0[r!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,
=\Cn1+;YIm"TmieJcP!7VZ75/!s]2I*%3^7<F0BWFEVioGNF#YG'%\>A6DPg/g(r>#R(:3!.k3l!"T,5
#7D1b-oOOp?>4;!G';5V"Enm+Ch*iT90FmM(C^WR!fR,2!9jIo!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,
=\Cn1+;YIm"TmrhJcL]/#Qb)5$POL.2F[mN?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=aT-nmX8ib4!s]2I
*%3^7<F0BWFEVijGNsA^G'%\>A6DPg/g(r>#R(:.!.k3q!"T,5#7D1b-oOOp?>4;!G';5V$$LE0Ch-[A
4Y@i[(C^WR!f$c-!:Bgt!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"TmccJcLl4%0?V:$POL.
2F^\QBl8%mG0kFCG'%\>A6DPg/g(r>#R(:J!.k3U!"T,5#7D1b-oOOp?>4;!G';khmro7bFDu&,=\Cn1
+;YIm"TkG!JcO4!%fuh<$POL.2F^\QBl8$9G0kFCG'%\>A6DPg/g(r>#R(9]!.k4B!"T,5#7D1b-oOOp
?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=huJ?/PlM<r!s]2I*%3^7<F0BWFEVj,GLLaGG'%\>A6DPg/g(r>
#R(:E!9aE7!7(WU!WrZ8'-&DY7TEc/DKL&Fd!#k@FDu&,=\Cn1+;YIg#R(9`!.k4?!"T,5#7D1b-oOOp
?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=irFZ2OoQ!o!s]2I*%3^7<F0BWFEViSG7Je<E,9&f90FmM(C^WR
!l=qh!4)Y9!WrZ8'-&DY7TEc/DKL&Fi-4^8%X)r5Ch-[A4Y@in%1!+=T`BZEe,U!\!s]2I*%3^7<F0BW
FEViSG7\q>E,9&f90FmM(C^WR!WW4P!.k4D!"T,5#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=
h>i--QN.Nt!s]2I*%3^7<F0BWFEVj*GL^mIG'%\>A6DPg/g(r>#R(:C!.k3\!"T,5#7D1b-oOOp?>4;!
G';Vap3.!iFDu&,=\Cn1+;YIm"Tk1oJcOI(%fuh<$POL.2F^\QBl8$9G0kFCG'%\>A6DPg/g(r>#R(;+
!.k3&!;Z[+!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"Tm?WJcM;@%fuh<$POL.2F^\QBl8$9
G5$47G7Je<E,9&f90FmM(C^WR!k85^!5/@C!WrZ8'-&DY7TEc/DKL&Fep%"8%X)r5Ch-[A4Y@in%1!+=
r;_ELJcPNF%fuh<$POL.2F^\QBl8$9G0kFCG'%\>A6DPg/g(r>#R(:b!.k3=!"T,5#7D1b-oOOp?>4;!
G'<_+f67^JFDu&,=\Cn1+;YIm"Tl:9JcN@^%fuh<$POL.2F^\QBl8$9G1h*7G7Je<E,9&f90FmM(C^WR
!h'+@!8@Ja!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"TnH!JcLB&qu@6/!s]2I*%3^7<F0BW
FEViSG7Je<E,9&f90FmM(C^WR!nRF(!1j0$!WrZ8'-&DY7TEc/DKL&Folo28%X)r5Ch-[A4Y@in%1!+=
[K(mZ^AncG!s]2I*%3^7<F0BWFEViWGPu^qG'%\>A6DPg/g(r>#R(9p!.k4/!"T,5#7D1b-oOOp?>4;!
G';5V%X)r5Ch-[A4Y@in%1!+=o)O@BJcH;_!s]2I*%3^7<F0BWFEViSG7Je<E,9&f90FmM(C^WR!n%(#
!2BN)!WrZ8'-&DY7TEc/DKL&Fn9<i8%X)r5Ch-[A4Y@in%1!+=YlK@U_uL;L!s]2I*%3^7<F0BWFEViS
G5udqFDu&,=\Cn1+;YIm"TjbcJcP!7rW!H1!s]2I*%3^7<F0BWFEViSG7Je<E,9&f90FmM(C^WR!n@:&
!2'<&!WrZ8'-&DY7TEc/DKL&Fo69&8%X)r5Ch-[A4Y@in%1!+=ZiG[X_#OuI!s]2I*%3^7<F0BWFEViU
G7\tBG'%\>A6DPg/g(r>#R(9n!.k41!"T,5#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=nGn.@
KE)#S!t>JC'-&DY7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"Tm$NJcMVI%fuh<$POL.2F^\QBl8$9G4'S7
G7Je<E,9&f90FmM(C^WR!j;TU!6,!L!WrZ8'-&DY7TEc/DKL&Fd!#P7FDqV(A6DPg/g(r>#R(9i!.k46
!"T,5#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=li;V;M#[_]!s]2I*%2(N7TEc/DKL&Fd!#tC
FDu&,=\Cn1+;YIm"TljIJcMeN%fuh<$POL.2F^\QBl8$9G3O57G7Je<E,9&f90FmM(C^WR!ic6P!6Y?Q
!WrZ8'-&DY7TEc/DKL&Fd!#_<FDu&,=\Cm^/g(r>#R(9d!.k4;!"T,5#7D1b-oOOp?>4;!G';5V%X)r5
Ch-[A4Y@in%1!+=k5^)6kQ%L\%fuh<$POL.2F^\QBl8$9G3jG7G7Je<E,9&f90FmM(C^WR!j)HS!6>-N
!WrZ8'-&DY7TEc/DKL&Fd!#V9FDu&,$!Bna/g(r>#R(9g!.k48!"T,5#7D1b-oOOp?>4;!G';5V%X)r5
Ch-[A4Y@in%1!+=l2ZD9MZ="a!s]2I*%3^7#$"uDDKL&Fd!#tCFDu&,=\Cn1+;YIm"TldGJcMkP%fuh<
$POL.2F^\QBl8$9G3=)7G7Je<E,9&f90FmM(C^WR!iQ*N!6kKS!WrZ8'-&DY7TEc/DKL&Fd!#e>FDu&,
=\Cn1+9WJi#R(9b!.k4=!"T,5#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=jT'l4O8o^k!s]2I
*%3^7<F0BWFT6O2G7Je<E,9&f90FmM(C^WR!lP(j!3lM7!WrZ8'-&DY7TEc/DKL&Ficjj8%X)r5Ch-[A
4Y@in%1!+=UB#lGdJsdZ!s]2I*%3^7<F0BWFEViSG7Je<E,9&f90FmM(C^WR!eLE(!:p1$!WrZ8'-&DY
7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"TmT^JcM&9%fuh<$POL.2F^\QBl8$9G5c^7G7Je<E,9&f90FmM
(C^WR!l"a!!.k3s!"T,5#7D1b-oOOp?>4;!G';5V$[-W2Ch-[A4Y@in%0?e=!egW+!:Tt!!WrZ8'-&DY
7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"Tm]aJcLr6%fuh<$POL.2F^\QBl8$9G0kFCG'%\>A6DPg/g(r>
#R(:H!.k3W!"T,5#7D1b-oOOp?>4;!G';efnTPIdFDu&,=\Cn1+;YIm"Tk@tJcO:#%fuh<$POL.2F^\Q
Bl8$9G0kFEG'%\>A6DPg/g(r>#R(80!.k3&!;-=&!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm
"TmN\JcM,;%fuh<$POL.2F^\QBl8$9G5QR7G7Je<E,9&f90FmM(C^WR!keSc!4W">!WrZ8'-&DY7TEc/
DKL&FgNW@8%X)r5Ch-[A4Y@in%1!+=S,e-@f`2Na!s]2I*%3^7<F0BWFEViSG7Je<E,9&f90FmM(C^WR
!r;nK!.k4I!"T,5#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=f`6U(S,a'$!s]2I*%3^7<F0BW
FEVj%GM76NG'%\>A6DPg/g(r>#R(;.!.Y~>

%%EndBinary
grestore
np
71.9053 104.153 mo
101.905 104.153 li
101.905 73.1527 li
71.9053 73.1527 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 73.0947 211.31 ]ct
[30 0 0 31 -1.18933 107.157 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 90 
/H 93 
/M[90 0 0 -93 0 93 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 90 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 90 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 90 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 90 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&bQ,N^o`0RDJcOj3rW9t>r;u$[JcLB&qZ-Ts!WrN.
`WuMIrr`6%ciAXtOT5Lc!WrZ4rX&W5q[Lm]#7CkG#6b22!kSGa!2ol)!WiH-#7(\J&/,`>']p):'+kcd
%1!1B!s/P&!.k3a!"&c/"U>DE&JQ*$*RPr+*X`u/)&X2%%grUG!Wo%qJcNairW3B0$4ddf*?cd[/'TXH
.k1lR,TRa<%grUE!Wn>]JcOL)%KZ\8$4R[f,UtH'2E<fZd6%=g$T9do.O5oJ%giIA!qu\H!.k4>!"Au3
#7D%Y,:bN25Xe.6cq4g?8Oc-83\r?4)%d5]!s/Pa!.k3)!!33(#RV"S)CR@(7S?WY=3jtY=&i-l76WLW
*Yo1l!s8VM!.k3>!"K)5#RqOl/ilEr<EWX8@/+3b@LljR?!:<*7QN.F)%R&V!s6"5JcMtS%KckA%2U0C
5Y>$]@qTLjj)"1#%r,fk@pW505VXQ&&.8XD!i,gJ!5njI!sK&C)'q1-:Kh4@D/O:>DusrqD%()f=\qOF
-QEd-"Tnge!.k4(!"K)7$P44&2apVLA8H.'F4#(?F)c,7A6i,'2^fX[%0Zh8q#H!HJcP3=%0HbA&/loT
7T3W+D/j[DFq/V6D.d3T7QDq='Fb3J!os?5!/(=Q!sK&?&K3#U7oWi0D/j[DFq/V6DJEQZ7li+?'Fb3J
!m^ju!1<fs!sK&E)CII6<*s?XEHZO$GM.0NG'7qEBjaq23[u-a%0Zh8\c@flTE#H("Ubn\-T=Op?YOFu
G'<G#i-,]TG&qP8?r]]X.NK34"Tnh4!.k3Y!"K)7$P=:)2b-hSBlA!7G27B8G7Sk?F)G]"<C])"*>Aqd
!s5%oJcNpn%KckB&K3#U7oWi0DfKrDd<>k>G&qP8?r]]X"tCW-%0Zh8M#`,-hZ+,g"Ubn\-T=Op?YOFu
G';8W%sE,;DJ<KY7li+?'Fb3J!qQDD!.k4C!"K)7$P=:)2b-hSBlA!7G0tLEG'7qEBjaq23[u-a%0Zh8
h>i--M?!k`"Ubn\-T=O"<*s?XEHZNQG7Sk?F)G]"<C])"*>Aqd!s6REJcMDC%KckB&K3#U7oWi0DfKrD
o69)9%sE,;DJ<KY7li+?'Fb3J!jhrZ!42_9!sK&E)CII6<*s?XEHZN^GP$(iG'7qEBjaq23[u-a%0Zh8
T)aHCaT)eQ"Ubn\-T=Op?YOFuG';8W#Bk93DJ<KY7gD()*>Aqd!s4>[JcOX-%KckB&K3#U7oWi0DfKrD
d<?+EG&qP8?r]]X.NK34"Tnhu!.k3&!:p1#!sK&E)CII6<*s?XEHZNQG7Sk?F)G]"<C])"*>Aqd!s7?[
JcLl4q>_!-"Ubn\-T=Op?YOFuG';8W%sE,;DJ<KY7li+?'Fb3J!n[L)!0@0i!sK&E)CII6<*s?XEHV>*
d<?+EG&qP8?r]]X.NK34"TnhD!.k3I!"K)7$P=:)2b-hSBlA!7G3sM8G7Sk?F)G]"<C])"*>Aqd!s5V*
JcN@^%KckB&K3#U7oWi0DfKrDfQ[19%sE,;DJ<KY7li+?'Fb3J!gs%?!7(WT!sK&E)CII6<*s?XEHZNQ
G7A_=F)G]"<C])"*>Aqd!<WCV!.k43!"K)7$P=:)2b-hSBlA!7G0tLEG'7qEBjaq23[u-a%0Zh8mJqh=
JcPTH%KckB&K3#U7oWi0DfKrDd<?+EG&qP8?r]]X.NK34"TnhZ!.k33!"8r5$P=:)2b-hSBlA"kG0tLE
G'7qEBjaq23[u-a%0Zh8_uPAhU]:l,"Ubn\-T=Op?YOFuG'<:tjED,XG&qP8?r]]X.NK34"Tnh0!.k3]
!"K)7$P=:)2b-hSBlA!7G1h*8G7Sk?F)G]"<C])"*>Aqd!s4nkJcO'r%KckB&K3#U7oWi0DfKrDd<?"B
G&qP8?r]]X.NK34!X/Z-K`H])irBPk"Ubn\-T=Op?YOFuG';8W%sE,;DJ<KY7li+?'Fb3J!rW+N!.k49
!"K)7$P=:)2b-hSBlA!7G0tLEG'7qEBjaq23[u-a%0Zh8kQ$27JcH>^!!<B4&K3#U7oWi0DfKrDd<?+E
G&qP8?r]]X.NK34"TnhT!.k39!"K)7$P=:)2b-hSBlA!7G5ZX8G7Sk?F)G]"<C])"*>Aqd!s61:JcMeN
%KckB&K3#U7oWi0DfKrDk]c<9%sE,;DJ<KY7li+?'Fb3J!iZ0O!5ALD!sK&E)CII6<*s?XEHZNSG7f%C
G'7qEBjaq23[u-a%0Zh8PQ6:8e,Ts\"Ubn\-T=Op?YOFuG';8W%sE,;DJ<KY7li+?'Fb3J!r`1O!.k48
!"K)7$P=:)2b-hSBlA!7G0tLEG'7qEBjaq23[u-a%0Zh8kl?;8JcPcM%KckB&K3#U7oWi0DfKrDd<?+E
G&qP8?r]]X.NK34"TnhU!.k38!"K)7$P=:)2b-hSBlA!7G5c^8G7Sk?F)G]"<C])"*>Aqd!s64;JcMbM
%KckB&K3#U7oWi0DfKrDl$)B9%sE,;DJ<KY7li+?'Fb3J!ic6P!58FC!sK&E)CII6<*s?XEHZNTGQ)ds
G'7qEBjaq23[u-a%0Zh8UB#lG`;gAM"Ubn\-T=Op?YOFuG';8W"*Sj/D@:/d<C])"*>Aqd!s4J_JcOL)
%KckB&K3#U7oWi0DfKrDd<?+EG&qP8?r]]X.NK34"Tni$!.k3&!:Kmt!sK&E)CII6<*s?XEHZNQG7Sk?
F)G]"<C])"*>Aqd!s7K_JcLK)!WrT6$P=:)2b-hSBlA!7G0tLEG'7qEBjaq23[u-a%0Zh8c2`FrRK*g"
"Ubn\-T=Op?YOFuG'<Y)g34'NG&qP8?r]]X.NK34"Tnh:!.k3S!"K)7$P=:)2b-hSBlA!7G2mf8G7Sk?
F)G]"<C])"*>Aqd!s57uJcN^h%KckB&K3#U7oWi0DfKrDd<>Y8G&n(0Bjaq23[u-a%0Zh8NrXb3f`2Ka
"Ubn\-T=Op?YOFuG';8W%sE,;DJ<KY7li+?'Fb3J!r2hJ!.k4=!"K)7$P=:)2b-hSBlA!7G0tLEG'7qE
Bjaq23[u-a%0Zh8j8ac3KE)#T"UkbN)CII6<*s?XEHZNQG7Sk?F)G]"<C])"*>Aqd!s6dKJcM2=%KckB
&K3#U7oWi0DfKrDq01M9%sE,;DJ<KY7li+?'Fb3J!kJAn!2'<%!sK&E)CII6<*s?XEHZNrGMmZUG'7qE
Bjaq23[u-a%0Zh8ZN,RW[/^[="Ubn\-T=Op?YOFuG';\colgpiG&qP8?r]]X.NK34"Tngt!.k3n!"K)7
$P=:)2b-hSBlA!7G0tL>G'7qEBjaq23X.&S'Fb3J!f6o/!8dbd!sK&E)CII6<*s?XEHZNQG7Sk?F)G]"
<C])"*>Aqd!s8&oJcLB&oDf@'"Ubn\-T=Op?YOFuG';8W%sE,;DJ<KY7li+?'Fb3J!o<p/!/^a]!sK&E
)CII6##nrDDfKrDd<?+EG&qP8?r]]X.NK34"TnhJ!.k3C!"K)7$P=:)2b-hSBlA!7G4Tq8G7Sk?F)G]"
<C])"*>Aqd!s5h0JcN.X%KckB&K3#U7oWi0DfKrDhKSU9%sE,;DJ<KY7li+?'Fb3J!hTIE!6G3N!sK&E
)CII6<*s?XEHZNQG6`;7F)G]"<C[9T.NK34"Tng`!.k4-!"K)7$P=:)2b-hSBlA!7G0tLEG'7qEBjaq2
3[u-a%0Zh8oDjICJcPBB%KckB&K3#U7oWi0DfKrDd<?+EG&qP8?r]]X.NK34"Tnh`!.k34!;Z[*!sK&E
)CII6<*s?XEHZNQG7Sk?F)G]"<C])"*>Aqd!s7*TJcLl4%0HbA&K3#U7oWi0DfKq#G0tLEG'7qEBjaq2
3[u-a%0Zh8_Z58gV#Uu-"Ubn\-T=Op?YOFuG'<7sj`_5YG&qP8?r]]X.NK34"Tnh/!.k3^!"K)7$P=:)
2b-hSBlA!7G1_$8G7Sk?F)G]"<C])"*>Aqd!s4kjJcO*s%KckB&K3#U7oWi0DfKrDd<?%CG&qP8?r]]X
.NK34"T\],KE-T(j8]Yl"Ubn\-T=Op?YOFuG';8W%sE,;DJ<KY7li+?'Fb3J!q$&?!.k4H!"K)7$P=:)
2b-hSBlA!7G0tLEG'7qEBjaq23[u-a%0Zh8f`6U(NrTRj"Ubn\-T=Op?YOFus)ue6%sE,;DJ<KY7li+?
'Fb3J!lP(j!2KT)!sK&E)CII6<*s?XEHZNnGN<rYG'7qEBjaq23[u-a%0Zh8Y5j.S\H!*A"Ubn\-T=Op
?YOFuG';P_q0*?mG&qP8?r]]X.NK34"Tngp!.k3r!"K)7$P=:)2b-hSBlA!7G0tLBG'7qEBjaq23[u-a
%0?\8!egW+!94%h!sK&E)CII6<*s?XEHZNQG7Sk?F)G]"<C])"*>Aqd!s8E$JcLB&l2V:r"Ubn\-T=Op
?YOFuG';8W%sE,;DJ<KY7li+?'Fb3J!pBW9!.k1^!!!*)$P=:)2b-hSBlA!7G0tLEG'7qEBjaq23[u-a
%0Zh8df=t"PlM9r"Ubn\-T=Op?YOFuG'<h.eTVOIG&qP8?r]]X.NK34"Tni)!.Y~>

%%EndBinary
grestore
np
200.905 113.153 mo
251.905 113.153 li
251.905 104.153 li
200.905 104.153 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 73.0947 211.31 ]ct
[51 0 0 9 127.811 98.1573 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 153 
/H 27 
/M[153 0 0 -27 0 27 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&m/RXu!X/oC*$mI/<F9HYFEMcSG7Sk?FDu&+=@tY-+;P=i!s7TbJcLB&JcLK)!WiE,$jmRd
,rJ"h?YOG#F`u/V%sE,<E,9#d8inXJ((1?L!m^ju!.k3&!1X$"!WiN4&KE)S6<.B,Dfg,FpNPA9%sE,<
E,9#d8inXJ((1?L!k85^!.k3&!4)Y9!WiN4&KE)S6<.B,Dfg,Fi-4a9%sE,<E,9#d8inXJ((1?L!hfUG
!.k3&!;uoC!Y5A8#7;%_,rJ"h?YOG#F`u/V#Bk94E,9#d8d@F1+;P=i!s4>[JcLB&RfNBgliZ2K%g<+B
%29g12FLVRBlA*9G0tLEG'7tHCh$R>4"_Wk$O6b8nc47AJcOF'JcOU,rW3*&"j7,]#RCeL(Ek7e6s!c1
Dfg,FnTWr9%sE,<E,9#d8inXJ((1?L!jVfX!.k3&!;-?k!X&`5#RUp`$P*[U&/6$./NQC'?tsV%F`uJ_
pid6lG'%\>@ou>b/g(o;#6P$s!.k3&!0.$e!WrT2#7CtO&JGimckI!+()\)7-o*tX>%2;eFEMcSG7A_=
FDu&+=@tY-+;P=i!<WCV!.k3&!2]`'!WiT3$Om[`)&XFX*p4RT+<VgQ.PWhI9O)(EE-6;Hd<?+EG'%\>
@ou>b/g(o;#6P%o!.k3&!.k3b!"8o1"U>AF'H/#<-RpUo/cI@$/dsHl3^?87?=[nmF`qrUG7Sk?FDu&+
=@tY-+;P=i!s7!QJcLB&JcO=$%0?S7#RqId+X\lu2E*YC3Y+;64[),"7o!#mB5MX2G'<h.eTVOIG'%\>
@ou>b/g(o;#6P%A!.k3&!.k4;!"K&6#7;"[+Y#6.5X\(38'aa68kVfQ:/tG.Bl8"kG34#8G7Sk?FDu&+
=@tY-+;P=i!s8E$JcLB&JcMnQ%0?\=%hp!21HS'!:K(9S=7''!=BJX+<EN@.?YF7pFEViSG7Sk?FDu&+
=@tY-+;P=i!s7TbJcLB&JcN^h%Kck?%i-<?3CQVA=^GHCd:*/b?t0.Dra,h=Bl.g1G0b@CG'7tHCh$R>
4"_Wk$O6b8cN&OsJcLB&gAhZb"UYeW,VhMU<*WmDB[CH&C2.HsB4tddA8Q4(FE[>$gNO0OG'%\>@ou>b
/g(o;#6P%;!.k3&!.k4A!"K)9$5"7*2*t)B@VBRqDpWG3DK'K0C2%?pDJjN;G2@H6G7Sk?FDu&+=@tY-
+;P=i!s5.rJcLB&M?!k`#7D1b-T4?s;I!aLDK0[BEslu/DJj3(BPqa0F`u)T#Bk94E,9#d8d@F1+;P=i
!s4>[JcLB&T`>Q)#7D4c.Q9gq?>+1qFER+si-#NNF`VP@D/*g(E--5GcZ]nCG'%\>@ou>b/g(o;#6P%u
!.k3&!8%:'!9!ne!s]2J*%Em;<*j6UEHTWO%<lu<F)u8;Chdp.FEMcqGN!`VG'7tHCh$R>4"_Wk$O6b8
Z2fIVJcLB&p](d+#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG1_$6G7Sk?FDu&+=@tY-+;P=i!s4ql
JcLB&O8o^l#7D4c.Q9js?YOFuFoZ^3G7/P8F)Z#5C2e-6F`u)T%<co:E,9#d8inXJ((1?J!s4,UJcLB&
VZ72/#7D4c.Q9js?YOFuG'<1qj`_)TFE;D=Chdp.FEMcQG7Sk?FDu&+=@tY-+;P=i!s7fhJcLB&JcNLb
%KcqD'HAS]7oWi0DfKrDe9Ch7$[$Q4E,KK,E,]oAG0b@CG'7tHCh$R>4"_Wk$O6b8eGt1$JcLB&eGp']
#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG5HL6G7Sk?FDu&+=@tY-+;P=i!s61:JcLB&JcP-;%KcqD
'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMcfGO0MaG'7tHCh$R>4"_Wk$O6b8r;_ELJcLB&XT/h5#7D4c
.Q9js?YOFuG';tklZW_ZFE;D=Chdp.FEMcQG7Sk?FDu&+=@tY-+;P=i!s8E$J,~>

%%EndBinary
grestore
np
147.905 113.153 mo
176.905 113.153 li
176.905 104.153 li
147.905 104.153 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 73.0947 211.31 ]ct
[29 0 0 9 74.8107 98.1573 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 87 
/H 27 
/M[87 0 0 -27 0 27 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 87 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&pAb^*!s]2I*%3^7<F0BWFEViSG7Je<E,9&f90FmM(C^WR!o*d-!1<ft!WrZ8'-&DY7TEc/DKL&F
qKLP8%X)r5Ch-[A4Y@in%1!+=])[E_\c<6B!s]2I*%3^7<F0BWFEVi\GPH@lG'%\>A6DPg/g(r>#R(9u
!.k4*!"T,5#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=p],mGJcP]K%fuh<$POL.2F^\QBl8$9
G0kFCG'%\>A6DPg/g(r>#R(:]!.k3B!"T,5#7D1b-oOOp?>4;!G'<P&gij6OFDu&,=\Cn1+;YIm"Tl+4
JcNOc%fuh<$POL.2F^\QBl8$9G1:a7G7Je<E,9&f90FmM(C^WR!gNb;!8mhf!WrZ8'-&DY7TEc/DKL&F
d!#tCFDu&,=\Cn1+;YIm"Tn8qJcLB&%fuh<$POL.2F^\QBl8$9G0kFCG'%\>A6DPg/g(r>#R(:X!.k3G
!"T,5#7D1b-oOOp?>4;!G'<A!iHGcTFDu&,=\Cn1+;YIm"Tkq/JcN^h%fuh<$POL.2F^\QBl8$9G0kF5
Fq&P4Ch-[A4Y@in%1!+=O8sk4kQ(S^%fuh<$POL.2F^\QBl8$9G0kFCG'%\>A6DPg/g(r>#R(:[!.k3D
!"T,5#7D1b-oOOp?>4;!G'<J$hKKHQFDu&,=\Cn1+;YIm"Tl%2JcNUe%fuh<$POL.2F^\QBl8$9G1(RG
GB\4PE,9&f90FmM(C^WR!g<V9!9*th!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"Tn2oJcLH(
!<N?4#7D1b-oOOp?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=ciAXtV#V#-!s]2I*%3^7<F0BWFEViqGN3lW
G'%\>A6DPg/g(r>#R(:5!.k3j!"T,5#7D1b-oOOp?>4;!G';5V!d8[)$Z'?V90FmM(C^WR!fd84!9X=m
!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,=\Cn1+;YIm"Tn#jJcLW-"p+l3$POL.#W>.P?>4;!G';5V%X)r5
Ch-[A4Y@in%1!+=b5d+oWW3P2!s]2I*%3^7<F0BWFEVilGNa5\G'%\>A6DPg/g(r>#R(:0!.k3o!"T,5
#7D1b-oOOp?>4;!G';5V#Bk3.Ch-[A4U*M](C^WR!f6o/!:0[r!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,
=\Cn1+;YIm"TmieJcP!7VZ75/!s]2I*%3^7<F0BWFEVioGNF#YG'%\>A6DPg/g(r>#R(:3!.k3l!"T,5
#7D1b-oOOp?>4;!G';5V"Enm+Ch*iT90FmM(C^WR!fR,2!9jIo!WrZ8'-&DY7TEc/DKL&Fd!#tCFDu&,
=\Cn1+;YIm"TmrhJcL]/#Qb)5$POL.2F[mN?>4;!G';5V%X)r5Ch-[A4Y@in%1!+=r;_?~>

%%EndBinary
grestore
np
71.9053 113.153 mo
101.905 113.153 li
101.905 104.153 li
71.9053 104.153 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 73.0947 211.31 ]ct
[30 0 0 9 -1.18933 98.1573 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 90 
/H 27 
/M[90 0 0 -27 0 27 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 90 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 90 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 90 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 90 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&l2V:r"Ubn\-T=Op?YOFuG';8W%sE,;DJ<KY7li+?'Fb3J!pBW9!.k1^!!!*)$P=:)2b-hSBlA!7
G0tLEG'7qEBjaq23[u-a%0Zh8df=t"PlM9r"Ubn\-T=Op?YOFuG'<h.eTVOIG&qP8?r]]X.NK34"Tnh?
!.k3N!"K)7$P=:)2b-hSBlA!7G3F/8G7Sk?F)G]"<C])"*>Aqd!s5G%JcNOc%KckB&K3#U7oWi0DfKrD
druCJGBS.NDJ<KY7li+?'Fb3J!gE\:!7UuY!sK&E)CII6<*s?XEHZNQG7Sk?F)G]"<C])"*>Aqd!s8H%
JcLB&kl;1q"Ubn\-T=Op?YOFuG';8W%sE,;DJ<KY7li+?'Fb3J!pK]:!.k4M!"K)7$P=:)2b-hSBlA!7
G0tLEG'7qEBjaq23[u-a%0Zh8e,Y(#PQ20q"Ubn\-T=Op?YOFuG'<k/e9;FHG&qP8?r]]X.NK34"Tnh@
!.k3M!"K)7$P=:)2b-hSBlA!7G3O58G7Sk?F)G]"<C])"*>Aqd!s5J&JcNLb%KckB&K3#U7oWi0DfKrD
e9Cn9%sE,;DJ<KY7li+?'Fb3J!i#aI!6"pJ!sK&E)CII6<*s?XEHZNQG6<#3F)DA"?r]]X.NK34"Tngd
!.k4)!"K)7$P=:)2b-hSBlA!7G0tLEG'7qEBjaq23[u-a%0Zh8p],mGJcP6>%KckB&K3#U7oWi0DfKrD
d<?+EG&qP8?r]]X.NK34"Tnhd!.k3)!!36+$O[Ob-T=Op?YOFuG';8W%sE,;DJ<KY7li+?'Fb3J!mUdt
!1Elt!sK&E)CII6<*s?XEHZO#GM76OG'7qEBjaq23[u-a%0Zh8\H%3]Y5f%7"Ubn\-T=Op?YOFuG';ni
mro:cG&qP8?r]]X.NK34"Tnh%!.k3h!"K)7$P=:)2b-hSBlA!7G0tL8G'7p8DJ<KY7li+?'Fb3J!fm>5
!8.>^!sK&E)CII6<*s?XEHZNQG7Sk?F)G]"<C])"*>Aqd!s88uJcLB&mJm_!"Ubn\-T=Op?YOFuG';8W
%sE,;DJ<KY7li+?'Fb3J!os?5!/(=Q!sK)@&K3#U7oWi0DfKrDd<?+EG&qP8?r]]X.NK34"TnhP!.k3=
!"K)7$P=:)2b-hSBlA!7G56@8G7Sk?F)G]"<C])"*>Aqd!s6%6O8tpR%KckB&K3#U7oWi0DfKrDnos#9
%sE,;DJ<KY7li+?'Fb3J!j_lY!4;e:!sK&E)CII6<*s?XEHZN]GP-.jG'7qEBjaq23[u-a%0Zh8ScF?B
aoDnR"Ubn\-T=Op?YOFuG';8W#^1B4DJ<KY7lgi(*>Aqd!s4;ZJcO[.%KckB&K3#U7oWi0DfKrDd<?+E
G&qP8?r]]X.NK34"Tnht!.k3&!;$7$!sK&E)CII6<*s?XEHZNQG7Sk?F)G]"<C])"*>Aqd!s8E$J,~>

%%EndBinary
grestore
np
200.905 145.153 mo
251.905 145.153 li
251.905 113.153 li
200.905 113.153 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 73.0947 211.31 ]ct
[51 0 0 32 127.811 66.1573 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 153 
/H 96 
/M[153 0 0 -96 0 96 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcMnQ%KcqD'HAS]7oWi0DfKrDj`g$7$[$Q4E,KK,E,]oAG0b@CG'7tHCh$R>4"_Wk$O6b8joBu5
JcLB&_uL8L#7D4c.Q9js?YOFuG';2U!-JWjF)Z#5C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!m^ju!.k3&
!8@J`!s]2J*%Em;<*s?XEHZNOG7/P8F)Z#5C2e-6Fa!G%gNO0OG'%\>@ou>b/g(o;#6P%;!.k3&!.k4A
!"K)9$PXR12b-hSBlA!7G0b@?F`_\DDJX',E--5GhKSO7%sE,<E,9#d8inXJ((1?L!hfUG!.k3.!!`T2
$PXR12b+'O?YOFuG';2U$[$Q4E,KK,E,]oAG0b@;G'7tHCh$R>#<OO\((1?L!f?u0!.k3E!"K)9$PXR1
2b-hSBlA!7G4Be6G7/P8F)Z#5C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!qH>C!.k4'!.k40!"K)9$PXR1
2b-hSBlA!7G0b@?F`_\DDJX',E--5Gms!`7%sE,<E,9#d8inXJ((1?L!jVfX!.k3&!;HO(!s]2J*%Em;
<*s?XEHZNOG7/P8F)Z#5C2e-6F`uD]pid6lG'%\>@ou>b/g(o;#6P$s!.k3&!0@0i!s]2J*%Em;<*s?X
EHV>*cZ]b>FE;D=Chdp.FEMcQG7A_=FDu&+=@tY-+;P=i!<WCV!.k3&!2ff,!s]2J*%Em;<*s?XEHZNk
GNF#VF`_\DDJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%o!.k3&!.k3b!"K)9$PXR12b-hSBlA!7G1:a6
G7/P8F)Z#5C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!n@:&!.k3&!7_&Z!s]2J*%Em;<*s?XEHZNOG7/P8
F)Z#5C2e-6Fa!Y+eTVOIG'%\>@ou>b/g(o;#6P%A!.k3&!.k4;!"K)9$PXR12b-hSBlA!7G0b@?F`_\D
DJX',E--5GjEKs7%sE,<E,9#d8inXJ((1?L!rW+N!.k3&!3H52!s]2J*%Em;<*s?XEHZNeGO'G\F`_\D
DJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%i!.k3&!.k3h!"K)9$PXR12b-hSBlA!7G0b@4FUE53E,KK,
E,]oAG0b@CG'7tHCh$R>4"_Wk$O6b8cN&OsJcLB&gAh]c#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oA
G4g(6G7Sk?FDu&+=@tY-+;P=i!s5t4JcLB&JcP?A%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMc`
GOfqgG'7tHCh$R>4"_Wk$O6b8T`BZEJcLZ.#6P2='HAS]7g;q"BlA!7G0b@?F`_\DDJX',E--5GcZ]V;
G'%\>@ou>.4"_Wk$O6b8M?&5.JcMJE%KcqD'HAS]7oWi0DfKrDnTWl7$[$Q4E,KK,E,]oAG0b@CG'7tH
Ch$R>4"_Wk$O6b8nc47AJcOF'JcOa0%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMcqGN!`VG'7tH
Ch$R>4"_Wk$O6b8Z2fIVJcLB&p](d+#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG1_$6G7Sk?FDu&+
=@tY-+;P=i!s4qlJcLB&O8o^l#7D4c.Q9js?YOFuFoZ^3G7/P8F)Z#5C2e-6F`u)T%<co:E,9#d8inXJ
((1?J!s4,UJcLB&VZ72/#7D4c.Q9js?YOFuG'<1qj`_)TFE;D=Chdp.FEMcQG7Sk?FDu&+=@tY-+;P=i
!s7fhJcLB&JcNLb%KcqD'HAS]7oWi0DfKrDe9Ch7$[$Q4E,KK,E,]oAG0b@CG'7tHCh$R>4"_Wk$O6b8
eGt1$JcLB&eGp']#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG5HL6G7Sk?FDu&+=@tY-+;P=i!s61:
JcLB&JcP-;%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMcfGO0MaG'7tHCh$R>4"_Wk$O6b8r;_EL
JcLB&XT/h5#7D4c.Q9js?YOFuG';tklZW_ZFE;D=Chdp.FEMcQG7Sk?FDu&+=@tY-+;P=i!s7TbJcLB&
JcN^h%KcqD'HAS]7oWi0DfKrDcZ]A3$?U?.DJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%R!.k3&!.k4*
!"K)9$PXR12b-hSBlA!7G0b@?F`_\DDJX',E--5Golo/7%sE,<E,9#d8inXJ((1?L!k85^!.k3&!:g+"
!s]2J*%Em;<*s?XEHZNOG7/P8F)Z#5C2e-6F`uVcnokUfG'%\>@ou>b/g(o;#6P%$!.k3&!/^a]!s]2J
*%Em;##nrDDfKrDcZ]b>FE;D=Chdp.FEMcQG6`;7FDu&+=@rf[/g(o;#6P$b!.k3&!20B&!s]2J*%Em;
<*s?XEHZNqGMdTPF`_\DDJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%u!.k3&!8%:'!9!nf!s]2J*%Em;
<*s?XEHZNOG7/P8F)Z#5C2e-6Fa!4tiHGfUG'%\>@ou>b/g(o;#6P%5!.k3&!.k4G!"K)9$PXR12b-hS
BlA!7G0b@?F`_\DDJX',E--5GfQ[+7%sE,<E,9#d8inXJ((1?L!h01A!.k34!"B#8$PXR12b-hSBlA!7
!-Z\4$[$Q4E,KK,E,]oAG0b@AG'7tHCh$R>4"_Wk$O6\7!e^Q*!.k3K!"K)9$PXR12b-hSBlA!7G3aA6
G7/P8F)Z#5C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!pfo=!.k3&!58FC!s]2J*%Em;<*s?XEHZNTGPlXm
F`_\DDJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%X!.k3&!.k4$!"K)9$PXR12b-hSBlA!7G0b@?F`_\D
DJX',E--5GqfgS7%sE,<E,9#d8inXJ((1?L!knYd!.k3&!:0[q!s]2J*%Em;<*s?XEHZNOG7/P8F)Z#5
C2e-6F`uhilurt`G'%\>@ou>b/g(o;#6P&+!.k3&!.k3Q!"K)9$PXR12b-hSBlA!7G3*r6G7/P8F)Z#5
C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!p0K7!.k3&!5njI!s]2J*%Em;<*s?XEHZNOG5uamFE;D=Chdp.
FEMcQG7Sk?FDu&+=@tY-+;P=i!s6dKJcLB&JcOO*%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMd"
GM@<PG'7tHCh$R>4"_Wk$O6b8\,_*\JcLB&nc0.%#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG2@H6
G7Sk?FDu&+=@tY-+;P=i!s5.rJcLB&M?!k`#7D4c.Q9j%<*s?XEHZNOG7/P8F)Z#5C2e-6F`u)T#Bk94
E,9#d8d@F1+;P=i!s4>[JcLB&T`>Q)#7D4c.Q9js?YOFuG'<D"hffHNFE;D=Chdp.FEMcQG7Sk?FDu&+
=@tY-+;P=i!s8#nJcLB&fDpL'i;a>i#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG40Y6G7Sk?FDu&+
=@tY-+;P=i!s5b.JcLB&JcPQG%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMcZGPH@mG'7tHCh$R>
4"_Wk$O6b8RfJ$?JcLl4%0HhC'HAS]7oWi0DfKq#G0b@?F`_\DDJX',E--5GcZ]hAG'%\>@ou>b/g(o;
#6=o.KE-T(JcM\K%KcqD'HAS]7oWi0DfKrDlZ_H7$[$Q4E,KK,E,]oAG0b@CG'7tHCh$R>4"_Wk$O6b8
li;V;JcLB&^&SWF#7D4c.Q9js?YOFuG';AZr-&NkFE;D=Chdp.FEMcQG7Sk?FDu&+=@tY-+;P=i!s7!Q
JcLB&JcO=$%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMd(GL^mJG'7tHCh$R>4"_Wk$O6b8^&W`b
JcLB&li7Lt#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG3!l6G7Sk?FDu&+=@tY-+;P=i!s8E$JcLB&
JcMnQ%KcqD'HAS]7oWi0DfKrDj`g$7$[$Q4E,KK,E,]oAG0b@CG'7tHCh$R>4"_Wk$O6b8joBu5JcLB&
_uL8L#7D4c.Q9js?YOFuG';2U!-JWjF)Z#5C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!m^ju!.k3&!8@J`
!s]2J*%Em;<*s?XEHZNOG7/P8F)Z#5C2e-6Fa!G%gNO0OG'%\>@ou>b/g(o;#6P%;!.k3&!.k4A!"K)9
$PXR12b-hSBlA!7G0b@?F`_\DDJX',E--5GhKSO7%sE,<E,9#d8inXJ((1?L!hfUG!.k3.!!`T2$PXR1
2b+'O?YOFuG';2U$[$Q4E,KK,E,]oAG0b@;G'7tHCh$R>#<OO\((1?L!f?u0!.k3E!"K)9$PXR12b-hS
BlA!7G4Be6G7/P8F)Z#5C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!qH>C!.k4'!.k40!"K)9$PXR12b-hS
BlA!7G0b@?F`_\DDJX',E--5Gms!`7%sE,<E,9#d8inXJ((1?L!jVfX!.k3&!;HO(!s]2J*%Em;<*s?X
EHZNOG7/P8F)Z#5C2e-6F`uD]pid6lG'%\>@ou>b/g(o;#6P$s!.k3&!0@0i!s]2J*%Em;<*s?XEHV>*
cZ]b>FE;D=Chdp.FEMcQG7A_=FDu&+=@tY-+;P=i!<WCV!.k3&!2ff,!s]2J*%Em;<*s?XEHZNkGNF#V
F`_\DDJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%o!.k3&!.k3b!"K)9$PXR12b-hSBlA!7G1:a6G7/P8
F)Z#5C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!n@:&!.k3&!7_&Z!s]2J*%Em;<*s?XEHZNOG7/P8F)Z#5
C2e-6Fa!Y+eTVOIG'%\>@ou>b/g(o;#6P%A!.k3&!.k4;!"K)9$PXR12b-hSBlA!7G0b@?F`_\DDJX',
E--5GjEKs7%sE,<E,9#d8inXJ((1?L!rW+N!.k3&!3H52!s]2J*%Em;<*s?XEHZNeGO'G\F`_\DDJX',
E--5GcZ]nCG'%\>@ou>b/g(o;#6P%i!.k3&!.k3h!"K)9$PXR12b-hSBlA!7G0b@4FUE53E,KK,E,]oA
G0b@CG'7tHCh$R>4"_Wk$O6b8cN&OsJcLB&gAh]c#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG4g(6
G7Sk?FDu&+=@tY-+;P=i!s5t4JcLB&JcP?A%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMc`GOfqg
G'7tHCh$R>4"_Wk$O6b8T`BZEJcLZ.#6P2='HAS]7g;q"BlA!7G0b@?F`_\DDJX',E--5GcZ]V;G'%\>
@ou>.4"_Wk$O6b8M?&5.JcMJE%KcqD'HAS]7oWi0DfKrDnTWl7$[$Q4E,KK,E,]oAG0b@CG'7tHCh$R>
4"_Wk$O6b8nc47AJcOF'JcOa0%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMcqGN!`VG'7tHCh$R>
4"_Wk$O6b8Z2fIVJcLB&p](d+#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG1_$6G7Sk?FDu&+=@tY-
+;P=i!s4qlJcLB&O8o^l#7D4c.Q9js?YOFuFoZ^3G7/P8F)Z#5C2e-6F`u)T%<co:E,9#d8inXJ((1?J
!s4,UJcLB&VZ72/#7D4c.Q9js?YOFuG'<1qj`_)TFE;D=Chdp.FEMcQG7Sk?FDu&+=@tY-+;P=i!s7fh
JcLB&JcNLb%KcqD'HAS]7oWi0DfKrDe9Ch7$[$Q4E,KK,E,]oAG0b@CG'7tHCh$R>4"_Wk$O6b8eGt1$
JcLB&eGp']#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG5HL6G7Sk?FDu&+=@tY-+;P=i!s61:JcLB&
JcP-;%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMcfGO0MaG'7tHCh$R>4"_Wk$O6b8r;_ELJcLB&
XT/h5#7D4c.Q9js?YOFuG';tklZW_ZFE;D=Chdp.FEMcQG7Sk?FDu&+=@tY-+;P=i!s7TbJcLB&JcN^h
%KcqD'HAS]7oWi0DfKrDcZ]A3$?U?.DJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%R!.k3&!.k4*!"K)9
$PXR12b-hSBlA!7G0b@?F`_\DDJX',E--5Golo/7%sE,<E,9#d8inXJ((1?L!k85^!.k3&!:g+"!s]2J
*%Em;<*s?XEHZNOG7/P8F)Z#5C2e-6F`uVcnokUfG'%\>@ou>b/g(o;#6P%$!.k3&!/^a]!s]2J*%Em;
##nrDDfKrDcZ]b>FE;D=Chdp.FEMcQG6`;7FDu&+=@rf[/g(o;#6P$b!.k3&!20B&!s]2J*%Em;<*s?X
EHZNqGMdTPF`_\DDJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%u!.k3&!8%:'!9!nf!s]2J*%Em;<*s?X
EHZNOG7/P8F)Z#5C2e-6Fa!4tiHGfUG'%\>@ou>b/g(o;#6P%5!.k3&!.k4G!"K)9$PXR12b-hSBlA!7
G0b@?F`_\DDJX',E--5GfQ[+7%sE,<E,9#d8inXJ((1?L!h01A!.k34!"B#8$PXR12b-hSBlA!7!-Z\4
$[$Q4E,KK,E,]oAG0b@AG'7tHCh$R>4"_Wk$O6\7!e^Q*!.k3K!"K)9$PXR12b-hSBlA!7G3aA6G7/P8
F)Z#5C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!pfo=!.k3&!58FC!s]2J*%Em;<*s?XEHZNTGPlXmF`_\D
DJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%X!.k3&!.k4$!"K)9$PXR12b-hSBlA!7G0b@?F`_\DDJX',
E--5GqfgS7%sE,<E,9#d8inXJ((1?L!knYd!.k3&!:0[q!s]2J*%Em;<*s?XEHZNOG7/P8F)Z#5C2e-6
F`uhilurt`G'%\>@ou>b/g(o;#6P&+!.k3&!.k3Q!"K)9$PXR12b-hSBlA!7G3*r6G7/P8F)Z#5C2e-6
F`u)T%sE,<E,9#d8inXJ((1?L!p0K7!.k3&!5njI!s]2J*%Em;<*s?XEHZNOG5uamFE;D=Chdp.FEMcQ
G7Sk?FDu&+=@tY-+;P=i!s6dKJcLB&JcOO*%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMd"GM@<P
G'7tHCh$R>4"_Wk$O6b8\,_*\JcLB&nc0.%#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG2@H6G7Sk?
FDu&+=@tY-+;P=i!s5.rJcLB&M?!k`#7D4c.Q9j%<*s?XEHZNOG7/P8F)Z#5C2e-6F`u)T#Bk94E,9#d
8d@F1+;P=i!s8E$J,~>

%%EndBinary
grestore
np
125.905 145.153 mo
176.905 145.153 li
176.905 113.153 li
125.905 113.153 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 73.0947 211.31 ]ct
[51 0 0 32 52.8107 66.1573 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 153 
/H 96 
/M[153 0 0 -96 0 96 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&m/RXu!s]2I*%3^7<F0BWFEViSG7Je<E,9&f90FmM(C^WR!p0K7!.k3&!/1CS!WrZ9$POL.
2F^\QBl8$9G0kFCG'%\>A6DPg/g(r>#R(:U!.k3&!.k3@!"T,5#7D1b-oOOp?>4;!G'<V(g34$MFDu&,
=\Cn1+;YIm"Tl16JcLB&JcN+W%fuh<$POL.2F^\QBl8$9G2RT7G7Je<E,9&f90FmM(C^WR!hfUG!.k3)
!<*'"!mC`W"U>AF(*+k`7os#2DKL&Fd!#\;FDu&,=\Au_/g(r>#R(9e!.k3&!1a,h!r`;g"lTUq#7(\K
(EP(e7os&3DKL&Fd!#tCFDu&,=\Cn1+;YIm"Tn5pJcLB&fDpL'h>dZ[!WrT0r!:UU%grgW',i)K3_EI\
C2S-:G4Be7G7Je<E,9&f90FmM(C^WR!jVfX!.k3&!;?I"!WiH-"UGAA$P!%Fck$[!'H%o;1-J<6?u0b(
G';S`pNI*jFDu&,=\Cn1+;YIm"Tk.nJcLB&O9#7]$3^Y?$P*g`()Ii)!#O'$&/Q3&*?cd_2F(#@@Vp%+
G';5V%!H`3Ch-[A4Y@in%0ut<!e^Q*!.k3K!"8o1!s]/B',MQ-*[;oo,j-E`,park0/Yg];I*dLDfp5H
d!#tCFDu&,=\Cn1+;YIm"Tn#jJcLB&JcNLb%0?V8#R_:`*[E-c/i#321]B302%2E*5Xe@J?tF4qG'A,V
G7Je<E,9&f90FmM(C^WR!n@:&!.k3&!7_&Z!WrZ7&/QH:0/YaR5X@]_64QCP77TsF;d<jGDfKrEG5ZX7
G7Je<E,9&f90FmM(C^WR!knYd!.k3&!:9as!WrT5$PXU/0f_Ni92&)UdSBs?:Jasg;[6B,?Y*qiF*?Vg
lZWh^FDu&,=\Cn1+;YIm"TnW&JcLB&JcMqR%0?V8$4n!s/ic<m;HI#]>jYc+?!^fC?!UfFA8,k"FEVoT
G7Je<E,9&f90FmM(C^WR!p0K7!.k3&!6"pK!WrT5&K)iL5Y=sY?XmVWct*5jAIE-]@q9+_Ci"*5G'M>W
%X)r5Ch-[A4Y@in%1!+=cN&OsJcLB&g].id!s]2I*@`s8:fq+=C2@_7D$=`mDJa-'rb2RQDJjN;GBih*
g34$MFDu&,=\Cn1+;YIm"Tl16JcLB&JcPBB%fuh<$POR23CZtRASc4&E6rS6F)Q#9D/<p&DJsT<GBi"h
nTPIdFDu&,=\Cn1+;YIm"Tk@tJcLB&MZ="a!s]8L*\09C#$52GD/jZ>cufe@F)c2=Des9/Dfg)FGgCR<
G'%\>A6DP14Y@in%1!+=M?&5.JcMMF%fuh<%29p:4%WL]BlA'8Fn'Y7Fq8_=GBJ"KE,KN0E,Ti?GBhGX
%X)r5Ch-[A4Y@in%1!+=nc47AJcOF'JcOd1%fuh<%29p:4%`UaC2e9<G0b@@G'.nHE,BH2Dfg)FGjoq8
G7Je<E,9&f90FmM(C^WR!jVfX!.k3&!;QU*!WrZ:'Heth8m#P;E--8HcZ]e@F`_VBD/F61FED_Ofm!17
%X)r5Ch-[A4Y@in%1!+=RfJ$?JcLo5%KZ_;%29p:4%`UaC2e9<!-Z\4%!Hc8EH#c3E,Ti?GBhGX%!H`3
Ch-[A4Y@in%0ut<!e^Q*!.k3L!"T,5#7V@i/NZR,@VTk(G'<1qj`_,VF`_VBD/F61FED_OcZ]kBFDu&,
=\Cn1+;YIm"Tn#jJcLB&JcNOc%fuh<%29p:4%`UaC2e9<G1:a6G78Y;FE)8:D/aE8FE_uUG7Je<E,9&f
90FmM(C^WR!n@:&!.k3&!7h,\!WrZ:'Heth8m#P;E--8HcZ]e@F`_VBD/F61FED_Or--Y7%X)r5Ch-[A
4Y@in%1!+=^&W`bJcLB&m/RXu!s]8L+>#ZI=CQ#aFEViRG78Y;FE)8:D/aE8FE_ukGO'G_G'%\>A6DPg
/g(r>#R(;.!.k3&!.k3R!"T,5#7V@i/NZR,@VTk(G';tklZWb\F`_VBD/F61FED_OcZ]kBFDu&,=\Cn1
+;YIm"TmfdJcLB&JcNai%fuh<%29p:4%`UaC2e9<G0b@4FpiG7EH#c3E,Ti?GBhGX%X)r5Ch-[A4Y@in
%1!+=cN&OsJcLB&g].id!s]8L+>#ZI=CQ#aFEViRG78Y;FE)8:D/aE8FE`!'GM76NG'%\>A6DPg/g(r>
#R(:>!.k3&!.k4B!"T,5#7V@i/NZR,@VTk(G';2U%!Hc8EH#c3E,Ti?GBi"hnTPIdFDu&,=\Cn1+;YIm
"Tk@tJcLB&MZ="a!s]8L+>#ZI#$>>LE--8HcZ]e@F`_VBD/F61FED_OcZ]S:FDu&,=\Au_/g(r>#R(9e
!.k3&!29H(!WrZ:'Heth8m#P;E--8HnTWl7%!Hc8EH#c3E,Ti?GBhGX%X)r5Ch-[A4Y@in%1!+=nc47A
JcOF'JcOd1%fuh<%29p:4%`UaC2e9<G0b@@G'.nHE,BH2Dfg)FGjoq8G7Je<E,9&f90FmM(C^WR!jVfX
!.k3&!;QU*!WrZ:'Heth8m#P;E--8HcZ]e@F`_VBD/F61FED_Ofm!17%X)r5Ch-[A4Y@in%1!+=RfJ$?
JcLo5%KZ_;%29p:4%`UaC2e9<!-Z\4%!Hc8EH#c3E,Ti?GBhGX%!H`3Ch-[A4Y@in%0ut<!e^Q*!.k3L
!"T,5#7V@i/NZR,@VTk(G'<1qj`_,VF`_VBD/F61FED_OcZ]kBFDu&,=\Cn1+;YIm"Tn#jJcLB&JcNOc
%fuh<%29p:4%`UaC2e9<G1:a6G78Y;FE)8:D/aE8FE_uUG7Je<E,9&f90FmM(C^WR!n@:&!.k3&!7h,\
!WrZ:'Heth8m#P;E--8HcZ]e@F`_VBD/F61FED_Or--Y7%X)r5Ch-[A4Y@in%1!+=^&W`bJcLB&m/RXu
!s]8L+>#ZI=CQ#aFEViRG78Y;FE)8:D/aE8FE_ukGO'G_G'%\>A6DPg/g(r>#R(;.!.k3&!.k3R!"T,5
#7V@i/NZR,@VTk(G';tklZWb\F`_VBD/F61FED_OcZ]kBFDu&,=\Cn1+;YIm"TmfdJcLB&JcNai%fuh<
%29p:4%`UaC2e9<G0b@4FpiG7EH#c3E,Ti?GBhGX%X)r5Ch-[A4Y@in%1!+=cN&OsJcLB&g].id!s]8L
+>#ZI=CQ#aFEViRG78Y;FE)8:D/aE8FE`!'GM76NG'%\>A6DPg/g(r>#R(:>!.k3&!.k4B!"T,5#7V@i
/NZR,@VTk(G';2U%!Hc8EH#c3E,Ti?GBi"hnTPIdFDu&,=\Cn1+;YIm"Tk@tJcLB&MZ="a!s]8L+>#ZI
#$>>LE--8HcZ]e@F`_VBD/F61FED_OcZ]S:FDu&,=\Au_/g(r>#R(9e!.k3&!29H(!WrZ:'Heth8m#P;
E--8HnTWl7%!Hc8EH#c3E,Ti?GBhGX%X)r5Ch-[A4Y@in%1!+=nc47AJcOF'JcOd1%fuh<%29p:4%`Ua
C2e9<G0b@@G'.nHE,BH2Dfg)FGjoq8G7Je<E,9&f90FmM(C^WR!jVfX!.k3&!;QU*!WrZ:'Heth8m#P;
E--8HcZ]e@F`_VBD/F61FED_Ofm!17%X)r5Ch-[A4Y@in%1!+=RfJ$?JcLo5%KZ_;%29p:4%`UaC2e9<
!-Z\4%!Hc8EH#c3E,Ti?GBhGX%!H`3Ch-[A4Y@in%0ut<!e^Q*!.k3L!"T,5#7V@i/NZR,@VTk(G'<1q
j`_,VF`_VBD/F61FED_OcZ]kBFDu&,=\Cn1+;YIm"Tn#jJcLB&JcNOc%fuh<%29p:4%`UaC2e9<G1:a6
G78Y;FE)8:D/aE8FE_uUG7Je<E,9&f90FmM(C^WR!n@:&!.k3&!7h,\!WrZ:'Heth8m#P;E--8HcZ]e@
F`_VBD/F61FED_Or--Y7%X)r5Ch-[A4Y@in%1!+=^&W`bJcLB&m/RXu!s]8L+>#ZI=CQ#aFEViRG78Y;
FE)8:D/aE8FE_ukGO'G_G'%\>A6DPg/g(r>#R(;.!.k3&!.k3R!"T,5#7V@i/NZR,@VTk(G';tklZWb\
F`_VBD/F61FED_OcZ]kBFDu&,=\Cn1+;YIm"TmfdJcLB&JcNai%fuh<%29p:4%`UaC2e9<G0b@4FpiG7
EH#c3E,Ti?GBhGX%X)r5Ch-[A4Y@in%1!+=cN&OsJcLB&g].id!s]8L+>#ZI=CQ#aFEViRG78Y;FE)8:
D/aE8FE`!'GM76NG'%\>A6DPg/g(r>#R(:>!.k3&!.k4B!"T,5#7V@i/NZR,@VTk(G';2U%!Hc8EH#c3
E,Ti?GBi"hnTPIdFDu&,=\Cn1+;YIm"Tk@tJcLB&MZ="a!s]8L+>#ZI#$>>LE--8HcZ]e@F`_VBD/F61
FED_OcZ]S:FDu&,=\Au_/g(r>#R(9e!.k3&!29H(!WrZ:'Heth8m#P;E--8HnTWl7%!Hc8EH#c3E,Ti?
GBhGX%X)r5Ch-[A4Y@in%1!+=nc47AJcOF'JcOd1%fuh<%29p:4%`UaC2e9<G0b@@G'.nHE,BH2Dfg)F
Gjoq8G7Je<E,9&f90FmM(C^WR!jVfX!.k3&!;QU*!WrZ:'Heth8m#P;E--8HcZ]e@F`_VBD/F61FED_O
fm!17%X)r5Ch-[A4Y@in%1!+=RfJ$?JcLo5%KZ_;%29p:4%`UaC2e9<!-Z\4%!Hc8EH#c3E,Ti?GBhGX
%!H`3Ch-[A4Y@in%0ut<!e^Q*!.k3L!"T,5#7V@i/NZR,@VTk(G'<1qj`_,VF`_VBD/F61FED_OcZ]kB
FDu&,=\Cn1+;YIm"Tn#jJcLB&JcNOc%fuh<%29p:4%`UaC2e9<G1:a6G78Y;FE)8:D/aE8FE_uUG7Je<
E,9&f90FmM(C^WR!n@:&!.k3&!7h,\!WrZ:'Heth8m#P;E--8HcZ]e@F`_VBD/F61FED_Or--Y7%X)r5
Ch-[A4Y@in%1!+=^&W`bJcLB&m/RXu!s]8L+>#ZI=CQ#aFEViRG78Y;FE)8:D/aE8FE_ukGO'G_G'%\>
A6DPg/g(r>#R(;.!.k3&!.k3R!"T,5#7V@i/NZR,@VTk(G';tklZWb\F`_VBD/F61FED_OcZ]kBFDu&,
=\Cn1+;YIm"TmfdJcLB&JcNai%fuh<%29p:4%`UaC2e9<G0b@4FpiG7EH#c3E,Ti?GBhGX%X)r5Ch-[A
4Y@in%1!+=cN&OsJcLB&g].id!s]8L+>#ZI=CQ#aFEViRG78Y;FE)8:D/aE8FE`!'GM76NG'%\>A6DPg
/g(r>#R(:>!.k3&!.k4B!"T,5#7V@i/NZR,@VTk(G';2U%!Hc8EH#c3E,Ti?GBi"hnTPIdFDu&,=\Cn1
+;YIm"Tk@tJcLB&MZ="a!s]8L+>#ZI#$>>LE--8HcZ]e@F`_VBD/F61FED_OcZ]S:FDu&,=\Au_/g(r>
#R(9e!.k3&!29H(!WrZ:'Heth8m#P;E--8HnTWl7%!Hc8EH#c3E,Ti?GBhGX%X)r5Ch-[A4Y@in%1!+=
nc47AJcOF'JcOd1%fuh<%29p:4%`UaC2e9<G0b@@G'.nHE,BH2Dfg)FGjoq8G7Je<E,9&f90FmM(C^WR
!jVfX!.k3&!;QU*!WrZ:'Heth8m#P;E--8HcZ]e@F`_VBD/F61FED_Ofm!17%X)r5Ch-[A4Y@in%1!+=
RfJ$?JcLo5%KZ_;%29p:4%`UaC2e9<!-Z\4%!Hc8EH#c3E,Ti?GBhGX%!H`3Ch-[A4Y@in%0ut<!e^Q*
!.k3L!"T,5#7V@i/NZR,@VTk(G'<1qj`_,VF`_VBD/F61FED_OcZ]kBFDu&,=\Cn1+;YIm"Tn#jJcLB&
JcNOc%fuh<%29p:4%`UaC2e9<G1:a6G78Y;FE)8:D/aE8FE_uUG7Je<E,9&f90FmM(C^WR!n@:&!.k3&
!7h,\!WrZ:'Heth8m#P;E--8HcZ]e@F`_VBD/F61FED_Or--Y7%X)r5Ch-[A4Y@in%1!+=^&W`bJcLB&
m/RXu!s]8L+>#ZI=CQ#aFEViRG78Y;FE)8:D/aE8FE_ukGO'G_G'%\>A6DPg/g(r>#R(;.!.k3&!.k3R
!"T,5#7V@i/NZR,@VTk(G';tklZWb\F`_VBD/F61FED_OcZ]kBFDu&,=\Cn1+;YIm"TmfdJcLB&JcNai
%fuh<%29p:4%`UaC2e9<G0b@4FpiG7EH#c3E,Ti?GBhGX%X)r5Ch-[A4Y@in%1!+=cN&OsJcLB&g].id
!s]8L+>#ZI=CQ#aFEViRG78Y;FE)8:D/aE8FE`!'GM76NG'%\>A6DPg/g(r>#R(:>!.k3&!.k4B!"T,5
#7V@i/NZR,@VTk(G';2U%!Hc8EH#c3E,Ti?GBi"hnTPIdFDu&,=\Cn1+;YIm"Tk@tJcLB&MZ="a!s]8L
+>#ZI#$>>LE--8HcZ]e@F`_VBD/F61FED_OcZ]S:FDu&,=\Au_/g(r>#R(9e!.k3&!29H(!WrZ:'Heth
8m#P;E--8HnTWl7%!Hc8EH#c3E,Ti?GBhGX%X)r5Ch-[A4Y@in%1!+=nc47AJcOF'JcOd1%fuh<%29p:
4%`UaC2e9<G0b@@G'.nHE,BH2Dfg)FGjoq8G7Je<E,9&f90FmM(C^WR!jVfX!.k3&!;QU*!WrZ:'Heth
8m#P;E--8HcZ]e@F`_VBD/F61FED_Ofm!17%X)r5Ch-[A4Y@in%1!+=RfJ$?JcLo5%KZ_;%29p:4%`Ua
C2e9<!-Z\4%!Hc8EH#c3E,Ti?GBhGX%!H`3Ch-[A4Y@in%0ut<!e^Q*!.k3L!"T,5#7V@i/NZR,@VTk(
G'<1qj`_,VF`_VBD/F61FED_OcZ]kBFDu&,=\Cn1+;YIm"Tn#jJcLB&JcNOc%fuh<%29p:4%`UaC2e9<
G1:a6G78Y;FE)8:D/aE8FE_uUG7Je<E,9&f90FmM(C^WR!n@:&!.k3&!7h,\!WrZ:'Heth8m#P;E--8H
cZ]e@F`_VBD/F61FED_Or--Y7%X)r5Ch-[A4Y@in%1!+=^&W`bJcLB&m/RXu!s]8L+>#ZI=CQ#aFEViR
G78Y;FE)8:D/aE8FE_ukGO'G_G'%\>A6DPg/g(r>#R(;.!.k3&!.k3R!"T,5#7V@i/NZR,@VTk(G';tk
lZWb\F`_VBD/F61FED_OcZ]kBFDu&,=\Cn1+;YIm"TmfdJcLB&JcNai%fuh<%29p:4%`UaC2e9<G0b@4
FpiG7EH#c3E,Ti?GBhGX%X)r5Ch-[A4Y@in%1!+=cN&OsJcLB&g].id!s]8L+>#ZI=CQ#aFEViRG78Y;
FE)8:D/aE8FE`!'GM76NG'%\>A6DPg/g(r>#R(:>!.k3&!.k4B!"T,5#7V@i/NZR,@VTk(G';2U%!Hc8
EH#c3E,Ti?GBi"hnTPIdFDu&,=\Cn1+;YIm"Tk@tJcLB&MZ="a!s]8L+>#ZI#$>>LE--8HcZ]e@F`_VB
D/F61FED_OcZ]S:FDu&,=\Au_/g(r>#R(;.!.Y~>

%%EndBinary
grestore
np
71.9053 145.153 mo
101.905 145.153 li
101.905 113.153 li
71.9053 113.153 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 73.0947 211.31 ]ct
[30 0 0 32 -1.18933 66.1573 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 90 
/H 96 
/M[90 0 0 -96 0 96 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 90 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 90 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 90 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 90 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&l2V:r"Ubn\-T=Op?YOFuG';8W%sE,;DJ<KY7li+?'Fb3J!pBW9!.k1^!!!*)$P=:)2b-hSBlA!7
G0tLEG'7qEBjaq23[u-a%0Zh8df=t"PlM9r"Ubn\-T=Op?YOFuG'<h.eTVOIG&qP8?r]]X.NK34"Tnh?
!.k3N!"K)7$P=:)2b-hSBlA!7G3F/8G7Sk?F)G]"<C])"*>Aqd!s5G%JcNOc%KckB&K3#U7oWi0DfKrD
druCJGBS.NDJ<KY7li+?'Fb3J!gE\:!7UuY!sK&E)CII6<*s?XEHZNQG7Sk?F)G]"<C])"*>Aqd!s8H%
JcLB&kl;1q"Ubn\-T=Op?YOFuG';8W%sE,;DJ<KY7li+?'Fb3J!pK]:!.k4M!"K)7$P=:)2b-hSBlA!7
G0tLEG'7qEBjaq23[u-a%0Zh8e,Y(#PQ20q"Ubn\-T=Op?YOFuG'<k/e9;FHG&qP8?r]]X.NK34"Tnh@
!.k3M!"K)7$P=:)2b-hSBlA!7G3O58G7Sk?F)G]"<C])"*>Aqd!s5J&JcNLb%KckB&K3#U7oWi0DfKrD
e9Cn9%sE,;DJ<KY7li+?'Fb3J!i#aI!6"pJ!sK&E)CII6<*s?XEHZNQG6<#3F)DA"?r]]X.NK34"Tngd
!.k4)!"K)7$P=:)2b-hSBlA!7G0tLEG'7qEBjaq23[u-a%0Zh8p],mGJcP6>%KckB&K3#U7oWi0DfKrD
d<?+EG&qP8?r]]X.NK34"Tnhd!.k3)!!36+$O[Ob-T=Op?YOFuG';8W%sE,;DJ<KY7li+?'Fb3J!mUdt
!1Elt!sK&E)CII6<*s?XEHZO#GM76OG'7qEBjaq23[u-a%0Zh8\H%3]Y5f%7"Ubn\-T=Op?YOFuG';ni
mro:cG&qP8?r]]X.NK34"Tnh%!.k3h!"K)7$P=:)2b-hSBlA!7G0tL8G'7p8DJ<KY7li+?'Fb3J!fm>5
!8.>^!sK&E)CII6<*s?XEHZNQG7Sk?F)G]"<C])"*>Aqd!s88uJcLB&mJm_!"Ubn\-T=Op?YOFuG';8W
%sE,;DJ<KY7li+?'Fb3J!os?5!/(=Q!sK)@&K3#U7oWi0DfKrDd<?+EG&qP8?r]]X.NK34"TnhP!.k3=
!"K)7$P=:)2b-hSBlA!7G56@8G7Sk?F)G]"<C])"*>Aqd!s6%6O8tpR%KckB&K3#U7oWi0DfKrDnos#9
%sE,;DJ<KY7li+?'Fb3J!j_lY!4;e:!sK&E)CII6<*s?XEHZN]GP-.jG'7qEBjaq23[u-a%0Zh8ScF?B
aoDnR"Ubn\-T=Op?YOFuG';8W#^1B4DJ<KY7lgi(*>Aqd!s4;ZJcO[.%KckB&K3#U7oWi0DfKrDd<?+E
G&qP8?r]]X.NK34"Tnht!.k3&!;$7$!sK&E)CII6<*s?XEHZNQG7Sk?F)G]"<C])"*>Aqd!s7<ZJcLZ.
#6P,;&K3#U7g;q"BlA!7G0tLEG'7qEBjaq23[u-a%0Zh8aT-nmT)]?'"Ubn\-T=Op?YOFuG'<J$hffTS
G&qP8?r]]X.NK34"Tnh5!.k3X!"K)7$P=:)2b-hSBlA!7G2@H8G7Sk?F)G]"<C])"*>Aqd!s5(pJcNmm
%KckB&K3#U7oWi0DfKrDd<>h=G&qP8?r]]%3[u-a%0Zh8M?&5.h>e#f"Ubn\-T=Op?YOFuG';8W%sE,;
DJ<KY7li+?'Fb3J!qZJE!.k4B!"K)7$P=:)2b-hSBlA!7G0tLEG'7qEBjaq23[u-a%0Zh8hZ/6.O9#+W
%KckB&K3#U7oWi0DfKrDd<?+EG&qP8?r]]X.NK34"TnhY!.k34!"B#6$P=:)2b-hSBlA!7!-Zb6%sE,;
DJ<KY7li+?'Fb3J!lG"i!2TZ*!sK&E)CII6<*s?XEHZNmGNF#ZG'7qEBjaq23[u-a%0Zh8XoO%R\c<3B
"Ubn\-T=Op?YOFuG';M^qKEHnG&qP8?r]]X.NK34"Tngo!.k3s!"K)7$P=:)2b-hSBlA!7G0tLCG'7qE
Bjaq23[u-a%0Zb7!e^Q*!9=+i!sK&E)CII6<*s?XEHZNQG7Sk?F)G]"<C])"*>Aqd!s7ljJcLB&q#Cm,
"Ubn\-T=Op?YOFuG';8W%sE,;DJ<KY7li+?'Fb3J!ndR*!07*g!sK&E)CII6<*s?XEW:40G7Sk?F)G]"
<C])"*>Aqd!s6C@JcMSH%KckB&K3#U7oWi0DfKrDmW[`9%sE,;DJ<KY7li+?'Fb3J!j;TU!4`(>!sK&E
)CII6<*s?XEHZNYGPQFnG'7qEBjaq23[u-a%0Zh8RK.p>c2\=V"Ubn\-T=Op?YOFuG';8W%!Hf8DJ<KY
7li+?'Fb*I!s4/VJcOg2%KckB&K3#U7oWi0DfKrDd<?+EG&qP8?r]]X.NK34"Tni)!.k3&!9sOo!sK&E
)CII6<*s?XEHZNQG7Sk?F)G]"<C])"*>Aqd!s7ZdJcLB&&-)\4"Ubn\-T=Op?YOFuG';8W%sE,;DJ<KY
7li+?'Fb3J!n..$!0mNo!sK&E)CII6<*s?XEHZO(GL^mJG'7qEBjaq23[u-a%0Zh8^&W`bWW3M2"Ubn\
-T=Op?YOFuG'<(nl?<b^G&qP8?r]]X.NK34"Tnh*!.k3c!"K)7$P=:)2b-hSBlA!7G11XIGB\4RF)G]"
<C])"*>Aqd!s4\eJcO:#%KckB&K3#U7oWi0DfKrDd<?+EG&qP8?r]]X.NK34"Tni*!.k3&!9jIn!sK&E
)CII6<*s?XEHZNQG7Sk?F)G]"<C])"*>Aqd!s7]eJcLB&rW!E1"Ubn\-T=Op?YOFuG';8W%sE,;DJ<KY
7li+?'Fb3J!n74%!0dHn!sK&E)CII6<*s?XEHZO)GLUgIG'7qEBjaq23[u-a%0Zh8^AricW;mD1"Ubn\
-T=Op?YOFuG'<+ol$!Y]G&qP8?r]]X.NK34"Tnh+!.k3b!"K)7$P=:)2b-hSBlA!7G1:a8G7Sk?F)G]"
<C])"*>Aqd!s54tJcNai%KckB&K3#U7oWi0DfKrDd<>\9G&qO/Bjaq23[u-a%0Zh8NW=Y2g&MTb"Ubn\
-T=Op?YOFuG';8W%sE,;DJ<KY7li+?'Fb3J!r)bI!.k4>!"K)7$P=:)2b-hSBlA!7G0tLEG'7qEBjaq2
3[u-a%0Zh8irFZ2K`D/V"Ub\M)CII6<*s?XEHZNQG7Sk?F)G]"<C])"*>Aqd!s6aJJcM5>%KckB&K3#U
7oWi0DfKrDpikG9%sE,;DJ<KY7li+?'Fb3J!kA;_!3ZA4!sK&E)CII6<*s?XEHZNcGOK_dG'7qEBjaq2
3[u-a%0Zh8U]>uH_uL8L"Ubn\-T=Op?YOFuG';8W!d8a.$uTce<C])"*>Aqd!s4M`JcOI(%KckB&K3#U
7oWi0DfKrDd<?+EG&qP8?r]]X.NK34"Tni%!.k3&!:Bgs!sK&E)CII6<*s?XEHZNQG7Sk?F)G]"<C])"
*>Aqd!s7N`JcLH(!<WK6$P=:)2b-hSBlA!7G0tLEG'7qEBjaq23[u-a%0Zh8cN&OsR/d^!"Ubn\-T=Op
?YOFuG'<\*flmsMG&qP8?r]]X.NK34"Tnh;!0@2R!"K)7$P=:)2b-hSBlA!7G4Kk8G7Sk?F)G]"<C])"
*>Aqd!s5e/JcN1Y%KckB&K3#U7oWi0DfKrDh08O9%sE,;DJ<KY7li+?'Fb3J!hKCD!6P9O!sK&E)CII6
<*s?XEHZNQG6iA8F)G]"<C](S.NK34"Tng_!.k4.!"K)7$P=:)2b-hSBlA!7G0tLEG'7qEBjaq23[u-a
%0Zh8o)O@BJcPEC%KckB&K3#U7oWi0DfKrDd<?+EG&qP8?r]]X.NK34"Tnh_!.k3.!!`T0$P=:)2b+'O
?YOFuG';8W%sE,;DJ<KY7li+?'Fb3J!m(Fo!1s6$!sK&E)CII6<*s?XEHZNsGMdTTG'7qEBjaq23[u-a
%0Zh8ZiG[XZiCR<"Ubn\-T=Op?YOFuG';_doQLghG&qP8?r]]X.NK34"Tngu!.k3m!"K)7$P=:)2b-hS
BlA!7G0tL=G'7qEBjaq2#<F=T'Fb3J!f?u0!8[\c!sK&E)CII6<*s?XEHZNQG7Sk?F)G]"<C])"*>Aqd
!s8)pJcLB&o)K7&"Ubn\-T=Op?YOFuG';8W%sE,;DJ<KY7li+?'Fb3J!oF!0!0@3W!"K)7$P=:)2b-hS
BlA!7G0tLEG'7qEBjaq23[u-a%0Zh8fDpL'O8o^l"Ubn\-T=Op?YOFuFoZ^5G7Sk?F)G]"<C])"*>Aqd
!s6@?JcMVI%KckB&K3#U7oWi0DfKrDm<@Z9%sE,;DJ<KY7li+?'Fb3J!j2NT!4i.?!sK&E)CII6<*s?X
EHZNXGPZLoG'7qEBjaq23[u-a%0Zh8R/hg=cN"FW"Ubn\-T=Op?YOFuG';8W%<co9DJ<KY7li+?'Fb3H
!s4,UJcOj3%KckB&K3#U7oWi0DfKrDd<?+EG&qP8?r]]X.NK34"Tnho!.k3&!;QU)!sK&E)CII6<*s?X
EHZNQG7Sk?F)G]"<C])"*>Aqd!s7-UJcLi3$j-Y@&K3#U7oWi0DfPf#d<?+EG&qP8?r]]X.NK34"TnhE
!.k3H!"K)7$P=:)2b-hSBlA!7G4'S8G7Sk?F)G]"<C])"*>Aqd!s5Y+JcN=]%KckB&K3#U7oWi0DfKrD
fm!79%sE,;DJ<KY7li+?'Fb3J!h'+@!6tQS!sK&E)CII6<*s?XEHZNQG78Y<F)G]"<C])"*>Aqa"Tng[
!.k42!"K)7$P=:)2b-hSBlA!7G0tLEG'7qEBjaq23[u-a%0Zh8r;_ELJcP'9%KckB&K3#U7oWi0DfKrD
d<?+EG&qP8?r]]X.NK34"Tnhi!.k3&!"],1!sK&E)CII6<*s?XEHZNQG7Sk?F)G]"<C])"*>Aqd!s6pO
JcM&9%KckB&K3#U7oWi0DfKrDrHHe9%sE,;DJ<KY7li+?'Fb3J!knYd!3-#/!sK&E)CII6<*s?XEHZNh
GNsA_G'7qEBjaq23[u-a%0Zh8W;qMM^An`G"Ubn\-T=Op?YOFuG';>Y&U/GBG&qP8?r]]X.NK34"Tngj
!.k4#!"K)7$P=:)2b-hSBlA!7G0tLEG'7qEBjaq23[u-a%0Zh8rVuouJ,~>

%%EndBinary
grestore
np
200.905 153.153 mo
251.905 153.153 li
251.905 145.153 li
200.905 145.153 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 73.0947 211.31 ]ct
[51 0 0 8 127.811 58.1573 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 153 
/H 24 
/M[153 0 0 -24 0 24 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcMnQ%KcqD'HAS]7oWi0DfKrDj`g$7$[$Q4E,KK,E,]oAG0b@CG'7tHCh$R>4"_Wk$O6b8joBu5
JcLB&_uL8L#7D4c.Q9js?YOFuG';2U!-JWjF)Z#5C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!m^ju!.k3&
!8@J`!s]2J*%Em;<*s?XEHZNOG7/P8F)Z#5C2e-6Fa!G%gNO0OG'%\>@ou>b/g(o;#6P%;!.k3&!.k4A
!"K)9$PXR12b-hSBlA!7G0b@?F`_\DDJX',E--5GhKSO7%sE,<E,9#d8inXJ((1?L!hfUG!.k3.!!`T2
$PXR12b+'O?YOFuG';2U$[$Q4E,KK,E,]oAG0b@;G'7tHCh$R>#<OO\((1?L!f?u0!.k3E!"K)9$PXR1
2b-hSBlA!7G4Be6G7/P8F)Z#5C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!qH>C!.k4'!.k40!"K)9$PXR1
2b-hSBlA!7G0b@?F`_\DDJX',E--5Gms!`7%sE,<E,9#d8inXJ((1?L!jVfX!.k3&!;HO(!s]2J*%Em;
<*s?XEHZNOG7/P8F)Z#5C2e-6F`uD]pid6lG'%\>@ou>b/g(o;#6P$s!.k3&!0@0i!s]2J*%Em;<*s?X
EHV>*cZ]b>FE;D=Chdp.FEMcQG7A_=FDu&+=@tY-+;P=i!<WCV!.k3&!2ff,!s]2J*%Em;<*s?XEHZNk
GNF#VF`_\DDJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%o!.k3&!.k3b!"K)9$PXR12b-hSBlA!7G1:a6
G7/P8F)Z#5C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!n@:&!.k3&!7_&Z!s]2J*%Em;<*s?XEHZNOG7/P8
F)Z#5C2e-6Fa!Y+eTVOIG'%\>@ou>b/g(o;#6P%A!.k3&!.k4;!"K)9$PXR12b-hSBlA!7G0b@?F`_\D
DJX',E--5GjEKs7%sE,<E,9#d8inXJ((1?L!rW+N!.k3&!3H52!s]2J*%Em;<*s?XEHZNeGO'G\F`_\D
DJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%i!.k3&!.k3h!"K)9$PXR12b-hSBlA!7G0b@4FUE53E,KK,
E,]oAG0b@CG'7tHCh$R>4"_Wk$O6b8cN&OsJcLB&gAh]c#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oA
G4g(6G7Sk?FDu&+=@tY-+;P=i!s5t4JcLB&JcP?A%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMc`
GOfqgG'7tHCh$R>4"_Wk$O6b8T`BZEJcLZ.#6P2='HAS]7g;q"BlA!7G0b@?F`_\DDJX',E--5GcZ]V;
G'%\>@ou>.4"_Wk$O6b8M?&5.JcMJE%KcqD'HAS]7oWi0DfKrDnTWl7$[$Q4E,KK,E,]oAG0b@CG'7tH
Ch$R>4"_Wk$O6b8nc47AJcOF'JcOa0%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMcqGN!`VG'7tH
Ch$R>4"_Wk$O6b8Z2fIVJcLB&p](d+#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG1_$6G7Sk?FDu&+
=@tY-+;P=i!s4qlJcLB&O8o^l#7D4c.Q9js?YOFuFoZ^3G7/P8F)Z#5C2e-6F`u)T%<co:E,9#d8inXJ
((1?J!s4,UJcLB&VZ72/#7D4c.Q9js?YOFuG'<1qj`_)TFE;D=Chdp.FEMcQG7Sk?FDu&+=@tY-+;P=i
!s7fhJcLB&JcNLb%KcqD'HAS]7oWi0DfKrDe9Ch7$[$Q4E,KK,E,]oAG0b@CG'7tHCh$R>4"_Wk$O6b8
r;_?~>

%%EndBinary
grestore
np
125.905 153.153 mo
176.905 153.153 li
176.905 145.153 li
125.905 145.153 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 73.0947 211.31 ]ct
[51 0 0 8 52.8107 58.1573 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 153 
/H 24 
/M[153 0 0 -24 0 24 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcMqR%fuh<%29p:4%`UaC2e9<G3*r6G78Y;FE)8:D/aE8FE_uUG7Je<E,9&f90FmM(C^WR!p0K7
!.k3&!6"pK!WrZ:'Heth8m#P;E--8HcZ]A4$[$Q2E,BH2Dfg)FGgCRDG'%\>A6DPg/g(r>#R(:U!.k3&
!.k4+!"T,5#7V@i/NZR,@VTk(G';2U%!Hc8EH#c3E,Ti?GBih*g34$MFDu&,=\Cn1+;YIm"Tl16JcLB&
JcPBB%fuh<%29p:4%`UaC2e9<G0b@@G'.nHE,BH2Dfg)FGi*`8G7Je<E,9&f90FmM(C^WR!hfUG!.k3/
!!iW.#7V@i/NZQ/=CQ#aFEViRG78Y;FE)8:D/aE8FE_uUG6W54E,9&f9*[U4+;YIm"TjP]JcLB&U&Y]*
!s]8L+>#ZI=CQ#aFEVitGMdTQG'.nHE,BH2Dfg)FGgCRDG'%\>A6DPg/g(r>#R(;#!.k3&!8%:'!9*th
!WrZ:'Heth8m#P;E--8HcZ]e@F`_VBD/F61FED_On9<f7%X)r5Ch-[A4Y@in%1!+=Z2fIVJcLB&q#Cp,
!s]8L+>#ZI=CQ#aFEViRG78Y;FE)8:D/aE8FE_u_GP?:kG'%\>A6DPg/g(r>#R(:!!.k3&!0I6k!WrZ:
'Heth8m#P;E--7'G0b@@G'.nHE,BH2Dfg)FGgCRBG'%\>A6DPg/g(r>#QY)1KE-T(JcM_L%fuh<%29p:
4%`UaC2e9<G3aA6G78Y;FE)8:D/aE8FE_uUG7Je<E,9&f90FmM(C^WR!pfo=!.k3&!5ALE!WrZ:'Heth
8m#P;E--8He9Ch7%!Hc8EH#c3E,Ti?GBhGX%X)r5Ch-[A4Y@in%1!+=eGt1$JcLB&ec63^!s]8L+>#ZI
=CQ#aFEViRG78Y;FE)8:D/aE8FE`!-GLUgHG'%\>A6DPg/g(r>#R(:D!.k3&!.k4<!"T,5#7V@i/NZR,
@VTk(G';2U%!Hc8EH#c3E,Ti?GBi4nlZWh^FDu&,=\Cn1+;YIm"TnW&JcLB&JcMqR%fuh<%29p:4%`Ua
C2e9<G3*r6G78Y;FE)8:D/aE8FE_uUG7Je<E,9&f90FmM(C^WR!p0K7!.k3&!6"pK!WrZ:'Heth8m#P;
E--8HcZ]A4$[$Q2E,BH2Dfg)FGgCRDG'%\>A6DPg/g(r>#R(:U!.k3&!.k4+!"T,5#7V@i/NZR,@VTk(
G';2U%!Hc8EH#c3E,Ti?GBih*g34$MFDu&,=\Cn1+;YIm"Tl16JcLB&JcPBB%fuh<%29p:4%`UaC2e9<
G0b@@G'.nHE,BH2Dfg)FGi*`8G7Je<E,9&f90FmM(C^WR!hfUG!.k3/!!iW.#7V@i/NZQ/=CQ#aFEViR
G78Y;FE)8:D/aE8FE_uUG6W54E,9&f9*[U4+;YIm"TjP]JcLB&U&Y]*!s]8L+>#ZI=CQ#aFEVitGMdTQ
G'.nHE,BH2Dfg)FGgCRDG'%\>A6DPg/g(r>#R(;#!.k3&!8%:'!9*th!WrZ:'Heth8m#P;E--8HcZ]e@
F`_VBD/F61FED_On9<f7%X)r5Ch-[A4Y@in%1!+=Z2fIVJcLB&q#Cp,!s]8L+>#ZI=CQ#aFEViRG78Y;
FE)8:D/aE8FE_u_GP?:kG'%\>A6DPg/g(r>#R(:!!.k3&!0I6k!WrZ:'Heth8m#P;E--7'G0b@@G'.nH
E,BH2Dfg)FGgCRBG'%\>A6DPg/g(r>#QY)1KE-T(JcM_L%fuh<%29p:4%`UaC2e9<G3aA6G78Y;FE)8:
D/aE8FE_uUG7Je<E,9&f90FmM(C^WR!pfo=!.k3&!5ALE!WrZ:'Heth8m#P;E--8He9Ch7%!Hc8EH#c3
E,Ti?GBhGX%X)r5Ch-[A4Y@in%1!+=r;_?~>

%%EndBinary
grestore
np
50.9053 153.153 mo
101.905 153.153 li
101.905 145.153 li
50.9053 145.153 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 73.0947 211.31 ]ct
[51 0 0 8 -22.1893 58.1573 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 153 
/H 24 
/M[153 0 0 -24 0 24 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&li7Lt"Ubn\-T=Op?YOFuG';8W%sE,;DJ<KY7li+?'Fb3J!p0K7!.k3&!/(=Q!sK)@&K3#U
7oWi0DfKrDd<?+EG&qP8?r]]X.NK34"TnhP!.k3&!.k3?!"K)7$P=:)2b-hSBlA!7G5$48G7Sk?F)G]"
<C])"*>Aqd!s5t4JcLB&JcP$8aoW%V#7V=b-T=Op?YOFuG';efnokUfG&qP8?r]]X.NK34"Tnh"!.k3&
!/1FP!m(NS#7(hS*@Np><F9HYEHZNQG6`;7F)G]"<C[9T.NK34"Tng`!.k3&!1j2i!riB&"mcKP#7_(K
&JcE;3_<=ZBlA!7G0tLEG'7qEBjaq23[u-a%0Zh8nc47AJcOF'JcOX-#6Fr/#6tM?$Hrkf%hKEn,:u&O
=(#`\EHZNqGN!`VG'7qEBjaq23[u-a%0Zh8Z2fIVJcLB&pAbL$!WrZ4#R_(Q&^1mu()Iu6-Sdq\=^l,b
EHZNZGPH@mG'7qEBjaq23[u-a%0Zh8RfJ$?JcLi3$j$J8#7CtS'H%c.*$*?H%Nll>-n[DG:g%:CE-$2G
d<?%CG&qP8?r]]X.NK34"T\],KE-T(JcM\K$N^A5#7D(W)'1"J./k^^/*ADn.P38+1,V<g;dEmME-$2G
d<?+EG&qP8?r]]X.NK34"Tnhm!.k3&!.k3b!"Au3#7:tU*$Zpd1H%0PdlRCf%6Ha:5t4XP?Y=4sF*;`S
G7Sk?F)G]"<C])"*>Aqd!s7!QJcLB&JcO@%%fue9#7D+^,V(Z45Xe.48'sm07nH;O9*nBo?!q>aF*)VL
rHHe9%sE,;DJ<KY7li+?'Fb3J!knYd!.k3&!:9as!WiT6%i-392*OK';H-Xrd8p<Jr`9J-<**=4A86%(
Fa&#kGO0MaG'7qEBjaq23[u-a%0Zh8r;_ELJcLB&XoJn4!s]2F)'^dt7Sm/k?K5GX?jg:H?=.5VCiON=
GBVAX%sE,;DJ<KY7li+?'Fb3J!p0K7!.k3&!6"pK!WrZ8',i5S6;CNf@q]Rjd:r_sC1n#hARf1ZB5)4&
F*2\Md<?+EG&qP8?r]]X.NK34"TnhP!.k3&!.k4+!"T,7#7V@f-oXUn>%D>aDJmj?%rQ<(ChdTqAS>mt
EHQDJG5$48G7Sk?F)G]"<C])"*>Aqd!s5t4JcLB&JcPBB%fun>%29j63Cd%TBPh^.ERAh<EH?);D/*]s
C2Ij.F`hnOi-4a9%sE,;DJ<KY7li+?'Fb3J!hfUG!.k3/!!iW0#7hLk/NQH,=(#`\F*5fP%Wuo6DJX$$
C2Im/F`hnOd<>h=G&qP8?r]]%3[u-a%0Zh8M?&5.JcMMF%KZe=%hp-<4%`UaBlA'8n93`5"Eej,DJfAf
#&S9uF`hnOd<?+EG&qP8?r]]X.NK34"Tnhs!.k3&!8%:'!9*th!X/f>'Heth8m#P;E-6>Id<>b;GBJ"G
D>n8SD/XE:Fa&$!GN!`VG'7qEBjaq23[u-a%0Zh8Z2fIVJcLB&q#Cp,"U>PP+>#ZI=CQ#aF`qrUG6N/6
F`_P=rb;XSDfKoBGBV\apid6lG&qP8?r]]X.NK34"Tngq!.k3&!0I6k!X/f>'Heth8m#P;E-6=(G0tL;
G'A(NDf,Jg#&S9uF`hnOd<?%CG&qP8?r]]X.NK34"T\],KE-T(JcM_L%fun>%hp-<4%`UaC2e<=G3aA8
G6N/6F`_P=rb;XSDfKoBGBVAX%sE,;DJ<KY7li+?'Fb3J!pfo=!.k3&!5ALE!X/f>'Heth8m#P;E-6>I
e9Cn9"a5*4FDl$qC'JNnEHQDJG0tLEG'7qEBjaq23[u-a%0Zh8r;_?~>

%%EndBinary
grestore
np
275.905 187.153 mo
326.905 187.153 li
326.905 153.153 li
275.905 153.153 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 73.0947 211.31 ]ct
[51 0 0 34 202.811 24.1573 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 153 
/H 102 
/M[153 0 0 -102 0 102 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&fDrbil2ZD9
JcOF'JcM>Ar;um!mfhPOqucm!XoO%RJcLB&[/g1-rr`9)r!1p]pB^[%rrrE)rW8GeJcLB&JcO!p#6Fr/
"U>AA$crha$O[:K#R(;3!W[fPJcLB&JcOm4#m(/1"U>;@%hTKS(=!`q('tZe%1<LH"Tnf-lMuM:JcLB&
JcP]K%0?S7#7:tT(E",3*ZuTP+UoP:*ZZ7=(D.)`"U+r/e,Y(#JcLB&PlM9q!WrZ5%hom&,Ub/p/h[)U
eM$nS#q[YU,TRa:%13:<!knYd!.k3&!3?/0!WiN2%20X).k`\>4$D[hkroM;3AW<<+W;%&#6P#/r;_EL
JcLB&JcP-;%KZ_;$4n't.l07Q7Rp'DcqFj@8kDH;4#/9.((U`UrW;6_JcLB&JcLH(rrWT5%20X+0fqfs
;cV(F%Tle1911ir,TIC("Tnf-ciAXtJcLB&RfEp#!s]>P*\B<>9N>8&?t/k?gLL4l%:34<9L:Wf*>Aqd
!s/P7!.k3&!.k3V!"K)7#S.[n00;d)>[q>[CuB1$D%LN"BkLgY<(B#%+VkLl"Teb"!.k3&!.k3m!"K)7
$4n("1-eT;?ta@oDpWG-Df0B&?s$&-4u"8u%gN7>!fI&1!.k3&!8mhe!sK#D)'h"(:Kh7EDK0aEF:WG3
DJEWa:I-]\(D$fT!WqrnJcLB&fDpL'T`>Q)"UYhZ,rJ"c>\.bkFER+siH>cTF`_S;AQhnr1*meL#6b/1
ZN,RWJcLB&\,[!@"UYhZ,rJ(g?"\%pFEQ;\picXZ%<65r>u3jC,oI7!"Teaq!.k3&!.k3s!"K)7$5".%
2+1>JB5V^3G0kFAF`h\@AR/,!1*meL#6G&1!egW+!.k3&!9O7k!sK#D)'q..;I*pQEHQHOG7Sh=EG]8m
:dQo`)%[#V!Wq`hJcLB&JcLB&r;[<0"UYhZ,rJ(g?"\%pF`u,U%s<#7D.R!L68Bi)&-i@?!nI@'!.k3&
!0mNo!sK#D)'q..;I*pQEHQI'GLUgIF`h\@AR/,!1*meL#6b/1^AricJcLB&X8i_4"UYhZ,rJ(g?"\%p
F`unklZWk^F`D80>u3jC,oI7!"Tec)!.k3&!.k3&!:0[q!sK#D)'q..;I*pQEHQHOG7Sh=EG]8m:dQo`
)%[#V!WqNbJcLB&JcLH(!<WK6$5".%2+1>JB5V^3G0kFDF`h\@AR/,!1*meL#6b/1ciAXtJcLB&RfEp#
"UYhZ,rJ(g?"\%pFa!M'g34'MF`D80>u3jC,oI7!"Teb9!.k3&!.k3V!"K)7$5".%2+1>JB5V^3G2RT7
G7Sh=EG]8m:dQo`)%[#V!Wo(rJcLB&JcNmm%KckA&K)lP6rI<'DK0fBd!#\:F`D80>u1en1*meL#6b/1
MZA>/JcLB&huF5h"UYhZ,rJ(g?"\%pF`u,U%s<#7D.R!L68Bi)&-i@?!qQDD!.k4'!.k3E!"K)7$5".%
2+1>JB5V^3G4Be7G7Sh=EG]8m:dQo`)%[#V!Wo\.JcLB&JcN:\%KckA&K)lP6rI<'DK0fBg3<:8%s<#7
D.R!L68Bi)&-i@?!h97B!.k3&!7(WT!sK#D)'q..;I*pQEHQHOG78V:EG]8m:dQo`)%[#S"TeaZ!.k3&
!.k45!"K)7$5".%2+1>JB5V^3G0kFDF`h\@AR/,!1*meL#6b/1m/V_<JcLB&JcP`L%KckA&K)lP6rI<'
DK0fBd!$"CF`D80>u3jC,oI7!"TebV!.k3&!.k39!"K)7$5".%2+1>JB5V^3G5ZX7G7Sh=EG]8m:dQo`
)%[#V!Wp+:JcLB&JcMkP%KckA&K)lP6rI<'DK0fBk'--8%s<#7D.R!L68Bi)&-i@?!r`1O!.k3&!.k4;
!"K)7$5".%2+1>JB5V^3G0kFDF`h\@AR/,!1*meL#6b/1k5^)6JcLB&KE)#T"Uk_M)'q..;I*pQEHQHO
G7Sh=EG]8m:dQo`)%[#V!Wp^KJcLB&JcM8?%KckA&K)lP6rI<'DK0fBpNP>8%s<#7D.R!L68Bi)&-i@?
!kA;_!.k3&!3uS7!sK#D)'q..;I*pQEHQH_GO]kfF`h\@AR/,!1*meL#6b/1U&]cFJcLB&aT)eQ"UYhZ
,rJ(g?"\%pF`u,U#'G'.D.R!L#XU9m)%[#V!Wn8[JcLB&JcO^/%KckA&K)lP6rI<'DK0fBd!$"CF`D80
>u3jC,oI7!"Tebs!.k3&!8%:'!20B&!sK#D)'q..;I*pQEHQHpGMmZUF`h\@AR/,!1*meL#6b/1ZN,RW
JcLB&o)S[ib6&4Z#RqId-T4Cl?"\%pF`uJ_pNI-jF`D80>u3jC,oI7!"Teaq!.k3&!/ppW!r`<#"j[>^
#RV(X*@Nj9;dO-TEHQHOG78V:EG]8m:dQo`)%[#S"TeaZ!.k3&!2KVo!riH(#QG(n$K_[*%1a$g*\09A
<*j6UEHQHOG7Sh=EG]8m:dQo`)%[#V!Wq`hJcLB&JcNIa$N^A3!sJr9$OmUX&CM0h&IoKh)'1%V4\A^^
BlA'8G0kFDF`h\@AR/,!1*meL#6b/1ec::%JcLB&e,TdV!WrT3$P*g`(B#&s)%RN%*$?OX2*jl;?tsV$
G'<h.e9;FGF`D80>u3jC,oI7!"Teb?!.k3&!.k4:!"&c/"UGPL()\,6+oWb6,n;:M.k`Y=7Sm8uC2e6;
G34#7G7Sh=EG]8m:dQo`)%[#V!Wr?$JcLB&JcMnQ%KZ_9#Rq@^*@**d0ekF=jYQ6Z%Q-.'4$Z50<*j*P
EHHAId!$"CF`D80>u3jC,oI7!"Tebg!.k3&!.k3h!"8o2#7;"X*@EHs3Bf^R6N9I]7RfsC<*E[BD0'jF
G7Sh=EG]8m:dQo`)%[#V!Wp^KJcLB&JcOR+%fue9#RqFc,q_2E7S6?M:X;l:;@$9(>$toVDfg-pGM76O
F`h\@AR/,!1*meL#6b/1\H%3]JcLB&o)K:&!sK#B(Eb4e6:t-W=B\nT>RXnC?=$fA@Uj(fE--6ZGO]kf
F`h\@AR/,!1*meL#6b/1U&]cFJcL]/#Qb)3#S7ds00TM/;cm=8c=IDtAS#C^A7oRlD/aT>c?BJ8F`D80
>u1en1*meL#6b/1MZA>/JcMMF%fuh<$5"7(1I4c<?tX1iD"2B$D%1<!DJa3'C1q@!Df^#Dc?BeAF`D80
>u3jC,oI7!"Tebs!.k3&!8%:'!9*th!WrZ8&KE/V6rI9#C2S!0cuBJ8EH,o5D/=$+Df^#Dms!]6%s<#7
D.R!L68Bi)&-i@?!j_lY!.k3&!;QU*!WrZ8'-&DZ78mN*D/aQ;cu]\=FE;G>DJa6.Df^#DfQ[(6%s<#7
D.R!L68Bi)&-i@?!h97B!.k35!"K&4#7D1c.QL!u?YF=uFT?R3Fp3#4F`hbDrb_jWE--2Fc?B\>F`D80
>u3jC,oI7!!X/W,K`H])JcM_L%fuh<$POO13Cd(WBlA*:G3aA6G7/S;F`;5:DJsK9FEYrR%s<#7D.R!L
68Bi)&-i@?!pou>!.k3&!5ALE!WrZ8'-/P_7o`r2Dfg/Ge9Ch7$[-]9E,KT3DfBf?G0Y:BF`h\@AR/,!
1*meL#6b/1ec::%JcLB&ec63^!s]2I*@a'><FBNZFEViRG7/S;F`;5:DJsK9FE[P*e9;FGF`D80>u3jC
,oI7!"Teb?!.k3&!.k4<!"T,5#7D1c.QL"!?tjP$G';2U$[-]9E,KT3DfBf?G3!l5G7Sh=EG]8m:dQo`
)%[#V!Wr?$JcLB&JcMqR%fuh<$POO13Cd(WBlA*:G3*r6G7/S;F`;5:DJsK9FEYrR%s<#7D.R!L68Bi)
&-i@?!p9Q8!.k3&!6"pK!WrZ8'-/P_7o`r2Dfg/GcZ]A4$?gQ2DJsE2E--2Fc?BeAF`D80>u3jC,oI7!
"TebP!.k3&!.k4+!"T,5#7D1c.QL"!?tjP$G';2U$[-]9E,KT3DfBf?G4g(5G7Sh=EG]8m:dQo`)%[#V
!Won4JcLB&JcPBB%fuh<$POO13Cd(WBlA*:G0b@?G'8"IDJsE2E--2FhKSL6%s<#7D.R!L68Bi)&-i@?
!ho[H!.k3/!!iW.#7D1c.QL!'<FBNZFEViRG7/S;F`;5:DJsK9FEYrR#'G'.D.R!L#XU9m)%[#V!Wn8[
JcLB&U&Y]*!s]2I*@a'><FBNZFEVitGMdTPG'8"IDJsE2E--2Fc?BeAF`D80>u3jC,oI7!"Tebs!.k3&
!8%:'!9*th!WrZ8'-/P_7o`r2Dfg/GcZ]b?G'.bADf0K4FED]pGMmZUF`h\@AR/,!1*meL#6b/1ZN,RW
JcLB&q#Cp,!s]2I*@a'><FBNZFEViRG7/S;F`;5:DJsK9FEZ;\pNI-jF`D80>u3jC,oI7!"Teaq!.k3&
!0I6k!WrZ8'-/P_7o`r2Dfg.&G0b@?G'8"IDJsE2E--2Fc?B\>F`D80>u3jC,oI7!!X/W,K`H])JcM_L
%fuh<$POO13Cd(WBlA*:G3aA6G7/S;F`;5:DJsK9FEYrR%s<#7D.R!L68Bi)&-i@?!pou>!.k3&!5ALE
!WrZ8'-/P_7o`r2Dfg/Ge9Ch7$[-]9E,KT3DfBf?G0Y:BF`h\@AR/,!1*meL#6b/1ec::%JcLB&ec63^
!s]2I*@a'><FBNZFEViRG7/S;F`;5:DJsK9FE[P*e9;FGF`D80>u3jC,oI7!"Teb?!.k3&!.k4<!"T,5
#7D1c.QL"!?tjP$G';2U$[-]9E,KT3DfBf?G3!l5G7Sh=EG]8m:dQo`)%[#V!Wr?$JcLB&JcMqR%fuh<
$POO13Cd(WBlA*:G3*r6G7/S;F`;5:DJsK9FEYrR%s<#7D.R!L68Bi)&-i@?!p9Q8!.k3&!6"pK!WrZ8
'-/P_7o`r2Dfg/GcZ]A4$?gQ2DJsE2E--2Fc?BeAF`D80>u3jC,oI7!"TebP!.k3&!.k4+!"T,5#7D1c
.QL"!?tjP$G';2U$[-]9E,KT3DfBf?G4g(5G7Sh=EG]8m:dQo`)%[#V!Won4JcLB&JcPBB%fuh<$POO1
3Cd(WBlA*:G0b@?G'8"IDJsE2E--2FhKSL6%s<#7D.R!L68Bi)&-i@?!ho[H!.k3/!!iW.#7D1c.QL!'
<FBNZFEViRG7/S;F`;5:DJsK9FEYrR#'G'.D.R!L#XU9m)%[#V!Wn8[JcLB&U&Y]*!s]2I*@a'><FBNZ
FEVitGMdTPG'8"IDJsE2E--2Fc?BeAF`D80>u3jC,oI7!"Tebs!.k3&!8%:'!9*th!WrZ8'-/P_7o`r2
Dfg/GcZ]b?G'.bADf0K4FED]pGMmZUF`h\@AR/,!1*meL#6b/1ZN,RWJcLB&q#Cp,!s]2I*@a'><FBNZ
FEViRG7/S;F`;5:DJsK9FEZ;\pNI-jF`D80>u3jC,oI7!"Teaq!.k3&!0I6k!WrZ8'-/P_7o`r2Dfg.&
G0b@?G'8"IDJsE2E--2Fc?B\>F`D80>u3jC,oI7!!X/W,K`H])JcM_L%fuh<$POO13Cd(WBlA*:G3aA6
G7/S;F`;5:DJsK9FEYrR%s<#7D.R!L68Bi)&-i@?!pou>!.k3&!5ALE!WrZ8'-/P_7o`r2Dfg/Ge9Ch7
$[-]9E,KT3DfBf?G0Y:BF`h\@AR/,!1*meL#6b/1ec::%JcLB&ec63^!s]2I*@a'><FBNZFEViRG7/S;
F`;5:DJsK9FE[P*e9;FGF`D80>u3jC,oI7!"Teb?!.k3&!.k4<!"T,5#7D1c.QL"!?tjP$G';2U$[-]9
E,KT3DfBf?G3!l5G7Sh=EG]8m:dQo`)%[#V!Wr?$JcLB&JcMqR%fuh<$POO13Cd(WBlA*:G3*r6G7/S;
F`;5:DJsK9FEYrR%s<#7D.R!L68Bi)&-i@?!p9Q8!.k3&!6"pK!WrZ8'-/P_7o`r2Dfg/GcZ]A4$?gQ2
DJsE2E--2Fc?BeAF`D80>u3jC,oI7!"TebP!.k3&!.k4+!"T,5#7D1c.QL"!?tjP$G';2U$[-]9E,KT3
DfBf?G4g(5G7Sh=EG]8m:dQo`)%[#V!Won4JcLB&JcPBB%fuh<$POO13Cd(WBlA*:G0b@?G'8"IDJsE2
E--2FhKSL6%s<#7D.R!L68Bi)&-i@?!ho[H!.k3/!!iW.#7D1c.QL!'<FBNZFEViRG7/S;F`;5:DJsK9
FEYrR#'G'.D.R!L#XU9m)%[#V!Wn8[JcLB&U&Y]*!s]2I*@a'><FBNZFEVitGMdTPG'8"IDJsE2E--2F
c?BeAF`D80>u3jC,oI7!"Tebs!.k3&!8%:'!9*th!WrZ8'-/P_7o`r2Dfg,Ed<?+EGBS+NDf0K1Df9]<
G'8*"G2RNSF`_S=AR&%t1*meL#6b/1ZN,RWJcLB&q#Cj*!s]2I*@Np<;dX0TER&\:GBJ%LE,KT2DJsT;
FEVf\G5-4lF`__EC1URF5qsW&&-i@?!h97B!.k35!"K&4#7D+`-oXUo?"[tmE<(()F:3&*D/*g%D/aH8
F`brN$ZKuu@TlMm0dIVI#6G&1!egW+!.k3L!"Au3#7D+`-T+:g>[qJcl#>d("*8F$DuOJVBPD:!D/aK5
cu9M5D/*Wi=%b\0+VkRn"Tebm!.k3&!.k3c!"T,5"Ubn^,Vq\Z='oNQC2277rG2s\Ch[WqARo=_A8#^m
D/@O5%VTE]>#RpQ/Kkl?#6P#/rW%H~>

%%EndBinary
grestore
np
200.905 187.153 mo
251.905 187.153 li
251.905 153.153 li
200.905 153.153 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 73.0947 211.31 ]ct
[51 0 0 34 127.811 24.1573 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 153 
/H 102 
/M[153 0 0 -102 0 102 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcMnQ%KcqD'HAS]7oWi0DfKrDj`g$7$[$Q4E,KK,E,]oAG0b@CG'7tHCh$R>4"_Wk$O6b8joBu5
JcLB&_uL8L#7D4c.Q9js?YOFuG';2U!-JWjF)Z#5C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!m^ju!.k3&
!8@J`!s]2J*%Em;<*s?XEHZNOG7/P8F)Z#5C2e-6Fa!G%gNO0OG'%\>@ou>b/g(o;#6P%;!.k3&!.k4A
!"K)9$PXR12b-hSBlA!7G0b@?F`_\DDJX',E--5GhKSO7%sE,<E,9#d8inXJ((1?L!hfUG!.k3.!!`T2
$PXR12b+'O?YOFuG';2U$[$Q4E,KK,E,]oAG0b@;G'7tHCh$R>#<OO\((1?L!f?u0!.k3E!"K)9$PXR1
2b-hSBlA!7G4Be6G7/P8F)Z#5C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!qH>C!.k4'!.k40!"K)9$PXR1
2b-hSBlA!7G0b@?F`_\DDJX',E--5Gms!`7%sE,<E,9#d8inXJ((1?L!jVfX!.k3&!;HO(!s]2J*%Em;
<*s?XEHZNOG7/P8F)Z#5C2e-6F`uD]pid6lG'%\>@ou>b/g(o;#6P$s!.k3&!0@0i!s]2J*%Em;<*s?X
EHV>*cZ]b>FE;D=Chdp.FEMcQG7A_=FDu&+=@tY-+;P=i!<WCV!.k3&!2ff,!s]2J*%Em;<*s?XEHZNk
GNF#VF`_\DDJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%o!.k3&!.k3b!"K)9$PXR12b-hSBlA!7G1:a6
G7/P8F)Z#5C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!n@:&!.k3&!7_&Z!s]2J*%Em;<*s?XEHZNOG7/P8
F)Z#5C2e-6Fa!Y+eTVOIG'%\>@ou>b/g(o;#6P%A!.k3&!.k4;!"K)9$PXR12b-hSBlA!7G0b@?F`_\D
DJX',E--5GjEKs7%sE,<E,9#d8inXJ((1?L!rW+N!.k3&!3H52!s]2J*%Em;<*s?XEHZNeGO'G\F`_\D
DJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%i!.k3&!.k3h!"K)9$PXR12b-hSBlA!7G0b@4FUE53E,KK,
E,]oAG0b@CG'7tHCh$R>4"_Wk$O6b8cN&OsJcLB&gAh]c#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oA
G4g(6G7Sk?FDu&+=@tY-+;P=i!s5t4JcLB&JcP?A%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMc`
GOfqgG'7tHCh$R>4"_Wk$O6b8T`BZEJcLZ.#6P2='HAS]7g;q"BlA!7G0b@?F`_\DDJX',E--5GcZ]V;
G'%\>@ou>.4"_Wk$O6b8M?&5.JcMJE%KcqD'HAS]7oWi0DfKrDnTWl7$[$Q4E,KK,E,]oAG0b@CG'7tH
Ch$R>4"_Wk$O6b8nc47AJcOF'JcOa0%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMcqGN!`VG'7tH
Ch$R>4"_Wk$O6b8Z2fIVJcLB&p](d+#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG1_$6G7Sk?FDu&+
=@tY-+;P=i!s4qlJcLB&O8o^l#7D4c.Q9js?YOFuFoZ^3G7/P8F)Z#5C2e-6F`u)T%<co:E,9#d8inXJ
((1?J!s4,UJcLB&VZ72/#7D4c.Q9js?YOFuG'<1qj`_)TFE;D=Chdp.FEMcQG7Sk?FDu&+=@tY-+;P=i
!s7fhJcLB&JcNLb%KcqD'HAS]7oWi0DfKrDe9Ch7$[$Q4E,KK,E,]oAG0b@CG'7tHCh$R>4"_Wk$O6b8
eGt1$JcLB&eGp']#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG5HL6G7Sk?FDu&+=@tY-+;P=i!s61:
JcLB&JcP-;%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMcfGO0MaG'7tHCh$R>4"_Wk$O6b8r;_EL
JcLB&XT/h5#7D4c.Q9js?YOFuG';tklZW_ZFE;D=Chdp.FEMcQG7Sk?FDu&+=@tY-+;P=i!s7TbJcLB&
JcN^h%KcqD'HAS]7oWi0DfKrDcZ]A3$?U?.DJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%R!.k3&!.k4*
!"K)9$PXR12b-hSBlA!7G0b@?F`_\DDJX',E--5Golo/7%sE,<E,9#d8inXJ((1?L!k85^!.k3&!:g+"
!s]2J*%Em;<*s?XEHZNOG7/P8F)Z#5C2e-6F`uVcnokUfG'%\>@ou>b/g(o;#6P%$!.k3&!/^a]!s]2J
*%Em;##nrDDfKrDcZ]b>FE;D=Chdp.FEMcQG6`;7FDu&+=@rf[/g(o;#6P$b!.k3&!20B&!s]2J*%Em;
<*s?XEHZNqGMdTPF`_\DDJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%u!.k3&!8%:'!9!nf!s]2J*%Em;
<*s?XEHZNOG7/P8F)Z#5C2e-6Fa!4tiHGfUG'%\>@ou>b/g(o;#6P%5!.k3&!.k4G!"K)9$PXR12b-hS
BlA!7G0b@?F`_\DDJX',E--5GfQ[+7%sE,<E,9#d8inXJ((1?L!h01A!.k34!"B#8$PXR12b-hSBlA!7
!-Z\4$[$Q4E,KK,E,]oAG0b@AG'7tHCh$R>4"_Wk$O6\7!e^Q*!.k3K!"K)9$PXR12b-hSBlA!7G3aA6
G7/P8F)Z#5C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!pfo=!.k3&!58FC!s]2J*%Em;<*s?XEHZNTGPlXm
F`_\DDJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%X!.k3&!.k4$!"K)9$PXR12b-hSBlA!7G0b@?F`_\D
DJX',E--5GqfgS7%sE,<E,9#d8inXJ((1?L!knYd!.k3&!:0[q!s]2J*%Em;<*s?XEHZNOG7/P8F)Z#5
C2e-6F`uhilurt`G'%\>@ou>b/g(o;#6P&+!.k3&!.k3Q!"K)9$PXR12b-hSBlA!7G3*r6G7/P8F)Z#5
C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!p0K7!.k3&!5njI!s]2J*%Em;<*s?XEHZNOG5uamFE;D=Chdp.
FEMcQG7Sk?FDu&+=@tY-+;P=i!s6dKJcLB&JcOO*%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMd"
GM@<PG'7tHCh$R>4"_Wk$O6b8\,_*\JcLB&nc0.%#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG2@H6
G7Sk?FDu&+=@tY-+;P=i!s5.rJcLB&M?!k`#7D4c.Q9j%<*s?XEHZNOG7/P8F)Z#5C2e-6F`u)T#Bk94
E,9#d8d@F1+;P=i!s4>[JcLB&T`>Q)#7D4c.Q9js?YOFuG'<D"hffHNFE;D=Chdp.FEMcQG7Sk?FDu&+
=@tY-+;P=i!s8#nJcLB&fDpL'i;a>i#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG40Y6G7Sk?FDu&+
=@tY-+;P=i!s5b.JcLB&JcPQG%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMcZGPH@mG'7tHCh$R>
4"_Wk$O6b8RfJ$?JcLl4%0HhC'HAS]7oWi0DfKq#G0b@?F`_\DDJX',E--5GcZ]hAG'%\>@ou>b/g(o;
#6=o.KE-T(JcM\K%KcqD'HAS]7oWi0DfKrDlZ_H7$[$Q4E,KK,E,]oAG0b@CG'7tHCh$R>4"_Wk$O6b8
li;V;JcLB&^&SWF#7D4c.Q9js?YOFuG';AZr-&NkFE;D=Chdp.FEMcQG7Sk?FDu&+=@tY-+;P=i!s7!Q
JcLB&JcO=$%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMd(GL^mJG'7tHCh$R>4"_Wk$O6b8^&W`b
JcLB&li7Lt#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG3!l6G7Sk?FDu&+=@tY-+;P=i!s8E$JcLB&
JcMnQ%KcqD'HAS]7oWi0DfKrDj`g$7$[$Q4E,KK,E,]oAG0b@CG'7tHCh$R>4"_Wk$O6b8joBu5JcLB&
_uL8L#7D4c.Q9js?YOFuG';2U!-JWjF)Z#5C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!m^ju!.k3&!8@J`
!s]2J*%Em;<*s?XEHZNOG7/P8F)Z#5C2e-6Fa!G%gNO0OG'%\>@ou>b/g(o;#6P%;!.k3&!.k4A!"K)9
$PXR12b-hSBlA!7G0b@?F`_\DDJX',E--5GhKSO7%sE,<E,9#d8inXJ((1?L!hfUG!.k3.!!`T2$PXR1
2b+'O?YOFuG';2U$[$Q4E,KK,E,]oAG0b@;G'7tHCh$R>#<OO\((1?L!f?u0!.k3E!"K)9$PXR12b-hS
BlA!7G4Be6G7/P8F)Z#5C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!qH>C!.k4'!.k40!"K)9$PXR12b-hS
BlA!7G0b@?F`_\DDJX',E--5Gms!`7%sE,<E,9#d8inXJ((1?L!jVfX!.k3&!;HO(!s]2J*%Em;<*s?X
EHZNOG7/P8F)Z#5C2e-6F`uD]pid6lG'%\>@ou>b/g(o;#6P$s!.k3&!0@0i!s]2J*%Em;<*s?XEHV>*
cZ]b>FE;D=Chdp.FEMcQG7A_=FDu&+=@tY-+;P=i!<WCV!.k3&!2ff,!s]2J*%Em;<*s?XEHZNkGNF#V
F`_\DDJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%o!.k3&!.k3b!"K)9$PXR12b-hSBlA!7G1:a6G7/P8
F)Z#5C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!n@:&!.k3&!7_&Z!s]2J*%Em;<*s?XEHZNOG7/P8F)Z#5
C2e-6Fa!Y+eTVOIG'%\>@ou>b/g(o;#6P%A!.k3&!.k4;!"K)9$PXR12b-hSBlA!7G0b@?F`_\DDJX',
E--5GjEKs7%sE,<E,9#d8inXJ((1?L!rW+N!.k3&!3H52!s]2J*%Em;<*s?XEHZNeGO'G\F`_\DDJX',
E--5GcZ]nCG'%\>@ou>b/g(o;#6P%i!.k3&!.k3h!"K)9$PXR12b-hSBlA!7G0b@4FUE53E,KK,E,]oA
G0b@CG'7tHCh$R>4"_Wk$O6b8cN&OsJcLB&gAh]c#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG4g(6
G7Sk?FDu&+=@tY-+;P=i!s5t4JcLB&JcP?A%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMc`GOfqg
G'7tHCh$R>4"_Wk$O6b8T`BZEJcLZ.#6P2='HAS]7g;q"BlA!7G0b@?F`_\DDJX',E--5GcZ]V;G'%\>
@ou>.4"_Wk$O6b8M?&5.JcMJE%KcqD'HAS]7oWi0DfKrDnTWl7$[$Q4E,KK,E,]oAG0b@CG'7tHCh$R>
4"_Wk$O6b8nc47AJcOF'JcOa0%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMcqGN!`VG'7tHCh$R>
4"_Wk$O6b8Z2fIVJcLB&p](d+#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG1_$6G7Sk?FDu&+=@tY-
+;P=i!s4qlJcLB&O8o^l#7D4c.Q9js?YOFuFoZ^3G7/P8F)Z#5C2e-6F`u)T%<co:E,9#d8inXJ((1?J
!s4,UJcLB&VZ72/#7D4c.Q9js?YOFuG'<1qj`_)TFE;D=Chdp.FEMcQG7Sk?FDu&+=@tY-+;P=i!s7fh
JcLB&JcNLb%KcqD'HAS]7oWi0DfKrDe9Ch7$[$Q4E,KK,E,]oAG0b@CG'7tHCh$R>4"_Wk$O6b8eGt1$
JcLB&eGp']#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG5HL6G7Sk?FDu&+=@tY-+;P=i!s61:JcLB&
JcP-;%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMcfGO0MaG'7tHCh$R>4"_Wk$O6b8r;_ELJcLB&
XT/h5#7D4c.Q9js?YOFuG';tklZW_ZFE;D=Chdp.FEMcQG7Sk?FDu&+=@tY-+;P=i!s7TbJcLB&JcN^h
%KcqD'HAS]7oWi0DfKrDcZ]A3$?U?.DJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%R!.k3&!.k4*!"K)9
$PXR12b-hSBlA!7G0b@?F`_\DDJX',E--5Golo/7%sE,<E,9#d8inXJ((1?L!k85^!.k3&!:g+"!s]2J
*%Em;<*s?XEHZNOG7/P8F)Z#5C2e-6F`uVcnokUfG'%\>@ou>b/g(o;#6P%$!.k3&!/^a]!s]2J*%Em;
##nrDDfKrDcZ]b>FE;D=Chdp.FEMcQG6`;7FDu&+=@rf[/g(o;#6P$b!.k3&!20B&!s]2J*%Em;<*s?X
EHZNqGMdTPF`_\DDJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%u!.k3&!8%:'!9!nf!s]2J*%Em;<*s?X
EHZNOG7/P8F)Z#5C2e-6Fa!4tiHGfUG'%\>@ou>b/g(o;#6P%5!.k3&!.k4G!"K)9$PXR12b-hSBlA!7
G0b@?F`_\DDJX',E--5GfQ[+7%sE,<E,9#d8inXJ((1?L!h01A!.k34!"B#8$PXR12b-hSBlA!7!-Z\4
$[$Q4E,KK,E,]oAG0b@AG'7tHCh$R>4"_Wk$O6\7!e^Q*!.k3K!"K)9$PXR12b-hSBlA!7G3aA6G7/P8
F)Z#5C2e-6F`u)T%sE,<E,9#d8inXJ((1?L!pfo=!.k3&!58FC!s]2J*%Em;<*s?XEHZNTGPlXmF`_\D
DJX',E--5GcZ]nCG'%\>@ou>b/g(o;#6P%X!.k3&!.k4$!"K)9$PXR12b-hSBlA!7G0b@?F`_\DDJX',
E--5GqfgS7%sE,<E,9#d8inXJ((1?L!knYd!.k3&!:0[q!s]2J*%Em;<*s?XEHZNOG7/P8F)Z#5C2e-6
F`uhilurt`G'%\>@ou>b/g(o;#6P&+!.k3&!.k3Q!"K)9$PXR12b-hSBlA!7G3*r6G7/P8F)Z#5C2e-6
F`u)T%sE,<E,9#d8inXJ((1?L!p0K7!.k3&!5njI!s]2J*%Em;<*s?XEHZNOG5uamFE;D=Chdp.FEMcQ
G7Sk?FDu&+=@tY-+;P=i!s6dKJcLB&JcOO*%KcqD'HAS]7oWi0DfKrDcZ]b>FE;D=Chdp.FEMd"GM@<P
G'7tHCh$R>4"_Wk$O6b8\,_*\JcLB&nc0.%#7D4c.Q9js?YOFuG';2U$[$Q4E,KK,E,]oAG2@H6G7Sk?
FDu&+=@tY-+;P=i!s5.rJcLB&M?!k`#7D4c.Q9j%<*s?XEHZNOG7/P8F)Z#5C2e-6F`u)T#Bk94E,9#d
8d@F1+;P=i!s4>[JcLB&T`>Q)#7D4c.Q9js?YOFuG'<D"hffHNFE;D=Chdp.FEMcQG7Sk?FDu&+=@tY-
+;P=i!s8#nJcLB&fDpL'i;a;h#7D4c.Q9gq?>+4rFjP:BGBS+MF)Pr2C2\$3F`hnPnTNf5%<HH&@TQ/`
/g(o;#6P%5!.k3&!.k4G!"K)9$PXU02b$_PBPh^1FjP:BFEMYEDf'0&DJsN:FEVeLgNN@8%s;u6DJEW^
8NSLH((1?L!h01A!.k34!"B#8$POL-2FLGJA86"%!-->+$ZU6*C2%?oC2@g.FO,";EH,o6BjXk13\)<e
$O6\7!e^Q*!.k3K!"B#8$5"7*2*t)B@VBRpl>Pg'%;p-%BkV0jA85gnDJsL@D\$`'D.mEa;FWYp*>Akd
!s7fhJcLB&JcNLb%0Hb@&/QTI4\JaZ@V'6%C&VfWC2%?o@q8tR?=RMYBP;-qcY3i"@pN/05rBr.'FG'I
!rW+L~>

%%EndBinary
grestore
np
125.905 187.153 mo
176.905 187.153 li
176.905 153.153 li
125.905 153.153 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 73.0947 211.31 ]ct
[51 0 0 34 52.8107 24.1573 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 153 
/H 102 
/M[153 0 0 -102 0 102 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcMqR%fuh<%29p:4%`UaC2e9<G3*r6G78Y;FE)8:D/aE8FE_uUG7Je<E,9&f90FmM(C^WR!p0K7
!.k3&!6"pK!WrZ:'Heth8m#P;E--8HcZ]A4$[$Q2E,BH2Dfg)FGgCRDG'%\>A6DPg/g(r>#R(:U!.k3&
!.k4+!"T,5#7V@i/NZR,@VTk(G';2U%!Hc8EH#c3E,Ti?GBih*g34$MFDu&,=\Cn1+;YIm"Tl16JcLB&
JcPBB%fuh<%29p:4%`UaC2e9<G0b@@G'.nHE,BH2Dfg)FGi*`8G7Je<E,9&f90FmM(C^WR!hfUG!.k3/
!!iW.#7V@i/NZQ/=CQ#aFEViRG78Y;FE)8:D/aE8FE_uUG6W54E,9&f9*[U4+;YIm"TjP]JcLB&U&Y]*
!s]8L+>#ZI=CQ#aFEVitGMdTQG'.nHE,BH2Dfg)FGgCRDG'%\>A6DPg/g(r>#R(;#!.k3&!8%:'!9*th
!WrZ:'Heth8m#P;E--8HcZ]e@F`_VBD/F61FED_On9<f7%X)r5Ch-[A4Y@in%1!+=Z2fIVJcLB&q#Cp,
!s]8L+>#ZI=CQ#aFEViRG78Y;FE)8:D/aE8FE_u_GP?:kG'%\>A6DPg/g(r>#R(:!!.k3&!0I6k!WrZ:
'Heth8m#P;E--7'G0b@@G'.nHE,BH2Dfg)FGgCRBG'%\>A6DPg/g(r>#QY)1KE-T(JcM_L%fuh<%29p:
4%`UaC2e9<G3aA6G78Y;FE)8:D/aE8FE_uUG7Je<E,9&f90FmM(C^WR!pfo=!.k3&!5ALE!WrZ:'Heth
8m#P;E--8He9Ch7%!Hc8EH#c3E,Ti?GBhGX%X)r5Ch-[A4Y@in%1!+=eGt1$JcLB&ec63^!s]8L+>#ZI
=CQ#aFEViRG78Y;FE)8:D/aE8FE`!-GLUgHG'%\>A6DPg/g(r>#R(:D!.k3&!.k4<!"T,5#7V@i/NZR,
@VTk(G';2U%!Hc8EH#c3E,Ti?GBi4nlZWh^FDu&,=\Cn1+;YIm"TnW&JcLB&JcMqR%fuh<%29p:4%`Ua
C2e9<G3*r6G78Y;FE)8:D/aE8FE_uUG7Je<E,9&f90FmM(C^WR!p0K7!.k3&!6"pK!WrZ:'Heth8m#P;
E--8HcZ]A4$[$Q2E,BH2Dfg)FGgCRDG'%\>A6DPg/g(r>#R(:U!.k3&!.k4+!"T,5#7V@i/NZR,@VTk(
G';2U%!Hc8EH#c3E,Ti?GBih*g34$MFDu&,=\Cn1+;YIm"Tl16JcLB&JcPBB%fuh<%29p:4%`UaC2e9<
G0b@@G'.nHE,BH2Dfg)FGi*`8G7Je<E,9&f90FmM(C^WR!hfUG!.k3/!!iW.#7V@i/NZQ/=CQ#aFEViR
G78Y;FE)8:D/aE8FE_uUG6W54E,9&f9*[U4+;YIm"TjP]JcLB&U&Y]*!s]8L+>#ZI=CQ#aFEVitGMdTQ
G'.nHE,BH2Dfg)FGgCRDG'%\>A6DPg/g(r>#R(;#!.k3&!8%:'!9*th!WrZ:'Heth8m#P;E--8HcZ]e@
F`_VBD/F61FED_On9<f7%X)r5Ch-[A4Y@in%1!+=Z2fIVJcLB&q#Cp,!s]8L+>#ZI=CQ#aFEViRG78Y;
FE)8:D/aE8FE_u_GP?:kG'%\>A6DPg/g(r>#R(:!!.k3&!0I6k!WrZ:'Heth8m#P;E--7'G0b@@G'.nH
E,BH2Dfg)FGgCRBG'%\>A6DPg/g(r>#QY)1KE-T(JcM_L%fuh<%29p:4%`UaC2e9<G3aA6G78Y;FE)8:
D/aE8FE_uUG7Je<E,9&f90FmM(C^WR!pfo=!.k3&!5ALE!WrZ:'Heth8m#P;E--8He9Ch7%!Hc8EH#c3
E,Ti?GBhGX%X)r5Ch-[A4Y@in%1!+=eGt1$JcLB&ec63^!s]8L+>#ZI=CQ#aFEViRG78Y;FE)8:D/aE8
FE`!-GLUgHG'%\>A6DPg/g(r>#R(:D!.k3&!.k4<!"T,5#7V@i/NZR,@VTk(G';2U%!Hc8EH#c3E,Ti?
GBi4nlZWh^FDu&,=\Cn1+;YIm"TnW&JcLB&JcMqR%fuh<%29p:4%`UaC2e9<G3*r6G78Y;FE)8:D/aE8
FE_uUG7Je<E,9&f90FmM(C^WR!p0K7!.k3&!6"pK!WrZ:'Heth8m#P;E--8HcZ]A4$[$Q2E,BH2Dfg)F
GgCRDG'%\>A6DPg/g(r>#R(:U!.k3&!.k4+!"T,5#7V@i/NZR,@VTk(G';2U%!Hc8EH#c3E,Ti?GBih*
g34$MFDu&,=\Cn1+;YIm"Tl16JcLB&JcPBB%fuh<%29p:4%`UaC2e9<G0b@@G'.nHE,BH2Dfg)FGi*`8
G7Je<E,9&f90FmM(C^WR!hfUG!.k3/!!iW.#7V@i/NZQ/=CQ#aFEViRG78Y;FE)8:D/aE8FE_uUG6W54
E,9&f9*[U4+;YIm"TjP]JcLB&U&Y]*!s]8L+>#ZI=CQ#aFEVitGMdTQG'.nHE,BH2Dfg)FGgCRDG'%\>
A6DPg/g(r>#R(;#!.k3&!8%:'!9*th!WrZ:'Heth8m#P;E--8HcZ]e@F`_VBD/F61FED_On9<f7%X)r5
Ch-[A4Y@in%1!+=Z2fIVJcLB&q#Cp,!s]8L+>#ZI=CQ#aFEViRG78Y;FE)8:D/aE8FE_u_GP?:kG'%\>
A6DPg/g(r>#R(:!!.k3&!0I6k!WrZ:'Heth8m#P;E--7'G0b@@G'.nHE,BH2Dfg)FGgCRBG'%\>A6DPg
/g(r>#QY)1KE-T(JcM_L%fuh<%29p:4%`UaC2e9<G3aA6G78Y;FE)8:D/aE8FE_uUG7Je<E,9&f90FmM
(C^WR!pfo=!.k3&!5ALE!WrZ:'Heth8m#P;E--8He9Ch7%!Hc8EH#c3E,Ti?GBhGX%X)r5Ch-[A4Y@in
%1!+=eGt1$JcLB&ec63^!s]8L+>#ZI=CQ#aFEViRG78Y;FE)8:D/aE8FE`!-GLUgHG'%\>A6DPg/g(r>
#R(:D!.k3&!.k4<!"T,5#7V@i/NZR,@VTk(G';2U%!Hc8EH#c3E,Ti?GBi4nlZWh^FDu&,=\Cn1+;YIm
"TnW&JcLB&JcMqR%fuh<%29p:4%`UaC2e9<G3*r6G78Y;FE)8:D/aE8FE_uUG7Je<E,9&f90FmM(C^WR
!p0K7!.k3&!6"pK!WrZ:'Heth8m#P;E--8HcZ]A4$[$Q2E,BH2Dfg)FGgCRDG'%\>A6DPg/g(r>#R(:U
!.k3&!.k4+!"T,5#7V@i/NZR,@VTk(G';2U%!Hc8EH#c3E,Ti?GBih*g34$MFDu&,=\Cn1+;YIm"Tl16
JcLB&JcPBB%fuh<%29p:4%`UaC2e9<G0b@@G'.nHE,BH2Dfg)FGi*`8G7Je<E,9&f90FmM(C^WR!hfUG
!.k3/!!iW.#7V@i/NZQ/=CQ#aFEViRG78Y;FE)8:D/aE8FE_uUG6W54E,9&f9*[U4+;YIm"TjP]JcLB&
U&Y]*!s]8L+>#ZI=CQ#aFEVitGMdTQG'.nHE,BH2Dfg)FGgCRDG'%\>A6DPg/g(r>#R(;#!.k3&!8%:'
!9*th!WrZ:'Heth8m#P;E--8HcZ]e@F`_VBD/F61FED_On9<f7%X)r5Ch-[A4Y@in%1!+=Z2fIVJcLB&
q#Cp,!s]8L+>#ZI=CQ#aFEViRG78Y;FE)8:D/aE8FE_u_GP?:kG'%\>A6DPg/g(r>#R(:!!.k3&!0I6k
!WrZ:'Heth8m#P;E--7'G0b@@G'.nHE,BH2Dfg)FGgCRBG'%\>A6DPg/g(r>#QY)1KE-T(JcM_L%fuh<
%29p:4%`UaC2e9<G3aA6G78Y;FE)8:D/aE8FE_uUG7Je<E,9&f90FmM(C^WR!pfo=!.k3&!5ALE!WrZ:
'Heth8m#P;E--8He9Ch7%!Hc8EH#c3E,Ti?GBhGX%X)r5Ch-[A4Y@in%1!+=eGt1$JcLB&ec63^!s]8L
+>#ZI=CQ#aFEViRG78Y;FE)8:D/aE8FE`!-GLUgHG'%\>A6DPg/g(r>#R(:D!.k3&!.k4<!"T,5#7V@i
/NZR,@VTk(G';2U%!Hc8EH#c3E,Ti?GBi4nlZWh^FDu&,=\Cn1+;YIm"TnW&JcLB&JcMqR%fuh<%29p:
4%`UaC2e9<G3*r6G78Y;FE)8:D/aE8FE_uUG7Je<E,9&f90FmM(C^WR!p0K7!.k3&!6"pK!WrZ:'Heth
8m#P;E--8HcZ]A4$[$Q2E,BH2Dfg)FGgCRDG'%\>A6DPg/g(r>#R(:U!.k3&!.k4+!"T,5#7V@i/NZR,
@VTk(G';2U%!Hc8EH#c3E,Ti?GBih*g34$MFDu&,=\Cn1+;YIm"Tl16JcLB&JcPBB%fuh<%29p:4%`Ua
C2e9<G0b@@G'.nHE,BH2Dfg)FGi*`8G7Je<E,9&f90FmM(C^WR!hfUG!.k3/!!iW.#7V@i/NZQ/=CQ#a
FEViRG78Y;FE)8:D/aE8FE_uUG6W54E,9&f9*[U4+;YIm"TjP]JcLB&U&Y]*!s]8L+>#ZI=CQ#aFEVit
GMdTQG'.nHE,BH2Dfg)FGgCRDG'%\>A6DPg/g(r>#R(;#!.k3&!8%:'!9*th!WrZ:'Heth8m#P;E--8H
cZ]e@F`_VBD/F61FED_On9<f7%X)r5Ch-[A4Y@in%1!+=Z2fIVJcLB&q#Cp,!s]8L+>#ZI=CQ#aFEViR
G78Y;FE)8:D/aE8FE_u_GP?:kG'%\>A6DPg/g(r>#R(:!!.k3&!0I6k!WrZ:'Heth8m#P;E--7'G0b@@
G'.nHE,BH2Dfg)FGgCRBG'%\>A6DPg/g(r>#QY)1KE-T(JcM_L%fuh<%29p:4%`UaC2e9<G3aA6G78Y;
FE)8:D/aE8FE_uUG7Je<E,9&f90FmM(C^WR!pfo=!.k3&!5ALE!WrZ:'Heth8m#P;E--8He9Ch7%!Hc8
EH#c3E,Ti?GBhGX%X)r5Ch-[A4Y@in%1!+=eGt1$JcLB&ec63^!s]8L+>#ZI=CQ#aFEViRG78Y;FE)8:
D/aE8FE`!-GLUgHG'%\>A6DPg/g(r>#R(:D!.k3&!.k4<!"T,5#7V@i/NZR,@VTk(G';2U%!Hc8EH#c3
E,Ti?GBi4nlZWh^FDu&,=\Cn1+;YIm"TnW&JcLB&JcMqR%fuh<%29p:4%`UaC2e9<G3*r6G78Y;FE)8:
D/aE8FE_uUG7Je<E,9&f90FmM(C^WR!p0K7!.k3&!6"pK!WrZ:'Heth8m#P;E--8HcZ]A4$[$Q2E,BH2
Dfg)FGgCRDG'%\>A6DPg/g(r>#R(:U!.k3&!.k4+!"T,5#7V@i/NZR,@VTk(G';2U%!Hc8EH#c3E,Ti?
GBih*g34$MFDu&,=\Cn1+;YIm"Tl16JcLB&JcPBB%fuh<%29p:4%`UaC2e9<G0b@@G'.nHE,BH2Dfg)F
Gi*`8G7Je<E,9&f90FmM(C^WR!hfUG!.k3/!!iW.#7V@i/NZQ/=CQ#aFEViRG78Y;FE)8:D/aE8FE_uU
G6W54E,9&f9*[U4+;YIm"TjP]JcLB&U&Y]*!s]8L+>#ZI=CQ#aFEVitGMdTQG'.nHE,BH2Dfg)FGgCRD
G'%\>A6DPg/g(r>#R(;#!.k3&!8%:'!9*th!WrZ:'Heth8m#P;E--8HcZ]e@F`_VBD/F61FED_On9<f7
%X)r5Ch-[A4Y@in%1!+=Z2fIVJcLB&q#Cp,!s]8L+>#ZI=CQ#aFEViRG78Y;FE)8:D/aE8FE_u_GP?:k
G'%\>A6DPg/g(r>#R(:!!.k3&!0I6k!WrZ:'Heth8m#P;E--7'G0b@@G'.nHE,BH2Dfg)FGgCRBG'%\>
A6DPg/g(r>#QY)1KE-T(JcM_L%fuh<%29p:4%`UaC2e9<G3aA6G78Y;FE)8:D/aE8FE_uUG7Je<E,9&f
90FmM(C^WR!pfo=!.k3&!5ALE!WrZ:'Heth8m#P;E--8He9Ch7%!Hc8EH#c3E,Ti?GBhGX%X)r5Ch-[A
4Y@in%1!+=eGt1$JcLB&ec63^!s]8L+>#ZI=CQ#aFEViRG78Y;FE)8:D/aE8FE`!-GLUgHG'%\>A6DPg
/g(r>#R(:D!.k3&!.k4<!"T,5#7V@i/NZR,@VTk(G';2U%!Hc8EH#c3E,Ti?GBi4nlZWh^FDu&,=\Cn1
+;YIm"TnW&JcLB&JcMqR%fuh<%29p:4%`UaC2e9<G3*r6G78Y;FE)8:D/aE8FE_uUG7Je<E,9&f90FmM
(C^WR!p0K7!.k3&!6"pK!WrZ:'Heth8m#P;E--8HcZ]A4$[$Q2E,BH2Dfg)FGgCRDG'%\>A6DPg/g(r>
#R(:U!.k3&!.k4+!"T,5#7V@i/NZR,@VTk(G';2U%!Hc8EH#c3E,Ti?GBih*g34$MFDu&,=\Cn1+;YIm
"Tl16JcLB&JcPBB%fuh<%29p:4%`UaC2e9<G0b@@G'.nHE,BH2Dfg)FGi*`8G7Je<E,9&f90FmM(C^WR
!hfUG!.k3/!!iW.#7V@i/NZQ/=CQ#aFEViRG78Y;FE)8:D/aE8FE_uUG6W54E,9&f9*[U4+;YIm"TjP]
JcLB&U&Y]*!s]8L+>#ZI=CQ#aFEVitGMdTQG'.nHE,BH2Dfg)FGgCRDG'%\>A6DPg/g(r>#R(;#!.k3&
!8%:'!9*th!WrZ:'Heth8m#P;E--8HcZ]e@F`_VBD/F61FED_On9<f7%X)r5Ch-[A4Y@in%1!+=Z2fIV
JcLB&q#Cp,!s]8L+>#ZI=CQ#aFEViRG78Y;FE)8:D/aE8FE_u_GP?:kG'%\>A6DPg/g(r>#R(:!!.k3&
!0I6k!WrZ:'Heth8m#P;E--7'G0b@@G'.nHE,BH2Dfg)FGgCRBG'%\>A6DPg/g(r>#QY)1KE-T(JcM_L
%fuh<%29p:4%`UaC2e9<G3aA6G78Y;FE)8:D/aE8FE_uUG7Je<E,9&f90FmM(C^WR!pfo=!.k3&!5ALE
!WrZ:'Heth8m#P;E--8He9Ch7%!Hc8EH#c3E,Ti?GBhGX%X)r5Ch-[A4Y@in%1!+=eGt1$JcLB&ec63^
!s]8L+>#ZI=CQ#aFEViRG78Y;FE)8:D/aE8FE`!-GLUgHG'%\>A6DPg/g(r>#R(:D!.k3&!.k4<!"T,5
#7V@i/NZR,@VTk(G';2U%!Hc8EH#c3E,Ti?GBi4nlZWh^FDu&,=\Cn1+;YIm"TnW&JcLB&JcMqR%fuh<
%29p:4%`UaC2e9<G3*r6G78Y;FE)8:D/aE8FE_uUG7Je<E,9&f90FmM(C^WR!p0K7!.k3&!6"pK!WrZ:
'Heth8m#P;E--8HcZ]A4$[$Q2E,BH2Dfg)FGgCRDG'%\>A6DPg/g(r>#R(:U!.k3&!.k4+!"T,5#7V@i
/NZR,@VTk(G';2U%!Hc8EH#c3E,Ti?GBih*g34$MFDu&,=\Cn1+;YIm"Tl16JcLB&JcPBB%fuh<%29p:
4%`UaC2e9<G0b@@G'.nHE,BH2Dfg)FGi*`8G7Je<E,9&f90FmM(C^WR!hfUG!.k3/!!iW.#7V@i/NZQ/
=CQ#aFEViRG78Y;FE)8:D/aE8FE_uUG6W54E,9&f9*[U4+;YIm"TjP]JcLB&U&Y]*!s]8L+>#ZI=CQ#a
FEVitGMdTQG'.nHE,BH2Dfg)FGgCRDG'%\>A6DPg/g(r>#R(;#!.k3&!8%:'!9*tf!WrZ:'Heth8loD8
Dfj<K%sN5?FEDJ?D/F30F)uMLGO]k6Fq&M3C1C@=4Y@in%1!+=Z2fIVJcLB&q#Cp,!s]8L+>#WH=(#`\
EHH<NFqAe=G'.nJE,KK.DJsT;F`qo]G5$.iFE)24@ou>b/g(r>#R(:!!.k3&!0I6k!WrZ:'-8Va7o`o/
D/aRCEt3;7F)c/:D/!a%DK'T:FO,":EH#`-?s#u]/Kbf<#QY)1KE-T(JcM_L%fuh<$POR22apYKA8,q!
DsMB(E"$Z'D.mWrC1h3sDJsL?D[pZ$C1COK7QDt?((CNQ!pfo=!.k3&!5ALE!WrZ7'-&AX6;CTgA8#^l
e8"qs%W-#pB4PO\A7K1^Bk_BucY3i"A6rA66o-;5'+5$I!rW+L~>

%%EndBinary
grestore
np
50.9053 187.153 mo
101.905 187.153 li
101.905 153.153 li
50.9053 153.153 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 73.0947 211.31 ]ct
[51 0 0 34 -22.1893 24.1573 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 153 
/H 102 
/M[153 0 0 -102 0 102 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcMqR%fun>%hp-<4%`UaC2e<=G3*r8G6N/6F`_P=rb;XSDfKoBGBVAX%sE,;DJ<KY7li+?'Fb3J
!p0K7!.k3&!6"pK!X/f>'Heth8m#P;E-6>Id<>Y8GBEt/Df,Jg#&S9uF`hnOd<?+EG&qP8?r]]X.NK34
"TnhP!.k3&!.k4+!"T,7#7hLk/NZR,@VTk)G';8W"a5*4FDl$qC'JNnEHQDJG5$48G7Sk?F)G]"<C])"
*>Aqd!s5t4JcLB&JcPBB%fun>%hp-<4%`UaC2e<=G0tL;G'A(NDf,Jg#&S9uF`hnOi-4a9%sE,;DJ<KY
7li+?'Fb3J!hfUG!.k3/!!iW0#7hLk/NZQ/=CQ#aF`qrUG6N/6F`_P=rb;XSDfKoBGBVAX#Bk93DJ<KY
7gD()*>Aqd!s4>[JcLB&U&Y]*"U>PP+>#ZI=CQ#aF`qruGN!`LG'A(NDf,Jg#&S9uF`hnOd<?+EG&qP8
?r]]X.NK34"Tnhs!.k3&!8%:'!9*th!X/f>'Heth8m#P;E-6>Id<>b;GBJ"GD>n8SD/XE:Fa&$!GN!`V
G'7qEBjaq23[u-a%0Zh8Z2fIVJcLB&q#Cp,"U>PP+>#ZI=CQ#aF`qrUG6N/6F`_P=rb;XSDfKoBGBV\a
pid6lG&qP8?r]]X.NK34"Tngq!.k3&!0I6k!X/f>'Heth8m#P;E-6=(G0tL;G'A(NDf,Jg#&S9uF`hnO
d<?%CG&qP8?r]]X.NK34"T\],KE-T(JcM_L%fun>%hp-<4%`UaC2e<=G3aA8G6N/6F`_P=rb;XSDfKoB
GBVAX%sE,;DJ<KY7li+?'Fb3J!pfo=!.k3&!5ALE!X/f>'Heth8m#P;E-6>Ie9Cn9"a5*4FDl$qC'JNn
EHQDJG0tLEG'7qEBjaq23[u-a%0Zh8eGt1$JcLB&ec63^"U>PP+>#ZI=CQ#aF`qrUG6N/6F`_P=rb;XS
DfKoBGBWq/eTVOIG&qP8?r]]X.NK34"Tnh?!.k3&!.k4<!"T,7#7hLk/NZR,@VTk)G';8W"a5*4FDl$q
C'JNnEHQDJG34#8G7Sk?F)G]"<C])"*>Aqd!s8E$JcLB&JcMqR%fun>%hp-<4%`UaC2e<=G3*r8G6N/6
F`_P=rb;XSDfKoBGBVAX%sE,;DJ<KY7li+?'Fb3J!p0K7!.k3&!6"pK!X/f>'Heth8m#P;E-6>Id<>Y8
GBEt/Df,Jg#&S9uF`hnOd<?+EG&qP8?r]]X.NK34"TnhP!.k3&!.k4+!"T,7#7hLk/NZR,@VTk)G';8W
"a5*4FDl$qC'JNnEHQDJG5$48G7Sk?F)G]"<C])"*>Aqd!s5t4JcLB&JcPBB%fun>%hp-<4%`UaC2e<=
G0tL;G'A(NDf,Jg#&S9uF`hnOi-4a9%sE,;DJ<KY7li+?'Fb3J!hfUG!.k3/!!iW0#7hLk/NZQ/=CQ#a
F`qrUG6N/6F`_P=rb;XSDfKoBGBVAX#Bk93DJ<KY7gD()*>Aqd!s4>[JcLB&U&Y]*"U>PP+>#ZI=CQ#a
F`qruGN!`LG'A(NDf,Jg#&S9uF`hnOd<?+EG&qP8?r]]X.NK34"Tnhs!.k3&!8%:'!9*th!X/f>'Heth
8m#P;E-6>Id<>b;GBJ"GD>n8SD/XE:Fa&$!GN!`VG'7qEBjaq23[u-a%0Zh8Z2fIVJcLB&q#Cp,"U>PP
+>#ZI=CQ#aF`qrUG6N/6F`_P=rb;XSDfKoBGBV\apid6lG&qP8?r]]X.NK34"Tngq!.k3&!0I6k!X/f>
'Heth8m#P;E-6=(G0tL;G'A(NDf,Jg#&S9uF`hnOd<?%CG&qP8?r]]X.NK34"T\],KE-T(JcM_L%fun>
%hp-<4%`UaC2e<=G3aA8G6N/6F`_P=rb;XSDfKoBGBVAX%sE,;DJ<KY7li+?'Fb3J!pfo=!.k3&!5ALE
!X/f>'Heth8m#P;E-6>Ie9Cn9"a5*4FDl$qC'JNnEHQDJG0tLEG'7qEBjaq23[u-a%0Zh8eGt1$JcLB&
ec63^"U>PP+>#ZI=CQ#aF`qrUG6N/6F`_P=rb;XSDfKoBGBWq/eTVOIG&qP8?r]]X.NK34"Tnh?!.k3&
!.k4<!"T,7#7hLk/NZR,@VTk)G';8W"a5*4FDl$qC'JNnEHQDJG34#8G7Sk?F)G]"<C])"*>Aqd!s8E$
JcLB&JcMqR%fun>%hp-<4%`UaC2e<=G3*r8G6N/6F`_P=rb;XSDfKoBGBVAX%sE,;DJ<KY7li+?'Fb3J
!p0K7!.k3&!6"pK!X/f>'Heth8m#P;E-6>Id<>Y8GBEt/Df,Jg#&S9uF`hnOd<?+EG&qP8?r]]X.NK34
"TnhP!.k3&!.k4+!"T,7#7hLk/NZR,@VTk)G';8W"a5*4FDl$qC'JNnEHQDJG5$48G7Sk?F)G]"<C])"
*>Aqd!s5t4JcLB&JcPBB%fun>%hp-<4%`UaC2e<=G0tL;G'A(NDf,Jg#&S9uF`hnOi-4a9%sE,;DJ<KY
7li+?'Fb3J!hfUG!.k3/!!iW0#7hLk/NZQ/=CQ#aF`qrUG6N/6F`_P=rb;XSDfKoBGBVAX#Bk93DJ<KY
7gD()*>Aqd!s4>[JcLB&U&Y]*"U>PP+>#ZI=CQ#aF`qruGN!`LG'A(NDf,Jg#&S9uF`hnOd<?+EG&qP8
?r]]X.NK34"Tnhs!.k3&!8%:'!9*th!X/f>'Heth8m#P;E-6>Id<>b;GBJ"GD>n8SD/XE:Fa&$!GN!`V
G'7qEBjaq23[u-a%0Zh8Z2fIVJcLB&q#Cp,"U>PP+>#ZI=CQ#aF`qrUG6N/6F`_P=rb;XSDfKoBGBV\a
pid6lG&qP8?r]]X.NK34"Tngq!.k3&!0I6k!X/f>'Heth8m#P;E-6=(G0tL;G'A(NDf,Jg#&S9uF`hnO
d<?%CG&qP8?r]]X.NK34"T\],KE-T(JcM_L%fun>%hp-<4%`UaC2e<=G3aA8G6N/6F`_P=rb;XSDfKoB
GBVAX%sE,;DJ<KY7li+?'Fb3J!pfo=!.k3&!5ALE!X/f>'Heth8m#P;E-6>Ie9Cn9"a5*4FDl$qC'JNn
EHQDJG0tLEG'7qEBjaq23[u-a%0Zh8eGt1$JcLB&ec63^"U>PP+>#ZI=CQ#aF`qrUG6N/6F`_P=rb;XS
DfKoBGBWq/eTVOIG&qP8?r]]X.NK34"Tnh?!.k3&!.k4<!"T,7#7hLk/NZR,@VTk)G';8W"a5*4FDl$q
C'JNnEHQDJG34#8G7Sk?F)G]"<C])"*>Aqd!s8E$JcLB&JcMqR%fun>%hp-<4%`UaC2e<=G3*r8G6N/6
F`_P=rb;XSDfKoBGBVAX%sE,;DJ<KY7li+?'Fb3J!p0K7!.k3&!6"pK!X/f>'Heth8m#P;E-6>Id<>Y8
GBEt/Df,Jg#&S9uF`hnOd<?+EG&qP8?r]]X.NK34"TnhP!.k3&!.k4+!"T,7#7hLk/NZR,@VTk)G';8W
"a5*4FDl$qC'JNnEHQDJG5$48G7Sk?F)G]"<C])"*>Aqd!s5t4JcLB&JcPBB%fun>%hp-<4%`UaC2e<=
G0tL;G'A(NDf,Jg#&S9uF`hnOi-4a9%sE,;DJ<KY7li+?'Fb3J!hfUG!.k3/!!iW0#7hLk/NZQ/=CQ#a
F`qrUG6N/6F`_P=rb;XSDfKoBGBVAX#Bk93DJ<KY7gD()*>Aqd!s4>[JcLB&U&Y]*"U>PP+>#ZI=CQ#a
F`qruGN!`LG'A(NDf,Jg#&S9uF`hnOd<?+EG&qP8?r]]X.NK34"Tnhs!.k3&!8%:'!9*th!X/f>'Heth
8m#P;E-6>Id<>b;GBJ"GD>n8SD/XE:Fa&$!GN!`VG'7qEBjaq23[u-a%0Zh8Z2fIVJcLB&q#Cp,"U>PP
+>#ZI=CQ#aF`qrUG6N/6F`_P=rb;XSDfKoBGBV\apid6lG&qP8?r]]X.NK34"Tngq!.k3&!0I6k!X/f>
'Heth8m#P;E-6=(G0tL;G'A(NDf,Jg#&S9uF`hnOd<?%CG&qP8?r]]X.NK34"T\],KE-T(JcM_L%fun>
%hp-<4%`UaC2e<=G3aA8G6N/6F`_P=rb;XSDfKoBGBVAX%sE,;DJ<KY7li+?'Fb3J!pfo=!.k3&!5ALE
!X/f>'Heth8m#P;E-6>Ie9Cn9"a5*4FDl$qC'JNnEHQDJG0tLEG'7qEBjaq23[u-a%0Zh8eGt1$JcLB&
ec63^"U>PP+>#ZI=CQ#aF`qrUG6N/6F`_P=rb;XSDfKoBGBWq/eTVOIG&qP8?r]]X.NK34"Tnh?!.k3&
!.k4<!"T,7#7hLk/NZR,@VTk)G';8W"a5*4FDl$qC'JNnEHQDJG34#8G7Sk?F)G]"<C])"*>Aqd!s8E$
JcLB&JcMqR%fun>%hp-<4%`UaC2e<=G3*r8G6N/6F`_P=rb;XSDfKoBGBVAX%sE,;DJ<KY7li+?'Fb3J
!p0K7!.k3&!6"pK!X/f>'Heth8m#P;E-6>Id<>Y8GBEt/Df,Jg#&S9uF`hnOd<?+EG&qP8?r]]X.NK34
"TnhP!.k3&!.k4+!"T,7#7hLk/NZR,@VTk)G';8W"a5*4FDl$qC'JNnEHQDJG5$48G7Sk?F)G]"<C])"
*>Aqd!s5t4JcLB&JcPBB%fun>%hp-<4%`UaC2e<=G0tL;G'A(NDf,Jg#&S9uF`hnOi-4a9%sE,;DJ<KY
7li+?'Fb3J!hfUG!.k3/!!iW0#7hLk/NZQ/=CQ#aF`qrUG6N/6F`_P=rb;XSDfKoBGBVAX#Bk93DJ<KY
7gD()*>Aqd!s4>[JcLB&U&Y]*"U>PP+>#ZI=CQ#aF`qruGN!`LG'A(NDf,Jg#&S9uF`hnOd<?+EG&qP8
?r]]X.NK34"Tnhs!.k3&!8%:'!9*th!X/f>'Heth8m#P;E-6>Id<>b;GBJ"GD>n8SD/XE:Fa&$!GN!`V
G'7qEBjaq23[u-a%0Zh8Z2fIVJcLB&q#Cp,"U>PP+>#ZI=CQ#aF`qrUG6N/6F`_P=rb;XSDfKoBGBV\a
pid6lG&qP8?r]]X.NK34"Tngq!.k3&!0I6k!X/f>'Heth8m#P;E-6=(G0tL;G'A(NDf,Jg#&S9uF`hnO
d<?%CG&qP8?r]]X.NK34"T\],KE-T(JcM_L%fun>%hp-<4%`UaC2e<=G3aA8G6N/6F`_P=rb;XSDfKoB
GBVAX%sE,;DJ<KY7li+?'Fb3J!pfo=!.k3&!5ALE!X/f>'Heth8m#P;E-6>Ie9Cn9"a5*4FDl$qC'JNn
EHQDJG0tLEG'7qEBjaq23[u-a%0Zh8eGt1$JcLB&ec63^"U>PP+>#ZI=CQ#aF`qrUG6N/6F`_P=rb;XS
DfKoBGBWq/eTVOIG&qP8?r]]X.NK34"Tnh?!.k3&!.k4<!"T,7#7hLk/NZR,@VTk)G';8W"a5*4FDl$q
C'JNnEHQDJG34#8G7Sk?F)G]"<C])"*>Aqd!s8E$JcLB&JcMqR%fun>%hp-<4%`UaC2e<=G3*r8G6N/6
F`_P=rb;XSDfKoBGBVAX%sE,;DJ<KY7li+?'Fb3J!p0K7!.k3&!6"pK!X/f>'Heth8m#P;E-6>Id<>Y8
GBEt/Df,Jg#&S9uF`hnOd<?+EG&qP8?r]]X.NK34"TnhP!.k3&!.k4+!"T,7#7hLk/NZR,@VTk)G';8W
"a5*4FDl$qC'JNnEHQDJG5$48G7Sk?F)G]"<C])"*>Aqd!s5t4JcLB&JcPBB%fun>%hp-<4%`UaC2e<=
G0tL;G'A(NDf,Jg#&S9uF`hnOi-4a9%sE,;DJ<KY7li+?'Fb3J!hfUG!.k3/!!iW0#7hLk/NZQ/=CQ#a
F`qrUG6N/6F`_P=rb;XSDfKoBGBVAX#Bk93DJ<KY7gD()*>Aqd!s4>[JcLB&U&Y]*"U>PP+>#ZI=CQ#a
F`qruGN!`LG'A(NDf,Jg#&S9uF`hnOd<?+EG&qP8?r]]X.NK34"Tnhs!.k3&!8%:'!9*th!X/f>'Heth
8m#P;E-6>Id<>b;GBJ"GD>n8SD/XE:Fa&$!GN!`VG'7qEBjaq23[u-a%0Zh8Z2fIVJcLB&q#Cp,"U>PP
+>#ZI=CQ#aF`qrUG6N/6F`_P=rb;XSDfKoBGBV\apid6lG&qP8?r]]X.NK34"Tngq!.k3&!0I6k!X/f>
'Heth8m#P;E-6=(G0tL;G'A(NDf,Jg#&S9uF`hnOd<?%CG&qP8?r]]X.NK34"T\],KE-T(JcM_L%fun>
%hp-<4%`UaC2e<=G3aA8G6N/6F`_P=rb;XSDfKoBGBVAX%sE,;DJ<KY7li+?'Fb3J!pfo=!.k3&!5ALE
!X/f>'Heth8m#P;E-6>Ie9Cn9"a5*4FDl$qC'JNnEHQDJG0tLEG'7qEBjaq23[u-a%0Zh8eGt1$JcLB&
ec63^"U>PP+>#ZI=CQ#aF`qrUG6N/6F`_P=rb;XSDfKoBGBWq/eTVOIG&qP8?r]]X.NK34"Tnh?!.k3&
!.k4<!"T,7#7hLk/NZR,@VTk)G';8W"a5*4FDl$qC'JNnEHQDJG34#8G7Sk?F)G]"<C])"*>Aqd!s8E$
JcLB&JcMqR%fun>%hp-<4%`UaC2e<=G3*r8G6N/6F`_P=rb;XSDfKoBGBVAX%sE,;DJ<KY7li+?'Fb3J
!p0K7!.k3&!6"pK!X/f>'Heth8m#P;E-6>Id<>Y8GBEt/Df,Jg#&S9uF`hnOd<?+EG&qP8?r]]X.NK34
"TnhP!.k3&!.k4+!"T,7#7hLk/NZR,@VTk)G';8W"a5*4FDl$qC'JNnEHQDJG5$48G7Sk?F)G]"<C])"
*>Aqd!s5t4JcLB&JcPBB%fun>%hp-<4%`UaC2e<=G0tL;G'A(NDf,Jg#&S9uF`hnOi-4a9%sE,;DJ<KY
7li+?'Fb3J!hfUG!.k3/!!iW0#7hLk/NZQ/=CQ#aF`qrUG6N/6F`_P=rb;XSDfKoBGBVAX#Bk93DJ<KY
7gD()*>Aqd!s4>[JcLB&U&Y]*"U>PP+>#ZI=CQ#aF`qruGN!`LG'A(NDf,Jg#&S9uF`hnOd<?+EG&qP8
?r]]X.NK34"Tnhs!.k3&!8%:'!9*th!X/f>'Heth8m#P;E-6>Id<>b;GBJ"GD>n8SD/XE:Fa&$!GN!`V
G'7qEBjaq23[u-a%0Zh8Z2fIVJcLB&q#Cp,"U>PP+>#ZI=CQ#aF`qrUG6N/6F`_P=rb;XSDfKoBGBV\a
pid6lG&qP8?r]]X.NK34"Tngq!.k3&!0I6k!X/f>'Heth8m#P;E-6=(G0tL;G'A(NDf,Jg#&S9uF`hnO
d<?%CG&qP8?r]]X.NK34"T\],KE-T(JcM_L%fun>%hp-<4%`UaC2e<=G3aA8G6N/6F`_P=rb;XSDfKoB
GBVAX%sE,;DJ<KY7li+?'Fb3J!pfo=!.k3&!5ALE!X/f>'Heth8m#P;E-6>Ie9Cn9"a5*4FDl$qC'JNn
EHQDJG0tLEG'7qEBjaq23[u-a%0Zh8eGt1$JcLB&ec63^"U>PP+>#ZI=CQ#aF`qrUG6N/6F`_P=rb;XS
DfKoBGBWq/eTVOIG&qP8?r]]X.NK34"Tnh?!.k3&!.k4<!"T,7#7hLk/NZR,@VTk)G';8W"a5*4FDl$q
C'JNnEHQDJG34#8G7Sk?F)G]"<C])"*>Aqd!s8E$JcLB&JcMqR%fun>%hp-<4%`UaC2e<=G3*r8G6N/6
F`_P=rb;XSDfKoBGBVAX%sE,;DJ<KY7li+?'Fb3J!p0K7!.k3&!6"pK!X/f>'Heth8m#P;E-6>Id<>Y8
GBEt/Df,Jg#&S9uF`hnOd<?+EG&qP8?r]]X.NK34"TnhP!.k3&!.k4+!"T,7#7hLk/NZR,@VTk)G';8W
"a5*4FDl$qC'JNnEHQDJG5$48G7Sk?F)G]"<C])"*>Aqd!s5t4JcLB&JcPBB%fun>%hp-<4%`UaC2e<=
G0tL;G'A(NDf,Jg#&S9uF`hnOi-4a9%sE,;DJ<KY7li+?'Fb3J!hfUG!.k3/!!iW0#7hLk/NZQ/=CQ#a
F`qrUG6N/6F`_P=rb;XSDfKoBGBVAX#Bk93DJ<KY7gD()*>Aqd!s4>[JcLB&U&Y]*"U>PP+>#ZI=CQ#a
F`qruGN!`LG'A(NDf,Jg#&S9uF`hnOd<?+EG&qP8?r]]X.NK34"Tnhs!.k3&!8%:'!9*tf!X/f>'Heth
8loD7E-9HL%!Qi8DJX'&Bl.a,FER%qi-#TQEG]Ds<CT#!*>Aqd!s5b.JcLB&JcPTH%fun>%hp-:4%WL]
BlA!5FjY@9F`__FDJ];d#&J0rF*)PIg3377%s;u6D.m9U7QMq<'Fb3J!h01A!.k35!"K&6#7hLi.lg+!
?YF:qF3en:FDu2:C1V'iBkhL(EHBEF$Z9ck>uF-M-QEg0"T\],KE-T(JcM_L%fun>%29j32b$\MA85t!
DsMB*E"?i*Des*"A7T7_BkVC&DJdd>%rQ6$BOb1A68g22'+4sG!pfo=!.k3&!5ALC!X/f:',i5S6;CWi
A8'D+r+ZRPBOY@V?X@,MA7a#"%VTB^>ZFE\0dR\L$3LA3r;_?~>

%%EndBinary
grestore
np
55.0993 146.928 mo
76.5383 146.928 li
76.5383 186.456 li
55.0993 186.456 li
cp
level3{
gsave
clp
[9.99999e-05 0 0 9.99999e-05 55.0994 146.928 ]ct
/0 
<<
/ShadingType 2 
/BBox [-1.02445 1.11759 214388 395280 ] 
/ColorSpace /0 /CSA get_res
/Coords [136137 0 136137 502010 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ZqLH"ZqLH"ZqLH"ZqLH"ZqLH"ZqLH"ZqLH"Zq^T$Zq^T$Zq^T$Zq^T$Zq^T$Zq^T$Zq^T$ZqgZ%[8-c&
[8?o([8Hu)[Sd)*[T!8-[T!;.[oEM1\5i\3\5ib5\QB"8\QB%9\QK+:\lo:<\m#F?]3GUA]3G[C]NkjE
]NtsG]jD0J]jM9L]jM?N^1%TQ^L@`S^LIiU^h",Y^gn,Z_.F>\_.FA]_IjS`_J'_b_J'ed_eL"g`+p4j
`,$=l`GQUp`GQXq`bujt`c)t!a)N1$a)W7%a)W='aE/R*aE/U+aEAa-a`es0a`f$2b'><6bBYK9b^1c=
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.99999e-05 0 0 9.99999e-05 55.0994 146.928 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa@*H['[3I
['[3I['[6K[C*EM[C*EM[C*HO[^NZS\$riU\$rlW\@B&Y\@B&Y\@B)[\[f8]\[f;_]"5Ja]"5Mc]=Y\e
]=Y\f]Y(ni]Y(ni]Y(nj]tM+n^:q=q^:q=r^V@Ou^V@P!^qdb$^qdb%_83t(_83t(_83t)_SX1-_o'C0
_o'C0`5KU4`5KU4`Pog8`Pog8`l?$<`l?$<`l?$<a2c6@a2c6@a2c6@aN2HDaN2HDaiVZHb0%lLbKJ)P
~>
<~91qoN91qoN91qoN91qoN91qoN91qoN92&#R9he>V9he>V9he>V9he>V9he>V9he>V9hnGY:/4PZ:/=Y^
:f("d;,L1f;,L4h;c?Un;c?Xp<)cjt<E3%!<E3(#='&I)='&L+=BJ^/=]np3>$>-7>?b<9>?b?;>[1Q?
?!U`B?=$rF?XI/I?XI/J?t!JP@:<SR@U`eV@q9+\A7T4]A7]=`AS#FbAnGXfB4tslBP;'nBk_9rC2.L!
CMR^$Ci!s*D/F-,DJj?0Df9Q4E,]c8EH,u<EH,u<EcQ5BF)uDDFEDYJG'8%PG'8%PGB\:VG^+IXH$O^^
~>
<~zzzzzzzzzzzzzzzzzzz!!!$#!<E6'!WiE)!WiH+"9\i1"9\l3"U,&5"U,&5"U,)7#6tJ=#6tM?#mgnE#
mgqG$47+J$O[=N$k*OR%1WjX%LrsZ%hB0^&.fBb&J5Tf&ebol',)#m',)#n'GM5q'GM5r'c%Q$(Ddl)(
`4)-)&X;0)B'M4)]K_8*#oq<*??.@*Zc@D*Zc@D+!2UJ+<VdL+X&!P+X&!P+sJ3T,9nHZ,pai`-71)f-
n$Jl~>
0 ]
>>
136137 0 136137 502010 [-1.02445 1.11759 214388 395280 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
130.135 115.127 mo
151.574 115.127 li
151.574 186.456 li
130.135 186.456 li
cp
level3{
gsave
clp
[9.99999e-05 0 0 9.99999e-05 130.136 115.127 ]ct
/1 
<<
/ShadingType 2 
/BBox [-2.04891 1.11759 214387 713291 ] 
/ColorSpace /0 /CSA get_res
/Coords [136137 0 136137 905882 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ZqLH"ZqLH"ZqLH"ZqLH"ZqLH"ZqLH"ZqLH"Zq^T$Zq^T$Zq^T$Zq^T$Zq^T$Zq^T$Zq^T$ZqgZ%[8-c&
[8?o([8Hu)[Sd)*[T!8-[T!;.[oEM1\5i\3\5ib5\QB"8\QB%9\QK+:\lo:<\m#F?]3GUA]3G[C]NkjE
]NtsG]jD0J]jM9L]jM?N^1%TQ^L@`S^LIiU^h",Y^gn,Z_.F>\_.FA]_IjS`_J'_b_J'ed_eL"g`+p4j
`,$=l`GQUp`GQXq`bujt`c)t!a)N1$a)W7%a)W='aE/R*aE/U+aEAa-a`es0a`f$2b'><6bBYK9b^1c=
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.99999e-05 0 0 9.99999e-05 130.136 115.127 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa@*H['[3I
['[3I['[6K[C*EM[C*EM[C*HO[^NZS\$riU\$rlW\@B&Y\@B&Y\@B)[\[f8]\[f;_]"5Ja]"5Mc]=Y\e
]=Y\f]Y(ni]Y(ni]Y(nj]tM+n^:q=q^:q=r^V@Ou^V@P!^qdb$^qdb%_83t(_83t(_83t)_SX1-_o'C0
_o'C0`5KU4`5KU4`Pog8`Pog8`l?$<`l?$<`l?$<a2c6@a2c6@a2c6@aN2HDaN2HDaiVZHb0%lLbKJ)P
~>
<~91qoN91qoN91qoN91qoN91qoN91qoN92&#R9he>V9he>V9he>V9he>V9he>V9he>V9hnGY:/4PZ:/=Y^
:f("d;,L1f;,L4h;c?Un;c?Xp<)cjt<E3%!<E3(#='&I)='&L+=BJ^/=]np3>$>-7>?b<9>?b?;>[1Q?
?!U`B?=$rF?XI/I?XI/J?t!JP@:<SR@U`eV@q9+\A7T4]A7]=`AS#FbAnGXfB4tslBP;'nBk_9rC2.L!
CMR^$Ci!s*D/F-,DJj?0Df9Q4E,]c8EH,u<EH,u<EcQ5BF)uDDFEDYJG'8%PG'8%PGB\:VG^+IXH$O^^
~>
<~zzzzzzzzzzzzzzzzzzz!!!$#!<E6'!WiE)!WiH+"9\i1"9\l3"U,&5"U,&5"U,)7#6tJ=#6tM?#mgnE#
mgqG$47+J$O[=N$k*OR%1WjX%LrsZ%hB0^&.fBb&J5Tf&ebol',)#m',)#n'GM5q'GM5r'c%Q$(Ddl)(
`4)-)&X;0)B'M4)]K_8*#oq<*??.@*Zc@D*Zc@D+!2UJ+<VdL+X&!P+X&!P+sJ3T,9nHZ,pai`-71)f-
n$Jl~>
0 ]
>>
136137 0 136137 905882 [-2.04891 1.11759 214387 713291 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
205.171 106.211 mo
226.61 106.211 li
226.61 186.457 li
205.171 186.457 li
cp
level3{
gsave
clp
[9.99999e-05 0 0 9.99999e-05 205.172 106.21 ]ct
/2 
<<
/ShadingType 2 
/BBox [-4.09782 2.98023 214386 802463 ] 
/ColorSpace /0 /CSA get_res
/Coords [136137 0 136137 1019118 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ZqLH"ZqLH"ZqLH"ZqLH"ZqLH"ZqLH"ZqLH"Zq^T$Zq^T$Zq^T$Zq^T$Zq^T$Zq^T$Zq^T$ZqgZ%[8-c&
[8?o([8Hu)[Sd)*[T!8-[T!;.[oEM1\5i\3\5ib5\QB"8\QB%9\QK+:\lo:<\m#F?]3GUA]3G[C]NkjE
]NtsG]jD0J]jM9L]jM?N^1%TQ^L@`S^LIiU^h",Y^gn,Z_.F>\_.FA]_IjS`_J'_b_J'ed_eL"g`+p4j
`,$=l`GQUp`GQXq`bujt`c)t!a)N1$a)W7%a)W='aE/R*aE/U+aEAa-a`es0a`f$2b'><6bBYK9b^1c=
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.99999e-05 0 0 9.99999e-05 205.172 106.21 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa@*H['[3I
['[3I['[6K[C*EM[C*EM[C*HO[^NZS\$riU\$rlW\@B&Y\@B&Y\@B)[\[f8]\[f;_]"5Ja]"5Mc]=Y\e
]=Y\f]Y(ni]Y(ni]Y(nj]tM+n^:q=q^:q=r^V@Ou^V@P!^qdb$^qdb%_83t(_83t(_83t)_SX1-_o'C0
_o'C0`5KU4`5KU4`Pog8`Pog8`l?$<`l?$<`l?$<a2c6@a2c6@a2c6@aN2HDaN2HDaiVZHb0%lLbKJ)P
~>
<~91qoN91qoN91qoN91qoN91qoN91qoN92&#R9he>V9he>V9he>V9he>V9he>V9he>V9hnGY:/4PZ:/=Y^
:f("d;,L1f;,L4h;c?Un;c?Xp<)cjt<E3%!<E3(#='&I)='&L+=BJ^/=]np3>$>-7>?b<9>?b?;>[1Q?
?!U`B?=$rF?XI/I?XI/J?t!JP@:<SR@U`eV@q9+\A7T4]A7]=`AS#FbAnGXfB4tslBP;'nBk_9rC2.L!
CMR^$Ci!s*D/F-,DJj?0Df9Q4E,]c8EH,u<EH,u<EcQ5BF)uDDFEDYJG'8%PG'8%PGB\:VG^+IXH$O^^
~>
<~zzzzzzzzzzzzzzzzzzz!!!$#!<E6'!WiE)!WiH+"9\i1"9\l3"U,&5"U,&5"U,)7#6tJ=#6tM?#mgnE#
mgqG$47+J$O[=N$k*OR%1WjX%LrsZ%hB0^&.fBb&J5Tf&ebol',)#m',)#n'GM5q'GM5r'c%Q$(Ddl)(
`4)-)&X;0)B'M4)]K_8*#oq<*??.@*Zc@D*Zc@D+!2UJ+<VdL+X&!P+X&!P+sJ3T,9nHZ,pai`-71)f-
n$Jl~>
0 ]
>>
136137 0 136137 1019118 [-4.09782 2.98023 214386 802463 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
280.207 169.119 mo
301.646 169.119 li
301.646 186.456 li
280.207 186.456 li
cp
level3{
gsave
clp
[9.99999e-05 0 0 9.99999e-05 280.208 169.119 ]ct
/3 
<<
/ShadingType 2 
/BBox [-4.84288 -1.86265 214385 173368 ] 
/ColorSpace /0 /CSA get_res
/Coords [136137 0 136137 220180 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ZqLH"ZqLH"ZqLH"ZqLH"ZqLH"ZqLH"ZqLH"Zq^T$Zq^T$Zq^T$Zq^T$Zq^T$Zq^T$Zq^T$ZqgZ%[8-c&
[8?o([8Hu)[Sd)*[T!8-[T!;.[oEM1\5i\3\5ib5\QB"8\QB%9\QK+:\lo:<\m#F?]3GUA]3G[C]NkjE
]NtsG]jD0J]jM9L]jM?N^1%TQ^L@`S^LIiU^h",Y^gn,Z_.F>\_.FA]_IjS`_J'_b_J'ed_eL"g`+p4j
`,$=l`GQUp`GQXq`bujt`c)t!a)N1$a)W7%a)W='aE/R*aE/U+aEAa-a`es0a`f$2b'><6bBYK9b^1c=
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.99999e-05 0 0 9.99999e-05 280.208 169.119 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa@*H['[3I
['[3I['[6K[C*EM[C*EM[C*HO[^NZS\$riU\$rlW\@B&Y\@B&Y\@B)[\[f8]\[f;_]"5Ja]"5Mc]=Y\e
]=Y\f]Y(ni]Y(ni]Y(nj]tM+n^:q=q^:q=r^V@Ou^V@P!^qdb$^qdb%_83t(_83t(_83t)_SX1-_o'C0
_o'C0`5KU4`5KU4`Pog8`Pog8`l?$<`l?$<`l?$<a2c6@a2c6@a2c6@aN2HDaN2HDaiVZHb0%lLbKJ)P
~>
<~91qoN91qoN91qoN91qoN91qoN91qoN92&#R9he>V9he>V9he>V9he>V9he>V9he>V9hnGY:/4PZ:/=Y^
:f("d;,L1f;,L4h;c?Un;c?Xp<)cjt<E3%!<E3(#='&I)='&L+=BJ^/=]np3>$>-7>?b<9>?b?;>[1Q?
?!U`B?=$rF?XI/I?XI/J?t!JP@:<SR@U`eV@q9+\A7T4]A7]=`AS#FbAnGXfB4tslBP;'nBk_9rC2.L!
CMR^$Ci!s*D/F-,DJj?0Df9Q4E,]c8EH,u<EH,u<EcQ5BF)uDDFEDYJG'8%PG'8%PGB\:VG^+IXH$O^^
~>
<~zzzzzzzzzzzzzzzzzzz!!!$#!<E6'!WiE)!WiH+"9\i1"9\l3"U,&5"U,&5"U,)7#6tJ=#6tM?#mgnE#
mgqG$47+J$O[=N$k*OR%1WjX%LrsZ%hB0^&.fBb&J5Tf&ebol',)#m',)#n'GM5q'GM5r'c%Q$(Ddl)(
`4)-)&X;0)B'M4)]K_8*#oq<*??.@*Zc@D*Zc@D+!2UJ+<VdL+X&!P+X&!P+sJ3T,9nHZ,pai`-71)f-
n$Jl~>
0 ]
>>
136137 0 136137 220180 [-4.84288 -1.86265 214385 173368 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
76.5383 75.5988 mo
97.9773 75.5988 li
97.9773 186.457 li
76.5383 186.457 li
cp
level3{
gsave
clp
[9.99999e-05 0 0 9.99999e-05 76.5383 75.5983 ]ct
/4 
<<
/ShadingType 2 
/BBox [0 3.72529 214389 1.10858e+06 ] 
/ColorSpace /0 /CSA get_res
/Coords [136137 0 136137 1407892 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~*71Yb*71Yb*71Yb*mgeb*m^bb*m^bb*m^bb+4$ea+4$ea+4$ea+3p_`+jQk`+jQk`+jQk`,0lta,L<4e
--rFg-I8Oh-d\dl.+"mm.F>!n/((?s/CCHt/^^Qu0%-g$0@Hp%1"*-'1=NB+1XiK,1t/T-2:Sf02V#&4
2q>/53RtG93S(P;3nCY<4P$k>4kI+B51d7D5hEIF6.iaK6eJsM7+o-O7bYQV8(tZW8_UoZ9&.8`9\dJc
:#*Sd:>Nki:Yitj:u0(k;;T:n;r>Ur<8Yau<Stk!<oD+%=5_4&=l@F(>2d^.>N*g/>iEp1?/j36?K0<8
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.99999e-05 0 0 9.99999e-05 76.5383 75.5983 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~)]K_8)]K_8)]Th<*??.@*??.@*??.@*?H7C*Zc@D*Zc@D*Zc@D*ZlIH+<VdL+<VdL+<_mO+X/*S+sS<X
,U=Z^,palb-71)f-RU;j-n$Mn.Olr!.k</%/1`A)/M/S-/hSe10JG490ekF=1,:XA1G^jE1c.'I2)R9M
2E!HP2`NcV3&ilX3B9)\3]fDc4?P_h4Ztql5!M7s5X7S#5sdn*6UO4/6q'O67Rfj;7n?0B8P)KG8kVfN
9MA,R9he>V:/4PZ:JXb^:f'tb;,L4h;c?Un<)cgr<E3%!<`W7%='&L+=]nm1>$>*5>?b<9>[1N=?!U`A
~>
<~cd0q`cd0q`cd0q`cd0q`cd'h]cHa_\cHa_\cHa_\cHa_\cHa_\cHXVYc-=MXc-=MXc-=MXc-FV[cHa_\
cHa_\cHab^cd0q`cd0q`cd0tbd*U.dd*U.dd*U1fdF$@hdF$@hdF$CjdaHRldaHRldaHUne'lgreC<!t
eC<!teC<!ue^`4#e^`4#e^`4$f%/F'f%/F'f%/F(f@SX+f@SX,f\"j0g"G'3g"G'3g"G'4g=tB:gY:K;
gY:K;gt^]?gt^]?gt^]?h;-oChVR,GhVR,GhVR,Ghr!>Khr!>Khr!>Ki8EPOi8EPOi8EPOiSibSiSibS
~>
<~W2QYnW2QYnW2QYmVl-GjVl-GjVl-GjVl-GiVPU,cV5:#bV5:#bV5:#aUna][USFTZUSFTZUSO]^V5:#b
V5:#bV5:&dVl-GjVl-GjVl-JlWMukrWMukrWMuntX/i;%X/i;%X/i>'Xf\_-Xf\_-Xf\b/Y-+t3Yct@9
Yct@:Z*L[AZa7!EZa7!EZa7!F['d<M[^NWQ[^NWR\@B)[\[f8]\[f8^]=bhj]tM+n^:q=r^VI\%_83t(
_83t(_Sa=1`5KU4`5KU4`Pog8`l?$<a2c6@a2c6@aN2KFaiVZHaiVZHb0%oObfn;Tbfn;Tc-=P[cd0q`
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!<E3%!
WiE)!WiE)!s8W-!s8W-"9\i1~>
]
>>
136137 0 136137 1407892 [0 3.72529 214389 1.10858e+06 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
151.574 23.8847 mo
173.013 23.8847 li
173.013 186.456 li
151.574 186.456 li
cp
level3{
gsave
clp
[9.99999e-05 0 0 9.99999e-05 151.574 23.8845 ]ct
/5 
<<
/ShadingType 2 
/BBox [-.931323 1.49012 214388 1.62571e+06 ] 
/ColorSpace /0 /CSA get_res
/Coords [136137 0 136137 2064657 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~*71Yb*71Yb*71Yb*mgeb*m^bb*m^bb*m^bb+4$ea+4$ea+4$ea+3p_`+jQk`+jQk`+jQk`,0lta,L<4e
--rFg-I8Oh-d\dl.+"mm.F>!n/((?s/CCHt/^^Qu0%-g$0@Hp%1"*-'1=NB+1XiK,1t/T-2:Sf02V#&4
2q>/53RtG93S(P;3nCY<4P$k>4kI+B51d7D5hEIF6.iaK6eJsM7+o-O7bYQV8(tZW8_UoZ9&.8`9\dJc
:#*Sd:>Nki:Yitj:u0(k;;T:n;r>Ur<8Yau<Stk!<oD+%=5_4&=l@F(>2d^.>N*g/>iEp1?/j36?K0<8
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.99999e-05 0 0 9.99999e-05 151.574 23.8845 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~)]K_8)]K_8)]Th<*??.@*??.@*??.@*?H7C*Zc@D*Zc@D*Zc@D*ZlIH+<VdL+<VdL+<_mO+X/*S+sS<X
,U=Z^,palb-71)f-RU;j-n$Mn.Olr!.k</%/1`A)/M/S-/hSe10JG490ekF=1,:XA1G^jE1c.'I2)R9M
2E!HP2`NcV3&ilX3B9)\3]fDc4?P_h4Ztql5!M7s5X7S#5sdn*6UO4/6q'O67Rfj;7n?0B8P)KG8kVfN
9MA,R9he>V:/4PZ:JXb^:f'tb;,L4h;c?Un<)cgr<E3%!<`W7%='&L+=]nm1>$>*5>?b<9>[1N=?!U`A
~>
<~cd0q`cd0q`cd0q`cd0q`cd'h]cHa_\cHa_\cHa_\cHa_\cHa_\cHXVYc-=MXc-=MXc-=MXc-FV[cHa_\
cHa_\cHab^cd0q`cd0q`cd0tbd*U.dd*U.dd*U1fdF$@hdF$@hdF$CjdaHRldaHRldaHUne'lgreC<!t
eC<!teC<!ue^`4#e^`4#e^`4$f%/F'f%/F'f%/F(f@SX+f@SX,f\"j0g"G'3g"G'3g"G'4g=tB:gY:K;
gY:K;gt^]?gt^]?gt^]?h;-oChVR,GhVR,GhVR,Ghr!>Khr!>Khr!>Ki8EPOi8EPOi8EPOiSibSiSibS
~>
<~W2QYnW2QYnW2QYmVl-GjVl-GjVl-GjVl-GiVPU,cV5:#bV5:#bV5:#aUna][USFTZUSFTZUSO]^V5:#b
V5:#bV5:&dVl-GjVl-GjVl-JlWMukrWMukrWMuntX/i;%X/i;%X/i>'Xf\_-Xf\_-Xf\b/Y-+t3Yct@9
Yct@:Z*L[AZa7!EZa7!EZa7!F['d<M[^NWQ[^NWR\@B)[\[f8]\[f8^]=bhj]tM+n^:q=r^VI\%_83t(
_83t(_Sa=1`5KU4`5KU4`Pog8`l?$<a2c6@a2c6@aN2KFaiVZHaiVZHb0%oObfn;Tbfn;Tc-=P[cd0q`
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!<E3%!
WiE)!WiE)!s8W-!s8W-"9\i1~>
]
>>
136137 0 136137 2064657 [-.931323 1.49012 214388 1.62571e+06 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
226.61 41.7167 mo
248.049 41.7167 li
248.049 186.456 li
226.61 186.456 li
cp
level3{
gsave
clp
[9.99999e-05 0 0 9.99999e-05 226.611 41.7169 ]ct
/6 
<<
/ShadingType 2 
/BBox [-2.98023 -1.86265 214386 1.44738e+06 ] 
/ColorSpace /0 /CSA get_res
/Coords [136137 0 136137 1838186 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~*71Yb*71Yb*71Yb*mgeb*m^bb*m^bb*m^bb+4$ea+4$ea+4$ea+3p_`+jQk`+jQk`+jQk`,0lta,L<4e
--rFg-I8Oh-d\dl.+"mm.F>!n/((?s/CCHt/^^Qu0%-g$0@Hp%1"*-'1=NB+1XiK,1t/T-2:Sf02V#&4
2q>/53RtG93S(P;3nCY<4P$k>4kI+B51d7D5hEIF6.iaK6eJsM7+o-O7bYQV8(tZW8_UoZ9&.8`9\dJc
:#*Sd:>Nki:Yitj:u0(k;;T:n;r>Ur<8Yau<Stk!<oD+%=5_4&=l@F(>2d^.>N*g/>iEp1?/j36?K0<8
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.99999e-05 0 0 9.99999e-05 226.611 41.7169 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~)]K_8)]K_8)]Th<*??.@*??.@*??.@*?H7C*Zc@D*Zc@D*Zc@D*ZlIH+<VdL+<VdL+<_mO+X/*S+sS<X
,U=Z^,palb-71)f-RU;j-n$Mn.Olr!.k</%/1`A)/M/S-/hSe10JG490ekF=1,:XA1G^jE1c.'I2)R9M
2E!HP2`NcV3&ilX3B9)\3]fDc4?P_h4Ztql5!M7s5X7S#5sdn*6UO4/6q'O67Rfj;7n?0B8P)KG8kVfN
9MA,R9he>V:/4PZ:JXb^:f'tb;,L4h;c?Un<)cgr<E3%!<`W7%='&L+=]nm1>$>*5>?b<9>[1N=?!U`A
~>
<~cd0q`cd0q`cd0q`cd0q`cd'h]cHa_\cHa_\cHa_\cHa_\cHa_\cHXVYc-=MXc-=MXc-=MXc-FV[cHa_\
cHa_\cHab^cd0q`cd0q`cd0tbd*U.dd*U.dd*U1fdF$@hdF$@hdF$CjdaHRldaHRldaHUne'lgreC<!t
eC<!teC<!ue^`4#e^`4#e^`4$f%/F'f%/F'f%/F(f@SX+f@SX,f\"j0g"G'3g"G'3g"G'4g=tB:gY:K;
gY:K;gt^]?gt^]?gt^]?h;-oChVR,GhVR,GhVR,Ghr!>Khr!>Khr!>Ki8EPOi8EPOi8EPOiSibSiSibS
~>
<~W2QYnW2QYnW2QYmVl-GjVl-GjVl-GjVl-GiVPU,cV5:#bV5:#bV5:#aUna][USFTZUSFTZUSO]^V5:#b
V5:#bV5:&dVl-GjVl-GjVl-JlWMukrWMukrWMuntX/i;%X/i;%X/i>'Xf\_-Xf\_-Xf\b/Y-+t3Yct@9
Yct@:Z*L[AZa7!EZa7!EZa7!F['d<M[^NWQ[^NWR\@B)[\[f8]\[f8^]=bhj]tM+n^:q=r^VI\%_83t(
_83t(_Sa=1`5KU4`5KU4`Pog8`l?$<a2c6@a2c6@aN2KFaiVZHaiVZHb0%oObfn;Tbfn;Tc-=P[cd0q`
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!<E3%!
WiE)!WiE)!s8W-!s8W-"9\i1~>
]
>>
136137 0 136137 1838186 [-2.98023 -1.86265 214386 1.44738e+06 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
301.646 155.497 mo
323.085 155.497 li
323.085 186.456 li
301.646 186.456 li
cp
level3{
gsave
clp
[9.99999e-05 0 0 9.99999e-05 301.647 155.497 ]ct
/7 
<<
/ShadingType 2 
/BBox [-3.72529 -2.98023 214386 309586 ] 
/ColorSpace /0 /CSA get_res
/Coords [136137 0 136137 393178 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~*71Yb*71Yb*71Yb*mgeb*m^bb*m^bb*m^bb+4$ea+4$ea+4$ea+3p_`+jQk`+jQk`+jQk`,0lta,L<4e
--rFg-I8Oh-d\dl.+"mm.F>!n/((?s/CCHt/^^Qu0%-g$0@Hp%1"*-'1=NB+1XiK,1t/T-2:Sf02V#&4
2q>/53RtG93S(P;3nCY<4P$k>4kI+B51d7D5hEIF6.iaK6eJsM7+o-O7bYQV8(tZW8_UoZ9&.8`9\dJc
:#*Sd:>Nki:Yitj:u0(k;;T:n;r>Ur<8Yau<Stk!<oD+%=5_4&=l@F(>2d^.>N*g/>iEp1?/j36?K0<8
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.99999e-05 0 0 9.99999e-05 301.647 155.497 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~)]K_8)]K_8)]Th<*??.@*??.@*??.@*?H7C*Zc@D*Zc@D*Zc@D*ZlIH+<VdL+<VdL+<_mO+X/*S+sS<X
,U=Z^,palb-71)f-RU;j-n$Mn.Olr!.k</%/1`A)/M/S-/hSe10JG490ekF=1,:XA1G^jE1c.'I2)R9M
2E!HP2`NcV3&ilX3B9)\3]fDc4?P_h4Ztql5!M7s5X7S#5sdn*6UO4/6q'O67Rfj;7n?0B8P)KG8kVfN
9MA,R9he>V:/4PZ:JXb^:f'tb;,L4h;c?Un<)cgr<E3%!<`W7%='&L+=]nm1>$>*5>?b<9>[1N=?!U`A
~>
<~cd0q`cd0q`cd0q`cd0q`cd'h]cHa_\cHa_\cHa_\cHa_\cHa_\cHXVYc-=MXc-=MXc-=MXc-FV[cHa_\
cHa_\cHab^cd0q`cd0q`cd0tbd*U.dd*U.dd*U1fdF$@hdF$@hdF$CjdaHRldaHRldaHUne'lgreC<!t
eC<!teC<!ue^`4#e^`4#e^`4$f%/F'f%/F'f%/F(f@SX+f@SX,f\"j0g"G'3g"G'3g"G'4g=tB:gY:K;
gY:K;gt^]?gt^]?gt^]?h;-oChVR,GhVR,GhVR,Ghr!>Khr!>Khr!>Ki8EPOi8EPOi8EPOiSibSiSibS
~>
<~W2QYnW2QYnW2QYmVl-GjVl-GjVl-GjVl-GiVPU,cV5:#bV5:#bV5:#aUna][USFTZUSFTZUSO]^V5:#b
V5:#bV5:&dVl-GjVl-GjVl-JlWMukrWMukrWMuntX/i;%X/i;%X/i>'Xf\_-Xf\_-Xf\b/Y-+t3Yct@9
Yct@:Z*L[AZa7!EZa7!EZa7!F['d<M[^NWQ[^NWR\@B)[\[f8]\[f8^]=bhj]tM+n^:q=r^VI\%_83t(
_83t(_Sa=1`5KU4`5KU4`Pog8`l?$<a2c6@a2c6@aN2KFaiVZHaiVZHb0%oObfn;Tbfn;Tc-=P[cd0q`
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!<E3%!
WiE)!WiE)!s8W-!s8W-"9\i1~>
]
>>
136137 0 136137 393178 [-3.72529 -2.98023 214386 309586 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
.75 lw
0 lc
1 lj
10 ml
[] 0 dsh
false sadj
39.0203 186.456 mo
39.0203 8.13269 li
35.1253 186.413 mo
38.9653 186.413 li
35.1253 156.653 mo
38.9653 156.653 li
35.1253 127.133 mo
38.9653 127.133 li
35.1253 97.3727 mo
38.9653 97.3727 li
35.1253 67.6127 mo
38.9653 67.6127 li
35.1253 37.8527 mo
38.9653 37.8527 li
35.1253 8.09271 mo
38.9653 8.09271 li
39.0203 186.456 mo
339.164 186.456 li
38.9653 186.413 mo
38.9653 190.253 li
114.085 186.413 mo
114.085 190.253 li
189.205 186.413 mo
189.205 190.253 li
264.085 186.413 mo
264.085 190.253 li
339.164 186.413 mo
339.164 190.253 li
0 0 0 .528435 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: IKBBAA+Calibri-Bold-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (IKBBAA+Calibri-Bold)%%Title: (IKBBAA+Calibri-Bold Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /IKBBAA+Calibri-Bold def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-519 -306 1240 971} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 38 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 27 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B7A086528E2CBE7FD4F03CC6CDCA18E09BCC917FA5F119478AAC0A696931453BF661861F40ACE8D15EA0278E8F88478BB0248E8D19042FB8B7F2BB2D4ECFE961B3EEB80565197E481D427DFF375EC95F16C0E36FE28AEC2A0702F6CB5ACA5B242B6593847C74B58C6FBE25BCF0D4AFF25D49578CAB0D929B025DECF86FE8C45E91FC3804785896842CEEC7085BA98EF5BCC94B208BF43A5FA51448171853E476E618A0AB76D0CDCEE51B8CF3FCD6DA051824D7EFC40D8D270BAD39624CE3E5CBFE64B165BA24EF48FCEC82F8DEB8BFCD829A07FF03FFE381E622BF0967DB53309A79D2F393F52C4B535EC59CAFAAC152061A92D31A3A6E83C18D63056F4453027EAA702C494809677EB8C59BD219046DE492EABC7DF19D085C93C98D2A8DDC68AF0F5D7D82447ED6165A8DE95E6965A0F15A3F7696EAE508CE290FD5B2FFA8A49A20B157645C3C3FEFBC64E2B40E75B90474094AF1599689FA1EAB0D131F6DB991FC0D5943DE54CA9E5ECDA986A63CDF0394AF79DB398CE8AC4F02FDBD88EE6AE535CFB6C3B33C157AAFFBEC52BA3DACE77ABDA0C787220FBA75DA1E45C945> |29 <001C60D8A8C9B7A0860A02375EDEDD4B53D17A6E79CB47DCB01EF19DB7A17FB70BDFF9A49464016C001FB522D45E3EFFA17A18DCBFF30F4820AE571E6DB2E16F72068A6833FAEDDEF4AF544DFE46B677A3A3ACDFF9FD1FB9414376ACF8673D478271A3E0DFB27C7BDC6133DF9D66BD4579CB6039BDD5546AD4EC9143F1F0E818B6A03276209D7847983C329F221397D8BC572EE275A33034AE7843F5985B587CDA785D73A015F55104DF68C9492D16DEA139D494CC98C93DB3BF898002000855E8733D765C13149555B90CBECB8496813F6942A2FA8D0AD6207312F76D5DEE425017D18E06918177317B55E74D5C5D25D9261B3368F60B8FDE5D882656AE11D2C5F508E5E21641F9D6DC9B7E8B49F75ED4BC> |24 <001C60D8A8C9B861542ACEB5970022C0864D11AE4C87632B2DD396DA6358319B6D48D24425E7DE63E8FD4F9DF677EDF905EBA25E0DA26076BBE99D168D3CC7084C557F52EE1767B3> |1 <001C60D8A8C9B888C146> |30 <001C60D8A8C9B7A0860A08766484DD98ACD9B7603C3BEB562EF73D61A05B5DE8017F13F266C92D24BB1BFB1F10862D1ECEF20CD68A682CFB2B6B8C8D4ACC07437E905967E49582EBFB7D7DBEE5AD89B57488088CB90B344312A00E3A768F1A71AA7FE928885ED762CFCBE708040927416AA164E088AD1002EB33FCE0AF46257A3940922440C00BA7E7A7473C8156D179D16C2AD8A140315C11572410BA2D809C47C6FEFFF5CE5397A409F885D7D48F970A3D066B0BEB8881CFFB031485F28034B9C01B50982B8B5CF88D481078410E6E5527A96584B5B0D98325924A95F3E8ECEF6BE4ED4F2334D96E1E4275648EF87EA38AF46A8563DFEB52852B798D29CF4419BFAEF5> |31 <001C60D8A8C9B7A0860A0EABD9400A203C0BC1A5DA368E9E998E0B8DFECE44E9CDA80B2A9156DDEE01D94924039067B0EBEE89E707F0C7E81E175152A255458897E28D6D1C63A21BFE52338B6A4CB2C7EFA79566D393541F308F5E6159D842E8F2B0CE06BB26E8AAE901B76E088EC1FC8508B1132911DF431CEFF3DE44408C131AF2DD2A856BAA76CA7781D18F52F223D6EE0BE75D73C555CCEF9C7E98DD7449C09CB5D689089C953CA8E834F0D56FCE9A1AA220B6BE5EE66037CB030FC8E88D8336874EBB6E974774A4032C9E1DB67038C0F79304FA745C905064F74A04320BE4F370F5AB7EE2E6DCB7C946F8A858DD91B9047D4FE706AAE892A8990AA4240AF731C1ABAE1214C1790721563568202772ECE78CA68486C9E907412F9639E30EB479F7DF38B462C9DD18FDE52A830A2F5A52C3479F990AC97100D4ED79D22FDE0B6FF134388DBEC60F18330783B61E8BF1E45334615DCD56B38EDB46D75389210C72C07C5D2A8AF965BE1FCF70> |32 <001C60D8A8C9B7A0860A3274AB1A8C1F49BF686CD2C1588BDC12CC820704CF19D93C93C231E993B0B75DC6AA86C65F44B2D0E19F264466DEA64687CC83E492AD2653D9403FB4E73C98A50E7BEF1F3DE8326D2F81FDE2A365C00515D32A4A06C7728D5D1DBF07485A2AC33D5A448BE60805214AED6C9DFF66018E03297A9977A108BAF3BA46AF1E2726D76A28AB404CBF2996ED989FC3B982A75012D45D889D0BD5E25F7EB84D1F899584CA6E0D9A8DBD48180DF16723056C328C60BB57667DE84A7E110FF3EA013552E5C19AE0B4CB12A049A3FA8B009D36175AF78E872DB0FB0953F22DB0364210C2246FD82B94CDAF9C70C175B26BD3AF581784B364FFF437E9DF97AF409899E727F1F9325BB31DE0CF61A837EA863EA32DC8AAF9EA58EA9B5EFB890161658FE328355A173F1C330FB938C137A2F8804B5B4990F71A1B91D6E81E49E460896B5E30898C8F10CAD8F8112A6528DB540F81AAE760CE56BA07107956FD5D421FD7706900715BD0757BE7BC2C0CC772143A149382E58C90F410BEA5B39AA768DE4894A2A08B831325095342DEC0E965759A93905EE212B4F4D18C5B4836F243B2A92A820185C98633C2BAABBCB6A1A74D00EC0B5B68A08B009313209F5C177FC125FD2095A52C3B59AE7CC0D91B6230C77AA175EDA5F2EE19F2D9214627D7784BD5F29E05FE9FDD00973B02BD25D214007CC7A1EB6B8E2FD7232B> |33 <001C60D8A8C9B7A0860A1D63BBAFE81208885E2DA4FE3D9951802C980B93B8AE43E5E49D1113B36E9037348BD862EAA193D480DB2BEE688EE29F136DF749165B30D02B14B6A85F4072BC72AC91C5F534C7866B7807237891E48D6110512222E5667BA704890CB9C22D99031A3EC367B3DC2EAE8A6D98E683A246839ED0E7A56F129B494DD22C6F55AAD0040BC46F44EB4C5C27934076CA4738F2D23F3A8F1C93C5095BB125B5166E1509F3425920C39CFC6F4EE0C82F6232328BDF3848A9137D5B179043C0545723DD04B2E452ACE61D852CA860CB2D24B82C9ACBC8DB8BBC946376DB6098DE5C43CA01A738EBE1DAE66212F0B5FF9BE4B5> |34 <001C60D8A8C9B7A0860A3B32EE7CC88F3E462190B777700E29B1FD855B472089857A844A36ADAE410192011D385C5CF1642B32F4B3805DCB1ACA5E3A73828AD66309011627E0E044B8B71640B71BE6C8BAEC13D3165E54E409D675ECFBC25AE0476B0DFBDBD820AD66A6078E52FF075EE7DE8D587BC34ED5279B81B3D9FBD3E8C2F70F728F2361496C881689EE9F7DB714FCA2BA700FC634029A16B422E04EA2B0C21ADCECE669A5FF1B6353E478AE58C117D38F5F4806819CCFF87CE268920BB64F3947B6723755E14C623D30729B2EECDA3343430A9D6A84146474E4FCF42855FEBE52AEEA719E5A9B0A0CC06E39000EA5777CFE8D01446EB7D238031B21F71E48395379B26256CC33230677B820CEA95993D79797048B49F5090FAE13DBEBFCE699F0EF0F05E08ACF06CBF18C4B45E8DB8AC3D9C9B4BABF5296A71DD1400157B9A0BD71654766B02D8E33C60565044400C7E301A209B118D17149D71C> |35 <001C60D8A8C9B7A0860A0FBD5EA1E749E7E58B0F98199F07C24128E629CC07ECEEF89EDEA0FC4001871F7033B2E80CB62D0A744FC3F7C55863E174CD81A84392BB0688FE7D4EF211AF052FAA0E2EACCCE4F5D064869A409F7A14738DCAD54C7ED4830E4B27E3F804D39E1ABEB78CA90A339FBA2D4FD4CAD47AD7AEEC552E59598067B76D0F861550816CCA57AA37B3364F7759503952B12DE83DBD123268D601418ED3FCDACDCD6C05C42199C6BE36F0A8F38B23CB2C98481C1790C508013B443E2969DC29BFC561ADBCA52925D0705238090630F70204A277F9D3D90C7839505EE05E9185B95881ACDA1A1BA2EC642242012A268C4E96FFD84915D1AFCAB9982BD19092B04A1ECF0CC758A1681F2B4DFD818D44BD8F650A46DC945069EC299EFDA50BDA54E55790BD571A9B9E481BE569BF4245A289CC4F4B74083ADFD9355C7CEACF94D0360F7BB766035B1B38C9E243AC4EB9FFD213F0C9FD370CC27F088D79A9BA806991A21933928C2862E0D4AD98E3638D9759890616F15B49BFCFDF1A315B74804EB26E8161B924856C962712A4570E53F329D4FE6EF95647F5E42C804EFA7F4E8F3FC35970463BA1DC030B281730711D9A2A797E4A2F> |10 <001C60D8A8C9B6408507C30CE48D499B861CA60D2026AE032AF1A4B74035311073B197C2EC0F1BE26C87A4A9B1F160722C8589D4FB209BD94CCBD90B535288569C6A3C184BA8EF67B7AAE8B608AB56D54AA8F50BD40F78539686D56CC421262F2D5E55EBB44B889B4BC819B8E30AB0987A757B415248C468CC872FF9D522D52C35DB366C1F2AB721AAB4E12769F94DD822AEC90A591894B7993DBB557FBC7EEEA7450001ADA0B150FD6E7281382B48D8B0FCDD3BAD6A94E401B2EB440CA44F3D7A058FFF1C98273589CAF6595609637A1BF8036ED49022B4FDCD4E87DBC71697D41976EB88DF8DF9F4522EE960B6A247B470EFA8247CCC18E9> |8 <001C60D8A8C9B7876E7B6051918B0CB59DE076B64C8C49A5DA02FCDF071BDFFAD7C92735E6137051509AC8CB684E8479BF8D6E587DBA864F50A4E9968B900101533A81B7315E5635E910F633B3C8F74196CCCC1B0507109F1B1BB9A29E7D812E4438818B1C7D155075E4CD25D535EFA79BAE24E64D32CD5F9BC09B4F74C278A3C1BD035A40B815B3035706B0AD5FD304DCB7953E153A1AFAA729815057B9B918248D356F4E0C23746C525E6E30C1CDD3880B36A24277890D67A7BAA12BFDE85E896F0F4E0CFD215BEC86CD1A1AAEDF5027F5D656DD8EEF175D17890242268FCE601EE1354322C31F441CD975> |5 <001C60D8A8C9B861542AC637EE43C146C31BD9761A5744ABD275647292EE36CB498857E20832A31E32228C922B76ED9EB9B45B679D97EE58115E0910D7A6783C9D74B3C47A3C0DF89E3EE60E2849D5516E05FF3C845F308543415BCC2234298E4DCADDBC225A62EEFA2E410319810E3AE2C3346BA419C601347FC59380E9460C65AF6A> |4 <001C60D8A8C9B75378CEF1E0D4E484DFE90099439ACD818CE271F04C07A991F81A6C58DFC6A4CE349E00814191FB427E7B7BC5AC927F785AD752C35827A1018CB90075777D8F35DD48B87F6BFCD26360121145FF2A7053654F9CA458A12F06E1C6D6F29771D1ECFEF87939C0FD81EE93EF6D3EFEFCCE1B2ECF859526D73285CD3FEAF28A3B7FF4E4397FE5DB6BBC632077F4FBC677F1B83417167D8EF5C2FC55DD14484C2D373264EF8821724800B2DBC0F536431D14DA4D67A14C6830751708E890E920FAA2904B8AC67C88D626233781B520872BE22D11CB55FE9A802C811127EE022448861A85B00A80AE661E> |9 <001C60D8A8C9B7AC352685EBF0C70CC299C781505881750549B1329E325E48906D6144E4F2B8FADCE07AE09672A94B6042B3746FEC4270EC99DA196999FD36B24CF260547D3D85E1C92CEF863DA0F5138E37E3009356FCB5DEC98DF934326713DE1955741FD457C6A79D71D77EECD67D7BFD3D3EB12C39414487AF3B4E96135DE9D2C5920A006C6765D689980A7C77873CD78C6B4E821034B8E7EED35F6A2E87E34A17C1BBFC596185D90F9C080897916508E299FCE09F3295EF2CE5720E2B2D1B9374706152A4> |7 <001C60D8A8C9B69F2EDC57251C098CD494497F9B27194FB941BAEBBFCF67DA468CE7126865CFA25F226DFD40C157E80D1E6900C376BA8BC9DC47B3111C3A2CD936AC8EC362BD24ED74F642515609D1C548907C5A1CDCADA83FAA2E203936CD43067EFBE431C5F6A9F1C54FA865F37B94E12BAE34D11E926760BF310C17B2CE06E3D9CA51D2CDAE57290F2C0E51E689DD3CF7F162E13246FD68DE31ADED7654844D6F16DD1C60B43CBAAE0BADB905E9902A259EA8BD8FB7086C09F8F0B477B0A845988A188A5E96A72E7AD3EE7686FB5FCB80E70073858768D75997C754CB9C9D55A01464323F19DDCED74648DEA355AF857FC34746DE585A82906FDE1212C19591617D74A65399EEA7419B90CC120A94EF1CB8C35CC45B7CB54CC43612522AC61EB82DBCB150F072182572BD2E99E351C000C5A8C1DDE6C3EA6FE78C06CD77A518> |26 <001C60D8A8C9B8327E958805E8662F53A1A990B9CCB71FCB46624E3EEF04274C3DAF061F941DA251D48831553D467B545C4CEDC51B9017028716C85AD098E09A3C35F11C8F03EE82A4054E32B8BBACDB036019F71B89204547FB39A4A6D739D6463F68B1144275E15DB1745616C854C02B531B02A4741FE67C594BE3CE1193E9FE580C9645D3BCBBF3A5276BD064CC24D7CE1543587B9258356EAD47C591BCCA33BA7700308079D71FAFD9F7BBD1A301FDDF3F5650AF7217E5B885A3A308ACA9B6BCF33F287BA0E1E22E89D4640A10962E72F3FD> |25 <001C60D8A8C9B83844CBA60F1342221E4925C71C3C5CB97BD289538BA77EF8118DDFDAAAB02E43532889404B9FB9EA15E471AFBA6E91EB16E49B8ABD66DEFA82CF85E16941D5D19E051392D2E7296E282A5FEC19CBAA1A1222F7009C> |27 <001C60D8A8C9B8327E956EFD6F583E438937FAC87F33DC46A04526D6E80E2849DBBCC1F7712D20B9271A919C9D9B2E00B79700FC941867FA947C284C3802BE0E95A70EEBACCBEC96A56F44B9450C107D71F89C454E931437855A03DB86968B1EA8C1D4D47096F611255B03FF5004580609A8DE3BCA48EE46A18BE9E1809A8482B751FED58945B4AC13F78D1A1E271D871C9EC72400D26E7F64C185FB83A2303F6ABF6E27422155572EA49271E93DEA6E7C814186652AE2334508428505562B1C8AD2B0420417> |21 <001C60D8A8C9B7F2A7F3C11AF4241E1279326AB1F41F6C2B9FD290E688D5EB5738ED5633D6EF9F66B835BA65537C83BE93CFD36D45A0F30F682697E2DE7837BEFAFEE66DC2929847539ED16AD9332494258163CBA409675A129CA9F3F81BE070D1296B4A88E24186D2813B19DF3B25CFDC9E6BCB99BED09D79D567A8A30FEBF73E3C989CB9B2CB8783EDAE7449685D770CF2005FAAC8E58219E4137413FD7842F9EF6494F0EDAC1DE05DFDDAC60C9B8C93D9E364E8713F17949D3536C3DA55725CA2FA7A21CA029B8CE2382BFF5442B2EAF17E6D606FE0153B4946195D46996D7A5725E3E81BAD0C90D23A67C6A0B07C1B0E5E56273C445761D42EB22B6D8DFAF58654E91E736A2ED239FB1AE96C3320F6A016EB934FFDC1C8FF63B06CC42406884D6603A31FD1536050C489E2484A0DEEA82E0D286D94D837284C2016DDBE7DCEC610A45662AB1AB9AD7E2186CDACC11AED266B7D00C0055082B63FBFF2923AE5C7E1153DECBD16F3A186311197DA52C75A6C5800F6B640B4E4C5D272ED222923116C09D636AC471445625B5086259876F1A79BC73D8D9E> |15 <001C60D8A8C9B6A0FC22F7FDE4D70269FAA3ABCE84D83E02588B58324048A29EDA3366025ED35011C3387E67BBE9855BC9117A7F78166278323249BA674DCEE9AE9196653285F341F22A75D7A524C07ADB322A3968B0FE8E6C4637BB81D36C67F8701364C2FC3DF17B599D67F1171C1AE68C5656E14227198F5B75BDCAA6CB9FD5CB83960FD443FF0E2A9347589D2B52A0B502D664A1FECF415B888C78C95332B5951EC5EFF92616EAE4ECA8B9D3B943C765E7EE8E2867E53EC3D42AA7F4F367795C4524B73E7FBC0DDC9EDE4B202217BC4D75DCBFB156273EF107894CBB2461A6FC49EDD928715F2DD04BBCA7A926AC7B68321CAEFE4FB87B0610008516F3EA45AC0B8E9A606F2C7B0F442EF2AC478DB2CCA5A9E3A06A53FFBF5FE74008C53ABA0EB809A9BDD336F369692EDD0748FD400455C74E743F57DE4D0ABD30AF90BB658997874F6FD991BF214F0044AF0FD83B05E8FBB85B5F594B2318479B4B46D9C72FE71135EC8E0CEF9B75ADDD8FA2549A36F4C5A3BA0E174F8F9933BCFE927331B75B263902852A8C7A8E55AF4AB72C3603BE325B0C76C762D28397C0100D336270F43AEAB0947E477C82A82BD10036213E1512830E77> |13 <001C60D8A8C9B7A4C86C545A4AC8A7D7F6C345E834CA1213E882E926387794826A205EEEE689D37E8FC5A261291E47A8EB37515D6AFF3E8D4C2927EEA10BDEE7B9C51B7C7E29EC21F969487478C80B6DD492C8CB06797735DBFAA0767835E16CF60557FF99669574049AC02AF815FE3A71EC95AE08115F25C3E55D5B1FD10CA1E741534F0E60416081D7FA16D9DFEF57FF91FD82FC7BA4FB9689D718D9A71DED1EF9DCA51AF0BBC79B40093EF91CBC3D8C48A3FDFEA41B5047A65EAFDD5AF1021F9C948AAB35D583226126C585E079DEB6D479075845CECA8ED7ED10944C11C924501DD381B71E2F7690C30AF54ADDDF92DD4099EA219A54E3CF84E276FA7871C8A6ED23473DBBAA6EDA7BEF929816C1760D14417F454980C243ACB7FEEE422DBAD62FF97870FD2250B1790169B64F76> |20 <001C60D8A8C9B70C3961F94CC53AE3C44F5C46AC95D939CE1FE52948C4EEE785E0FF2F5DF6799D25AA3A56FE93A6DDD98DB4188430DEDDFD51DDDD0EC4FB2D10B9991F4B7C4CB67E794966F2D33D75FB1F2DDE6EFD4602642CFD9DACD32FA36EDA8C51397D987B567B7680BA36338AB94FBCABA34B92422BB4A6BB2CBE6206F57AA0A2A8A2C374FA199F756B8C6892CB5299CACCD25A505726792E9EDF44792CB8DB652BC2C1E7DA21138C5E5015116A1741E17007ED6C22C23344D4AB68621949E14CE8A88829C82C8B15CED1FB4CCBFE9D40DE0799FB0EF64F8A219CA309825B69AD031354812E61F884D22EE3AACEE031A6653B1519602284061900E2F827432CCC337FB59A551E141C30CC55CE4632D5C31E3FC4C5BA252294FEB6FD8075BB079C3F24431E8D5C774D59E09AC7C64BB8C53AB6E9F8C7BB53DE483CF4234705F7D8C8DAE52A381BB24528B826C29FDDB8CF4F5222BFD57751475957198351D7133DAADA661E1D1810802FDA79930F2C9526AA05D8290ED2102740497D7344C308314BA0C891CD0738B84DA16A83588E2CD4B55EB551DFD1259DA456FC9912D108BF1E0B750B68510C7DC36D8861FED79A1710E9E95C8C80B37227AD97F0B3CDDD> |19 <001C60D8A8C9B8096E3702EF2E87B058AE842B207DEF574BB847CCD95112A7D3AF2292BD58741562B9BCC6292F597F1D5EBCE0E807704FFEEE94A1C26C1217A6936D01C623E2C5895684B5E303EB80975424515B84C7D69EC348651F11929DBDB8CCFDA7B6F9C1B9009E28D94026AB5BD0038F56495AC64C32BF2B47869240B887B12AEF109BCAC343F49ECBE16F183F080759D157DB3263D01310CAAE2C54DDFFEC62D46A41ECF6143B8F31D2939D6A574F5434EA593BC099DA68B97E5EC7884FCC239BC4456DDBC4F814CD1EB45CF26D8A7ABC526080AD2183CF51F786640C20279AD04AC16902E6B89034C7C376D1FE7A7CD7A590466C8F02B429577E182F4F0EAD1CF88B5E7E78E67C50CD4796431188A92962F05200A8DB3D5ACE7A4B4F41560DE12E28A90ED4FC728B93C15758> |6 <001C60D8A8C9B714A578A8068F50E5B4EDB2372212B01CAB615DB07C103904450BB5A8997C47AEC5DB24EF14BA90F3927F72C67B88B43920C02E453732113C7AE410216CD5FC3658BB4C98F6B562D30FF248875FAB34B29D29E23CEEA2E8B3B0EA7C8373FDB3F234B4B4B3B9E0E79270793676089616B54592E9AC3C2CD0646989D88E0723A4348B40E2DC928EDC31D0F94BB479449D0B6C60> |3 <001C60D8A8C9B66B395FA10874C49903C5BA5D8A11648D789575D5BDD1F66223F5068AFB07B7D4A6F562CA3B74B13B5EA917B7C1AD358BE09BEB4E72893350C36BDE7853C8F59B15C9C7D4DF300E1CF389834D73F73BEAFCCB36018862705A4AA45264E1F40B031B51D9E2D256C5A222096B45098A61598A49246878A44E20B4E2650D94107FDA3430A83D1D935A730ADC0CB97EA2F81591EE89713F0A5E7D91B0AB952FB896B549D9AF25BF5D9521D347CC> |2 <001C60D8A8C9B7DDB68920BA932172B1499148A182E4E0E2EF78DBDBEEC6F52E0937C43799EEBB71FF689B6131266A457C81FF30F7FF7EBB30E51863467DCBD28FE4B4C2B7091BA20F48D775B52AE015A417726578FFFF7D58968E5C95765443C585F178FD6D4723D9DFE9FEC3370FED8ED508CCCBE152BC072DF4C5CBB9326B03E214DD8865FCCF7DE5BAAD07E33C38BE3B0335D636FC50CFF6E14700E2A660D3C165A16A200BC57B83572B62314C80450F3226D83F7916F54AF40AF7E0FCE1174C5501685FDA117D5A2044E5CEA0B3948A52353199CC> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /IKBBAA+Calibri-Bold-Identity-H /Identity-H 0 [/IKBBAA+Calibri-Bold] ct_ComposeFont pop end end
%ADOEndSubsetFont
/OVLNAW+Calibri-Bold /IKBBAA+Calibri-Bold-Identity-H findfont ct_VMDictPutOVLNAW+Calibri-Bold [12 0 0 -12 0 0 ]msf3.72533 191.256 mo(\000\035\000\030\000\035\000\035\000\001\000\001)[6.07068 3.2027 6.07068 6.07068 2.71069 0 ]xsh3.72533 161.536 mo(\000\035\000\030\000\036\000\035\000\001\000\001)[6.07068 3.2027 6.07068 6.07068 2.71069 0 ]xsh3.72533 131.815 mo(\000\035\000\030\000\037\000\035\000\001\000\001)[6.07068 3.2027 6.07068 6.07068 2.71069 0 ]xsh3.72533 102.095 mo(\000\035\000\030\000 \000\035\000\001\000\001)[6.07068 3.2027 6.07068 6.07068 2.71069 0 ]xsh3.72533 72.3744 mo(\000\035\000\030\000!\000\035\000\001\000\001)[6.07068 3.2027 6.07068 6.07068 2.71069 0 ]xsh3.72533 42.654 mo(\000\035\000\030\000"\000\035\000\001\000\001)[6.07068 3.2027 6.07068 6.07068 2.71069 0 ]xsh3.72533 12.9336 mo(\000\035\000\030\000#\000\035\000\001\000\001)[6.07068 3.2027 6.07068 6.07068 2.71069 0 ]xsh51.1121 206.074 mo(\000\012\000\010\000\005\000\004\000\011\000\007\000\032\000\031\000\033\000\001\000\005\000\004\000\011\000\007\000\001\000\012\000\010\000\005\000\004\000\011\000\007\000\001\000\025\000\017\000\015\000\012\000\024\000\015\000\023\000\006\000\003\000\002\000\001)[7.82391 6.38397 3.19208 5.84399 5.93994 10.4879 3.73206 3.672 3.73206 36.8688 3.19208 5.84399 5.93994 10.4879 42.4427 7.82391 6.38397 3.19208 5.84399 5.93994 10.4879 22.3524 7.02008 9.75604 6.03607 7.82391 4.77594 6.03607 4.25995 5.06396 7.56006 7.25995 0 ]xsh205.404 10.7387 mo
211.994 10.7387 li
211.994 17.3287 li
205.404 17.3287 li
cp
level3{
gsave
clp
[9.99999e-05 0 0 9.99999e-05 205.405 10.7386 ]ct
/8 
<<
/ShadingType 2 
/BBox [-2.23517 .745058 65897.7 65901.1 ] 
/ColorSpace /0 /CSA get_res
/Coords [41848 0 41848 83696 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ZqLH"ZqLH"ZqLH"ZqLH"ZqLH"ZqLH"ZqLH"Zq^T$Zq^T$Zq^T$Zq^T$Zq^T$Zq^T$Zq^T$ZqgZ%[8-c&
[8?o([8Hu)[Sd)*[T!8-[T!;.[oEM1\5i\3\5ib5\QB"8\QB%9\QK+:\lo:<\m#F?]3GUA]3G[C]NkjE
]NtsG]jD0J]jM9L]jM?N^1%TQ^L@`S^LIiU^h",Y^gn,Z_.F>\_.FA]_IjS`_J'_b_J'ed_eL"g`+p4j
`,$=l`GQUp`GQXq`bujt`c)t!a)N1$a)W7%a)W='aE/R*aE/U+aEAa-a`es0a`f$2b'><6bBYK9b^1c=
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.99999e-05 0 0 9.99999e-05 205.405 10.7386 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa@*H['[3I
['[3I['[6K[C*EM[C*EM[C*HO[^NZS\$riU\$rlW\@B&Y\@B&Y\@B)[\[f8]\[f;_]"5Ja]"5Mc]=Y\e
]=Y\f]Y(ni]Y(ni]Y(nj]tM+n^:q=q^:q=r^V@Ou^V@P!^qdb$^qdb%_83t(_83t(_83t)_SX1-_o'C0
_o'C0`5KU4`5KU4`Pog8`Pog8`l?$<`l?$<`l?$<a2c6@a2c6@a2c6@aN2HDaN2HDaiVZHb0%lLbKJ)P
~>
<~91qoN91qoN91qoN91qoN91qoN91qoN92&#R9he>V9he>V9he>V9he>V9he>V9he>V9hnGY:/4PZ:/=Y^
:f("d;,L1f;,L4h;c?Un;c?Xp<)cjt<E3%!<E3(#='&I)='&L+=BJ^/=]np3>$>-7>?b<9>?b?;>[1Q?
?!U`B?=$rF?XI/I?XI/J?t!JP@:<SR@U`eV@q9+\A7T4]A7]=`AS#FbAnGXfB4tslBP;'nBk_9rC2.L!
CMR^$Ci!s*D/F-,DJj?0Df9Q4E,]c8EH,u<EH,u<EcQ5BF)uDDFEDYJG'8%PG'8%PGB\:VG^+IXH$O^^
~>
<~zzzzzzzzzzzzzzzzzzz!!!$#!<E6'!WiE)!WiH+"9\i1"9\l3"U,&5"U,&5"U,)7#6tJ=#6tM?#mgnE#
mgqG$47+J$O[=N$k*OR%1WjX%LrsZ%hB0^&.fBb&J5Tf&ebol',)#m',)#n'GM5q'GM5r'c%Q$(Ddl)(
`4)-)&X;0)B'M4)]K_8*#oq<*??.@*Zc@D*Zc@D+!2UJ+<VdL+X&!P+X&!P+sJ3T,9nHZ,pai`-71)f-
n$Jl~>
0 ]
>>
41848 0 41848 83696 [-2.23517 .745058 65897.7 65901.1 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
0 0 0 1 cmyk
%ADOBeginSubsetFont: IKBBAA+Calibri-Bold-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/IKBBAA+Calibri-Bold 7 GetGlyphDirectory11 <001C60D8A8C9B7AD0A34D5A33DA54D708C09070E3263DB3F8B204742934F45464C864E5219DC64C17C21334728C70A28136E97F8B50DED54E9169E494DCFFBE08054CD1ABEDFE9442047B18ABC511F07776D5525C7536F54A7020A4D06660444EA4587557797F3D30E946423D7B549AB2AE4911FA9B4137E2A2722357A506A6A05F91A214894E28FEC6B492CDF90F6872AAE0C40180F5DD11FF249C62B7437E3A71BA232F3D2872FD555E1C9AC4E7F4B48457EB6186F604DC3EE6103F0F881A966A4A53DB93C1C7AD28044A61CF0FCE7D40BA68015641BB746FB7DDE0D2F135B3E72C27DE147EB6127162600CEE2FE996BF71B8B39FDE57DFC392DDA09C4BF60254D74CA373499967C5100501D06A31B9AF30F8F868E5E3B054E309214BEED4F999B3B55712B0FD812D6575581ED3C4A080C3FC359594852C6FA23B784C4DB4B1AC424E90B4505E356F1C575F8C57FE52642AA261D219ED5B82760638581CA02> |12 <001C60D8A8C9B719BD263F1C66E176AB1A9B9A5A3A8367D7DDD55624575D8330769E89EDE2B210CAC0C33466D934E07EE8C5D0A40F156D15CC57AF923B250573D6A3F9259B0A3431793F366C2A4E1951E4FEDD7CFAEAA854A72A9831B3A18934A1E3BA67B1825DD68D168A926FEDC2EA7260DFA821668535829AE8FBDD797481380CC39C4AF2C6ECADB05FF3DA8E4A111EB4A3E3B59FFB126A3A37C4B5A113868987F4611BA41E12178776F476582469050F58D9C2434F2F75015CEE522ED8E12899B67502531E8AB98B42F667383D35B65B55576BE7A1323FDACE70DEAB60FF6C739F5C1FBD6BC404A862F611E798DE5F7D20626F50E2F0A84DB6262D7AA298F592743052BB8FB5A0340AD9FF86B3B347A6731F17F7E35046670F71F40967A7BFAB9BA0179B380201FC6F3EA37CFED86A9E1255880201A87ECC18F17716BB9085A306CE> |17 <001C60D8A8C9B78181CF98F408291F4DD5CDCB6D065079E3C32B2DC7574F85010122317EAC4CB787C5DCCAEA2DCDF59718E98AB798D0A7C1D0A4AFDAF2898702DB340B4925E43E83E5146EC936D266F11A185F61F58114BA94B80C81D7D8DCD3FC28BA75D8A38DA3AC10DA8DE7F6935CAB2D98F05D04B7C0D79A2CEACAB661A11B789E89B6D4B148DC1A7CB3550A2956556AF6D6068A328964C77CAC19F98775B69DBB8B2282422672CD9527E49182094C282B5043D56AD150402E5BC1D0FBCC13812FC82AC63ACFCEEF5D77A3A595F46555D44C6632B4645C234C6CF48BE68F54878A59D4C863675CD2B4AF968FD7298C1FD09F77D9> |18 <001C60D8A8C9B78256DD05CEB4DA9E965AB07EBB69AB364D14F4B8A1E6129E1A1B57A9F6AF54A3080C4C156F4713FDECBA67C18FBD4873468229BF2E56E47555C842162EA8AFD838229FDC9DDEF310896F702CA81E89654B1920C456B6122904925826DCCF02D5C1E273B9B70F686A52F233CB0BF53CA99DE0726AB8843AE18A2F544EEFCCB9368EBBD2EAF30818B845E8A149610E23EA632E165F5F7A4520EBF45E5F0A7C6C568F3780A23188579ACA934B1151F60150BE69611E3BBA1C15169CC459A53E1BC79B4E95D0D1E38FE34738BA484CC420DDF487453BC7EA44E7585361232849BCEDF40AAC7FE11F5957D235AD9EDF320D6585B01D68C46BE5D9691D1F0D2A2633C87BEE9F7062A178C86B69B109CEB96764C1C8FBD01DA9DDE36AB596536073622CAD7E9206511E05DBC09A13A3DCE8DBA476EE29BA282BA82967374BCFCA66C6C7134003DFF5B8CBD8A2DF42CA27C9663DE571271A8218E1F5A8F5301D> |14 <001C60D8A8C9B874A685BEE7073E3D9BEB2350BB486AC62AB5FFB3F3055796FFA7201F6E4CDF32059564C619C9CC449E2E13D3438C6F3A00A8C33DF67EED72B4A703E19615397FBD65B8F41AB93A2D076C7948B4D6A7E1920548D052C7AB1831CD8F1E6F01CDE398A3464141E18D2DB8A524CC3BE1885811A2FA4464E9BFA44F3B137A209AC07BC2D4DC8265BE2C3CDB96FC76B4E494C7989F89FD865B563D37857FCA1A5FB165B3A362BB87A93EC69254C2AAA91985E82347B6547083A306CE> |16 <001C60D8A8C9B78256DD09855002C1F642102EC28B82F48E21B28CD8D1161804F5A9A747AD2624D941564B1DAE90411653B58E89369C53390A39373C180E921901CFF6CB5B97D1E2F6881105A39AF049AF7BAB6A1217A5C2B8A9279563CA1276FC02BACD1EEE8432C4000AF8AC8B81C2B3B82F6968BF9741308293C4341FD8C1BF06F82527B4BB1BFEB05C7AAE16687F72280798047F2DE0F0B0C1A73D4FFEFAEDFA40DAB27F9393250746B607E6DD1B8488942E5E65DC28EF4BF61000038A490B102DA889E711AC446FA2AE5AF546DC759185DC2C75747BB2C76E9F900921B79B64F414F07BA72B97757066640FBFE321B86C7EC04E0E0AD1B078011E479036E3D4D1746C4387436B0F75E38AB678D2BFE9BAAAF021F8> |36 <001C60D8A8C9B7A9C0DC847DB5A44E1C09422D8E75917A5C99E5DF39774616E425C7441E1ABAE7440F779D58F68C4465F5CF828241AEAB0D4E91AD907C5B32C25E66EE7BE047412DE324F4E6EF51CB2D56ED8E1027BB1EA6A84E0E5A5F85EFC10F573DB830CCBF536080E47930B24DE356793BB6BB34BC96D56E9BD6E690C51FA8AE7A28ECBF7A0422FA654840377A9A> |!endend end
%ADOEndSubsetFont
OVLNAW+Calibri-Bold [12 0 0 -12 0 0 ]msf214.79 18.7113 mo(\000\017\000\013\000\014\000\023\000\021\000\001\000\022\000\023\000\015\000\014\000\016\000\024\000\016\000\021\000\020\000\001\000\032\000\024\000\014\000\021\000\023\000\015\000$\000\037\000\033\000\001)[9.75604 5.91595 5.01599 4.25995 6.44403 2.71198 6.43195 4.25995 6.03607 5.01599 2.93994 4.77594 2.93994 6.44403 6.43195 2.71198 3.73206 4.77594 5.01599 6.44403 4.25995 6.03607 5.97601 6.07196 3.73206 0 ]xsh205.404 24.1667 mo
211.994 24.1667 li
211.994 30.7568 li
205.404 30.7568 li
cp
level3{
gsave
clp
[9.99999e-05 0 0 9.99999e-05 205.405 24.1665 ]ct
/9 
<<
/ShadingType 2 
/BBox [-2.23517 1.86265 65897.7 65902.2 ] 
/ColorSpace /0 /CSA get_res
/Coords [41848 0 41848 83696 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~*71Yb*71Yb*71Yb*mgeb*m^bb*m^bb*m^bb+4$ea+4$ea+4$ea+3p_`+jQk`+jQk`+jQk`,0lta,L<4e
--rFg-I8Oh-d\dl.+"mm.F>!n/((?s/CCHt/^^Qu0%-g$0@Hp%1"*-'1=NB+1XiK,1t/T-2:Sf02V#&4
2q>/53RtG93S(P;3nCY<4P$k>4kI+B51d7D5hEIF6.iaK6eJsM7+o-O7bYQV8(tZW8_UoZ9&.8`9\dJc
:#*Sd:>Nki:Yitj:u0(k;;T:n;r>Ur<8Yau<Stk!<oD+%=5_4&=l@F(>2d^.>N*g/>iEp1?/j36?K0<8
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.99999e-05 0 0 9.99999e-05 205.405 24.1665 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~)]K_8)]K_8)]Th<*??.@*??.@*??.@*?H7C*Zc@D*Zc@D*Zc@D*ZlIH+<VdL+<VdL+<_mO+X/*S+sS<X
,U=Z^,palb-71)f-RU;j-n$Mn.Olr!.k</%/1`A)/M/S-/hSe10JG490ekF=1,:XA1G^jE1c.'I2)R9M
2E!HP2`NcV3&ilX3B9)\3]fDc4?P_h4Ztql5!M7s5X7S#5sdn*6UO4/6q'O67Rfj;7n?0B8P)KG8kVfN
9MA,R9he>V:/4PZ:JXb^:f'tb;,L4h;c?Un<)cgr<E3%!<`W7%='&L+=]nm1>$>*5>?b<9>[1N=?!U`A
~>
<~cd0q`cd0q`cd0q`cd0q`cd'h]cHa_\cHa_\cHa_\cHa_\cHa_\cHXVYc-=MXc-=MXc-=MXc-FV[cHa_\
cHa_\cHab^cd0q`cd0q`cd0tbd*U.dd*U.dd*U1fdF$@hdF$@hdF$CjdaHRldaHRldaHUne'lgreC<!t
eC<!teC<!ue^`4#e^`4#e^`4$f%/F'f%/F'f%/F(f@SX+f@SX,f\"j0g"G'3g"G'3g"G'4g=tB:gY:K;
gY:K;gt^]?gt^]?gt^]?h;-oChVR,GhVR,GhVR,Ghr!>Khr!>Khr!>Ki8EPOi8EPOi8EPOiSibSiSibS
~>
<~W2QYnW2QYnW2QYmVl-GjVl-GjVl-GjVl-GiVPU,cV5:#bV5:#bV5:#aUna][USFTZUSFTZUSO]^V5:#b
V5:#bV5:&dVl-GjVl-GjVl-JlWMukrWMukrWMuntX/i;%X/i;%X/i>'Xf\_-Xf\_-Xf\b/Y-+t3Yct@9
Yct@:Z*L[AZa7!EZa7!EZa7!F['d<M[^NWQ[^NWR\@B)[\[f8]\[f8^]=bhj]tM+n^:q=r^VI\%_83t(
_83t(_Sa=1`5KU4`5KU4`Pog8`l?$<a2c6@a2c6@aN2KFaiVZHaiVZHb0%oObfn;Tbfn;Tc-=P[cd0q`
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!<E3%!
WiE)!WiE)!s8W-!s8W-"9\i1~>
]
>>
41848 0 41848 83696 [-2.23517 1.86265 65897.7 65902.2 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
0 0 0 1 cmyk
%ADOBeginSubsetFont: IKBBAA+Calibri-Bold-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/IKBBAA+Calibri-Bold 1 GetGlyphDirectory37 <001C60D8A8C9B7A9C0DCBC5ADD0817939AE245F8E4F6E820E8C14ABD91983BB30A2C49E70AFE7AA44CFAD9FDCF2E7573EA27572C523C889CCDF998BA6C6B1A6B94152542F43B241EEF3709EB5EF12C12CC33C414E07ECD75FEF1B4B15CF10D9A894F83E19234F2BC1BF49AFE84792726506B0BF3DC6DDAA9F61F61673A08C0F64BBE4D0E51B423C41FDA8F8391033184B8C440AFD9DD8C0534ED3AE4654F3CFB314E9295495B46C94FB14F89417EB9A451B77582328ED52E95F17169C365> |!endend end
%ADOEndSubsetFont
OVLNAW+Calibri-Bold [12 0 0 -12 0 0 ]msf214.79 32.1391 mo(\000\017\000\013\000\014\000\023\000\021\000\001\000\022\000\023\000\015\000\014\000\016\000\024\000\016\000\021\000\020\000\001\000\032\000\024\000\014\000\021\000\023\000\015\000%\000$\000\036\000\033\000\001)[9.75604 5.91595 5.01599 4.25995 6.44403 2.71198 6.43195 4.25995 6.03607 5.01599 2.93994 4.77594 2.93994 6.44403 6.43195 2.71198 3.73206 4.77594 5.01599 6.44403 4.25995 6.03607 5.97601 5.97601 6.07196 3.73206 0 ]xshgsave
-21.7347 226.273 mo
464.265 226.273 li
464.265 -93.8873 li
-21.7347 -93.8873 li
cp
clp
-3.27467 -4.86731 mo
516.344 -4.86731 li
516.344 215.472 li
-3.27467 215.472 li
cp
0 0 0 .528435 cmyk
@
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 ]]
] del_res
/OVLNAV+SimSun-Identity-H uf/OVLNAV+SimSun /CIDFont ur/OVLNAW+Calibri-Bold-Identity-H uf/OVLNAW+Calibri-Bold /CIDFont urAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
