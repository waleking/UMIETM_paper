%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: all(1).pdf
%%Creator: Adobe Acrobat 10.1.9
%%For: huangwaleking
%%CreationDate: 2/14/14, 8:04 PM
%%BoundingBox: -255 254 461 716
%%HiResBoundingBox: -254.6318 254.6318 460.9158 715.5477
%%CropBox: -254.6318 254.6318 460.9158 715.5477
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 0 -1 1 0
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1093 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="Acrobat Distiller 9.0.0 (Windows)"
   xmp:CreatorTool="PScript5.dll Version 5.2.2"
   xmp:ModifyDate="2014-02-14T20:02:18+08:00"
   xmp:CreateDate="2014-02-14T16:06:22+08:00"
   xmp:MetadataDate="2014-02-14T20:02:18+08:00"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:159c22ab-110f-46b0-8f4f-d557bc176d49"
   xmpMM:InstanceID="uuid:06314fdc-124b-554b-bfad-4aa7d9601aec">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">&lt;CDBCB1ED2E786C7378&gt;</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>fubingnan</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -715.548 translate
pgsv
[0 1 -1 0 460.916 0 ]ct
gsave
np
gsave
0 0 mo
0 715.548 li
460.916 715.548 li
460.916 0 li
cp
clp
-6.86934 721.14 mo
475.291 721.14 li
475.291 -18.1804 li
-6.86934 -18.1804 li
cp
false sop
0 0 0 0 cmyk
f
17.9107 663.24 mo
379.471 663.24 li
379.471 244.74 li
17.9107 244.74 li
cp
f
335.131 663.3 mo
333.511 663.3 li
333.511 244.74 li
335.131 244.74 li
cp
333.511 663.3 mo
cp
289.891 663.3 mo
288.271 663.3 li
288.271 244.74 li
289.891 244.74 li
cp
288.271 663.3 mo
cp
244.711 663.3 mo
243.091 663.3 li
243.091 244.74 li
244.711 244.74 li
cp
243.091 663.3 mo
cp
199.531 663.3 mo
197.911 663.3 li
197.911 244.74 li
199.531 244.74 li
cp
197.911 663.3 mo
cp
154.351 663.3 mo
152.731 663.3 li
152.731 244.74 li
154.351 244.74 li
cp
152.731 663.3 mo
cp
109.111 663.3 mo
107.491 663.3 li
107.491 244.74 li
109.111 244.74 li
cp
107.491 663.3 mo
cp
63.9307 663.3 mo
62.3107 663.3 li
62.3107 244.74 li
63.9307 244.74 li
cp
62.3107 663.3 mo
cp
18.7507 663.3 mo
17.1307 663.3 li
17.1307 244.74 li
18.7507 244.74 li
cp
0 0 0 .602747 cmyk
f
17.9107 664.08 mo
379.471 664.08 li
379.471 662.46 li
17.9107 662.46 li
cp
f
378.691 663.3 mo
380.311 663.3 li
380.311 244.74 li
378.691 244.74 li
cp
f
364.771 641.46 mo
330.871 594.96 li
330.571 594.6 330.451 594.12 330.391 593.64 cv
327.571 547.14 li
329.551 500.4 li
329.551 500.22 329.551 500.1 329.611 499.98 cv
339.571 453.48 li
339.631 454.68 li
326.011 408.18 li
325.951 408 325.891 407.82 325.891 407.7 cv
322.531 361.2 li
318.751 314.7 li
321.331 267.84 li
321.391 266.46 322.591 265.44 323.971 265.5 cv
325.351 265.56 326.371 266.76 326.311 268.14 cv
323.731 314.28 li
327.511 360.84 li
330.871 407.34 li
330.751 406.8 li
344.371 453.3 li
344.491 453.66 344.491 454.08 344.431 454.5 cv
334.471 501 li
334.531 500.58 li
332.551 546.84 li
335.371 593.34 li
334.891 592.02 li
368.791 638.52 li
369.631 639.66 369.331 641.22 368.251 642 cv
367.111 642.84 365.551 642.6 364.771 641.46 cv
.728786 .437995 .0408331 0 cmyk
f
358.891 640.08 mo
358.831 640.08 li
358.891 640.08 li
366.691 632.22 li
366.691 632.16 li
366.691 632.22 li
374.551 640.08 li
374.611 640.08 li
374.551 640.08 li
366.691 647.88 li
366.691 647.94 li
366.691 647.88 li
.713222 .423743 .0417182 0 cmyk
f
358.291 640.68 mo
358.891 640.92 li
358.831 640.92 li
358.351 640.92 357.991 640.5 357.991 640.08 cv
357.991 639.6 358.351 639.24 358.831 639.24 cv
358.891 639.24 li
358.291 639.48 li
366.151 631.62 li
365.851 632.22 li
365.851 631.02 li
367.531 631.02 li
367.531 632.22 li
367.291 631.62 li
375.151 639.48 li
374.551 639.24 li
374.611 639.24 li
375.091 639.24 375.451 639.6 375.451 640.08 cv
375.451 640.5 375.091 640.92 374.611 640.92 cv
374.551 640.92 li
375.151 640.68 li
367.291 648.48 li
367.531 647.88 li
367.531 647.94 li
367.531 648.42 367.171 648.78 366.691 648.78 cv
366.271 648.78 365.851 648.42 365.851 647.94 cv
365.851 647.88 li
366.151 648.48 li
cp
367.291 647.28 mo
367.471 647.46 367.531 647.7 367.531 647.88 cv
367.531 647.94 li
365.851 647.94 li
365.851 647.88 li
365.851 647.7 365.971 647.46 366.151 647.28 cv
373.951 639.48 li
374.131 639.3 374.311 639.24 374.551 639.24 cv
374.611 639.24 li
374.611 640.92 li
374.551 640.92 li
374.311 640.92 374.131 640.8 373.951 640.68 cv
366.151 632.82 li
365.971 632.64 365.851 632.46 365.851 632.22 cv
365.851 632.16 li
367.531 632.16 li
367.531 632.22 li
367.531 632.46 367.471 632.64 367.291 632.82 cv
359.491 640.68 li
359.311 640.8 359.131 640.92 358.891 640.92 cv
358.831 640.92 li
358.831 639.24 li
358.891 639.24 li
359.131 639.24 359.311 639.3 359.491 639.48 cv
.728786 .437995 .0408331 0 cmyk
f
324.991 593.58 mo
324.931 593.58 li
324.991 593.58 li
332.851 585.78 li
332.851 585.66 li
332.851 585.78 li
340.651 593.58 li
340.711 593.58 li
340.651 593.58 li
332.851 601.44 li
332.851 601.5 li
332.851 601.44 li
.713222 .423743 .0417182 0 cmyk
f
324.391 594.18 mo
324.991 594.42 li
324.931 594.42 li
324.451 594.42 324.091 594.06 324.091 593.58 cv
324.091 593.1 324.451 592.74 324.931 592.74 cv
324.991 592.74 li
324.391 592.98 li
332.251 585.18 li
332.011 585.78 li
332.011 585.66 li
332.011 585.24 332.371 584.82 332.851 584.82 cv
333.271 584.82 333.691 585.24 333.691 585.66 cv
333.691 585.78 li
333.451 585.18 li
341.251 592.98 li
340.651 592.74 li
340.711 592.74 li
341.191 592.74 341.551 593.1 341.551 593.58 cv
341.551 594.06 341.191 594.42 340.711 594.42 cv
340.651 594.42 li
341.251 594.18 li
333.451 602.04 li
333.691 601.44 li
333.691 601.5 li
333.691 602.58 332.011 602.58 332.011 601.5 cv
332.011 601.44 li
332.251 602.04 li
cp
333.451 600.84 mo
333.571 600.96 333.691 601.2 333.691 601.44 cv
333.691 601.5 li
332.011 601.5 li
332.011 601.44 li
332.011 601.2 332.071 600.96 332.251 600.84 cv
340.051 592.98 li
340.231 592.86 340.471 592.74 340.651 592.74 cv
340.711 592.74 li
340.711 594.42 li
340.651 594.42 li
340.471 594.42 340.231 594.36 340.051 594.18 cv
332.251 586.32 li
332.071 586.2 332.011 585.96 332.011 585.78 cv
332.011 585.66 li
333.691 585.66 li
333.691 585.78 li
333.691 585.96 333.571 586.2 333.451 586.32 cv
325.591 594.18 li
325.411 594.36 325.231 594.42 324.991 594.42 cv
324.931 594.42 li
324.931 592.74 li
324.991 592.74 li
325.231 592.74 325.411 592.86 325.591 592.98 cv
.728786 .437995 .0408331 0 cmyk
f
322.171 546.96 mo
322.111 546.96 li
322.171 546.96 li
330.031 539.16 li
330.031 539.1 li
330.031 539.16 li
337.831 546.96 li
337.951 546.96 li
337.831 546.96 li
330.031 554.82 li
330.031 554.88 li
330.031 554.82 li
.713222 .423743 .0417182 0 cmyk
f
321.571 547.56 mo
322.171 547.8 li
322.111 547.8 li
321.631 547.8 321.271 547.44 321.271 546.96 cv
321.271 546.54 321.631 546.12 322.111 546.12 cv
322.171 546.12 li
321.571 546.36 li
329.431 538.56 li
329.191 539.16 li
329.191 539.1 li
329.191 538.62 329.551 538.26 330.031 538.26 cv
330.511 538.26 330.871 538.62 330.871 539.1 cv
330.871 539.16 li
330.631 538.56 li
338.431 546.36 li
337.831 546.12 li
337.951 546.12 li
338.371 546.12 338.731 546.54 338.731 546.96 cv
338.731 547.44 338.371 547.8 337.951 547.8 cv
337.831 547.8 li
338.431 547.56 li
330.631 555.42 li
330.871 554.82 li
330.871 554.88 li
330.871 555.36 330.511 555.72 330.031 555.72 cv
329.551 555.72 329.191 555.36 329.191 554.88 cv
329.191 554.82 li
329.431 555.42 li
cp
330.631 554.22 mo
330.751 554.4 330.871 554.58 330.871 554.82 cv
330.871 554.88 li
329.191 554.88 li
329.191 554.82 li
329.191 554.58 329.251 554.4 329.431 554.22 cv
337.291 546.36 li
337.411 546.24 337.651 546.12 337.831 546.12 cv
337.951 546.12 li
337.951 547.8 li
337.831 547.8 li
337.651 547.8 337.411 547.74 337.291 547.56 cv
329.431 539.76 li
329.251 539.58 329.191 539.34 329.191 539.16 cv
329.191 539.1 li
330.871 539.1 li
330.871 539.16 li
330.871 539.34 330.751 539.58 330.631 539.76 cv
322.771 547.56 li
322.591 547.74 322.411 547.8 322.171 547.8 cv
322.111 547.8 li
322.111 546.12 li
322.171 546.12 li
322.411 546.12 322.591 546.24 322.771 546.36 cv
.728786 .437995 .0408331 0 cmyk
f
324.211 500.52 mo
324.151 500.52 li
324.211 500.52 li
332.011 492.66 li
332.011 492.6 li
332.011 492.66 li
339.871 500.52 li
339.931 500.52 li
339.871 500.52 li
332.011 508.32 li
332.011 508.38 li
332.011 508.32 li
.713222 .423743 .0417182 0 cmyk
f
323.611 501.12 mo
324.211 501.36 li
324.151 501.36 li
323.671 501.36 323.311 500.94 323.311 500.52 cv
323.311 500.04 323.671 499.68 324.151 499.68 cv
324.211 499.68 li
323.611 499.92 li
331.411 492.06 li
331.171 492.66 li
331.171 492.6 li
331.171 492.12 331.591 491.76 332.011 491.76 cv
332.491 491.76 332.851 492.12 332.851 492.6 cv
332.851 492.66 li
332.611 492.06 li
340.471 499.92 li
339.871 499.68 li
339.931 499.68 li
340.411 499.68 340.771 500.04 340.771 500.52 cv
340.771 500.94 340.411 501.36 339.931 501.36 cv
339.871 501.36 li
340.471 501.12 li
332.611 508.92 li
332.851 508.32 li
332.851 508.38 li
332.851 508.86 332.491 509.22 332.011 509.22 cv
331.591 509.22 331.171 508.86 331.171 508.38 cv
331.171 508.32 li
331.411 508.92 li
cp
332.611 507.72 mo
332.791 507.9 332.851 508.14 332.851 508.32 cv
332.851 508.38 li
331.171 508.38 li
331.171 508.32 li
331.171 508.14 331.291 507.9 331.411 507.72 cv
339.271 499.92 li
339.451 499.74 339.631 499.68 339.871 499.68 cv
339.931 499.68 li
339.931 501.36 li
339.871 501.36 li
339.631 501.36 339.451 501.24 339.271 501.12 cv
331.411 493.26 li
331.291 493.08 331.171 492.9 331.171 492.66 cv
331.171 492.6 li
332.851 492.6 li
332.851 492.66 li
332.851 492.9 332.791 493.08 332.611 493.26 cv
324.811 501.12 li
324.631 501.24 324.391 501.36 324.211 501.36 cv
324.151 501.36 li
324.151 499.68 li
324.211 499.68 li
324.391 499.68 324.631 499.74 324.811 499.92 cv
.728786 .437995 .0408331 0 cmyk
f
334.111 454.02 mo
334.051 454.02 li
334.111 454.02 li
341.911 446.22 li
341.911 446.1 li
341.911 446.22 li
349.771 454.02 li
349.831 454.02 li
349.771 454.02 li
341.911 461.88 li
341.911 461.94 li
341.911 461.88 li
.713222 .423743 .0417182 0 cmyk
f
333.511 454.62 mo
334.111 454.86 li
334.051 454.86 li
333.571 454.86 333.211 454.5 333.211 454.02 cv
333.211 453.54 333.571 453.18 334.051 453.18 cv
334.111 453.18 li
333.511 453.42 li
341.371 445.62 li
341.131 446.22 li
341.131 446.1 li
341.131 445.68 341.491 445.26 341.911 445.26 cv
342.391 445.26 342.751 445.68 342.751 446.1 cv
342.751 446.22 li
342.511 445.62 li
350.371 453.42 li
349.771 453.18 li
349.831 453.18 li
350.311 453.18 350.671 453.54 350.671 454.02 cv
350.671 454.5 350.311 454.86 349.831 454.86 cv
349.771 454.86 li
350.371 454.62 li
342.511 462.48 li
342.751 461.88 li
342.751 461.94 li
342.751 462.42 342.391 462.78 341.911 462.78 cv
341.491 462.78 341.131 462.42 341.131 461.94 cv
341.131 461.88 li
341.371 462.48 li
cp
342.511 461.28 mo
342.691 461.4 342.751 461.64 342.751 461.88 cv
342.751 461.94 li
341.131 461.94 li
341.131 461.88 li
341.131 461.64 341.191 461.4 341.371 461.28 cv
349.171 453.42 li
349.351 453.3 349.531 453.18 349.771 453.18 cv
349.831 453.18 li
349.831 454.86 li
349.771 454.86 li
349.531 454.86 349.351 454.8 349.171 454.62 cv
341.371 446.76 li
341.191 446.64 341.131 446.4 341.131 446.22 cv
341.131 446.1 li
342.751 446.1 li
342.751 446.22 li
342.751 446.4 342.691 446.64 342.511 446.76 cv
334.711 454.62 li
334.531 454.8 334.351 454.86 334.111 454.86 cv
334.051 454.86 li
334.051 453.18 li
334.111 453.18 li
334.351 453.18 334.531 453.3 334.711 453.42 cv
.728786 .437995 .0408331 0 cmyk
f
320.551 407.58 mo
320.491 407.58 li
320.551 407.58 li
328.411 399.72 li
328.411 399.66 li
328.411 399.72 li
336.271 407.58 li
336.331 407.58 li
336.271 407.58 li
328.411 415.38 li
328.411 415.44 li
328.411 415.38 li
.713222 .423743 .0417182 0 cmyk
f
320.011 408.12 mo
320.551 408.42 li
320.491 408.42 li
320.071 408.42 319.651 408 319.651 407.58 cv
319.651 407.1 320.071 406.74 320.491 406.74 cv
320.551 406.74 li
320.011 406.98 li
327.811 399.12 li
327.571 399.72 li
327.571 399.66 li
327.571 399.18 327.931 398.82 328.411 398.82 cv
328.891 398.82 329.251 399.18 329.251 399.66 cv
329.251 399.72 li
329.011 399.12 li
336.811 406.98 li
336.271 406.74 li
336.331 406.74 li
336.751 406.74 337.171 407.1 337.171 407.58 cv
337.171 408 336.751 408.42 336.331 408.42 cv
336.271 408.42 li
336.811 408.12 li
329.011 415.98 li
329.251 415.38 li
329.251 415.44 li
329.251 415.92 328.891 416.28 328.411 416.28 cv
327.931 416.28 327.571 415.92 327.571 415.44 cv
327.571 415.38 li
327.811 415.98 li
cp
329.011 414.78 mo
329.191 414.96 329.251 415.14 329.251 415.38 cv
329.251 415.44 li
327.571 415.44 li
327.571 415.38 li
327.571 415.14 327.691 414.96 327.811 414.78 cv
335.671 406.98 li
335.791 406.8 336.031 406.74 336.271 406.74 cv
336.331 406.74 li
336.331 408.42 li
336.271 408.42 li
336.031 408.42 335.791 408.3 335.671 408.12 cv
327.811 400.32 li
327.691 400.14 327.571 399.96 327.571 399.72 cv
327.571 399.66 li
329.251 399.66 li
329.251 399.72 li
329.251 399.96 329.191 400.14 329.011 400.32 cv
321.151 408.12 li
321.031 408.3 320.791 408.42 320.551 408.42 cv
320.491 408.42 li
320.491 406.74 li
320.551 406.74 li
320.791 406.74 321.031 406.8 321.151 406.98 cv
.728786 .437995 .0408331 0 cmyk
f
317.071 361.08 mo
317.011 361.08 li
317.071 361.08 li
324.931 353.22 li
324.931 353.16 li
324.931 353.22 li
332.791 361.08 li
332.851 361.08 li
332.791 361.08 li
324.931 368.94 li
324.931 369 li
324.931 368.94 li
.713222 .423743 .0417182 0 cmyk
f
316.531 361.68 mo
317.071 361.92 li
317.011 361.92 li
316.591 361.92 316.171 361.56 316.171 361.08 cv
316.171 360.6 316.591 360.24 317.011 360.24 cv
317.071 360.24 li
316.531 360.48 li
324.331 352.68 li
324.091 353.22 li
324.091 353.16 li
324.091 352.74 324.451 352.32 324.931 352.32 cv
325.411 352.32 325.771 352.74 325.771 353.16 cv
325.771 353.22 li
325.531 352.68 li
333.331 360.48 li
332.791 360.24 li
332.851 360.24 li
333.271 360.24 333.691 360.6 333.691 361.08 cv
333.691 361.56 333.271 361.92 332.851 361.92 cv
332.791 361.92 li
333.331 361.68 li
325.531 369.48 li
325.771 368.94 li
325.771 369 li
325.771 369.42 325.411 369.84 324.931 369.84 cv
324.451 369.84 324.091 369.42 324.091 369 cv
324.091 368.94 li
324.331 369.48 li
cp
325.531 368.34 mo
325.651 368.46 325.771 368.7 325.771 368.94 cv
325.771 369 li
324.091 369 li
324.091 368.94 li
324.091 368.7 324.211 368.46 324.331 368.34 cv
332.191 360.48 li
332.311 360.36 332.551 360.24 332.791 360.24 cv
332.851 360.24 li
332.851 361.92 li
332.791 361.92 li
332.551 361.92 332.311 361.8 332.191 361.68 cv
324.331 353.82 li
324.211 353.7 324.091 353.46 324.091 353.22 cv
324.091 353.16 li
325.771 353.16 li
325.771 353.22 li
325.771 353.46 325.651 353.7 325.531 353.82 cv
317.671 361.68 li
317.551 361.8 317.311 361.92 317.071 361.92 cv
317.011 361.92 li
317.011 360.24 li
317.071 360.24 li
317.311 360.24 317.551 360.36 317.671 360.48 cv
.728786 .437995 .0408331 0 cmyk
f
313.351 314.46 mo
313.291 314.46 li
313.351 314.46 li
321.151 306.66 li
321.151 306.54 li
321.151 306.66 li
329.011 314.46 li
329.071 314.46 li
329.011 314.46 li
321.151 322.32 li
321.151 322.38 li
321.151 322.32 li
.713222 .423743 .0417182 0 cmyk
f
312.751 315.06 mo
313.351 315.3 li
313.291 315.3 li
312.811 315.3 312.451 314.94 312.451 314.46 cv
312.451 313.98 312.811 313.62 313.291 313.62 cv
313.351 313.62 li
312.751 313.86 li
320.611 306.06 li
320.371 306.66 li
320.371 306.54 li
320.371 306.12 320.731 305.76 321.151 305.76 cv
321.631 305.76 321.991 306.12 321.991 306.54 cv
321.991 306.66 li
321.751 306.06 li
329.611 313.86 li
329.011 313.62 li
329.071 313.62 li
329.551 313.62 329.911 313.98 329.911 314.46 cv
329.911 314.94 329.551 315.3 329.071 315.3 cv
329.011 315.3 li
329.611 315.06 li
321.751 322.92 li
321.991 322.32 li
321.991 322.38 li
321.991 322.86 321.631 323.22 321.151 323.22 cv
320.731 323.22 320.371 322.86 320.371 322.38 cv
320.371 322.32 li
320.611 322.92 li
cp
321.751 321.72 mo
321.931 321.9 321.991 322.08 321.991 322.32 cv
321.991 322.38 li
320.371 322.38 li
320.371 322.32 li
320.371 322.08 320.431 321.9 320.611 321.72 cv
328.411 313.86 li
328.591 313.74 328.771 313.62 329.011 313.62 cv
329.071 313.62 li
329.071 315.3 li
329.011 315.3 li
328.771 315.3 328.591 315.24 328.411 315.06 cv
320.611 307.2 li
320.431 307.08 320.371 306.84 320.371 306.66 cv
320.371 306.54 li
321.991 306.54 li
321.991 306.66 li
321.991 306.84 321.931 307.08 321.751 307.2 cv
313.951 315.06 li
313.771 315.24 313.591 315.3 313.351 315.3 cv
313.291 315.3 li
313.291 313.62 li
313.351 313.62 li
313.591 313.62 313.771 313.74 313.951 313.86 cv
.728786 .437995 .0408331 0 cmyk
f
315.871 268.02 mo
315.811 268.02 li
315.871 268.02 li
323.731 260.16 li
323.731 260.1 li
323.731 260.16 li
331.531 268.02 li
331.651 268.02 li
331.531 268.02 li
323.731 275.82 li
323.731 275.88 li
323.731 275.82 li
.713222 .423743 .0417182 0 cmyk
f
315.271 268.56 mo
315.871 268.86 li
315.811 268.86 li
315.391 268.86 314.971 268.44 314.971 268.02 cv
314.971 267.54 315.391 267.18 315.811 267.18 cv
315.871 267.18 li
315.271 267.42 li
323.131 259.56 li
322.891 260.16 li
322.891 260.1 li
322.891 259.62 323.251 259.26 323.731 259.26 cv
324.211 259.26 324.571 259.62 324.571 260.1 cv
324.571 260.16 li
324.331 259.56 li
332.131 267.42 li
331.531 267.18 li
331.651 267.18 li
332.071 267.18 332.491 267.54 332.491 268.02 cv
332.491 268.44 332.071 268.86 331.651 268.86 cv
331.531 268.86 li
332.131 268.56 li
324.331 276.42 li
324.571 275.82 li
324.571 275.88 li
324.571 276.36 324.211 276.72 323.731 276.72 cv
323.251 276.72 322.891 276.36 322.891 275.88 cv
322.891 275.82 li
323.131 276.42 li
cp
324.331 275.22 mo
324.451 275.4 324.571 275.64 324.571 275.82 cv
324.571 275.88 li
322.891 275.88 li
322.891 275.82 li
322.891 275.64 322.951 275.4 323.131 275.22 cv
330.991 267.42 li
331.111 267.24 331.351 267.18 331.531 267.18 cv
331.651 267.18 li
331.651 268.86 li
331.531 268.86 li
331.351 268.86 331.111 268.74 330.991 268.56 cv
323.131 260.76 li
322.951 260.58 322.891 260.4 322.891 260.16 cv
322.891 260.1 li
324.571 260.1 li
324.571 260.16 li
324.571 260.4 324.451 260.58 324.331 260.76 cv
316.471 268.56 li
316.351 268.74 316.111 268.86 315.871 268.86 cv
315.811 268.86 li
315.811 267.18 li
315.871 267.18 li
316.111 267.18 316.351 267.24 316.471 267.42 cv
.728786 .437995 .0408331 0 cmyk
f
365.551 640.2 mo
361.951 593.7 li
359.911 547.08 li
358.831 500.52 li
357.391 454.08 li
354.991 407.64 li
356.971 360.9 li
353.071 314.7 li
353.131 267.96 li
353.131 266.64 354.271 265.5 355.651 265.5 cv
356.971 265.5 358.111 266.64 358.111 268.02 cv
358.051 314.28 li
361.951 361.08 li
359.971 407.34 li
362.371 453.9 li
363.811 500.46 li
364.891 546.9 li
366.931 593.28 li
370.531 639.78 li
370.651 641.16 369.631 642.36 368.251 642.48 cv
366.871 642.6 365.671 641.58 365.551 640.2 cv
.26978 .825711 .676448 0 cmyk
f
360.271 647.82 mo
375.931 647.82 li
375.931 632.16 li
360.271 632.16 li
cp
.260136 .804379 .644221 0 cmyk
f
360.271 648.66 mo
359.851 648.66 359.431 648.3 359.431 647.82 cv
359.431 632.16 li
359.431 631.68 359.851 631.32 360.271 631.32 cv
375.931 631.32 li
376.411 631.32 376.771 631.68 376.771 632.16 cv
376.771 647.82 li
376.771 648.3 376.411 648.66 375.931 648.66 cv
cp
375.931 646.98 mo
375.151 647.82 li
375.151 632.16 li
375.931 633 li
360.271 633 li
361.111 632.16 li
361.111 647.82 li
360.271 646.98 li
.26978 .825711 .676448 0 cmyk
f
356.671 601.38 mo
372.331 601.38 li
372.331 585.66 li
356.671 585.66 li
cp
.260136 .804379 .644221 0 cmyk
f
356.671 602.22 mo
356.191 602.22 355.831 601.8 355.831 601.38 cv
355.831 585.66 li
355.831 585.24 356.191 584.82 356.671 584.82 cv
372.331 584.82 li
372.811 584.82 373.171 585.24 373.171 585.66 cv
373.171 601.38 li
373.171 601.8 372.811 602.22 372.331 602.22 cv
cp
372.331 600.54 mo
371.491 601.38 li
371.491 585.66 li
372.331 586.5 li
356.671 586.5 li
357.511 585.66 li
357.511 601.38 li
356.671 600.54 li
.26978 .825711 .676448 0 cmyk
f
354.691 554.76 mo
370.351 554.76 li
370.351 539.1 li
354.691 539.1 li
cp
.260136 .804379 .644221 0 cmyk
f
354.691 555.6 mo
354.211 555.6 353.851 555.18 353.851 554.76 cv
353.851 539.1 li
353.851 538.62 354.211 538.26 354.691 538.26 cv
370.351 538.26 li
370.771 538.26 371.191 538.62 371.191 539.1 cv
371.191 554.76 li
371.191 555.18 370.771 555.6 370.351 555.6 cv
cp
370.351 553.92 mo
369.511 554.76 li
369.511 539.1 li
370.351 539.94 li
354.691 539.94 li
355.471 539.1 li
355.471 554.76 li
354.691 553.92 li
.26978 .825711 .676448 0 cmyk
f
353.431 508.26 mo
369.151 508.26 li
369.151 492.6 li
353.431 492.6 li
cp
.260136 .804379 .644221 0 cmyk
f
353.431 509.1 mo
353.011 509.1 352.651 508.74 352.651 508.26 cv
352.651 492.6 li
352.651 492.12 353.011 491.76 353.431 491.76 cv
369.151 491.76 li
369.571 491.76 369.991 492.12 369.991 492.6 cv
369.991 508.26 li
369.991 508.74 369.571 509.1 369.151 509.1 cv
cp
369.151 507.42 mo
368.311 508.26 li
368.311 492.6 li
369.151 493.44 li
353.431 493.44 li
354.271 492.6 li
354.271 508.26 li
353.431 507.42 li
.26978 .825711 .676448 0 cmyk
f
352.111 461.82 mo
367.771 461.82 li
367.771 446.1 li
352.111 446.1 li
cp
.260136 .804379 .644221 0 cmyk
f
352.111 462.66 mo
351.631 462.66 351.271 462.24 351.271 461.82 cv
351.271 446.1 li
351.271 445.68 351.631 445.26 352.111 445.26 cv
367.771 445.26 li
368.251 445.26 368.611 445.68 368.611 446.1 cv
368.611 461.82 li
368.611 462.24 368.251 462.66 367.771 462.66 cv
cp
367.771 460.98 mo
366.931 461.82 li
366.931 446.1 li
367.771 446.94 li
352.111 446.94 li
352.951 446.1 li
352.951 461.82 li
352.111 460.98 li
.26978 .825711 .676448 0 cmyk
f
349.711 415.32 mo
365.371 415.32 li
365.371 399.66 li
349.711 399.66 li
cp
.260136 .804379 .644221 0 cmyk
f
349.711 416.16 mo
349.231 416.16 348.871 415.8 348.871 415.32 cv
348.871 399.66 li
348.871 399.18 349.231 398.82 349.711 398.82 cv
365.371 398.82 li
365.851 398.82 366.211 399.18 366.211 399.66 cv
366.211 415.32 li
366.211 415.8 365.851 416.16 365.371 416.16 cv
cp
365.371 414.48 mo
364.531 415.32 li
364.531 399.66 li
365.371 400.5 li
349.711 400.5 li
350.551 399.66 li
350.551 415.32 li
349.711 414.48 li
.26978 .825711 .676448 0 cmyk
f
351.691 368.82 mo
367.411 368.82 li
367.411 353.16 li
351.691 353.16 li
cp
.260136 .804379 .644221 0 cmyk
f
351.691 369.66 mo
351.271 369.66 350.851 369.3 350.851 368.82 cv
350.851 353.16 li
350.851 352.74 351.271 352.32 351.691 352.32 cv
367.411 352.32 li
367.831 352.32 368.251 352.74 368.251 353.16 cv
368.251 368.82 li
368.251 369.3 367.831 369.66 367.411 369.66 cv
cp
367.411 368.04 mo
366.571 368.82 li
366.571 353.16 li
367.411 354 li
351.691 354 li
352.531 353.16 li
352.531 368.82 li
351.691 368.04 li
.26978 .825711 .676448 0 cmyk
f
347.851 322.26 mo
363.511 322.26 li
363.511 306.54 li
347.851 306.54 li
cp
.260136 .804379 .644221 0 cmyk
f
347.851 323.1 mo
347.371 323.1 347.011 322.68 347.011 322.26 cv
347.011 306.54 li
347.011 306.12 347.371 305.76 347.851 305.76 cv
363.511 305.76 li
363.991 305.76 364.351 306.12 364.351 306.54 cv
364.351 322.26 li
364.351 322.68 363.991 323.1 363.511 323.1 cv
cp
363.511 321.42 mo
362.671 322.26 li
362.671 306.54 li
363.511 307.38 li
347.851 307.38 li
348.691 306.54 li
348.691 322.26 li
347.851 321.42 li
.26978 .825711 .676448 0 cmyk
f
347.851 275.761 mo
363.511 275.761 li
363.511 260.101 li
347.851 260.101 li
cp
.260136 .804379 .644221 0 cmyk
f
347.851 276.6 mo
347.371 276.6 347.011 276.24 347.011 275.76 cv
347.011 260.1 li
347.011 259.62 347.371 259.26 347.851 259.26 cv
363.511 259.26 li
363.991 259.26 364.351 259.62 364.351 260.1 cv
364.351 275.76 li
364.351 276.24 363.991 276.6 363.511 276.6 cv
cp
363.511 274.92 mo
362.671 275.76 li
362.671 260.1 li
363.511 260.94 li
347.851 260.94 li
348.691 260.1 li
348.691 275.76 li
347.851 274.92 li
.26978 .825711 .676448 0 cmyk
f
344.431 642.42 mo
124.591 595.92 li
123.691 595.74 122.971 595.08 122.671 594.18 cv
109.711 547.68 li
109.591 547.14 109.651 546.54 109.831 546 cv
129.811 499.5 li
129.991 499.2 130.171 498.9 130.411 498.66 cv
179.371 452.16 li
179.851 456.18 li
96.6907 409.68 li
96.2707 409.38 95.8507 409.02 95.6707 408.54 cv
74.1307 362.04 li
74.0107 361.8 73.9507 361.62 73.8907 361.38 cv
66.7507 314.88 li
58.4107 268.44 li
58.1707 267.06 59.0707 265.8 60.3907 265.56 cv
61.7707 265.32 63.0307 266.22 63.2707 267.54 cv
71.6707 314.1 li
78.8107 360.6 li
78.6307 359.94 li
100.171 406.44 li
99.1507 405.3 li
182.311 451.8 li
182.971 452.22 183.451 452.88 183.571 453.66 cv
183.631 454.44 183.391 455.28 182.791 455.82 cv
133.831 502.32 li
134.431 501.48 li
114.451 547.98 li
114.511 546.3 li
127.471 592.8 li
125.611 591.06 li
345.451 637.56 li
346.771 637.86 347.671 639.18 347.371 640.5 cv
347.071 641.88 345.751 642.72 344.431 642.42 cv
.46891 .123842 .796139 0 cmyk
f
337.051 640.08 mo
336.991 640.08 li
337.051 640.08 li
352.771 632.22 li
352.771 632.16 li
352.771 647.94 li
352.771 647.88 li
.457588 .119387 .770962 0 cmyk
f
336.691 640.8 mo
337.051 640.92 li
336.991 640.92 li
336.511 640.92 336.151 640.5 336.151 640.08 cv
336.151 639.6 336.511 639.24 336.991 639.24 cv
337.051 639.24 li
336.691 639.3 li
352.411 631.5 li
351.931 632.22 li
351.931 631.02 li
353.611 631.02 li
353.611 647.94 li
353.611 649.08 351.931 649.08 351.931 647.94 cv
351.931 647.88 li
352.411 648.66 li
cp
353.191 647.16 mo
353.431 647.28 353.611 647.58 353.611 647.88 cv
353.611 647.94 li
351.931 647.94 li
351.931 632.16 li
353.611 632.16 li
353.611 632.22 li
353.611 632.52 353.431 632.82 353.191 633 cv
337.411 640.8 li
337.291 640.86 337.171 640.92 337.051 640.92 cv
336.991 640.92 li
336.991 639.24 li
337.051 639.24 li
337.171 639.24 337.291 639.24 337.411 639.3 cv
.46891 .123842 .796139 0 cmyk
f
117.271 593.58 mo
117.211 593.58 li
117.271 593.58 li
132.991 585.78 li
132.991 585.66 li
132.991 601.5 li
132.991 601.44 li
.457588 .119387 .770962 0 cmyk
f
116.911 594.36 mo
117.271 594.42 li
117.211 594.42 li
116.071 594.42 116.071 592.74 117.211 592.74 cv
117.271 592.74 li
116.911 592.86 li
132.631 585 li
132.151 585.78 li
132.151 584.58 li
133.831 584.58 li
133.831 601.5 li
133.831 602.58 132.151 602.58 132.151 601.5 cv
132.151 601.44 li
132.631 602.16 li
cp
133.351 600.66 mo
133.651 600.84 133.831 601.08 133.831 601.44 cv
133.831 601.5 li
132.151 601.5 li
132.151 585.66 li
133.831 585.66 li
133.831 585.78 li
133.831 586.08 133.651 586.38 133.351 586.5 cv
117.631 594.36 li
117.511 594.42 117.391 594.42 117.271 594.42 cv
117.211 594.42 li
117.211 592.74 li
117.271 592.74 li
117.391 592.74 117.511 592.8 117.631 592.86 cv
.46891 .123842 .796139 0 cmyk
f
104.251 546.96 mo
104.191 546.96 li
104.251 546.96 li
120.031 539.16 li
120.031 539.1 li
120.031 554.88 li
120.031 554.82 li
.457588 .119387 .770962 0 cmyk
f
103.891 547.74 mo
104.251 547.8 li
104.191 547.8 li
103.111 547.8 103.111 546.12 104.191 546.12 cv
104.251 546.12 li
103.891 546.24 li
119.671 538.38 li
119.191 539.16 li
119.191 537.96 li
120.871 537.96 li
120.871 554.88 li
120.871 556.02 119.191 556.02 119.191 554.88 cv
119.191 554.82 li
119.671 555.54 li
cp
120.391 554.04 mo
120.691 554.22 120.871 554.52 120.871 554.82 cv
120.871 554.88 li
119.191 554.88 li
119.191 539.1 li
120.871 539.1 li
120.871 539.16 li
120.871 539.46 120.691 539.76 120.391 539.88 cv
104.671 547.74 li
104.551 547.8 104.431 547.8 104.251 547.8 cv
104.191 547.8 li
104.191 546.12 li
104.251 546.12 li
104.431 546.12 104.551 546.18 104.671 546.24 cv
.46891 .123842 .796139 0 cmyk
f
124.231 500.52 mo
124.171 500.52 li
124.231 500.52 li
139.951 492.66 li
139.951 492.6 li
139.951 508.38 li
139.951 508.32 li
.457588 .119387 .770962 0 cmyk
f
123.871 501.24 mo
124.231 501.36 li
124.171 501.36 li
123.691 501.36 123.331 500.94 123.331 500.52 cv
123.331 500.04 123.691 499.68 124.171 499.68 cv
124.231 499.68 li
123.871 499.74 li
139.591 491.94 li
139.111 492.66 li
139.111 491.46 li
140.791 491.46 li
140.791 508.38 li
140.791 509.52 139.111 509.52 139.111 508.38 cv
139.111 508.32 li
139.591 509.1 li
cp
140.371 507.6 mo
140.611 507.72 140.791 508.02 140.791 508.32 cv
140.791 508.38 li
139.111 508.38 li
139.111 492.6 li
140.791 492.6 li
140.791 492.66 li
140.791 492.96 140.611 493.26 140.371 493.44 cv
124.591 501.24 li
124.471 501.3 124.351 501.36 124.231 501.36 cv
124.171 501.36 li
124.171 499.68 li
124.231 499.68 li
124.351 499.68 124.471 499.68 124.591 499.74 cv
.46891 .123842 .796139 0 cmyk
f
173.251 454.02 mo
173.191 454.02 li
173.251 454.02 li
188.971 446.22 li
188.971 446.1 li
188.971 461.94 li
188.971 461.88 li
.457588 .119387 .770962 0 cmyk
f
172.891 454.8 mo
173.251 454.86 li
173.191 454.86 li
172.711 454.86 172.351 454.5 172.351 454.02 cv
172.351 453.54 172.711 453.18 173.191 453.18 cv
173.251 453.18 li
172.891 453.3 li
188.611 445.44 li
188.131 446.22 li
188.131 445.02 li
189.811 445.02 li
189.811 461.94 li
189.811 463.02 188.131 463.02 188.131 461.94 cv
188.131 461.88 li
188.611 462.6 li
cp
189.391 461.1 mo
189.631 461.28 189.811 461.52 189.811 461.88 cv
189.811 461.94 li
188.131 461.94 li
188.131 446.1 li
189.811 446.1 li
189.811 446.22 li
189.811 446.52 189.631 446.82 189.391 446.94 cv
173.611 454.8 li
173.491 454.86 173.371 454.86 173.251 454.86 cv
173.191 454.86 li
173.191 453.18 li
173.251 453.18 li
173.371 453.18 173.491 453.24 173.611 453.3 cv
.46891 .123842 .796139 0 cmyk
f
90.0907 407.58 mo
90.0306 407.58 li
90.0907 407.58 li
105.811 399.72 li
105.811 399.66 li
105.811 415.44 li
105.811 415.38 li
.457588 .119387 .770962 0 cmyk
f
89.7307 408.3 mo
90.0906 408.42 li
90.0306 408.42 li
88.8906 408.42 88.8906 406.74 90.0306 406.74 cv
90.0906 406.74 li
89.7307 406.8 li
105.451 399 li
104.971 399.72 li
104.971 398.52 li
106.651 398.52 li
106.651 415.44 li
106.651 416.58 104.971 416.58 104.971 415.44 cv
104.971 415.38 li
105.451 416.16 li
cp
106.171 414.66 mo
106.471 414.78 106.651 415.08 106.651 415.38 cv
106.651 415.44 li
104.971 415.44 li
104.971 399.66 li
106.651 399.66 li
106.651 399.72 li
106.651 400.02 106.471 400.32 106.171 400.44 cv
90.4506 408.3 li
90.3306 408.36 90.2106 408.42 90.0906 408.42 cv
90.0306 408.42 li
90.0306 406.74 li
90.0906 406.74 li
90.2106 406.74 90.3306 406.74 90.4506 406.8 cv
.46891 .123842 .796139 0 cmyk
f
68.4907 361.08 mo
68.4306 361.08 li
68.4907 361.08 li
84.2707 353.22 li
84.2707 353.16 li
84.2707 369 li
84.2707 368.94 li
.457588 .119387 .770962 0 cmyk
f
68.1307 361.8 mo
68.4906 361.92 li
68.4306 361.92 li
68.0107 361.92 67.5907 361.56 67.5907 361.08 cv
67.5907 360.6 68.0107 360.24 68.4306 360.24 cv
68.4906 360.24 li
68.1307 360.36 li
83.9107 352.5 li
83.4306 353.22 li
83.4306 352.08 li
85.1107 352.08 li
85.1107 369 li
85.1107 370.08 83.4306 370.08 83.4306 369 cv
83.4306 368.94 li
83.9107 369.66 li
cp
84.6307 368.16 mo
84.9306 368.28 85.1107 368.58 85.1107 368.94 cv
85.1107 369 li
83.4306 369 li
83.4306 353.16 li
85.1107 353.16 li
85.1107 353.22 li
85.1107 353.58 84.9306 353.88 84.6307 354 cv
68.9107 361.8 li
68.7906 361.86 68.6707 361.92 68.4906 361.92 cv
68.4306 361.92 li
68.4306 360.24 li
68.4906 360.24 li
68.6707 360.24 68.7906 360.3 68.9107 360.36 cv
.46891 .123842 .796139 0 cmyk
f
61.4107 314.46 mo
61.3507 314.46 li
61.4107 314.46 li
77.1306 306.66 li
77.1306 306.54 li
77.1306 322.38 li
77.1306 322.32 li
.457588 .119387 .770962 0 cmyk
f
61.0507 315.24 mo
61.4107 315.3 li
61.3507 315.3 li
60.8707 315.3 60.5107 314.94 60.5107 314.46 cv
60.5107 313.98 60.8707 313.62 61.3507 313.62 cv
61.4107 313.62 li
61.0507 313.74 li
76.7706 305.88 li
76.2906 306.66 li
76.2906 305.46 li
77.9707 305.46 li
77.9707 322.38 li
77.9707 323.46 76.2906 323.46 76.2906 322.38 cv
76.2906 322.32 li
76.7706 323.04 li
cp
77.5507 321.54 mo
77.7906 321.72 77.9707 321.96 77.9707 322.32 cv
77.9707 322.38 li
76.2906 322.38 li
76.2906 306.54 li
77.9707 306.54 li
77.9707 306.66 li
77.9707 306.96 77.7906 307.26 77.5507 307.38 cv
61.7707 315.24 li
61.6507 315.3 61.5307 315.3 61.4107 315.3 cv
61.3507 315.3 li
61.3507 313.62 li
61.4107 313.62 li
61.5307 313.62 61.6507 313.68 61.7707 313.74 cv
.46891 .123842 .796139 0 cmyk
f
53.0107 268.02 mo
52.8907 268.02 li
53.0107 268.02 li
68.7307 260.16 li
68.7307 260.1 li
68.7307 275.88 li
68.7307 275.82 li
.457588 .119387 .770962 0 cmyk
f
52.5907 268.741 mo
53.0107 268.861 li
52.8907 268.861 li
52.4707 268.861 52.0507 268.441 52.0507 268.021 cv
52.0507 267.541 52.4707 267.181 52.8907 267.181 cv
53.0107 267.181 li
52.5907 267.241 li
68.3707 259.441 li
67.8907 260.161 li
67.8907 258.961 li
69.5706 258.961 li
69.5706 275.881 li
69.5706 277.021 67.8907 277.021 67.8907 275.881 cv
67.8907 275.821 li
68.3707 276.601 li
cp
69.0907 275.101 mo
69.3907 275.221 69.5706 275.521 69.5706 275.821 cv
69.5706 275.881 li
67.8907 275.881 li
67.8907 260.101 li
69.5706 260.101 li
69.5706 260.161 li
69.5706 260.461 69.3907 260.761 69.0907 260.941 cv
53.3707 268.741 li
53.2507 268.801 53.1307 268.861 53.0107 268.861 cv
52.8907 268.861 li
52.8907 267.181 li
53.0107 267.181 li
53.1307 267.181 53.2507 267.181 53.3707 267.241 cv
.46891 .123842 .796139 0 cmyk
f
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LWYAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /LWYAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9ddb6d7000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c796644ddcaab0000b0980000235468656164ecde32e100000f640000
0036686865610dad126500000f9c00000024686d74785230b9e300000fc0
00003c946c6f636101c75b7e00004c5400003c9c6d617870214726250000
88f0000000206e616d65ef6ecccb0000891000000377707265706baf02fe
00008c8800002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
feff0600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d0000000100000005b852b1bccf225f0f3cf500190800
00000000bbeb7ccc00000000cbdab383fbfafd8b09ec07b6000000090002
000100000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000f24040e0000000000000000000001cf000004a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
04a1002304a1002304a10023061bffcc061bffcc045a00ac044400610444
00610444006104440061044400610444006104ec00ac04ec009704ff001b
04ff001b03e800ac03e8004503e800ac03e8004603e8004603e8006303e8
005f03e8008103e800ac03e800ac03ad00ac050c005b050c005b050c005b
050c005b050c005b04fc00ac04fc00ac05400020020400ac0204ff4a0204
00280204ff390204ff310204ff500204ff4f0204ff7b0204001e02040027
049200ac028d0007028dffa9042800ac042800ac035d00ac035d00810362
00ac035d00ac0370001c045e00ac06d700ac052a00ac052a00ac052a00ac
052a00ac052a00ac050700ac054c0063054c0063054c0063054c0063054c
0063054c0063054c0063054c0063054c0063054f0063054f006306ef0063
042200ac042200ac05620063045800ac045800ac04580053045800ac03ad
004703ad004703ad001503ad001803ad004703ad004703e6000f03e6000f
03e6000f03e6000f052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa048a0022071e003d
071e003d071e003d071e003d071e003d0427003003e6001e03e6001e03e6
001e03e6001e03e6001e03bf003b03bf003b03bf001a03bf003b03f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f40010055cffe2055cffe2040400a103cb006d03cb006d
03cb006d03cb006d03cb006d03cb006d046500a10465006a047700320477
0032038000a103800030038000a103800020038000200380002c03800029
03800042038000a1038000a1035000a10482006c0482006c0482006c0482
006c0482006c047800a10478008c049d004001ec00a101ecff5801ec0019
01ecff4801ecff2701ecff5501ecff5201ecff7101ec001101ec0018041b
00a1023e0000023eff8c03c900a103c900a102e000a102e0008702e600a1
02e000a102f0003203d500a1060600a1049100a1049100a1049100990491
0078049100a1046600a104aa006604aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006604ba006604ba00660606006603c5
00a103c500a104b1006603ed00a103ed00a103ed004503ed00a1034f0049
034f0049034ffff5034ffff6034f0049034f00490359001c0359fffe0359
001c0359001c048d009f048d009c048d009f048d0097048d0075048d009f
048d009f048d009f048d009f048d009f048d009f03fd0021063e0037063e
0037063e0037063e0037063e003703cc0036038300100383001003830010
03830010038300100369004403690044036900080369004403d5005c03d5
005c03d5005c03d5005c03d5001e03d5005c03d5005c03d5005c03d5005c
03d5005c03d5005c062f005c062f005c043400990362005a0362005a0362
004e036200570362005a0362005a076f005a06dd005a0601005a0601005a
04340060048c0060046a00600434006103fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d02710025
069a002508d5002504ab0025069b002508d50025043c0025043c0025043c
0025043c0025044f0025044f0025044f0025044f0025043c0025043c0025
067600250676002506760025067600250689002506890025068900250689
00250676002506760025043c0025043c0025067600250609002508430025
043c0025043c002504830025043c00250676002504ed002504ed00250513
00250728002503c4003503c4003503c4003503c4003503c4003504340060
04340060043400600434006004340060043400990434ffad0443fff901d6
008501d6ff6e01d6000f01d6ff5a01d6ff2001d6ff7201d6ff5801d6ff67
01d6001101d6009903c00085041e008801eaffd501eaffd501eaff6303a3
009903a3009903a3009901d6009901d6002a021c009901d6004b01fb001c
02fd0099066400990434009904340099043400990434004e0434009904a2
ff9d043400990438005a0438005a0438005a0438005a0438004f0438005a
0438005a0438005a0438005a043c005a043c005a06cc005a043400990434
00990434006002ca009902ca009902cafff902ca006e0321005103210051
0321fffe0321fffd032100510321005105ae005105ae00510438009901f1
009902ae002102c4002102ae002102bc002604e600210475002104750021
047500210475002104750021047500210475002104750021047500210475
002105130021074b002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002106d90021043400940434008e0434
0094043400860434004d0434008904340086043400940434009404340094
04340094039d002205b8003505b8003505b8003505b8003505b800350377
0029039f0022039f0022039f0022039f0022039f00220329005903290059
032900070329005903380072036100640378005d02ac004402e5006c024e
004402e5004802b8004701c100240297002a02e9006c01630061016dffd8
0297006c015e006c0456006c02e6006c02e6004502e5006c02e5004801f6
006c0230004201e3002302e9006c0285001f03ef002c027e00280286001f
023700420254000002750000029400000000fd080000fce8025600000275
0000029400000000fd080000fce803290000035f0000039400000000fc9f
0000fc6703290000035f0000039400000000fc9d0000fc6901ff0000039a
000003a2000003a800000000fc650000fc600324000002f5000003460000
036700000000fca00000fc7e0327000003490000036a00000000fc9d0000
fc7d030c0000030f0000031100000000fcac0000fca90291000002980000
02a000000000fce90000fce202cf000002c2000002b5000003c1000003e1
0000040000000000fc520000fc3101ce000001d6000001ce000001ce0000
0000fd4d0000fd4d027500840000fd7a027f00840000fd7601f700840231
000004a1002304a1ff89045a00ac035300ac0484003a03e800ac03e8fec7
03bf003b04fc00ac04fcfe9e054c0063020400ac0204feb20204ff520428
00ac0495002406d700ac052a00ac03ef0053054c0063054cff1604fc00ac
042200ac03ab004603e6000f03e6001e03e6fe6e03e6001e061300000427
0030060000900550005e0550fef903f4001003f40010040400a102fb00a1
03c90023038000a1038000a103690044047800a1047800a104b4006601ec
00a101ec000001ecff5403c900a103e10011060600a1049100a10387005e
04aa006604aa0066047800a103c500a1035b004b0359001c038300100383
0010038300100552000003cc00360558008704b1006604b10066048a0061
048a00610440009904320064039200180430000003a5005903a5005902c8
004e044c0099044c00990441006004780006023200940232ffec0232ff7a
0232ff0f03a3009903b4000004660099039700220302004d0303004d0438
005a0438005a046c002804120076044100590349005c0319000304550090
045500900455007d0455001605360055053b00550369001205a900940592
006405920064028900000000fd0a03f400000000fc360205009702050097
020500970224004801ff006e01ff006e04a10023044d00ad045a00ac0370
00ac037000ac037600ac0527000303e800ac03e8004503e8006106680055
03ca004b052200ac052200ac052200ac020400ac0204ff50028d00070458
00ac045800ac04e3000306fa000306d700ac04fc00ac070300ac054c0063
054c006304f900ac042200ac0444006103ad004703e6000f0438000f0438
000f04b800220594000004270030051c00ac04f500ac0472007406f200ac
071e00ac04eb000f061800ac044000ac0462005d04610062070800ac0471
005304ff000f04f2000f0504000003f4001003ee00a2040400a1031400a1
031400a1032700a10480000e038000a1038000300380002c057800440380
0057048900a1048900960489009501ec00a101ecff55023e000003ca00a1
03ca00a104320001060600a1047800a104aa006604a90066046a00a103c5
00a103cb006d034f00490359001c039d001e039d001b042f0022050a0000
03cc0036048e00a1046900a103fa006d062300a1064500a1045f00170583
00a103e800a103e4006b03f00066063200a103ff005c045f001f0463001f
044d000006010001063200a103d5005c044300000430000003d5009902c4
009902c4009902d5009901d6ff58047700170434006003fb005d03fb005d
03fb005d0583003e0362004b04530099045300780453008801d6008501d6
ff7201eaffd503b6009903b6009904150016060200130569005f04470099
062800990438005a0431005a042a009904340086043400990362005a0321
00510319000a06640099039f0022039f001803d2002204fe005103770029
045500990433009903c0004205d4009905fe0099044a000a0554009903c2
0099038b004d038d005d05c6009903cb00380453fff90443fff904270018
036e0000036e0000036e00000000fca50000fca5029b010a029b00bf029b
00bf03b5008503b5005e03b5005e03de0064026000ed026000b10364007a
0361005f01ff002a02240048022400bb020500970586009601ff008c01ff
002a01ff008c01ff002a035900880359002b035900880359002b01ff002a
0359002b02b6007402b600c002b6007402b600c004190075041900ad0419
0075041900ad0317000102df001f03af018a03fc01ae0317000b02df002d
027300450273004503fcfff603fcfff6073e0095073e0095073e0095073e
009503fcfff903fc00c10205009702050097026d0085026d007a027400bf
0274005a0284005602840075024000840240007a024a00b0024a0067026d
0085026d007a027400bf0274005a028400560284007503fc009e03fc0077
03fc007803fc007604b0006b043d006e03fc006a03fc003d01c4008b0335
008b057500000556000007f7000007270000073c00000727000006ad00af
06ad00af040e008005a4003f05ac004d02b6000003fc003f04b30049040e
002a03fc0057040e00600434005803fc00b903fc004a040e005303fc006d
0419002b040e003403f30035039f006103be005f039f0058039f00250621
0049083300ac03fc002406e300a10411001d0494005f02cb002303ec0062
03ec00510455002203d700510436007e03b20035043600630436005c040e
0048040e00ae040e0072040e0067040e0020040e0065040e006b040e0063
040e0052040e005204430067028d00190381005c0373005903ac00260368
006103b7006e0349002f03b5004b03bc0052039f0050039f008d039f0065
039f0062039f003a039f0067039f0061039f005e039f0051039f00500494
005f02cb002303ec006203ec00510428002203d700510436007e03b20035
043600630436005c040e0048040e00ae040e0072040e0067040e0030040e
0065040e006b040e0063040e0052040e00520321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc00580321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc0058029d003801f500310252003c
0249002d024a001402460032025100300238002202570025024d0023029d
003801f500310252003c0249002d024a0014024600320251003002380022
02570025024d002302b1ff4b03130044055f004405690044051700440569
0044052e00440553004405c9004e05c9004e0567004705b7004705a20047
05cd0027057d004505a20045052a003505b80048084e0048057d005c07c9
005c03fc004603fc004c03fc006003fc002b03fc005e03fc006003fc0059
03fc004503fc006503fc004c03fc005503fc005603fc003d05e9002c0405
003506d300690443006102ed000703fc00080484003a0550005e04660099
066500660454005b0416004a073e009a073e0096073e00c9073e00c9070e
00af070e013a070e00af070e013a0a4e009a0638009f04660028018a0000
01da00000466000004660000046600000466000004660000046600000466
000004660000046600000466000004660000046600000466000004660000
0466000004660000046601d004a1002304a1002304a1002304a1001904a1
001504a1001d04a1002304a1001c04a1001c04a1001c04a1001d04a10023
03e800ac03e800ac03e8003703e8ffe803e8ffe903e8ffe803e8ffe803e8
003702040015020400a0054c0063054c0063054c0063054c0063054c0063
054c0063054c006305940063059400630594006305940063059400630594
0063052200aa052200aa05c600aa05c600aa05c600aa05c600aa05c600aa
05c600aa03e6001e03e6001e03e6001e03d5005c03d5005c03d5ffbb03d5
ffb103d5ffb803d5ffb803d5005703d5ffb803d5ffb803d5ffb803d5ffb8
03d5005c03fb005d03fb005d03fb003003fbffdb03fbffdb03fbffd903fb
ffcb03fb005d01d6002601d600850438005a0438005a0438ffe80438ffea
0438ffe80438ffea0438005a04a0005a04a0005a04a0005a04a0005a04a0
004904a0005a043400940434009404d2009404d2009404d2008c04d20094
04d2004604d20094039f0022039f0002039f0022046a00530466003803f4
001003f4001003f4ffbd03f4ffc003f4ffbd03f4ffc803f4001003f4ffc8
03f4ffc803f4ffc803f4ffc803f40010038000a1038000a10380fff00380
ffa70380ffa00380ffa20380ff8e0380001101ec000901ec009404aa0066
04aa006604aa002104aa002204aa002104aa002204aa006604ec006604ec
006604ec006604ec006604ec006604ec0066048d009f048d009f0515009f
0515009f0515009a0515009f051500750515009f038300100383fff10383
001001da0000046600000466000004660000046600000466000004660000
046600000466000004c10066052400ac052400ac050600ac049300a10493
00a1047c00a103e6000f02ae00210359001c01d60011043c0025043c0025
043c002506760025067600250676002502f5001c02e7008e0306005a034b
008e02a8008e028c008e0344005a035b008e01a6008e01cb000502e0008e
025b008e046d008e0375008d0375005a02d8008e0375005a029b00570280
0046025700040314005702e3001a0445002202b5001c028b001c02b80050
0000fdfd0000fdfd0466ffff0466ffff0466ffff0466ffff03c1ffff03c1
0000030cffff030c0000030cffff030c0002023100000231000001ffffff
01ffffff01ffffff01ffffff0000fd090000fd0902aa008202aa008202aa
009802aa009801ce008402aa008202aa008202aa008202aa0082027f008e
027f008e0324000002910084046601fd02aa001402aa0013032900000329
0000032900000329ffff039a00000327000003fcfff903fcfff9039a0000
039a00000000ff080000fe4c0000fdfb0000fdfb0000fe3f0000fe3f0000
fdc20000fdc201ce008402aa00140291008302aa001502aa009302aa0093
039a014c039a00000000fdfd0000fdfd0000fd090000fce90000fd090000
feb702aa001402aa001403fcfff90466ffff02aa0098039a0000039a0000
039a0000039a0000039a0000039a000004010014040101470000000002aa
ffff02aaffff01ceffff01ceffff030c0000030c000002aa009302aa00c8
02aa00c803f100c801ceffff01ceffff01ce000001ce000002aa00a003b1
008402aaffff02aaffff075c003c075cffff075cffff075cffff075cffff
075c003f06d0ffff06d0ffff075c0003075c0003075c004001df003001df
003001e7003201e7003200f8004400f8004402070030020700300209004c
0209004c019d0030019d003002070032020700320209004c0209004c0309
004c0309004c015f004c015f004c015200180152001801c3001601c30016
01bf001c01bf001c032700510327005103270051032700510000ffab03bd
ffff041a0000041a00000416000104160001041a0001041a0001041a0001
041a000104010002040100020401000204010002015f004c02aa00c801ce
00c803f100c804ec000f044d00ad0440001e0462005d049d006104ff001b
057e000f044d004c03e8006c0525006403ca005a03adffd6050e005b048a
001c025000ac0226001b042800ac070900aa052affd6054c0063062f0061
04e4000f045800ac03ad004703ab0046043f000f03e6000f0550005e0522
00aa0442001e03bf003b03ca004b03ca005a040e006808ab00ac081500ac
060300ac054700ac07b700ac071400ac04a100230204ff3a054c00630522
00aa052200aa052200aa052200aa052200aa04a1002304a10023061bffcc
050c005b050c005b04280073054c0063054c006303ca0008089500ac0815
00ac050c005b072800ac04d400ac052a00ac04a1ffef04a1002303e8ffe1
03e8006e0204feac0204ff4c054c003b054c00630458ffbf0458006e0522
002f052200aa03ca004b04fc00ac052400ac040e004d03ef003b04a10023
03e800ac054c0063054c0063054c0063054c006303e6001e04a1ffd90444
ffe7035d001b03e6ffb803940064046b001b0545001b0495002403e8ff9e
02a10007050a00630469001a04a0001b04a10023045a00ac045a00ac045a
00990444006104ec00ac04ec00ac04ec00ac04ec00ac04ec00ac03e80084
03e8008403e8008203e8003403e8008103ad00ac050c005b04fc00ac04fc
00ac04fc00ac04fc002804fc00ac0204ff360204ff71042800ac042800ac
042800a0035d00ac035d0035035d0060035d006606d700ac06d700ac06d7
00ac052a00ac052a00ac052a00ac052a00ac054c0063054c0063054c0063
054c0063042200ac042200ac045800ac045800ac04580077045800ac03ad
004703ad004703ad004703ad004703ad004703e6000f03e6000f03e6000f
03e6000f052200aa052200aa052200aa052200aa052200aa048a0022048a
0022071e003d071e003d042700300427003003e6001e03bf001503bf003b
03bf003b035d001b03c2ff9b0433001b045800ac052400ac047100ac03e2
003b0444003803ad005903b500ac046a0027043400990434000403b3005a
043400600430005d0271ffee064300990434009903a300990241002703b4
0014044c0099053e0059043400990321005102e0002102ae002103fc001b
0329005903ca004b0366003a03680050075d006003c00099061e009903d5
005601d6ff570438005a0434007a04340088043400880434008804340088
03fb006203d5005803d50058062f005c044cffe203c4003503a3003a0438
005a0438005a03ca002e01eaff60075d006003c400350434009903d5ffbf
03d5005c03fbffe203fb005d01d6fece01d6ff650438ffed0438005a02ca
ff7302ca00100434ffff0434008703ca004b0434005104cd0060040e0052
034c005903d5005c03fb005d0438005a0438004f0438005a0438005a039f
00220289009804eb009902ae002106930060069200600362fff003210051
032900590394006403fb003c0240fff70240fff70434006002ff002703e2
002203720049040e00720321005101f300ad032900ad049700ac029b010a
03d5005c0434009904340099043400860362005a04340060043400600434
0060043400600434006003fb005d03fb005d03fb005d03fb003f03fb005d
0271002503c40035043400990434009904340067043400130434009401d6
ff1f01d6ff1f01d6ff5a03a3009903a3009903a3006b01d6008901d6ff58
01d6ff5801d6ff5906640099066400990664009904340099043400990434
0086043400860438004f0438004f0438005a0438005a0434009904340099
02ca009902ca008a02ca000a02caffff0321005103210051032100510321
00030321005102ae002102ae002102aeffd202aeffd20434008904340041
0434007b0434004d04340086039d0001039d002205b8003505b800350377
002903770029039f00220329000103290059032900000434008602aeffc6
05b80035039f002203d5005c01f100530241002703d5002902aeff960463
009903db00990344005903c200360362003b02ee003c03190099053b0055
0471000803ee00a203ee001403cb004803fc006d0477003204d3000803ee
00530380007204a40066038a00680350ffe80482006c03f300130232008e
01ecfffe03c900a1063200910491ffe804aa00660592006e0433000803ed
00a1034f0053035b004b038300080359001c04b10066048d009f03b70010
03690044039000570393006b0398005507ce00a1085500ac055a00a105cd
00ac06cf00a1076800ac03f4001001ecff4704aa0066048d0096048d009f
048d009f048d009f048d009f03f4001003f40010055cffe20482006c0482
006c03c9005204aa006604aa00660390000007ce00a1085500ac0482006c
065500a1046200a0049100a103f4ffc503f400100380ffb10380004d01ec
fed001ecff7004aa001d04aa006603edffa403ed0064048d0000048d009f
039000570478008c049300a103c50057038c004403f40010038000a104aa
006604aa006604aa006604aa00660383001003f4001003cb002402e00027
0359ffeb0339005004040027048d002703fd00210380ffff023e0000048b
006603ed00270383000c039000550339005001f300ac032900ac049700ac
026000ed03f40010040400a1040400a10404006e03cb006d046500a10465
00a104650081046500a1046500950380002a038000260380004103800000
0380004a035000a10482006c047800a1047800a10478009a047800200478
00a101ecff2a01ecff5503c900a103c900a103c9007e02e000a102e00000
02e0002802e00024060600a1060600a1060600a1049100a1049100a10491
00a1049100a104aa006604aa006604aa006604aa006603c500a103c500a1
03ed00a103ed00a103ed003e03ed0091034f0049034f0049034f0049034f
0000034f00490359001c0359001c0359001803590019048d009f048d0079
048d009f048d0075048d009f03fd002103fd0021063e0037063e003703cc
003603cc003603830010036900050369004403690020047800a10359000a
063e00370383001003f4001002e00027035effa703c5002703ed00a104b6
00a103ef00a10369004403cb004803500060039900a1043c0025043c0025
0447002504470025043c0025043c0025044f0025043c0025043c00250676
002506760025068200250682002506760025067600250689002506760025
067600250475002104750021047500210475002104750021047500210475
0021047500210475002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002103d5009604340060043400990434
00990362003b039b005a043400600434006003fb006203fb0062051b0065
0362005a0362004b0435004b043b005d0241fff704340060043400600451
005a039d001f03d0001e0433009404340099043400990241002701d6fff3
0232009401d6009902e7ffa702f9002701d6009904860099066300940663
0094066400990434ffc204340099045300990438005a05b3005a05920064
0536005502ca002302ca002302ca002302ca009902ca0099028e0094028e
002303980085039800850321005101eaffd50242fff801eaffd5028affc4
02ae004102ae002104a400270476004904550090039d002205b80035039f
00220351001f0329005903d3005903bc004b03bb0056039400640394005e
039400640362005a0507005f03d50099043b005a046b005a04470099028a
ffc403a300270319009904340060039400640394005e066f006006d40060
0719006004f3002103c40021057a0021060c002504ae00990469009903ef
002c03ef00700434ffd5044dffd503d60010050fffe3062f006204120027
03cb006a0444009904590030033f0099036f005501d60085022700000391
009802f000300569005f045300990474005a03cb006304a9006604a80066
0528001406cc00560368003a0438005a0438005a03a8009903cf005203cf
0052033f001b046a009a0465004b05c7004b0664014c03de0020060e0035
034f0042032f00380321005103d0001e02f2009903de00200450009903a8
0099052f0083040e000102f5001c03f1000002e7008e02fb0027034b008e
02a8008e02a800500344005a035b008e01a6008e01cb000502e0008e025b
008e046d008e0375008d0375008d0375005a02b2004802d8008e029b0057
02570004031400570445002202ac004402ac006c02e50048042b004402e5
006c02e5004802b8004702b8004702770046027700460297002a01630061
0297006c0456006c02e6006c02e60045024e003602e6004502e6004502e5
006c01e3002302e9006c02db00460456006c0285001f024a000d02be006c
024600230283002803650055025f00180163006101f6006c02e9006c0285
001f02be006c0246002302e5006c03650050025f00180694009404bbffa7
04bd0060030affa7069cffe504b4002204beffa70352ffa7031affa7039d
0014030fffa70329ffc203c4003b0304006e03c400350688002102410027
026900270468002704db002704c40027043400990451006002710025054c
0060041e009901f0006b067f0099045100990434009902ca006a037b0051
02faffd5039d002203ed0029033c0059047c005c04d800600434006003fb
005d0362005a0362004b03fb006201d600850362003b0233001e04d80094
0376004b02e5006b024e0044026e004402b200440277004201c1002401c1
00070297002a02e9006c0192000001aa006c0163006d0192000001e50000
0194006c017b00530224006e0456006c0456006c031b0000031c006c0304
006e02e600450336004502300042016dffd801e4002302e9000002b8002c
02e6006e02e6006e0285001f023700420294004202a600420272003c02e6
004502e9006c02e9006c016dffd801f6006c01f6002502030025028b006c
03ef002c0286001f01c400540334005401ff008c01ff002a01ff008c01ce
008401ce0084029900650299006c03fc004503fc0065044b0044044b0044
025100f20256000002540000025100f20327000002540000025600000239
00980239009801ce008401ce008402aa008202aa008202aa008202aa0082
02aa004b02aa009302610024015e006c02300042027e00280299006c0310
009603100096031000960310009603100096045700960457009604570096
045700960310004304570043045700430457004304570043045700430457
00430457002f0457002f0457002f0457002f0457002f0310002f04570025
045700250457002504570025045700250310001a0457001a0457001a0457
001a0457001a0457001a0310004204570042045700420457004204570042
045700420457009604570096045700960457009603100042045700420457
0042045700420457004204570042045700420457002f0457002f0457002f
0457002f0457002f0310002f0457002f0457002f0457002f0457002f0457
002f03100026045700260457002604570026045700260457002603100042
045700420457004204570042045700420457004204570096045700960457
009604570096031000420457004204570042045700420457004204570042
031000260457002604570026045700260457002604570026031000230457
0023045700230457002304570023045700230310002f0457002f0457002f
0457002f0457002f0457002f0310004b0457004b0457004b0457004b0457
004b0457004b045700960457009604570096045700960310004204570042
045700420457004204570042045700420310001a0457001a0457001a0457
001a0457001a0457001a0310002404570024045700240457002404570024
045700240310002f0457002f0457002f0457002f0457002f0457002f0310
004e0457004e0457004e0457004e0457004e0457004e0457009604570096
045700960457009602aa006202aa006203290000049a00000359002b02aa
008502aa008502aa00c802aa00c8029100840254000003c1ffff03c10000
039a0000022400bb02aa009802aa009802aa009802aa00980440fff60440
fff60302009803270000032700000324000002aa0000071200d4071200d4
02ac004402b8004702e60045027e002802b8004701d9ffff01d9ffff01d9
000001d90000028900000289000002890000028900000000fc660000fc66
032900000329000003290000032900000324000003240000032900000329
00000329000003290000032400000324000003f4000003f4000003f40000
03f40000032400000324000003270000030c000001ffffff01d900000327
000003290000032900000329000004660000046600000466000004660000
03f4000003f4000003f4000003f40000023200b6023200b6054c00630444
006104440043044400610444004303e6000e0456fec803e6000e03ad00ac
054c0063045d001e059700ac04a2000f04440061042200ac043200640375
005a037500420478000604d700510684001404120076041200030362005a
0362003b0362005a0362003b053b0055037800940438005a0399001404c5
009904a2000f0349005c01eaffd50476ffd504d7005104a9006603cb006d
03cb004803cb006d03cb00480389001a0389fe6f0389001a035000a104b1
005b03e2001e050000a1045d002a03db006d03c500a104a1ffc504a1fe8a
04a1fe6204a1ff2204a1ffc604a1fe8b04a1fe6204a1ff2204a1ff8004a1
ff5804a1002304a1002304a1002304a1ffc504a1fe8a04a1fe6204a1ff22
04a1ffc604a1fe8b04a1fe6204a1ff22066500230665ffc50665fe8a0665
fe620665ff220665ffc60665fe8b0665fe620665ff2203e8fef004bdfe82
04bdfe7a03e8fef004c1fe8604bdfe7a03e8fea403e8fe9504fcfef005d1
fe8205d1fe7a0559feaa04fcfef005d1fe8205d1fe7a0559feaa04fcfea4
04fcfe9504fc00ac04fcfef005d1fe8205d1fe7a0559feaa04fcfef005d1
fe8205d1fe7a0559feaa06c000ac06c0fef00795fe820795fe7a071dfeaa
06c0fef00795fe820795fe7a071dfeaa0204fef002d9fe8202d9fe7a0261
feaa0204fef002d9fe8202d9fe7a0261feaa0204fea40204fe950204ff4e
0204ff7a054cff0605f5fe82060cfe7b054cff0605f2fe7f0605fe74054c
fecf054cfeac0422fef003e6fe940517fe820513fe7e049ffeaa03e6fe47
03e6fe4703e6001e03e6001e0550ff0605f2fe7b060dfe780599feaa0550
ff0605f2fe7b0611fe7c0599feaa0550fecf0550feac0550005e0550ff06
05f2fe7b060dfe780599feaa0550ff0605f2fe7b0611fe7c0599feaa0714
005e0714ff0607b6fe7b07d1fe78075dfeaa0714ff0607b6fe7b07d5fe7c
075dfeaa048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a0061048a005a048a0061048a0061048a0061
048a0061048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a005a03a5005903a5005903a5004f03a50059
03a5005203a5005203a5005903a50059044c0099044c0092044c008f044c
0094044c0099044c0092044c0092044c0094044c0099044c0099044c0059
044c0099044c0099044c0092044c008f044c0094044c0099044c0092044c
0092044c0094044c0099044c0099044c0059023200010232ff860232ff83
0232ff62023200000232ff860232ff860232ff600232ff100232fecf0232
ff600232ffef0232ff7b0232ff290232ff690232ff680438005a0438005a
0438005a0438005a0438005a0438005a0438005a0438005a041200760412
007604550090045500820455008204550084045500900455008204550082
045500840455001204550010045500800455009004550090045500410455
00710455007d059200640592006405920064059200640592006405920064
059200640592006405920064059200640592006405920064059200640592
006405920064059200640592006405920064059200640592006405920064
059200640592006403f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f4001003f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001005b9001005b9001005b9001005b9001005b9001005b90010
05b9001005b9001005b90010038000a10380004903800049038000a10380
004903800049038000a10380007b047800a1047800a1047800a1047800a1
047800a1047800a1047800a1047800a1047800a1047800a10478006f0478
00a1047800a1047800a1047800a1047800a1047800a1047800a1047800a1
047800a1063c00a1063c00a1063c00a1063c00a1063c00a1063c00a1063c
00a1063c00a1063c00a101ec000901ecff6201ecff6201ecff6501ec0009
01ecff6201ecff6201ecff6501ecff1001ecfee901ecff6401ec000001ec
ff8c01ecff2a01ecff5301ecff7004aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006603c500a103c500a1038300100389
001a038300100389001a038300100389001a038300100389001a03830010
0389001a038300100389001a038300100389001a038300100389001a0383
00100389001a038300100389001a0383fff50389fff5038300100389001a
038300100389001a04b1006604b1006604b1006604b1006604b1006604b1
006604b1006604b1006604b1006604b1006604b1006604b1006604b10066
04b1006604b1006604b1006604b1006604b1006604b1006604b100660675
006606750066067500660675006606750066067500660675006606750066
0675006604a1002304a1ffc504a1fe8a04a1fe6204a1ff2204a1ffc604a1
fe8b04a1fe6204a1ff2204fc00ac04fcfef005d1fe8205d1fe7a0559feaa
04fcfef005d1fe8205d1fe7a0559feaa0550005e0550ff0605f2fe7b060d
fe780599feaa0550ff0605f2fe7b0611fe7c0599feaa066500230665ffc5
0665fe8a0665fe620665ff220665ffc60665fe8b0665fe620665ff2206c0
00ac06c0fef00795fe820795fe7a06c0fe4d06c0fef00795fe820795fe7a
06c0fe4d0714005e0714ff0607b6fe7b07d1fe780714fe610714ff0607b6
fe7b07d5fe7c0714fe6101d9ffff01d900000289000002890000039a0000
03290000032900000324000003290000032900000324000003f4000003f4
00000324000001d9000003270000030c0000023200b601c4007901c40079
01c40079054e00ac0440000a042200ac0366001b044100ac06b2005503ca
004b04a500ac045800ac046a001b050c000f052400ac05b100ac073800ac
052b00630444006103e6000f03e6001e03e6001e0476003005d2000f049a
007404720074047200ad05f6002805f60028020400ac06680055045f00ac
050e000304fc00ac04fc00ac04720074070700ac04a1002304a10023061b
ffcc03e8005905250064052500640668005503ca001503ca004b052200ac
052200ac054c0063054c0063054c00630462004c0438000f0438000f0438
000f04720071035300ac061800ac0366001b048500300427003004400035
065d0037061d003d041a003d070f0003072800ac0515005b0521000f03ca
005a05090003045f009903df00270434009902f90027039f009905c0003e
0362004b03f4009903b6009903eb00270447000a0471009904d8009905f1
0099046f00590362005a0319000a039d0022039d002203b2002904c5000a
03ea004203c0004203c0009904c8001904c800190583003e03cf00990421
0016044700990454009903c0004205b6005f020400ac03d5002e03d50058
062f005c03fb005603fb006203fb00620583003e0362000803bc004b0453
0095045300970438005a0431005a0431005a038b0004039f0022039f0022
039f002203c0002902c400990554009902f9002703b10029037700290434
006006550060059b004b03ba004b061f001606500099044500500481000a
0362005a042b001604a800a103e8002703c500a10314002703ec00a105d0
004403800057041c00a103ca00a103ca002704530017049800a1050100a1
067700a104a2006503cb006d0359001c0383001003830010041300360545
001c041a006d03fa006d03fa00a1054f0020054f002001ec00a105780044
03ff00a1045a0001047800a104a100a103fa006d062f00a103f4001003f4
0010055cffe20380004204a2006504a20065057800440380000303900057
048900a0048900a004aa006604a9006604a9006603e4001e039d001e039d
001e039d001e03fa0044031400a1058300a1031400270417003603cc0036
03e8004a0588004a0559007203d8007205d20001061900a10488006c0444
001c03800068045c00010400000008000000040000000800000002af0000
02000000015500000450000001bc00000199000001000000000000000000
ffdc0000ff25040e0024040e00240329000003fcfff901ff008c03580088
01c400540334005404a400540476010a03fcfffb0273004404ee004f0444
00610444006103ad0027040e005306640099052a0020076000ac064800ac
071e002005f500ac0428001b03e6000f08a80032043afffe0482002104b2
005b0495002003ad0020044400610621004906210065057800e6059d00e6
03fc005e070100bc03fc0062045201d7045200be0400fff6040001bd0400
01bd0400fff6040001bd0400fff6070900aa045c005b047200ad04440071
04d0003a0562007403c9001006640094042f005f04180015035a0053040b
00300441006f03260010032700030327000303270003025400c0025400c0
025400c8025400c802aaff8c02aaff8c04e0005907f4000a07e200140798
0003076c0061064100ac050b002406a700ac05c80055073f00ac03ca0021
0600009004b8001c085c0063054c003b076c0061076c006104440061056a
0022053400990433001b05af00990480001b060b0099034e001605a90094
03d2ffc40745005a049c005a06420059056a00220362005a06b8006d05c3
00a10453001205c000a1050b0046066400a10380002205580087042e0022
07f10066050f006806b0006d06b8006d039c006d03c7009602aa00db040e
008d0000ffdc0000fe5101cf0000022400bb01c700000163006102b1ff4b
0aa000b404d5009202d5008302d5008304d500b202d500700aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0000fc48000000000000fd170000000000000000039a0000039a00000324
00000324000003240000039a000003240000032400000256000003290000
0329000003bdffff02aaff8c055001e5027f008403240000039a00000256
000000000027000000e1000000ed0000001b032400000324000003240000
032400000324000003240000032400000324000003240000032400000000
0000000000000000000000000000039a0000039a00000346000000000027
03c10000030f00000346000003460000039a0000034800000348000003a2
000003a2000002560000035f00000000009e00000067000000220000009e
0000009e0000009e0000009e0000009e0517fe820513fe7e049ffeaa03e6
fe4703e6fe4703e6000e03e6000e03f4001003f4001003f4001005b80010
05b8001005b80010047800a1047800a10478006f063c00a1063c00a1063c
006f0383ffc80383ffc80383001004b1006604b1006604b1006606750066
06750066067500660000fdbc0000fd1a0000fd770000fd4f0000fbfe0000
fbfa0000fc000000fbfa0000fc000000fbfa0000fc000000fbfa0000fc00
0000fc000000fc000000fc000000fc000000fc000000fc000000fc000000
fdd00000fc300000fc300000fbff0000fbff0000fbff0000fbff0000fbff
0000fc000000fcac0000fcad0000fcac0000fcac0000fd1b0000fd1b0000
fd340000fd340000fd340000fd340000fd600000fd600000fd730000fd73
0000fdcf0000fd5f0000fd5f0000fd5f0000fd5f0000fd7f0000fd7f0000
fca10000fd6f0000fdfd0000fcef0000fcf20000fca00000fca00000fcae
0000fcad0000fc660000fca00000fc2f0000fc2f0000fc660000fc5f0000
fdd00000fcf10000fd6d0000fcf30000fd710000fd710000fdb10000fc65
0000fcf10000fcf10000fc2f0000fbff0000fd770000fc660000fc660000
fc650000fc650000fc650000fc650000fc460000fd790000fcde0000fcde
0000fd4b0000fd4b0000fca80000fca80000fd710000fda60000fda60000
fce30000fd4c0000fd4c0000fd4b0000fd4b0000fd7e0000fcdf0000fcde
0000fcde0000fc8f0000fc520000fc520000fc520000fc520000fc920000
fc970000fc970000fc560000fc560000fc910000fd820000fd820000fd70
0000fd700000fdfa0000fdfa0000fd5f0000fd5f0000fd790000fd790000
fd8f0000fd8f0000fd6e0000fd6e0000fd7a0000fd7a0000fcfb0000fcfb
0000fdb60000fdb60000fda80000fda80000fd680000fd680000fd710000
fd710000fcf10000fcf10000fcf10000fcf10000fc540000fc260000fc26
0000fc290000fc290000fc270000fc270000fc270000fc270000fc350000
fc350000fc350000fc350000fdb60000fda80000fda80000fce30000fd46
0000fd460000fd470000fd470000fd020000fd020000fd020000fd020000
fc650000fc660000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca1
0000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca10000fc370000
fc370000fc370000fc370000fca00000fca00000fc9f0000fcad0000fd33
0000fd470000fc9f0000fc9f0000fc9f0000fc9f0000fbff0000fc020000
fbff0000fc000000fc370000fc370000fc370000fc370000fdbd0000fdbd
0000fca20000fca30000fca30000fdd10000fdd10000fdd10000fdd10000
fc6a0000fc6a03e6fe940389ffcb0389ffcb0389001a01d6008904340060
043400600434006004340060043c0025067600250aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4047d
00a3040e00230054001b00>
<000000000000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000003fc000003fc000003fc000003fc000003fc
000003fc000003fc000003fc000003fc000003fc000003fc000003fc0000
03fc000003fc000003fc000003fc000003fc000003fc000003fc000003fc
000003fc000003fc000003fc000003fc000003fc000003fc000003fc0000
03fc000003fc000005560000055600000556000005560000055600000556
000005560000055600000556000005560000055600000556000005560000
055600000556000005560000055600000556000005560000055600000556
000005560000055600000556000005560000055600000556000005560000
055600000556000005560000055600000556000005560000055600000556
000005560000055600000556000005560000055600000556000005560000
055600000556000005560000055600000556000005560000055600000556
000005560000055600000556000005560000055600000556000005560000
055600000556000005560000055600000556000005560000055600000556
000005560000055600000556000005560000055600000556000005560000
055600000556000005560000055600000556000005560000055600000556
000005560000055600000556000005560000055600000556000005560000
055600000556000005560000055600000556000005560000055600000556
000005560000055600000556000005560000055600000556000005560000
055600000556000005560000055600000556000005560000055600000556
000005560000055600000556000005560000055600000556000005560000
055600000556000005560000055600000556000005560000055600000556
000005560000055600000556000005560000055600000556000005560000
055600000556000005560000055600000556000005560000055600000556
000005560000055600000556000005560000055600000556000005560000
055600000556000005560000055600000556000005560000055600000556
000005560000055600000556000005560000055600000556000005560000
055600000556000005560000055600000556000005560000055600000556
000005560000055600000556000005560000055600000556000005560000
055600000556000005560000055600000556000005560000055600000556
00000556000005560000055600000556000006b4000006b4000006b40000
06b4000006b4000006b4000006b4000006b4000006b4000006b4000006b4
000006b4000006b4000006b4000007cc000007cc000007cc000007cc0000
07cc000007cc000007cc000007cc000007cc000007cc000008fa000008fa
000008fa000008fa00000a3c00000a3c00000a3c00000a3c00000a3c0000
0a3c00000a3c00000a3c00000a3c00000a3c00000a3c00000a3c00000a3c
00000a3c00000a3c00000a3c00000a3c00000a3c00000a3c00000a3c0000
0a3c00000a3c00000a3c00000a3c00000a3c00000a3c00000a3c00000a3c
00000a3c00000a3c00000a3c00000a3c00000a3c00000a3c00000a3c0000
0a3c00000a3c00000a3c00000a3c00000a3c00000a3c00000a3c00000a3c
00000a3c00000a3c00000a3c00000a3c00000a3c00000a3c00000a3c0000
0a3c00000a3c00000a3c00000a3c00000a3c00000a3c00000a3c00000a3c
00000a3c00000a3c00000a3c00000a3c00000a3c00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e
00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e0000
0b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000b2e00000cf0
00000e1200000e1200000e1200000e1200000e1200000e1200000e120000
0f2e00000f2e00000f2e00000f2e00000f2e00000f2e00000f2e00000f2e
00000f2e00000f2e00000f2e00000f2e00000f2e00000f2e00000f2e0000
1020000010200000102000001020000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000012a40000
12a4000012a4000012a4000012a4000012a4000012a4000012a4000012a4
000012a4000012a4000012a4000012a4000012a4000012a4000012a40000
12a4000012a4000012a4000012a4000012a4000012a4000012a4000012a4
000012a4000012a4000012a4000012a4000012a4000012a4000012a40000
12a4000012a4000012a4000012a4000012a4000012a4000012a4000012a4
000012a4000012a4000012a4000012a4000012a4000012a40000136e0000
136e0000136e0000136e0000136e0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c0000142c0000142c0000142c0000142c0000142c
0000142c0000142c0000142c0000142c0000142c0000142c0000142c0000
142c0000142c0000142c000014be0000155e0000155e0000155e0000155e
0000155e0000155e0000155e0000155e0000155e0000155e0000155e0000
155e0000155e0000155e0000155e0000155e0000155e0000155e0000155e
0000155e0000155e0000155e0000155e0000155e0000155e0000155e0000
155e0000155e0000155e0000155e0000155e0000155e0000155e0000155e
0000155e0000155e0000155e0000155e0000155e0000155e0000155e0000
155e0000155e0000155e0000155e0000155e0000155e0000155e0000155e
0000155e0000155e0000155e0000155e0000155e0000155e0000155e0000
155e0000155e0000155e0000155e0000155e0000155e0000155e0000155e
0000155e0000155e0000155e0000155e0000155e0000155e0000155e0000
155e0000155e0000155e0000155e000016ba000016ba0000190600001906
000019060000190600001906000019060000190600001906000019060000
190600001906000019060000190600001906000019060000190600001906
000019060000190600001906000019060000190600001906000019060000
190600001906000019060000190600001906000019060000190600001906
00001a6c00001bda00001d1a00001f020000208c000021f6000022060000
234400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000023540000235400002354000023540000235400002354
000023540000235400002354000023540000235400002354000023540000
235400002354000100000f260120001000c3000700020010002f00650000
11902410000400010000000e00ae00000003000000000064000000000003
00000007007600640001000000000000003200da0001000000000003000e
010c0001000000000004000e011a0001000000000006000e012800010000
00000007003b01360003000104090000006401710003000104090001001c
01d50003000104090002000e01f10003000104090003001c01ff00030001
04090004001c021b0003000104090006001c023700030001040900070076
025300a9002000320030003100320020004d006900630072006f0073006f
0066007400200043006f00720070006f0072006100740069006f006e002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064002e00430061006c006900620072006900200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200074006800650020004d006900630072006f0073006f00660074
002000670072006f007500700020006f006600200063006f006d00700061
006e006900650073002ea92032303132204d6963726f736f667420436f72
706f726174696f6e2e20416c6c205269676874732052657365727665642e
4e4a504747492b43616c696272694e4a504747492b43616c696272694e4a
504747492b43616c6962726943616c696272692069732061207472616465
6d61726b206f6620746865204d6963726f736f66742067726f7570206f66
20636f6d70616e6965732e00a9002000320030003100320020004d006900
630072006f0073006f0066007400200043006f00720070006f0072006100
740069006f006e002e00200041006c006c00200052006900670068007400
73002000520065007300650072007600650064002e004e004a0050004700
470049002b00430061006c00690062007200690052006500670075006c00
610072004e004a0050004700470049002b00430061006c00690062007200
69004e004a0050004700470049002b00430061006c006900620072006900
4e004a0050004700470049002b00430061006c0069006200720069004300
61006c006900620072006900200069007300200061002000740072006100
640065006d00610072006b0020006f006600200074006800650020004d00
6900630072006f0073006f00660074002000670072006f00750070002000
6f006600200063006f006d00700061006e006900650073002e00b2090320
b80284b40918014a20b80283b40918014a20b80282b40918014a20b80281
b40918014a20b80280b40918014a20b8027fb40918014a20b8027eb40918
014a20b8027db40918014a20b8027cb40918014a20b8027bb40918014a20
b8027ab40918014a20b80279b40918014a20b80278b40918014a20b80277
b40918014a20b80276b40918014a20b80275b40918014a20b80274b40918
014a20b80273b40918014a20b80271b40918014a20b80270b40918014a20
b8026fb40918014a20b8026eb40918014a20b8026db40918014a20b8026c
b40918014a20b8026bb40918014a20b8026ab40918014a20b80269b40918
014a20b80268b40918014a20b80267b40918014a20b80266b40918014a20
b80265b40918014a20b80264b40918014a20b80263b40918014a20b80262
b40918014a20b80261b40918014a20b80260b40918014a20b8025fb40918
014a20b8025eb40918014a20b8025db40918014a20b8025cb40918014a20
b8025bb40918014a20b8025ab40918014a20b80259b40918014a20b80258
b40918014a20b80257b40918014a20b80256b40918014a20b80255b40918
014a20b80254b40918014a20b80253b40918014a20b80252b40918014a20
b80251b40918014a20b80250b40918014a20b8024fb40918014a20b8024e
b40918014a20b8024db40918014a20b8024cb40918014a20b8024bb40918
014a20b8024ab40918014a20b80249b40918014a20b80248b40918014a20
b80247b40918014a20b80246b40918014a20b80245b40918014a20b80244
b40918014a20b80243b40918014a20b80242b40918014a20b80241b40918
014a20b80240b40918014a20b8023fb40918014a20b8023eb40918014a20
b8023db40918014a20b8023cb40918014a20b8023bb40918014a20b8023a
b40918014a20b80239b40918014a20b80238b40918014a20b80237b40918
014a20b80236b40918014a20b80235b40918014a20b80234b40918014a20
b80233b40918014a20b80232b40918014a20b80231b40918014a20b80230
b40918014a20b8022fb40918014a20b8022eb40918014a20b8022db40918
014a20b8022cb40918014a20b8022bb40918014a20b8022ab40918014a20
b80229b40918014a20b80228b40918014a20b80227b40918014a20b80226
b40918014a20b80225b40918014a20b80224b40918014a20b80223b40918
014a20b80222b40918014a20b80221b40918014a20b80220b40918014a20
b8021fb40918014a20b8021eb40918014a20b8021db40918014a20b8021c
b40918014a20b8021bb40918014a20b8021ab40918014a20b80219b40918
014a20b80218b40918014a20b80217b40918014a20b80216b40918014a20
b80215b40918014a20b80214b40918014a20b80213b40918014a20b80212
b40918014a20b80211b40918014a20b80210b40918014a20b8020fb40918
014a20b8020eb40918014a20b8020db40918014a20b8020cb40918014a20
b8020bb40918014a20b8020ab40918014a20b80209b40918014a20b80208
b40918014a20b80207b40918014a20b80206b40918014a20b80205b40918
014a20b80204b40918014a20b80203b40918014a20b80202b40918014a20
b80201b40918014a20b80200b40918014a20b801ffb40918014a20b801fe
b40918014a20b801fdb40918014a20b801fcb40918014a20b801fbb40918
014a20b801fab40918014a20b801f9b40918014a20b801f8b40918014a20
b801f7b40918014a20b801f6b40918014a20b801f5b40918014a20b801f4
b40918014a20b801f3b40918014a20b801f2b40918014a20b801f1b40918
014a20b801f0b40918014a20b801efb40918014a20b801eeb40918014a20
b801edb40918014a20b801ecb40918014a20b801ebb40918014a20b801ea
b40918014a20b801e9b40918014a20b801e8b40918014a20b801e7b40918
014a20b801e6b40918014a20b801e5b40918014a20b801e4b40918014a20
b801e3b40918014a20b801e2b40918014a20b801e1b40918014a20b801e0
b40918014a20b801dfb40918014a20b801deb40918014a20b801ddb40918
014a20b801dcb40918014a20b801dbb40918014a20b801dab40918014a20
b801d9b40918014a20b801d8b40918014a20b801d7b40918014a20b801d6
b40918014a20b801d5b40918014a20b801d4b40918014a20b801d3b40918
014a20b801d2b40918014a20b801d1b40918014a20b801d0b40918014a20
b801cfb40918014a20b801ceb40918014a20b801cdb40918014a20b801cc
b40918014a20b801cbb40918014a20b801cab40918014a20b801c9b40918
014a20b801c8b40918014a20b801c7b40918014a20b801c6b40918014a20
b801c5b40918014a20b801c4b40918014a20b801c3b40918014a20b801c2
b40918014a20b801c1b40918014a20b801c0b40918014a20b801bfb40918
014a20b801beb40918014a20b801bdb40918014a20b801bcb40918014a20
b801bbb40918014a20b801bab40918014a20b801b9b40918014a20b801b8
b40918014a20b801b7b40918014a20b801b6b40918014a20b801b5b40918
014a20b801b4b40918014a20b801b3b40918014a20b801b2b40918014a20
b801b1b40918014a20b801b0b40918014a20b801afb40918014a20b801ae
b40918014a20b801adb40918014a20b801acb40918014a20b801abb40918
014a20b801aab40918014a20b801a9b40918014a20b801a8b40918014a20
b801a7b40918014a20b801a6b40918014a20b801a5b40918014a20b801a4
b40918014a20b801a3b40918014a20b801a2b40918014a20b801a1b40918
014a20b801a0b40918014a20b8019fb40918014a20b8019eb40918014a20
b8019db40918014a20b8019cb40918014a20b8019bb40918014a20b8019a
b40918014a20b80199b40918014a20b80198b40918014a20b80197b40918
014a20b80196b40918014a20b80195b40918014a20b80194b40918014a20
b80193b40918014a20b80192b40918014a20b80191b40918014a20b80190
b40918014a20b8018fb40918014a20b8018eb40918014a20b8018db40918
014a20b8018cb40918014a20b8018bb40918014a20b8018ab40918014a20
b80189b40918014a20b80188b40918014a20b80187b40918014a20b80186
b40918014a20b80185b40918014a20b80184b40918014a20b80183b40918
014a20b80182b40918014a20b80181b40918014a20b80180b40918014a20
b8017fb40918014a20b8017eb40918014a20b8017db40918014a20b8017c
b40918014a20b8017bb40918014a20b8017ab40918014a20b80179b40918
014a20b80178b40918014a20b80177b40918014a20b80176b40918014a20
b80175b40918014a20b80174b40918014a20b80173b40918014a20b80172
b40918014a20b80171b40918014a20b80170b40918014a20b8016fb40918
014a20b8016eb40918014a20b8016db40918014a20b8016cb40918014a20
b8016bb40918014a20b8016ab40918014a20b80169b40918014a20b80168
b40918014a20b80167b40918014a20b80166b40918014a20b80165b40918
014a20b80164b40918014a20b80163b40918014a20b80162b40918014a20
b80161b40918014a20b80160b40918014a20b8015fb40918014a20b8015e
b40918014a20b8015db40918014a20b8015cb40918014a20b8015bb40918
014a20b8015ab40918014a20b80159b40918014a20b80158b40918014a20
b80157b40918014a20b80156b40918014a20b80155b40918014a20b80154
b40918014a20b80153b40918014a20b80152b40918014a20b80150b40918
014a20b8014fb40918014a20b8014eb40918014a20b8014cb40918014a20
b8014bb40918014a20b8014ab40918014a20b80149b40918014a20b80148
b40918014a20b80147b40918014a20b80146b40918014a20b80145b40918
014a20b80144b40918014a20b80143b30918014ab80284b21e3e1fb80283
b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8027fb21e
3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027bb21e3e1f
b8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d431fb802
76b21d431fb80275b21d411fb80274b21d431fb80273b21d431fb80272b2
1d411fb80271b21d421fb80270b21d421fb8026fb21d421fb8026eb21d43
1fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab21c451fb8
0269b21c451fb80268b21c451fb80267b21c451fb80266b21c441fb80265
b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb80261b21c
451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025db21c451f
b8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c451fb802
58b21c451fb80257b21c451fb80256b21c451fb80255b21c451fb80254b2
1c451fb80253b21c451fb80252b21c451fb80251b21c451fb80250b21c45
1fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb21c451fb8
024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a1fb80247
b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb80243b21b
4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023fb21b4a1f
b8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b4b1fb802
3ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1fb80236b2
1b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb80232b21b4a
1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb21b4c1fb8
022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c1fb80229
b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb80225b21b
4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221b21b4b1f
b80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b4c1fb802
1cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1fb80218b2
1a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb80214b21a4f
1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b21a4e1fb8
020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e1fb8020b
b21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb80207b21a
4f1fb80206b219501fb80205b219511fb80204b219511fb80203b219501f
b80202b219511fb80201b219511fb80200b219511fb801ffb219511fb801
feb219501fb801fdb219511fb801fcb219511fb801fbb219511fb801fab2
19501fb801f9b219511fb801f8b219511fb801f7b219511fb801f6b21951
1fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b218541fb8
01f1b218541fb801f0b218531fb801efb218541fb801eeb218541fb801ed
b218541fb801ecb218531fb801ebb218531fb801eab218541fb801e9b218
541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5b218541f
b801e4b218531fb801e3b218541fb801e2b218541fb801e1b218541fb801
e0b218531fb801dfb218531fb801deb218541fb801ddb218541fb801dcb2
18541fb801dbb218541fb801dab218531fb801d9b218541fb801d8b21854
1fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b217571fb8
01d3b217571fb801d2b217571fb801d1b217571fb801d0b217561fb801cf
b217561fb801ceb217571fb801cdb217571fb801ccb217571fb801cbb217
571fb801cab217561fb801c9b217561fb801c8b217571fb801c7b217571f
b801c6b217571fb801c5b217571fb801c4b217571fb801c3b217561fb801
c2b217571fb801c1b217571fb801c0b217571fb801bfb217561fb801beb2
17561fb801bdb217571fb801bcb217571fb801bbb217571fb801bab21757
1fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b217571fb8
01b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b1fb801b1
b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb801adb216
5b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9b2163f1f
b801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b2165b1fb801
a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801a0b2
165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb8019cb2165b
1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2163e1fb8
0197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e1fb80193
b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8018fb216
5b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018bb2165b1f
b8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b2165b1fb801
86b215611fb80185b215621fb80184b215621fb80183b215661fb80182b2
15661fb80181b215551fb80180b215451fb8017fb215361fb8017eb21536
1fb8017db215611fb8017cb215621fb8017bb215621fb8017ab215641fb8
0179b215661fb80178b215661fb80177b215661fb80176b215661fb80175
b215661fb80174b215661fb80173b215451fb80172b215621fb80171b215
621fb80170b215631fb8016fb215641fb8016eb215661fb8016db215661f
b8016cb215661fb8016bb215661fb8016ab215661fb80169b215621fb801
68b215621fb80167b215611fb80166b215641fb80165b215641fb80164b2
15661fb80163b215661fb80162b215661fb80161b215661fb80160b21566
1fb8015fb215661fb8015eb215551fb8015db215451fb8015cb215451fb8
015bb215361fb8015ab215611fb80159b215621fb80158b215621fb80157
b215631fb80156b215641fb80155b215661fb80154b215661fb80153b215
661fb80152b215661fb80151b214401fb80150b214551fb8014fb214561f
b8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214401fb801
4ab214411fb80149b214401fb80148b214401fb80147b214411fb80146b2
147e1fb80145b214871fb80144b2147f1fb80143b214801fb80142b21246
1fb80141b212461fb80140b212461fb8013fb212461fb8013eb212441fb8
013db212461fb8013cb211591fb8013bb211591fb8013ab2115b1fb80139
b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb80135b211
5b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131b211551f
b80130b211571fb8012fb211571fb8012eb211581fb8012db211591fb801
2cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1fb80128b2
115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb80124b21156
1fb80123b211571fb80122b211581fb80121b211591fb80120b2115a1fb8
011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8011b
b2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb80117b210
5f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113b2105f1f
b80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb2105f1fb801
0eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1fb8010ab2
105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb80106b2105d
1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2105f1fb8
0101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f621f
fb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f641ff40f
621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641fed0f621f
ec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e671fe50e
681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681fde0e681f
dd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d311fd60d
6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1f
ce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d
691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f40ffc00d
311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c741f
b80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c741fb10c
741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1f
a90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b
791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f
9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f930b
7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f
8503251f8403381f8301381f8255805581ab80557f557d557eab7d550b7d
010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a557955775578
ab7755ba028600660285403c5576ab755504751475747503f47501ab7501
44750130750102007510752075030c7455725573ab7255007250728072b0
72043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c720d104671
556f5570ab6f556e666d556a03251f6938675568ab67556638645565ab64
5563386255613860555f385d555eab5d555c385a555bab5a555938585557
03251f5638545555ab54555338515552ab51554f384e554e03251f4d384b
554cab4b554a38485549ab4855473846554503381f001c101c201c0310b8
ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc01b03120f
1a1f1a02290f1901434f19016f197f198f19030f18cf18024018292c460f
17cf17df17ef1704134017292e460016101620160315b8ffc0b3164d5446
b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f15010f15
1f1502451f15010011e011f0110315bf10cf10020f0f010f0fff0f02400f
3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f0d1f0dff
0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f0b02400b
3f4346400b2d30460003012001010001100120010308b8ffc0b301151f46
b80100b316010501b80190b154532b2b4bb80800524bb008505bb00188b0
2553b00188b040515ab00688b000555a5b58b101018e59b101024354b014
4b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0805358b0
401d594bb0ff5358b0001db1160042592b5e7375732b2b745e732b2b5e73
742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b7374755e73
5e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b
2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2bb1000243545841ff0284006402830064028200640281
006402800064027f0064027e0064027d0064027c0064027b0064027a0064
027900640278006402770064027600640275006402740064027300640271
006402700064026f0064026e0064026d0064026c0064026b0064026a0064
026900640268006402670064026600640265006402640064026300640262
00640261006402600064025f0064025e0064025d0064025c0064025b0064
025a00640259006402580064025700640256006402550064025400640253
0064025200640251006402500064024f0064024e0064024d0064024c0064
024b0064024a006402490064024800640247006402460064024500640244
006402430064024200640241006402400064023f0064023e0064023d0064
023c0064023b0064023a0064023900640238006402370064023600640235
00640234006402330064023200640231006402300064022f0064022e0064
022d0064022c0064022b0064022a00640229006402280064022700640226
0064022500640224006402230064022200640221006402200064021f0064
021e0064021d0064021c0064021b0064021a006402190064021800640217
006402160064021500640214006402130064021200640211006402100064
020f0064020e0064020d0064020c0064020b0064020a0064020900640208
0064020700640206006402050064020441ff006402030064020200640201
00640200006401ff006401fe006401fd006401fc006401fb006401fa0064
01f9006401f8006401f7006401f6006401f5006401f4006401f3006401f2
006401f1006401f0006401ef006401ee006401ed006401ec006401eb0064
01ea006401e9006401e8006401e7006401e6006401e5006401e4006401e3
006401e2006401e1006401e0006401df006401de006401dd006401dc0064
01db006401da006401d9006401d8006401d7006401d6006401d5006401d4
006401d3006401d2006401d1006401d0006401cf006401ce006401cd0064
01cc006401cb006401ca006401c9006401c8006401c7006401c6006401c5
006401c4006401c3006401c2006401c1006401c0006401bf006401be0064
01bd006401bc006401bb006401ba006401b9006401b8006401b7006401b6
006401b5006401b4006401b3006401b2006401b1006401b0006401af0064
01ae006401ad006401ac006401ab006401aa006401a9006401a8006401a7
006401a6006401a5006401a4006401a3006401a2006401a1006401a00064
019f0064019e0064019d0064019c0064019b0064019a0064019900640198
006401970064019600640195006401940064019300640192006401910064
01900064018f0064018e0064018d0064018c0064018b0064018a00640189
006401880064018700640186006401850064418001840064018300640182
00640181006401800064017f0064017e0064017d0064017c0064017b0064
017a00640179006401780064017700640176006401750064017400640173
0064017200640171006401700064016f0064016e0064016d0064016c0064
016b0064016a006401690064016800640167006401660064016500640164
006401630064016200640161006401600064015f0064015e0064015d0064
015c0064015b0064015a0064015900640158006401570064015600640155
006401540064015300640152006401500064014f0064014e0064014c0064
014b0064014a006401490064014800640147006401460064014500640144
0064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[9045 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 6406 1004 <00020048ffed03c705210013002b00ea4019281201291101260d01260c01
2608012507012a03012902012db8ffc040250f024d602d01141810014d14
100f014d14160d014d140a0c014d14200b014d14180c014d14bb022d0000
0020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8fff6b30c
014d20b8ffe8b60c014d24200120b8022d40090a200030004000030ab8ff
f040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00b8ffc040
0a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003fed3fed11
120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b2b2b3130
5d2b5d5d5d5d5d5d5d5d01140e0223222e0235343e0233321e0207342e04
23220e0215141e0233323e0403c72f6db0817aa7662b306cb0807ba7662b
b00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b16157a9f7
a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e7285>LWYAAA+Calibri AddT42Char 
2 6764 1005 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a00>LWYAAA+Calibri AddT42Char 
2 7130 1006 <000100720000039c0521003e0094400d2936012b1e01291d01261e0140b8
ffc040170f024d604001161810014d16100c0d014c16200b014d16b8022d
b633253325330039b8ffe8b310014d39ba027f000bffc0b30c014d0bb8ff
e0400b0f014d0b1138392020391bb8012eb63316062e531039b80128b106
54003fed323f123939ed11392f123939012f2b2be12bcd39392f2f10e12b
2b2b31305d2b005d015d5d5d25140e022321222e0235343e0237133e0335
342e0223220e0223222e0235343e0633321e0215140e02070721321e0203
9c05090f09fd350e150f07030a0f0cfb576939121c3550343d6149310c07
0b0704020508183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c13
0907101e16141e17170d010a5c9278622b2b4d3a2222282208121e150f16
100e15242318355c7a453e7b8faf72d609121b00>LWYAAA+Calibri AddT42Char 
2 7450 1007 <00010067ffed0392052100580105b9005affc0401c0f024d605a01310810
014d31100f014d31100c0d014c31200b014d31b80235400a4e53264e4e18
13014d40b8ffe840260f014d26200f014d40264e4e2640030e1b0810014d
1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8022db500
080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b30f014d0e
b8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ffc0b30f01
4d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf320200549
5316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b5d2b2b01
2f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910e12b2b2b
2b31305d2b01140e0223222e0635343633321e0233323e0235342e022323
222e0235343e023333323e0235342e0223220e0223222e0235343e063332
1e0215140e0207151e0303923e74aa6b4171583a0f0806030e0d0935536f
44426444222b53794d7b080f0b07060b0e0971426949271a3451353a614c
320a070b0703020608133a556f405a885b2d203e5a3b436f502d0172598f
6637151d1f0e0e141d15241c202520223e55323758402207101a1513190f
07224059372849361f232823050f1b160f17110e132423182e5475473d69
51390b020735506b>LWYAAA+Calibri AddT42Char 
2 7938 1008 <00020030fffa03d30514002a002e00fb403a252e01262d01272c01242701
242601251c01261b01231a01241901251801251701261601261501261401
261001260f012405012404012b1b0130b8ffc040120f024d6030012d1618
0f024d162010014d16b8ffe0b30f014d16b8ffe0b70c014d161c2e2e10b8
fffc401d0f024d101810014d10100f014d10100d014d100a0c014d10100b
014d10bb021100270004ffd4b30f024d04b8ffd0b30c014d04b8ffe0400a
0b014d0404302f271b2eb8010b400a042b2110100a21520a55003f3f1239
2f123933ed3232111201392f2b2b2b33e12b2b2b2b2b2b321133cd2b2b2b
2b3231305d2b005d015d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d011406
232311140e0223222e02351121222e0235343e0237013e0333321e021511
3332160123012103d31412920814201918201307fdea0c100d0502060a07
01d205131e2c1e21311e10921115fea102fe5b01a701702126fef0080b08
0404080b08011006101e18131e19170d0312080c080305080d09fcc62302
e9fd3a00>LWYAAA+Calibri AddT42Char 
2 8332 1009 <00010065ffed0396050e003e00c1400d27370127360126080126030140b8
ffc0b60f024d60400137b8ffe8b310014d37b8fff0b40b0d014c37ba0211
0028ffc0402810014d28400f014d280e4f326f327f3203321d1810014d1d
100f014d1d100c0d014c1d200b014d1dba02330000ffe8b30f024d00b8ff
c0b50f014d004013b8ffc0b70f10014c13131836b8012c400c2c3af42022
012222052c5118b8010bb10556003fed3f12392f5ded10ed11392f2b0110
d62b2be12b2b2b2bc45dd4d42b2be12b2b31305d2b005d5d015d5d01140e
0223222e0635343e0233321e0233323e0235342e02232206232226351134
363321321e02151406232111363633321e0203964680b16c3c6c54360f06
050203080b070a2a4769484370512e27517c563d58261c181f1d023d080f
0a051412fe1d2349306fa66f3901a068a26f3a1119180e0c111a12111b11
08191d1a2044674a3e5f3f1f0c1a25020f212009121c132428fe95050235
618a>LWYAAA+Calibri AddT42Char 
2 5470 970 <0002006bffed03bd0520003400480099b9004affc040170f024d604a012b
753f01663f01433f01343f01243f013fb8024340140c1c1c0c7a35016a35
014b35013a35012b350135b80243b670000120000100b8ffe0b30f014d00
b8ffe8b70f024d00300c010cb8fffa400a0f024d0c3aff30300526b80100
b2135944b80115b1055f003fed3fed12392fed012f2b5dd42b2b5d5de15d
5d5d5d5d12392f10e15d5d5d5d5d3231305d2b01140e0223222e0435343e
0433321e0615140e0223222e0223220e02073e0333321e0207342e022322
0e0207141e0233323e0203bd346ca671517c5c3d2510122e4f77a66e254c
402c0e07040201070b090b26364d335d865529031a414d563169905926ae
17365a42254a453f1a213f5e3f405e3e1d01a3559f7949284a6c8aa45e53
aa9e8b673c090f120b0d0f130e121a10080e110e4c80a95c0f1e180f3965
89603a5f42240d171f1281ae692d30516500>LWYAAA+Calibri AddT42Char 
2 8694 1010 <ffff006bffed03bd0520020603ca0000>LWYAAA+Calibri AddT42Char 
2 8710 1011 <00010063fffa03af050e001f00d7b90011ffe8400a1121014c111010014d
11b8ffe8b30f014d11b8fff0b30d014d11b8ffe8b30c014d11b8fff8400a
0b014d74110126110110b8ffe8400a1121014c101010014d10b8ffe8b30f
014d10b8fff0b30d014d10b8ffe8400b0b0c014c75100126100106b8fff0
b30b014d21b8ffc0b60f024d60210100b8ffc0b310014d00b8ffd8b40b01
4d0015b8ffc0b30c014d15b8ffe8b30b014d15b8ffe8b30f014d15b8ffe0
b50f024d150511b8012db31a510b55003f3fed32012f2b2b2b2bcd2b2b31
305d2b2b5d5d2b2b2b2b2b5d5d2b2b2b2b2b2b01140e0207010e03232226
2636370121222635343e023321321e0203af03050906fe2e050f17241a22
2611020601eafd931313050a0e0902f20e150b0604c4121d1b190efbce0c
0f0903060d130d044a2824131c130906121c>LWYAAA+Calibri AddT42Char 
2 5818 972 <00030052ffed03ba05210027003700470182b90036fff0b40f11014c36b8
fff0b40c0d014c35b8fff0b40f11014c35b8fff0b40c0d014c34b8fff0b4
0f11014c34b8fff0b40c0d014c33b8fff0b311014d33b8fff0b30f014d49
b8ffc0b60f024d60490130b8fff0b40c0d014c30b8fff0b40f10014c30b8
fff0b40c0d014c30b8ffe0b30b014d30b8021940191428100c0d014c2810
0f10014c28100c0d014c28200b014d28b80218401a1e0f231e1e180f014d
14180f014d141e141e0a38100c0d014c38b8ffd040151d014d38100f1001
4c38100c0d014c38200b014d38ba02430000ffd4b30f024d00b8ffe0b30f
014d00b8ffc0b314014d00b8ffc0b310014d00b8ffc0b30d014d00b8ffc0
b40b014d0042b8fff0400a0c0d014c42301d014d42b8fff0b40f10014c42
b8fff0b40c0d014c42b8ffe0b30b014d42b8024340110a400b014d0a353d
052dfd195945fd055f003fed3fed123939012f2be12b2b2b2b2bd42b2b2b
2b2b2be12b2b2b2b2b1239392f2f2b2b12393910e12b2b2b2b10e12b2b2b
2b31305d2b002b2b2b2b2b2b2b2b01140e0223222e0235343e02372e0335
343e0233321e0215140e02071e0303342e0223220615141e021736361334
2e02270e0315141633323603ba3c71a66b649e6e3a284b6e453c5c402131
639966628f5d2c21405d3c476f4b27d81d3853356c6f1b39573c656c2a22
4567443f5f3d1f85848083014c54835a2e2a52784d3d66564b221f45515c
36447758332f516e3f335e544920234a555f025f2a443019625527433c39
1f347efda22e4b413d211f3e42492c616a6b>LWYAAA+Calibri AddT42Char 
2 9028 1012 <ffff0052ffed03ba0521020603cc0000>LWYAAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>LWYAAA+Calibri AddT42Char 
LWYAAA+Calibri /CharStrings get begin
/zero 1004 def
/one 1005 def
/two 1006 def
/three 1007 def
/four 1008 def
/five 1009 def
/six 1010 def
/seven 1011 def
/eight 1012 def
end
LWYAAA+Calibri /Encoding get
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
pop
end
%ADOEndSubsetFont
/KEFOZY+Calibri /LWYAAA+Calibri findfont ct_VMDictPut/KEFOZY+Calibri*1 [48{/.notdef}rp /zero /one /two /three /four /five /six /seven /eight 199{/.notdef}rp]KEFOZY+Calibri nfKEFOZY+Calibri*1 [0 -22.3666 -22.3666 0 0 0 ]msf385.951 695.22 mo(0)sh340.77 706.56 mo(10)[-11.4048 0 ]ysh295.59 706.56 mo(20)[-11.4048 0 ]ysh250.409 706.56 mo(30)[-11.4048 0 ]ysh205.168 706.56 mo(40)[-11.4048 0 ]ysh159.988 706.56 mo(50)[-11.4048 0 ]ysh114.807 706.56 mo(60)[-11.4048 0 ]ysh69.6265 706.56 mo(70)[-11.4048 0 ]ysh24.3856 706.56 mo(80)[-11.4048 0 ]ysh448.891 675.84 mo
449.011 675.78 449.071 675.72 449.191 675.66 cv
449.251 675.6 449.371 675.54 449.431 675.54 cv
449.491 675.48 449.551 675.48 449.611 675.48 cv
449.671 675.54 449.731 675.54 449.791 675.6 cv
455.311 681.12 li
455.371 681.18 455.431 681.24 455.491 681.3 cv
455.491 681.42 455.491 681.48 455.491 681.54 cv
455.491 681.66 455.491 681.72 455.431 681.84 cv
455.371 681.9 455.251 682.02 455.191 682.14 cv
455.071 682.26 454.951 682.32 454.891 682.38 cv
454.771 682.44 454.711 682.5 454.651 682.56 cv
454.531 682.56 454.471 682.62 454.351 682.62 cv
454.231 682.62 454.111 682.68 453.991 682.68 cv
449.971 682.74 li
449.011 682.74 448.231 682.8 447.571 682.86 cv
446.911 682.98 446.371 683.1 445.891 683.28 cv
445.411 683.4 445.051 683.58 444.751 683.82 cv
444.451 684 444.211 684.24 443.971 684.42 cv
443.731 684.66 443.551 684.9 443.431 685.2 cv
443.311 685.44 443.251 685.74 443.251 686.04 cv
443.251 686.34 443.311 686.64 443.431 686.94 cv
443.551 687.24 443.731 687.48 444.031 687.78 cv
444.331 688.08 444.691 688.32 445.051 688.5 cv
445.351 688.68 445.711 688.8 446.011 688.92 cv
446.311 688.98 446.551 689.04 446.791 689.1 cv
446.971 689.16 447.151 689.22 447.211 689.28 cv
447.211 689.28 447.271 689.34 447.271 689.4 cv
447.271 689.46 447.271 689.52 447.211 689.58 cv
447.211 689.64 447.151 689.7 447.091 689.82 cv
447.031 689.88 446.911 690 446.851 690.12 cv
446.731 690.18 446.671 690.24 446.611 690.3 cv
446.551 690.36 446.491 690.36 446.431 690.42 cv
446.371 690.42 446.311 690.48 446.251 690.48 cv
446.251 690.48 446.131 690.48 446.011 690.48 cv
445.891 690.48 445.711 690.42 445.471 690.36 cv
445.231 690.3 444.931 690.24 444.631 690.06 cv
444.331 689.94 443.971 689.76 443.671 689.58 cv
443.311 689.34 443.011 689.1 442.711 688.8 cv
442.231 688.32 441.871 687.78 441.631 687.3 cv
441.391 686.82 441.271 686.34 441.271 685.86 cv
441.271 685.38 441.391 684.9 441.571 684.48 cv
441.751 684.06 442.051 683.64 442.411 683.28 cv
442.711 682.98 443.071 682.68 443.431 682.44 cv
443.791 682.2 444.271 681.96 444.811 681.78 cv
445.351 681.6 446.071 681.42 446.851 681.3 cv
447.631 681.24 448.591 681.18 449.791 681.12 cv
453.031 681.06 li
448.651 676.74 li
448.591 676.68 448.591 676.62 448.591 676.56 cv
448.531 676.5 448.531 676.44 448.591 676.38 cv
448.591 676.32 448.651 676.2 448.711 676.14 cv
448.771 676.02 448.831 675.96 448.891 675.84 cv
cp
436.111 671.94 mo
436.831 671.16 437.611 670.5 438.391 670.02 cv
439.111 669.48 439.891 669.18 440.611 669 cv
441.331 668.82 442.051 668.82 442.771 669 cv
443.491 669.24 444.151 669.66 444.811 670.32 cv
445.411 670.98 445.831 671.58 446.071 672.24 cv
446.251 672.9 446.311 673.56 446.131 674.28 cv
445.951 675 445.591 675.72 445.051 676.44 cv
444.511 677.22 443.851 678 443.071 678.78 cv
442.291 679.56 441.511 680.22 440.731 680.7 cv
440.011 681.24 439.231 681.54 438.511 681.72 cv
437.791 681.9 437.071 681.9 436.351 681.72 cv
435.691 681.48 434.971 681.06 434.311 680.4 cv
433.711 679.8 433.291 679.14 433.051 678.48 cv
432.871 677.82 432.871 677.16 432.991 676.44 cv
433.171 675.78 433.531 675.06 434.071 674.28 cv
434.611 673.56 435.271 672.78 436.111 671.94 cv
cp
437.551 673.2 mo
437.011 673.68 436.591 674.16 436.231 674.58 cv
435.871 675.06 435.571 675.42 435.331 675.78 cv
435.091 676.2 434.971 676.56 434.851 676.86 cv
434.731 677.22 434.671 677.52 434.671 677.82 cv
434.731 678.12 434.791 678.36 434.911 678.66 cv
435.031 678.9 435.271 679.14 435.511 679.38 cv
435.931 679.86 436.411 680.1 436.891 680.16 cv
437.371 680.22 437.851 680.16 438.331 679.98 cv
438.871 679.74 439.411 679.44 439.951 679.02 cv
440.491 678.6 441.031 678.12 441.571 677.52 cv
442.351 676.8 442.951 676.14 443.371 675.54 cv
443.851 674.94 444.151 674.34 444.271 673.86 cv
444.451 673.38 444.451 672.9 444.391 672.54 cv
444.271 672.12 444.031 671.7 443.671 671.34 cv
443.371 671.04 443.071 670.86 442.771 670.74 cv
442.411 670.62 442.111 670.56 441.811 670.56 cv
441.451 670.56 441.091 670.62 440.791 670.8 cv
440.431 670.92 440.071 671.1 439.711 671.34 cv
439.351 671.58 438.991 671.82 438.631 672.18 cv
438.271 672.48 437.911 672.84 437.551 673.2 cv
cp
432.931 659.82 mo
433.051 659.7 433.111 659.64 433.231 659.58 cv
433.291 659.52 433.351 659.46 433.411 659.46 cv
433.471 659.46 433.531 659.46 433.591 659.46 cv
433.651 659.46 433.711 659.52 433.711 659.52 cv
438.931 664.74 li
438.991 664.8 438.991 664.86 439.051 664.92 cv
439.051 664.92 439.051 664.98 439.051 665.1 cv
438.991 665.16 438.991 665.22 438.931 665.28 cv
438.871 665.4 438.811 665.46 438.691 665.58 cv
438.631 665.64 438.511 665.76 438.451 665.76 cv
438.391 665.82 438.271 665.88 438.211 665.88 cv
438.151 665.94 438.091 665.94 438.031 665.94 cv
437.971 665.88 437.911 665.88 437.911 665.82 cv
435.811 663.72 li
428.191 671.34 li
431.311 672.12 li
431.431 672.18 431.551 672.24 431.611 672.3 cv
431.671 672.3 431.731 672.36 431.731 672.42 cv
431.731 672.54 431.671 672.6 431.611 672.66 cv
431.551 672.78 431.491 672.9 431.371 673.02 cv
431.251 673.08 431.191 673.14 431.131 673.2 cv
431.071 673.26 431.011 673.32 430.951 673.32 cv
430.891 673.38 430.831 673.38 430.771 673.38 cv
430.711 673.38 430.651 673.38 430.531 673.38 cv
426.751 672.54 li
426.751 672.54 426.691 672.54 426.691 672.48 cv
426.631 672.48 426.571 672.42 426.511 672.42 cv
426.451 672.36 426.391 672.3 426.331 672.24 cv
426.271 672.18 426.211 672.12 426.091 672.06 cv
425.971 671.94 425.851 671.82 425.791 671.7 cv
425.731 671.64 425.671 671.52 425.671 671.46 cv
425.611 671.4 425.611 671.34 425.611 671.34 cv
425.671 671.28 425.671 671.22 425.671 671.22 cv
434.491 662.4 li
432.691 660.6 li
432.631 660.6 432.631 660.54 432.571 660.48 cv
432.571 660.42 432.571 660.36 432.571 660.3 cv
432.631 660.18 432.631 660.12 432.691 660.06 cv
432.751 660 432.811 659.88 432.931 659.82 cv
cp
424.831 651.84 mo
424.951 651.72 425.011 651.66 425.131 651.6 cv
425.191 651.54 425.311 651.48 425.371 651.48 cv
425.431 651.42 425.491 651.42 425.551 651.42 cv
425.611 651.48 425.671 651.48 425.731 651.54 cv
431.251 657.06 li
431.311 657.12 431.371 657.18 431.431 657.3 cv
431.431 657.36 431.431 657.42 431.431 657.48 cv
431.431 657.6 431.431 657.66 431.371 657.78 cv
431.311 657.84 431.191 657.96 431.131 658.08 cv
431.011 658.2 430.891 658.26 430.831 658.32 cv
430.711 658.38 430.651 658.44 430.591 658.5 cv
430.471 658.5 430.411 658.56 430.291 658.56 cv
430.171 658.56 430.051 658.62 429.931 658.62 cv
425.911 658.68 li
424.951 658.68 424.171 658.74 423.511 658.8 cv
422.851 658.92 422.311 659.04 421.831 659.22 cv
421.351 659.34 420.991 659.52 420.691 659.76 cv
420.391 659.94 420.151 660.18 419.911 660.36 cv
419.671 660.6 419.551 660.84 419.371 661.14 cv
419.251 661.38 419.191 661.68 419.191 661.98 cv
419.191 662.28 419.251 662.58 419.371 662.88 cv
419.491 663.18 419.671 663.42 419.971 663.72 cv
420.271 664.02 420.631 664.32 420.991 664.44 cv
421.351 664.62 421.651 664.74 421.951 664.86 cv
422.251 664.92 422.491 665.04 422.731 665.04 cv
422.911 665.1 423.091 665.16 423.151 665.22 cv
423.151 665.28 423.211 665.28 423.211 665.34 cv
423.211 665.4 423.211 665.46 423.151 665.52 cv
423.151 665.58 423.091 665.64 423.031 665.76 cv
422.971 665.82 422.911 665.94 422.791 666.06 cv
422.671 666.12 422.611 666.18 422.551 666.24 cv
422.491 666.3 422.431 666.3 422.371 666.36 cv
422.311 666.36 422.311 666.42 422.251 666.42 cv
422.191 666.42 422.071 666.42 421.951 666.42 cv
421.831 666.42 421.651 666.36 421.411 666.3 cv
421.171 666.3 420.871 666.18 420.571 666.06 cv
420.271 665.88 419.911 665.7 419.611 665.52 cv
419.251 665.28 418.951 665.04 418.651 664.74 cv
418.171 664.26 417.811 663.78 417.571 663.24 cv
417.331 662.76 417.211 662.28 417.211 661.8 cv
417.211 661.32 417.331 660.84 417.511 660.42 cv
417.691 660 417.991 659.58 418.351 659.22 cv
418.651 658.92 419.011 658.62 419.371 658.38 cv
419.731 658.14 420.211 657.9 420.751 657.72 cv
421.291 657.54 422.011 657.36 422.791 657.3 cv
423.571 657.18 424.531 657.12 425.731 657.06 cv
428.971 657 li
424.591 652.68 li
424.591 652.62 424.531 652.56 424.531 652.5 cv
424.531 652.44 424.531 652.38 424.531 652.32 cv
424.531 652.26 424.591 652.14 424.651 652.08 cv
424.711 652.02 424.771 651.9 424.831 651.84 cv
cp
419.011 640.2 mo
419.191 640.02 419.311 639.9 419.431 639.9 cv
419.611 639.84 419.671 639.84 419.791 639.96 cv
427.231 647.4 li
427.291 647.46 427.351 647.58 427.291 647.7 cv
427.291 647.82 427.171 648 426.991 648.18 cv
426.811 648.36 426.631 648.42 426.511 648.48 cv
426.391 648.54 426.271 648.48 426.211 648.42 cv
418.771 640.98 li
418.651 640.92 418.651 640.8 418.711 640.68 cv
418.711 640.56 418.831 640.38 419.011 640.2 cv
cp
409.051 635.94 mo
409.171 635.82 409.231 635.76 409.351 635.7 cv
409.411 635.64 409.471 635.64 409.531 635.58 cv
409.651 635.58 409.711 635.58 409.711 635.58 cv
409.771 635.64 409.831 635.64 409.891 635.7 cv
415.111 640.92 li
415.111 640.92 415.171 640.98 415.171 641.04 cv
415.171 641.1 415.171 641.16 415.171 641.22 cv
415.171 641.28 415.111 641.34 415.051 641.46 cv
414.991 641.52 414.931 641.58 414.871 641.7 cv
414.751 641.82 414.691 641.88 414.571 641.94 cv
414.511 642 414.451 642 414.331 642.06 cv
414.271 642.06 414.211 642.06 414.151 642.06 cv
414.091 642.06 414.091 642 414.031 641.94 cv
411.931 639.9 li
404.311 647.46 li
407.431 648.24 li
407.551 648.3 407.671 648.36 407.731 648.42 cv
407.791 648.48 407.851 648.54 407.851 648.6 cv
407.851 648.66 407.851 648.72 407.791 648.84 cv
407.671 648.9 407.611 649.02 407.491 649.14 cv
407.431 649.2 407.311 649.32 407.251 649.32 cv
407.191 649.38 407.131 649.44 407.071 649.44 cv
407.011 649.5 406.951 649.5 406.891 649.5 cv
406.831 649.5 406.771 649.5 406.711 649.5 cv
402.931 648.66 li
402.871 648.66 402.811 648.66 402.811 648.6 cv
402.751 648.6 402.691 648.6 402.631 648.54 cv
402.571 648.48 402.511 648.48 402.451 648.42 cv
402.391 648.36 402.331 648.24 402.211 648.18 cv
402.091 648.06 402.031 647.94 401.911 647.82 cv
401.851 647.76 401.791 647.7 401.791 647.64 cv
401.731 647.52 401.731 647.52 401.791 647.46 cv
401.791 647.4 401.791 647.34 401.851 647.34 cv
410.611 638.58 li
408.811 636.72 li
408.751 636.72 408.751 636.66 408.751 636.6 cv
408.691 636.54 408.691 636.48 408.751 636.42 cv
408.751 636.36 408.811 636.24 408.871 636.18 cv
408.871 636.12 408.991 636 409.051 635.94 cv
0 0 0 1 cmyk
f
448.891 629.34 mo
449.011 629.28 449.071 629.22 449.191 629.16 cv
449.251 629.1 449.371 629.04 449.431 628.98 cv
449.491 628.98 449.551 628.98 449.611 628.98 cv
449.671 628.98 449.731 629.04 449.791 629.1 cv
455.311 634.62 li
455.371 634.68 455.431 634.74 455.491 634.8 cv
455.491 634.92 455.491 634.98 455.491 635.04 cv
455.491 635.16 455.491 635.22 455.431 635.34 cv
455.371 635.4 455.251 635.52 455.191 635.64 cv
455.071 635.7 454.951 635.82 454.891 635.88 cv
454.771 635.94 454.711 636 454.651 636.06 cv
454.531 636.06 454.471 636.12 454.351 636.12 cv
454.231 636.12 454.111 636.12 453.991 636.12 cv
449.971 636.18 li
449.011 636.24 448.231 636.3 447.571 636.36 cv
446.911 636.48 446.371 636.6 445.891 636.78 cv
445.411 636.9 445.051 637.08 444.751 637.32 cv
444.451 637.5 444.211 637.74 443.971 637.92 cv
443.731 638.16 443.551 638.4 443.431 638.7 cv
443.311 638.94 443.251 639.24 443.251 639.54 cv
443.251 639.84 443.311 640.08 443.431 640.38 cv
443.551 640.68 443.731 640.98 444.031 641.28 cv
444.331 641.58 444.691 641.82 445.051 642 cv
445.351 642.18 445.711 642.3 446.011 642.42 cv
446.311 642.48 446.551 642.54 446.791 642.6 cv
446.971 642.66 447.151 642.72 447.211 642.78 cv
447.211 642.78 447.271 642.84 447.271 642.9 cv
447.271 642.96 447.271 643.02 447.211 643.08 cv
447.211 643.14 447.151 643.2 447.091 643.32 cv
447.031 643.38 446.911 643.5 446.851 643.56 cv
446.731 643.68 446.671 643.74 446.611 643.8 cv
446.551 643.86 446.491 643.86 446.431 643.92 cv
446.371 643.92 446.311 643.98 446.251 643.98 cv
446.251 643.98 446.131 643.98 446.011 643.98 cv
445.891 643.98 445.711 643.92 445.471 643.86 cv
445.231 643.8 444.931 643.74 444.631 643.56 cv
444.331 643.44 443.971 643.26 443.671 643.08 cv
443.311 642.84 443.011 642.6 442.711 642.3 cv
442.231 641.82 441.871 641.28 441.631 640.8 cv
441.391 640.32 441.271 639.84 441.271 639.36 cv
441.271 638.88 441.391 638.4 441.571 637.98 cv
441.751 637.56 442.051 637.14 442.411 636.78 cv
442.711 636.48 443.071 636.18 443.431 635.94 cv
443.791 635.64 444.271 635.46 444.811 635.28 cv
445.351 635.1 446.071 634.92 446.851 634.8 cv
447.631 634.74 448.591 634.68 449.791 634.62 cv
453.031 634.56 li
448.651 630.24 li
448.591 630.18 448.591 630.12 448.591 630.06 cv
448.531 630 448.531 629.94 448.591 629.88 cv
448.591 629.76 448.651 629.7 448.711 629.64 cv
448.771 629.52 448.831 629.46 448.891 629.34 cv
cp
436.111 625.44 mo
436.831 624.66 437.611 624 438.391 623.52 cv
439.111 622.98 439.891 622.68 440.611 622.5 cv
441.331 622.32 442.051 622.32 442.771 622.5 cv
443.491 622.74 444.151 623.16 444.811 623.82 cv
445.411 624.48 445.831 625.08 446.071 625.74 cv
446.251 626.4 446.311 627.06 446.131 627.78 cv
445.951 628.5 445.591 629.22 445.051 629.94 cv
444.511 630.66 443.851 631.5 443.071 632.28 cv
442.291 633.06 441.511 633.72 440.731 634.2 cv
440.011 634.74 439.231 635.04 438.511 635.22 cv
437.791 635.4 437.071 635.4 436.351 635.22 cv
435.691 634.98 434.971 634.56 434.311 633.9 cv
433.711 633.3 433.291 632.64 433.051 631.98 cv
432.871 631.32 432.871 630.66 432.991 629.94 cv
433.171 629.28 433.531 628.56 434.071 627.78 cv
434.611 627.06 435.271 626.28 436.111 625.44 cv
cp
437.551 626.7 mo
437.011 627.18 436.591 627.66 436.231 628.08 cv
435.871 628.5 435.571 628.92 435.331 629.28 cv
435.091 629.7 434.971 630 434.851 630.36 cv
434.731 630.66 434.671 631.02 434.671 631.32 cv
434.731 631.62 434.791 631.86 434.911 632.16 cv
435.031 632.4 435.271 632.64 435.511 632.88 cv
435.931 633.36 436.411 633.6 436.891 633.66 cv
437.371 633.72 437.851 633.66 438.331 633.42 cv
438.871 633.24 439.411 632.94 439.951 632.52 cv
440.491 632.1 441.031 631.56 441.571 631.02 cv
442.351 630.3 442.951 629.58 443.371 628.98 cv
443.851 628.38 444.151 627.84 444.271 627.36 cv
444.451 626.88 444.451 626.4 444.391 625.98 cv
444.271 625.62 444.031 625.2 443.671 624.84 cv
443.371 624.54 443.071 624.36 442.771 624.24 cv
442.411 624.06 442.111 624.06 441.811 624.06 cv
441.451 624.06 441.091 624.12 440.791 624.3 cv
440.431 624.42 440.071 624.6 439.711 624.84 cv
439.351 625.08 438.991 625.32 438.631 625.68 cv
438.271 625.98 437.911 626.34 437.551 626.7 cv
cp
432.931 613.26 mo
433.051 613.2 433.111 613.14 433.231 613.08 cv
433.291 613.02 433.351 612.96 433.411 612.96 cv
433.471 612.96 433.531 612.96 433.591 612.96 cv
433.651 612.96 433.711 613.02 433.711 613.02 cv
438.931 618.24 li
438.991 618.3 438.991 618.36 439.051 618.36 cv
439.051 618.42 439.051 618.48 439.051 618.54 cv
438.991 618.66 438.991 618.72 438.931 618.78 cv
438.871 618.9 438.811 618.96 438.691 619.08 cv
438.631 619.14 438.511 619.2 438.451 619.26 cv
438.391 619.32 438.271 619.38 438.211 619.38 cv
438.151 619.44 438.091 619.44 438.031 619.38 cv
437.971 619.38 437.911 619.38 437.911 619.32 cv
435.811 617.22 li
428.191 624.84 li
431.311 625.62 li
431.431 625.68 431.551 625.74 431.611 625.74 cv
431.671 625.8 431.731 625.86 431.731 625.92 cv
431.731 626.04 431.671 626.1 431.611 626.16 cv
431.551 626.28 431.491 626.4 431.371 626.52 cv
431.251 626.58 431.191 626.64 431.131 626.7 cv
431.071 626.76 431.011 626.82 430.951 626.82 cv
430.891 626.88 430.831 626.88 430.771 626.88 cv
430.711 626.88 430.651 626.88 430.531 626.82 cv
426.751 626.04 li
426.691 625.98 li
426.631 625.98 426.571 625.92 426.511 625.92 cv
426.451 625.86 426.391 625.8 426.331 625.74 cv
426.271 625.68 426.211 625.62 426.091 625.5 cv
425.971 625.38 425.851 625.32 425.791 625.2 cv
425.731 625.14 425.671 625.02 425.671 624.96 cv
425.611 624.9 425.611 624.84 425.611 624.78 cv
425.671 624.78 425.671 624.72 425.671 624.72 cv
434.491 615.9 li
432.691 614.1 li
432.631 614.04 432.631 614.04 432.571 613.98 cv
432.571 613.92 432.571 613.86 432.571 613.74 cv
432.631 613.68 432.631 613.62 432.691 613.56 cv
432.751 613.44 432.811 613.38 432.931 613.26 cv
cp
424.831 605.28 mo
424.951 605.22 425.011 605.16 425.131 605.1 cv
425.191 605.04 425.311 604.98 425.371 604.98 cv
425.431 604.92 425.491 604.92 425.551 604.92 cv
425.611 604.98 425.671 604.98 425.731 605.04 cv
431.251 610.56 li
431.311 610.62 431.371 610.68 431.431 610.74 cv
431.431 610.86 431.431 610.92 431.431 610.98 cv
431.431 611.1 431.431 611.16 431.371 611.28 cv
431.311 611.34 431.191 611.46 431.131 611.58 cv
431.011 611.7 430.891 611.76 430.831 611.82 cv
430.711 611.88 430.651 611.94 430.591 612 cv
430.471 612 430.411 612.06 430.291 612.06 cv
430.171 612.06 430.051 612.12 429.931 612.12 cv
425.911 612.18 li
424.951 612.18 424.171 612.24 423.511 612.3 cv
422.851 612.42 422.311 612.54 421.831 612.72 cv
421.351 612.84 420.991 613.02 420.691 613.26 cv
420.391 613.44 420.151 613.68 419.911 613.86 cv
419.671 614.1 419.551 614.34 419.371 614.64 cv
419.251 614.88 419.191 615.18 419.191 615.48 cv
419.191 615.78 419.251 616.08 419.371 616.38 cv
419.491 616.68 419.671 616.92 419.971 617.22 cv
420.271 617.52 420.631 617.76 420.991 617.94 cv
421.351 618.12 421.651 618.24 421.951 618.36 cv
422.251 618.42 422.491 618.48 422.731 618.54 cv
422.911 618.6 423.091 618.66 423.151 618.72 cv
423.151 618.72 423.211 618.78 423.211 618.84 cv
423.211 618.9 423.211 618.96 423.151 619.02 cv
423.151 619.08 423.091 619.14 423.031 619.26 cv
422.971 619.32 422.911 619.44 422.791 619.56 cv
422.671 619.62 422.611 619.68 422.551 619.74 cv
422.491 619.8 422.431 619.8 422.371 619.86 cv
422.311 619.86 422.311 619.92 422.251 619.92 cv
422.191 619.92 422.071 619.92 421.951 619.92 cv
421.831 619.92 421.651 619.86 421.411 619.8 cv
421.171 619.74 420.871 619.68 420.571 619.5 cv
420.271 619.38 419.911 619.2 419.611 619.02 cv
419.251 618.78 418.951 618.54 418.651 618.24 cv
418.171 617.76 417.811 617.22 417.571 616.74 cv
417.331 616.26 417.211 615.78 417.211 615.3 cv
417.211 614.82 417.331 614.34 417.511 613.92 cv
417.691 613.5 417.991 613.08 418.351 612.72 cv
418.651 612.42 419.011 612.12 419.371 611.88 cv
419.731 611.58 420.211 611.4 420.751 611.22 cv
421.291 611.04 422.011 610.86 422.791 610.74 cv
423.571 610.68 424.531 610.62 425.731 610.56 cv
428.971 610.5 li
424.591 606.18 li
424.591 606.12 424.531 606.06 424.531 606 cv
424.531 605.94 424.531 605.88 424.531 605.82 cv
424.531 605.76 424.591 605.64 424.651 605.58 cv
424.711 605.46 424.771 605.4 424.831 605.28 cv
cp
419.011 593.7 mo
419.191 593.52 419.311 593.4 419.431 593.4 cv
419.611 593.34 419.671 593.34 419.791 593.46 cv
427.231 600.9 li
427.291 600.96 427.351 601.08 427.291 601.2 cv
427.291 601.32 427.171 601.5 426.991 601.68 cv
426.811 601.8 426.631 601.92 426.511 601.98 cv
426.391 602.04 426.271 601.98 426.211 601.92 cv
418.771 594.48 li
418.651 594.42 418.651 594.3 418.711 594.18 cv
418.711 594.06 418.831 593.88 419.011 593.7 cv
cp
409.051 589.5 mo
409.111 589.38 409.231 589.32 409.291 589.26 cv
409.411 589.2 409.471 589.14 409.531 589.14 cv
409.591 589.14 409.711 589.08 409.771 589.14 cv
409.831 589.14 409.891 589.14 409.891 589.2 cv
415.411 594.72 li
415.531 594.78 415.531 594.9 415.591 594.96 cv
415.651 595.02 415.651 595.08 415.651 595.2 cv
415.651 595.26 415.591 595.32 415.531 595.44 cv
415.471 595.56 415.411 595.62 415.291 595.74 cv
415.171 595.86 415.111 595.92 414.991 596.04 cv
414.931 596.1 414.811 596.16 414.751 596.16 cv
414.691 596.22 414.571 596.22 414.451 596.22 cv
414.391 596.28 414.271 596.28 414.151 596.28 cv
410.071 596.34 li
409.171 596.34 408.331 596.4 407.671 596.52 cv
407.011 596.58 406.471 596.7 406.051 596.88 cv
405.571 597.06 405.211 597.24 404.911 597.42 cv
404.611 597.66 404.311 597.84 404.071 598.08 cv
403.891 598.26 403.711 598.56 403.591 598.8 cv
403.471 599.1 403.411 599.34 403.411 599.64 cv
403.351 599.94 403.411 600.24 403.531 600.54 cv
403.711 600.84 403.891 601.14 404.191 601.38 cv
404.491 601.74 404.791 601.98 405.151 602.16 cv
405.511 602.34 405.811 602.46 406.111 602.52 cv
406.411 602.64 406.711 602.7 406.891 602.76 cv
407.131 602.76 407.251 602.82 407.311 602.88 cv
407.371 602.94 407.371 603 407.371 603 cv
407.371 603.06 407.371 603.12 407.371 603.18 cv
407.311 603.24 407.311 603.36 407.191 603.42 cv
407.131 603.54 407.071 603.6 406.951 603.72 cv
406.891 603.78 406.831 603.84 406.771 603.9 cv
406.711 603.96 406.651 604.02 406.591 604.02 cv
406.531 604.08 406.471 604.08 406.411 604.08 cv
406.351 604.14 406.291 604.14 406.171 604.08 cv
406.051 604.08 405.871 604.08 405.631 604.02 cv
405.391 603.96 405.091 603.84 404.791 603.72 cv
404.431 603.6 404.131 603.42 403.771 603.18 cv
403.471 602.94 403.111 602.7 402.811 602.4 cv
402.331 601.92 401.971 601.44 401.731 600.9 cv
401.551 600.42 401.431 599.94 401.431 599.46 cv
401.431 598.98 401.491 598.56 401.671 598.08 cv
401.911 597.66 402.151 597.3 402.511 596.94 cv
402.871 596.58 403.171 596.34 403.591 596.04 cv
403.951 595.8 404.371 595.56 404.971 595.38 cv
405.511 595.2 406.171 595.08 406.951 594.96 cv
407.791 594.84 408.751 594.78 409.891 594.78 cv
413.131 594.72 li
408.811 590.34 li
408.751 590.28 408.691 590.28 408.691 590.22 cv
408.691 590.16 408.691 590.04 408.691 589.98 cv
408.751 589.92 408.751 589.86 408.811 589.74 cv
408.871 589.68 408.931 589.56 409.051 589.5 cv
f
448.891 582.84 mo
449.011 582.78 449.071 582.66 449.191 582.6 cv
449.251 582.54 449.371 582.54 449.431 582.48 cv
449.491 582.48 449.551 582.48 449.611 582.48 cv
449.671 582.48 449.731 582.54 449.791 582.6 cv
455.311 588.12 li
455.371 588.18 455.431 588.24 455.491 588.3 cv
455.491 588.36 455.491 588.48 455.491 588.54 cv
455.491 588.6 455.491 588.72 455.431 588.78 cv
455.371 588.9 455.251 589.02 455.191 589.14 cv
455.071 589.2 454.951 589.32 454.891 589.38 cv
454.771 589.44 454.711 589.5 454.651 589.56 cv
454.531 589.56 454.471 589.56 454.351 589.62 cv
454.231 589.62 454.111 589.62 453.991 589.62 cv
449.971 589.68 li
449.011 589.74 448.231 589.74 447.571 589.86 cv
446.911 589.98 446.371 590.1 445.891 590.22 cv
445.411 590.4 445.051 590.58 444.751 590.82 cv
444.451 591 444.211 591.18 443.971 591.42 cv
443.731 591.66 443.551 591.9 443.431 592.14 cv
443.311 592.44 443.251 592.74 443.251 593.04 cv
443.251 593.28 443.311 593.58 443.431 593.88 cv
443.551 594.18 443.731 594.48 444.031 594.78 cv
444.331 595.08 444.691 595.32 445.051 595.5 cv
445.351 595.68 445.711 595.8 446.011 595.92 cv
446.311 595.98 446.551 596.04 446.791 596.1 cv
446.971 596.16 447.151 596.22 447.211 596.28 cv
447.211 596.28 447.271 596.34 447.271 596.4 cv
447.271 596.46 447.271 596.52 447.211 596.58 cv
447.211 596.64 447.151 596.7 447.091 596.76 cv
447.031 596.88 446.911 597 446.851 597.06 cv
446.731 597.18 446.671 597.24 446.611 597.3 cv
446.551 597.3 446.491 597.36 446.431 597.42 cv
446.371 597.42 446.311 597.42 446.251 597.48 cv
446.251 597.48 446.131 597.48 446.011 597.48 cv
445.891 597.48 445.711 597.42 445.471 597.36 cv
445.231 597.3 444.931 597.24 444.631 597.06 cv
444.331 596.94 443.971 596.76 443.671 596.52 cv
443.311 596.34 443.011 596.1 442.711 595.74 cv
442.231 595.26 441.871 594.78 441.631 594.3 cv
441.391 593.82 441.271 593.28 441.271 592.86 cv
441.271 592.38 441.391 591.9 441.571 591.48 cv
441.751 591.06 442.051 590.64 442.411 590.28 cv
442.711 589.98 443.071 589.68 443.431 589.44 cv
443.791 589.14 444.271 588.96 444.811 588.72 cv
445.351 588.54 446.071 588.42 446.851 588.3 cv
447.631 588.18 448.591 588.12 449.791 588.12 cv
453.031 588.06 li
448.651 583.74 li
448.591 583.68 448.591 583.62 448.591 583.56 cv
448.531 583.5 448.531 583.44 448.591 583.38 cv
448.591 583.26 448.651 583.2 448.711 583.14 cv
448.771 583.02 448.831 582.96 448.891 582.84 cv
cp
436.111 578.94 mo
436.831 578.16 437.611 577.5 438.391 577.02 cv
439.111 576.48 439.891 576.12 440.611 576 cv
441.331 575.82 442.051 575.82 442.771 576 cv
443.491 576.24 444.151 576.66 444.811 577.32 cv
445.411 577.92 445.831 578.58 446.071 579.24 cv
446.251 579.9 446.311 580.56 446.131 581.28 cv
445.951 581.94 445.591 582.66 445.051 583.44 cv
444.511 584.16 443.851 584.94 443.071 585.78 cv
442.291 586.56 441.511 587.16 440.731 587.7 cv
440.011 588.24 439.231 588.54 438.511 588.72 cv
437.791 588.9 437.071 588.9 436.351 588.72 cv
435.691 588.48 434.971 588.06 434.311 587.4 cv
433.711 586.74 433.291 586.14 433.051 585.48 cv
432.871 584.82 432.871 584.16 432.991 583.44 cv
433.171 582.72 433.531 582 434.071 581.28 cv
434.611 580.56 435.271 579.72 436.111 578.94 cv
cp
437.551 580.2 mo
437.011 580.68 436.591 581.16 436.231 581.58 cv
435.871 582 435.571 582.42 435.331 582.78 cv
435.091 583.14 434.971 583.5 434.851 583.86 cv
434.731 584.16 434.671 584.52 434.671 584.76 cv
434.731 585.06 434.791 585.36 434.911 585.6 cv
435.031 585.9 435.271 586.14 435.511 586.38 cv
435.931 586.8 436.411 587.1 436.891 587.16 cv
437.371 587.22 437.851 587.16 438.331 586.92 cv
438.871 586.74 439.411 586.44 439.951 586.02 cv
440.491 585.54 441.031 585.06 441.571 584.52 cv
442.351 583.8 442.951 583.08 443.371 582.48 cv
443.851 581.88 444.151 581.34 444.271 580.86 cv
444.451 580.38 444.451 579.9 444.391 579.48 cv
444.271 579.06 444.031 578.7 443.671 578.34 cv
443.371 578.04 443.071 577.86 442.771 577.68 cv
442.411 577.56 442.111 577.5 441.811 577.56 cv
441.451 577.56 441.091 577.62 440.791 577.8 cv
440.431 577.92 440.071 578.1 439.711 578.34 cv
439.351 578.58 438.991 578.82 438.631 579.18 cv
438.271 579.48 437.911 579.84 437.551 580.2 cv
cp
432.931 566.76 mo
433.051 566.7 433.111 566.58 433.231 566.58 cv
433.291 566.52 433.351 566.46 433.411 566.46 cv
433.471 566.46 433.531 566.46 433.591 566.46 cv
433.651 566.46 433.711 566.52 433.711 566.52 cv
438.931 571.74 li
438.991 571.8 438.991 571.86 439.051 571.86 cv
439.051 571.92 439.051 571.98 439.051 572.04 cv
438.991 572.16 438.991 572.22 438.931 572.28 cv
438.871 572.4 438.811 572.46 438.691 572.58 cv
438.631 572.64 438.511 572.7 438.451 572.76 cv
438.391 572.82 438.271 572.88 438.211 572.88 cv
438.151 572.88 438.091 572.88 438.031 572.88 cv
437.971 572.88 437.911 572.88 437.911 572.82 cv
435.811 570.72 li
428.191 578.34 li
431.311 579.12 li
431.431 579.18 431.551 579.18 431.611 579.24 cv
431.671 579.3 431.731 579.36 431.731 579.42 cv
431.731 579.48 431.671 579.6 431.611 579.66 cv
431.551 579.78 431.491 579.84 431.371 579.96 cv
431.251 580.08 431.191 580.14 431.131 580.2 cv
431.071 580.26 431.011 580.32 430.951 580.32 cv
430.891 580.32 430.831 580.38 430.771 580.38 cv
430.711 580.38 430.651 580.38 430.531 580.32 cv
426.751 579.54 li
426.691 579.48 li
426.631 579.48 426.571 579.42 426.511 579.42 cv
426.451 579.36 426.391 579.3 426.331 579.24 cv
426.271 579.18 426.211 579.12 426.091 579 cv
425.971 578.88 425.851 578.82 425.791 578.7 cv
425.731 578.58 425.671 578.52 425.671 578.46 cv
425.611 578.4 425.611 578.34 425.611 578.28 cv
425.671 578.28 425.671 578.22 425.671 578.16 cv
434.491 569.4 li
432.691 567.6 li
432.631 567.54 432.631 567.48 432.571 567.48 cv
432.571 567.42 432.571 567.3 432.571 567.24 cv
432.631 567.18 432.631 567.12 432.691 567.06 cv
432.751 566.94 432.811 566.88 432.931 566.76 cv
cp
424.831 558.78 mo
424.951 558.72 425.011 558.66 425.131 558.6 cv
425.191 558.54 425.311 558.48 425.371 558.42 cv
425.431 558.42 425.491 558.42 425.551 558.42 cv
425.611 558.42 425.671 558.48 425.731 558.54 cv
431.251 564.06 li
431.311 564.12 431.371 564.18 431.431 564.24 cv
431.431 564.36 431.431 564.42 431.431 564.48 cv
431.431 564.54 431.431 564.66 431.371 564.78 cv
431.311 564.84 431.191 564.96 431.131 565.08 cv
431.011 565.14 430.891 565.26 430.831 565.32 cv
430.711 565.38 430.651 565.44 430.591 565.5 cv
430.471 565.5 430.411 565.56 430.291 565.56 cv
430.171 565.56 430.051 565.56 429.931 565.56 cv
425.911 565.62 li
424.951 565.68 424.171 565.74 423.511 565.8 cv
422.851 565.92 422.311 566.04 421.831 566.22 cv
421.351 566.34 420.991 566.52 420.691 566.76 cv
420.391 566.94 420.151 567.18 419.911 567.36 cv
419.671 567.6 419.551 567.84 419.371 568.14 cv
419.251 568.38 419.191 568.68 419.191 568.98 cv
419.191 569.22 419.251 569.52 419.371 569.82 cv
419.491 570.12 419.671 570.42 419.971 570.72 cv
420.271 571.02 420.631 571.26 420.991 571.44 cv
421.351 571.62 421.651 571.74 421.951 571.86 cv
422.251 571.92 422.491 571.98 422.731 572.04 cv
422.911 572.1 423.091 572.16 423.151 572.22 cv
423.151 572.22 423.211 572.28 423.211 572.34 cv
423.211 572.4 423.211 572.46 423.151 572.52 cv
423.151 572.58 423.091 572.64 423.031 572.76 cv
422.971 572.82 422.911 572.94 422.791 573 cv
422.671 573.12 422.611 573.18 422.551 573.24 cv
422.491 573.3 422.431 573.3 422.371 573.36 cv
422.311 573.36 422.311 573.36 422.251 573.42 cv
422.191 573.42 422.071 573.42 421.951 573.42 cv
421.831 573.42 421.651 573.36 421.411 573.3 cv
421.171 573.24 420.871 573.18 420.571 573 cv
420.271 572.88 419.911 572.7 419.611 572.52 cv
419.251 572.28 418.951 572.04 418.651 571.74 cv
418.171 571.26 417.811 570.72 417.571 570.24 cv
417.331 569.76 417.211 569.28 417.211 568.8 cv
417.211 568.32 417.331 567.84 417.511 567.42 cv
417.691 567 417.991 566.58 418.351 566.22 cv
418.651 565.92 419.011 565.62 419.371 565.38 cv
419.731 565.08 420.211 564.9 420.751 564.72 cv
421.291 564.48 422.011 564.36 422.791 564.24 cv
423.571 564.18 424.531 564.12 425.731 564.06 cv
428.971 564 li
424.591 559.68 li
424.591 559.62 424.531 559.56 424.531 559.5 cv
424.531 559.44 424.531 559.38 424.531 559.32 cv
424.531 559.2 424.591 559.14 424.651 559.08 cv
424.711 558.96 424.771 558.9 424.831 558.78 cv
cp
419.011 547.2 mo
419.191 547.02 419.311 546.9 419.431 546.84 cv
419.611 546.84 419.671 546.84 419.791 546.96 cv
427.231 554.4 li
427.291 554.46 427.351 554.58 427.291 554.7 cv
427.291 554.82 427.171 554.94 426.991 555.12 cv
426.811 555.3 426.631 555.42 426.511 555.48 cv
426.391 555.54 426.271 555.48 426.211 555.42 cv
418.771 547.98 li
418.651 547.86 418.651 547.8 418.711 547.68 cv
418.711 547.5 418.831 547.38 419.011 547.2 cv
cp
406.831 545.34 mo
407.311 544.92 407.791 544.56 408.331 544.32 cv
408.871 544.14 409.411 544.08 409.951 544.08 cv
410.491 544.14 411.091 544.32 411.631 544.56 cv
412.231 544.86 412.831 545.28 413.371 545.88 cv
413.671 546.18 413.971 546.54 414.211 546.9 cv
414.451 547.2 414.631 547.56 414.811 547.86 cv
414.931 548.16 415.051 548.4 415.111 548.64 cv
415.171 548.88 415.231 549 415.231 549.12 cv
415.231 549.18 415.231 549.24 415.231 549.3 cv
415.171 549.36 415.171 549.42 415.111 549.48 cv
415.111 549.54 415.051 549.6 414.991 549.72 cv
414.931 549.78 414.811 549.9 414.691 550.02 cv
414.511 550.2 414.391 550.26 414.271 550.32 cv
414.151 550.38 414.091 550.32 414.031 550.26 cv
413.971 550.2 413.911 550.08 413.851 549.84 cv
413.791 549.66 413.731 549.36 413.611 549.06 cv
413.431 548.76 413.311 548.4 413.071 548.04 cv
412.891 547.68 412.591 547.26 412.231 546.9 cv
411.871 546.6 411.511 546.3 411.151 546.12 cv
410.851 545.94 410.491 545.88 410.131 545.82 cv
409.771 545.82 409.471 545.88 409.171 546 cv
408.871 546.12 408.571 546.3 408.331 546.6 cv
408.031 546.84 407.851 547.2 407.731 547.5 cv
407.611 547.86 407.611 548.22 407.611 548.64 cv
407.671 549 407.851 549.42 408.091 549.78 cv
408.331 550.2 408.631 550.62 409.051 551.04 cv
410.011 552 li
410.071 552.06 410.071 552.12 410.131 552.18 cv
410.131 552.24 410.131 552.3 410.131 552.36 cv
410.131 552.42 410.071 552.48 410.071 552.6 cv
410.011 552.66 409.891 552.78 409.831 552.9 cv
409.711 552.96 409.651 553.08 409.531 553.08 cv
409.471 553.14 409.411 553.2 409.351 553.2 cv
409.231 553.2 409.171 553.2 409.111 553.2 cv
409.111 553.14 409.051 553.14 408.991 553.08 cv
408.091 552.18 li
407.791 551.88 407.431 551.58 407.071 551.4 cv
406.711 551.22 406.351 551.16 405.991 551.1 cv
405.631 551.1 405.331 551.16 404.971 551.28 cv
404.671 551.4 404.371 551.58 404.071 551.88 cv
403.831 552.12 403.711 552.3 403.591 552.6 cv
403.471 552.84 403.411 553.08 403.411 553.38 cv
403.351 553.62 403.411 553.92 403.591 554.22 cv
403.711 554.52 403.891 554.76 404.191 555.06 cv
404.491 555.36 404.791 555.6 405.151 555.72 cv
405.451 555.9 405.811 556.02 406.111 556.14 cv
406.411 556.2 406.651 556.26 406.891 556.32 cv
407.071 556.38 407.191 556.38 407.251 556.44 cv
407.311 556.5 407.311 556.5 407.371 556.56 cv
407.371 556.62 407.371 556.68 407.311 556.74 cv
407.311 556.8 407.251 556.86 407.191 556.92 cv
407.131 556.98 407.071 557.1 406.951 557.22 cv
406.891 557.28 406.831 557.34 406.711 557.4 cv
406.651 557.46 406.591 557.52 406.531 557.52 cv
406.471 557.58 406.411 557.58 406.351 557.58 cv
406.351 557.58 406.231 557.64 406.171 557.64 cv
406.051 557.64 405.871 557.58 405.631 557.52 cv
405.391 557.46 405.091 557.4 404.791 557.22 cv
404.491 557.1 404.191 556.92 403.831 556.74 cv
403.471 556.5 403.111 556.2 402.811 555.9 cv
402.331 555.42 401.971 554.94 401.791 554.52 cv
401.551 554.04 401.431 553.56 401.371 553.14 cv
401.371 552.66 401.431 552.24 401.671 551.82 cv
401.851 551.4 402.091 550.98 402.451 550.62 cv
402.811 550.32 403.111 550.08 403.471 549.9 cv
403.831 549.72 404.191 549.6 404.551 549.54 cv
404.911 549.48 405.271 549.48 405.691 549.6 cv
406.051 549.66 406.411 549.84 406.771 550.08 cv
406.471 549.66 406.231 549.3 406.111 548.88 cv
405.931 548.46 405.871 548.04 405.871 547.62 cv
405.871 547.2 405.991 546.78 406.111 546.42 cv
406.291 546 406.531 545.64 406.831 545.34 cv
f
448.891 536.34 mo
449.011 536.28 449.071 536.16 449.191 536.1 cv
449.251 536.04 449.371 536.04 449.431 535.98 cv
449.491 535.98 449.551 535.98 449.611 535.98 cv
449.671 535.98 449.731 536.04 449.791 536.1 cv
455.311 541.62 li
455.371 541.68 455.431 541.74 455.491 541.8 cv
455.491 541.86 455.491 541.98 455.491 542.04 cv
455.491 542.1 455.491 542.22 455.431 542.28 cv
455.371 542.4 455.251 542.52 455.191 542.64 cv
455.071 542.7 454.951 542.82 454.891 542.88 cv
454.771 542.94 454.711 543 454.651 543 cv
454.531 543.06 454.471 543.06 454.351 543.12 cv
454.231 543.12 454.111 543.12 453.991 543.12 cv
449.971 543.18 li
449.011 543.18 448.231 543.24 447.571 543.36 cv
446.911 543.48 446.371 543.6 445.891 543.72 cv
445.411 543.9 445.051 544.08 444.751 544.26 cv
444.451 544.5 444.211 544.68 443.971 544.92 cv
443.731 545.16 443.551 545.4 443.431 545.64 cv
443.311 545.94 443.251 546.24 443.251 546.48 cv
443.251 546.78 443.311 547.08 443.431 547.38 cv
443.551 547.68 443.731 547.98 444.031 548.28 cv
444.331 548.58 444.691 548.82 445.051 549 cv
445.351 549.18 445.711 549.3 446.011 549.36 cv
446.311 549.48 446.551 549.54 446.791 549.6 cv
446.971 549.66 447.151 549.66 447.211 549.72 cv
447.211 549.78 447.271 549.84 447.271 549.9 cv
447.271 549.9 447.271 549.96 447.211 550.08 cv
447.211 550.14 447.151 550.2 447.091 550.26 cv
447.031 550.38 446.911 550.44 446.851 550.56 cv
446.731 550.68 446.671 550.74 446.611 550.74 cv
446.551 550.8 446.491 550.86 446.431 550.86 cv
446.371 550.92 446.311 550.92 446.251 550.98 cv
446.251 550.98 446.131 550.98 446.011 550.98 cv
445.891 550.98 445.711 550.92 445.471 550.86 cv
445.231 550.8 444.931 550.68 444.631 550.56 cv
444.331 550.44 443.971 550.26 443.671 550.02 cv
443.311 549.84 443.011 549.54 442.711 549.24 cv
442.231 548.76 441.871 548.28 441.631 547.8 cv
441.391 547.26 441.271 546.78 441.271 546.3 cv
441.271 545.82 441.391 545.4 441.571 544.98 cv
441.751 544.5 442.051 544.14 442.411 543.78 cv
442.711 543.48 443.071 543.18 443.431 542.94 cv
443.791 542.64 444.271 542.4 444.811 542.22 cv
445.351 542.04 446.071 541.92 446.851 541.8 cv
447.631 541.68 448.591 541.62 449.791 541.62 cv
453.031 541.56 li
448.651 537.18 li
448.591 537.18 448.591 537.12 448.591 537.06 cv
448.531 537 448.531 536.94 448.591 536.82 cv
448.591 536.76 448.651 536.7 448.711 536.64 cv
448.771 536.52 448.831 536.46 448.891 536.34 cv
cp
436.111 532.44 mo
436.831 531.66 437.611 531 438.391 530.52 cv
439.111 529.98 439.891 529.62 440.611 529.44 cv
441.331 529.32 442.051 529.32 442.771 529.5 cv
443.491 529.74 444.151 530.16 444.811 530.82 cv
445.411 531.42 445.831 532.08 446.071 532.74 cv
446.251 533.4 446.311 534.06 446.131 534.78 cv
445.951 535.44 445.591 536.16 445.051 536.94 cv
444.511 537.66 443.851 538.44 443.071 539.28 cv
442.291 540.06 441.511 540.66 440.731 541.2 cv
440.011 541.68 439.231 542.04 438.511 542.22 cv
437.791 542.4 437.071 542.4 436.351 542.16 cv
435.691 541.98 434.971 541.56 434.311 540.9 cv
433.711 540.24 433.291 539.64 433.051 538.98 cv
432.871 538.32 432.871 537.66 432.991 536.94 cv
433.171 536.22 433.531 535.5 434.071 534.78 cv
434.611 534 435.271 533.22 436.111 532.44 cv
cp
437.551 533.7 mo
437.011 534.18 436.591 534.66 436.231 535.08 cv
435.871 535.5 435.571 535.92 435.331 536.28 cv
435.091 536.64 434.971 537 434.851 537.36 cv
434.731 537.66 434.671 537.96 434.671 538.26 cv
434.731 538.56 434.791 538.86 434.911 539.1 cv
435.031 539.4 435.271 539.64 435.511 539.88 cv
435.931 540.3 436.411 540.6 436.891 540.66 cv
437.371 540.72 437.851 540.66 438.331 540.42 cv
438.871 540.24 439.411 539.94 439.951 539.52 cv
440.491 539.04 441.031 538.56 441.571 538.02 cv
442.351 537.24 442.951 536.58 443.371 535.98 cv
443.851 535.38 444.151 534.84 444.271 534.36 cv
444.451 533.88 444.451 533.4 444.391 532.98 cv
444.271 532.56 444.031 532.2 443.671 531.84 cv
443.371 531.54 443.071 531.3 442.771 531.18 cv
442.411 531.06 442.111 531 441.811 531.06 cv
441.451 531.06 441.091 531.12 440.791 531.24 cv
440.431 531.42 440.071 531.6 439.711 531.84 cv
439.351 532.08 438.991 532.32 438.631 532.62 cv
438.271 532.98 437.911 533.34 437.551 533.7 cv
cp
432.931 520.26 mo
433.051 520.2 433.111 520.08 433.231 520.08 cv
433.291 520.02 433.351 519.96 433.411 519.96 cv
433.471 519.96 433.531 519.96 433.591 519.96 cv
433.651 519.96 433.711 520.02 433.711 520.02 cv
438.931 525.24 li
438.991 525.3 438.991 525.3 439.051 525.36 cv
439.051 525.42 439.051 525.48 439.051 525.54 cv
438.991 525.6 438.991 525.72 438.931 525.78 cv
438.871 525.84 438.811 525.96 438.691 526.08 cv
438.631 526.14 438.511 526.2 438.451 526.26 cv
438.391 526.32 438.271 526.38 438.211 526.38 cv
438.151 526.38 438.091 526.38 438.031 526.38 cv
437.971 526.38 437.911 526.38 437.911 526.32 cv
435.811 524.22 li
428.191 531.84 li
431.311 532.62 li
431.431 532.68 431.551 532.68 431.611 532.74 cv
431.671 532.8 431.731 532.86 431.731 532.92 cv
431.731 532.98 431.671 533.1 431.611 533.16 cv
431.551 533.28 431.491 533.34 431.371 533.46 cv
431.251 533.58 431.191 533.64 431.131 533.7 cv
431.071 533.76 431.011 533.76 430.951 533.82 cv
430.891 533.82 430.831 533.88 430.771 533.88 cv
430.711 533.88 430.651 533.88 430.531 533.82 cv
426.751 533.04 li
426.751 532.98 426.691 532.98 426.691 532.98 cv
426.631 532.98 426.571 532.92 426.511 532.86 cv
426.451 532.86 426.391 532.8 426.331 532.74 cv
426.271 532.68 426.211 532.62 426.091 532.5 cv
425.971 532.38 425.851 532.26 425.791 532.2 cv
425.731 532.08 425.671 532.02 425.671 531.96 cv
425.611 531.9 425.611 531.84 425.611 531.78 cv
425.671 531.78 425.671 531.72 425.671 531.66 cv
434.491 522.9 li
432.691 521.1 li
432.631 521.04 432.631 520.98 432.571 520.92 cv
432.571 520.86 432.571 520.8 432.571 520.74 cv
432.631 520.68 432.631 520.62 432.691 520.56 cv
432.751 520.44 432.811 520.38 432.931 520.26 cv
cp
424.831 512.28 mo
424.951 512.22 425.011 512.1 425.131 512.04 cv
425.191 511.98 425.311 511.98 425.371 511.92 cv
425.431 511.92 425.491 511.92 425.551 511.92 cv
425.611 511.92 425.671 511.98 425.731 512.04 cv
431.251 517.56 li
431.311 517.62 431.371 517.68 431.431 517.74 cv
431.431 517.8 431.431 517.92 431.431 517.98 cv
431.431 518.04 431.431 518.16 431.371 518.22 cv
431.311 518.34 431.191 518.46 431.131 518.58 cv
431.011 518.64 430.891 518.76 430.831 518.82 cv
430.711 518.88 430.651 518.94 430.591 518.94 cv
430.471 519 430.411 519 430.291 519.06 cv
430.171 519.06 430.051 519.06 429.931 519.06 cv
425.911 519.12 li
424.951 519.18 424.171 519.18 423.511 519.3 cv
422.851 519.42 422.311 519.54 421.831 519.66 cv
421.351 519.84 420.991 520.02 420.691 520.2 cv
420.391 520.44 420.151 520.62 419.911 520.86 cv
419.671 521.1 419.551 521.34 419.371 521.58 cv
419.251 521.88 419.191 522.18 419.191 522.48 cv
419.191 522.72 419.251 523.02 419.371 523.32 cv
419.491 523.62 419.671 523.92 419.971 524.22 cv
420.271 524.52 420.631 524.76 420.991 524.94 cv
421.351 525.12 421.651 525.24 421.951 525.36 cv
422.251 525.42 422.491 525.48 422.731 525.54 cv
422.911 525.6 423.091 525.66 423.151 525.72 cv
423.151 525.72 423.211 525.78 423.211 525.84 cv
423.211 525.9 423.211 525.96 423.151 526.02 cv
423.151 526.08 423.091 526.14 423.031 526.2 cv
422.971 526.32 422.911 526.44 422.791 526.5 cv
422.671 526.62 422.611 526.68 422.551 526.74 cv
422.491 526.74 422.431 526.8 422.371 526.86 cv
422.311 526.86 422.311 526.86 422.251 526.92 cv
422.191 526.92 422.071 526.92 421.951 526.92 cv
421.831 526.92 421.651 526.86 421.411 526.8 cv
421.171 526.74 420.871 526.68 420.571 526.5 cv
420.271 526.38 419.911 526.2 419.611 525.96 cv
419.251 525.78 418.951 525.54 418.651 525.18 cv
418.171 524.7 417.811 524.22 417.571 523.74 cv
417.331 523.26 417.211 522.72 417.211 522.24 cv
417.211 521.82 417.331 521.34 417.511 520.92 cv
417.691 520.5 417.991 520.08 418.351 519.72 cv
418.651 519.42 419.011 519.12 419.371 518.88 cv
419.731 518.58 420.211 518.4 420.751 518.16 cv
421.291 517.98 422.011 517.86 422.791 517.74 cv
423.571 517.62 424.531 517.56 425.731 517.56 cv
428.971 517.5 li
424.591 513.18 li
424.591 513.12 424.531 513.06 424.531 513 cv
424.531 512.94 424.531 512.88 424.531 512.82 cv
424.531 512.7 424.591 512.64 424.651 512.58 cv
424.711 512.46 424.771 512.4 424.831 512.28 cv
cp
419.011 500.7 mo
419.191 500.52 419.311 500.4 419.431 500.34 cv
419.611 500.34 419.671 500.34 419.791 500.46 cv
427.231 507.84 li
427.291 507.96 427.351 508.08 427.291 508.2 cv
427.291 508.32 427.171 508.44 426.991 508.62 cv
426.811 508.8 426.631 508.92 426.511 508.98 cv
426.391 508.98 426.271 508.98 426.211 508.92 cv
418.771 501.48 li
418.651 501.36 418.651 501.3 418.711 501.12 cv
418.711 501 418.831 500.88 419.011 500.7 cv
cp
406.351 498.3 mo
406.531 498.18 406.651 498.06 406.831 498 cv
406.951 497.94 407.071 498 407.191 498.06 cv
408.331 499.2 li
410.431 497.1 li
410.431 497.04 410.491 497.04 410.551 497.04 cv
410.611 497.04 410.671 497.04 410.731 497.04 cv
410.791 497.1 410.911 497.16 410.971 497.22 cv
411.091 497.28 411.211 497.4 411.331 497.52 cv
411.451 497.64 411.571 497.76 411.631 497.88 cv
411.691 497.94 411.751 498.06 411.811 498.12 cv
411.811 498.18 411.811 498.24 411.811 498.3 cv
411.811 498.36 411.811 498.36 411.751 498.42 cv
409.651 500.52 li
413.731 504.6 li
413.791 504.66 413.851 504.72 413.851 504.78 cv
413.911 504.84 413.911 504.9 413.911 504.96 cv
413.911 505.08 413.851 505.14 413.791 505.26 cv
413.731 505.32 413.611 505.44 413.491 505.56 cv
413.431 505.68 413.311 505.74 413.251 505.8 cv
413.131 505.86 413.071 505.92 413.011 505.98 cv
412.891 506.04 412.831 506.1 412.711 506.1 cv
412.651 506.16 412.591 506.16 412.471 506.22 cv
402.811 508.74 li
402.751 508.74 402.691 508.74 402.631 508.74 cv
402.511 508.68 402.451 508.68 402.331 508.62 cv
402.211 508.56 402.151 508.44 401.971 508.32 cv
401.851 508.26 401.731 508.08 401.551 507.96 cv
401.431 507.78 401.251 507.6 401.131 507.48 cv
401.011 507.36 400.951 507.24 400.891 507.12 cv
400.831 507 400.771 506.94 400.771 506.88 cv
400.771 506.76 400.771 506.7 400.831 506.7 cv
407.191 500.28 li
406.111 499.14 li
405.991 499.08 405.991 498.96 405.991 498.84 cv
406.051 498.66 406.171 498.54 406.351 498.3 cv
cp
403.051 507.12 mo
403.111 507.12 li
411.751 504.84 li
408.571 501.6 li
f
448.891 489.84 mo
449.011 489.78 449.071 489.66 449.191 489.6 cv
449.251 489.54 449.371 489.54 449.431 489.48 cv
449.491 489.48 449.551 489.48 449.611 489.48 cv
449.671 489.48 449.731 489.54 449.791 489.54 cv
455.311 495.06 li
455.371 495.18 455.431 495.24 455.491 495.3 cv
455.491 495.36 455.491 495.48 455.491 495.54 cv
455.491 495.6 455.491 495.72 455.431 495.78 cv
455.371 495.9 455.251 496.02 455.191 496.08 cv
455.071 496.2 454.951 496.32 454.891 496.38 cv
454.771 496.44 454.711 496.5 454.651 496.5 cv
454.531 496.56 454.471 496.56 454.351 496.62 cv
454.231 496.62 454.111 496.62 453.991 496.62 cv
449.971 496.68 li
449.011 496.68 448.231 496.74 447.571 496.86 cv
446.911 496.92 446.371 497.1 445.891 497.22 cv
445.411 497.4 445.051 497.58 444.751 497.76 cv
444.451 498 444.211 498.18 443.971 498.42 cv
443.731 498.66 443.551 498.9 443.431 499.14 cv
443.311 499.44 443.251 499.74 443.251 499.98 cv
443.251 500.28 443.311 500.58 443.431 500.88 cv
443.551 501.18 443.731 501.48 444.031 501.78 cv
444.331 502.08 444.691 502.32 445.051 502.5 cv
445.351 502.68 445.711 502.8 446.011 502.86 cv
446.311 502.98 446.551 503.04 446.791 503.1 cv
446.971 503.1 447.151 503.16 447.211 503.22 cv
447.211 503.28 447.271 503.34 447.271 503.4 cv
447.271 503.4 447.271 503.46 447.211 503.52 cv
447.211 503.64 447.151 503.7 447.091 503.76 cv
447.031 503.88 446.911 503.94 446.851 504.06 cv
446.731 504.12 446.671 504.24 446.611 504.24 cv
446.551 504.3 446.491 504.36 446.431 504.36 cv
446.371 504.42 446.311 504.42 446.251 504.42 cv
446.251 504.48 446.131 504.48 446.011 504.48 cv
445.891 504.48 445.711 504.42 445.471 504.36 cv
445.231 504.3 444.931 504.18 444.631 504.06 cv
444.331 503.94 443.971 503.76 443.671 503.52 cv
443.311 503.34 443.011 503.04 442.711 502.74 cv
442.231 502.26 441.871 501.78 441.631 501.3 cv
441.391 500.76 441.271 500.28 441.271 499.8 cv
441.271 499.32 441.391 498.9 441.571 498.48 cv
441.751 498 442.051 497.64 442.411 497.28 cv
442.711 496.98 443.071 496.68 443.431 496.38 cv
443.791 496.14 444.271 495.9 444.811 495.72 cv
445.351 495.54 446.071 495.42 446.851 495.3 cv
447.631 495.18 448.591 495.12 449.791 495.12 cv
453.031 495.06 li
448.651 490.68 li
448.591 490.68 448.591 490.62 448.591 490.56 cv
448.531 490.5 448.531 490.44 448.591 490.32 cv
448.591 490.26 448.651 490.2 448.711 490.08 cv
448.771 490.02 448.831 489.96 448.891 489.84 cv
cp
436.111 485.94 mo
436.831 485.16 437.611 484.5 438.391 484.02 cv
439.111 483.48 439.891 483.12 440.611 482.94 cv
441.331 482.76 442.051 482.82 442.771 483 cv
443.491 483.18 444.151 483.66 444.811 484.32 cv
445.411 484.92 445.831 485.58 446.071 486.24 cv
446.251 486.9 446.311 487.56 446.131 488.28 cv
445.951 488.94 445.591 489.66 445.051 490.44 cv
444.511 491.16 443.851 491.94 443.071 492.78 cv
442.291 493.56 441.511 494.16 440.731 494.7 cv
440.011 495.18 439.231 495.54 438.511 495.72 cv
437.791 495.9 437.071 495.9 436.351 495.66 cv
435.691 495.48 434.971 495.06 434.311 494.4 cv
433.711 493.74 433.291 493.14 433.051 492.48 cv
432.871 491.82 432.871 491.1 432.991 490.44 cv
433.171 489.72 433.531 489 434.071 488.28 cv
434.611 487.5 435.271 486.72 436.111 485.94 cv
cp
437.551 487.2 mo
437.011 487.68 436.591 488.16 436.231 488.58 cv
435.871 489 435.571 489.42 435.331 489.78 cv
435.091 490.14 434.971 490.5 434.851 490.86 cv
434.731 491.16 434.671 491.46 434.671 491.76 cv
434.731 492.06 434.791 492.36 434.911 492.6 cv
435.031 492.9 435.271 493.14 435.511 493.38 cv
435.931 493.8 436.411 494.04 436.891 494.16 cv
437.371 494.22 437.851 494.16 438.331 493.92 cv
438.871 493.74 439.411 493.44 439.951 492.96 cv
440.491 492.54 441.031 492.06 441.571 491.52 cv
442.351 490.74 442.951 490.08 443.371 489.48 cv
443.851 488.88 444.151 488.34 444.271 487.86 cv
444.451 487.32 444.451 486.9 444.391 486.48 cv
444.271 486.06 444.031 485.7 443.671 485.34 cv
443.371 485.04 443.071 484.8 442.771 484.68 cv
442.411 484.56 442.111 484.5 441.811 484.5 cv
441.451 484.56 441.091 484.62 440.791 484.74 cv
440.431 484.92 440.071 485.1 439.711 485.34 cv
439.351 485.52 438.991 485.82 438.631 486.12 cv
438.271 486.48 437.911 486.78 437.551 487.2 cv
cp
432.931 473.76 mo
433.051 473.7 433.111 473.58 433.231 473.52 cv
433.291 473.52 433.351 473.46 433.411 473.46 cv
433.471 473.4 433.531 473.4 433.591 473.46 cv
433.651 473.46 433.711 473.46 433.711 473.52 cv
438.931 478.74 li
438.991 478.8 438.991 478.8 439.051 478.86 cv
439.051 478.92 439.051 478.98 439.051 479.04 cv
438.991 479.1 438.991 479.22 438.931 479.28 cv
438.871 479.34 438.811 479.46 438.691 479.52 cv
438.631 479.64 438.511 479.7 438.451 479.76 cv
438.391 479.82 438.271 479.82 438.211 479.88 cv
438.151 479.88 438.091 479.88 438.031 479.88 cv
437.971 479.88 437.911 479.82 437.911 479.82 cv
435.811 477.72 li
428.191 485.34 li
431.311 486.12 li
431.431 486.12 431.551 486.18 431.611 486.24 cv
431.671 486.3 431.731 486.36 431.731 486.42 cv
431.731 486.48 431.671 486.6 431.611 486.66 cv
431.551 486.78 431.491 486.84 431.371 486.96 cv
431.251 487.08 431.191 487.14 431.131 487.2 cv
431.071 487.26 431.011 487.26 430.951 487.32 cv
430.891 487.32 430.831 487.32 430.771 487.32 cv
430.711 487.38 430.651 487.32 430.531 487.32 cv
426.751 486.48 li
426.691 486.48 li
426.631 486.42 426.571 486.42 426.511 486.36 cv
426.451 486.36 426.391 486.3 426.331 486.24 cv
426.271 486.18 426.211 486.12 426.091 486 cv
425.971 485.88 425.851 485.76 425.791 485.7 cv
425.731 485.58 425.671 485.52 425.671 485.46 cv
425.611 485.4 425.611 485.34 425.611 485.28 cv
425.671 485.22 425.671 485.22 425.671 485.16 cv
434.491 476.4 li
432.691 474.6 li
432.631 474.54 432.631 474.48 432.571 474.42 cv
432.571 474.36 432.571 474.3 432.571 474.24 cv
432.631 474.18 432.631 474.12 432.691 474 cv
432.751 473.94 432.811 473.88 432.931 473.76 cv
cp
424.831 465.78 mo
424.951 465.72 425.011 465.6 425.131 465.54 cv
425.191 465.48 425.311 465.48 425.371 465.42 cv
425.431 465.42 425.491 465.42 425.551 465.42 cv
425.611 465.42 425.671 465.48 425.731 465.54 cv
431.251 471.06 li
431.311 471.12 431.371 471.18 431.431 471.24 cv
431.431 471.3 431.431 471.42 431.431 471.48 cv
431.431 471.54 431.431 471.66 431.371 471.72 cv
431.311 471.84 431.191 471.96 431.131 472.08 cv
431.011 472.14 430.891 472.26 430.831 472.32 cv
430.711 472.38 430.651 472.44 430.591 472.44 cv
430.471 472.5 430.411 472.5 430.291 472.56 cv
430.171 472.56 430.051 472.56 429.931 472.56 cv
425.911 472.62 li
424.951 472.62 424.171 472.68 423.511 472.8 cv
422.851 472.92 422.311 473.04 421.831 473.16 cv
421.351 473.34 420.991 473.52 420.691 473.7 cv
420.391 473.94 420.151 474.12 419.911 474.36 cv
419.671 474.6 419.551 474.84 419.371 475.08 cv
419.251 475.38 419.191 475.68 419.191 475.92 cv
419.191 476.22 419.251 476.52 419.371 476.82 cv
419.491 477.12 419.671 477.42 419.971 477.72 cv
420.271 478.02 420.631 478.26 420.991 478.44 cv
421.351 478.62 421.651 478.74 421.951 478.8 cv
422.251 478.92 422.491 478.98 422.731 479.04 cv
422.911 479.1 423.091 479.1 423.151 479.16 cv
423.151 479.22 423.211 479.28 423.211 479.34 cv
423.211 479.34 423.211 479.4 423.151 479.52 cv
423.151 479.58 423.091 479.64 423.031 479.7 cv
422.971 479.82 422.911 479.88 422.791 480 cv
422.671 480.12 422.611 480.18 422.551 480.18 cv
422.491 480.24 422.431 480.3 422.371 480.3 cv
422.311 480.36 422.311 480.36 422.251 480.42 cv
422.191 480.42 422.071 480.42 421.951 480.42 cv
421.831 480.42 421.651 480.36 421.411 480.3 cv
421.171 480.24 420.871 480.12 420.571 480 cv
420.271 479.88 419.911 479.7 419.611 479.46 cv
419.251 479.28 418.951 478.98 418.651 478.68 cv
418.171 478.2 417.811 477.72 417.571 477.24 cv
417.331 476.7 417.211 476.22 417.211 475.74 cv
417.211 475.26 417.331 474.84 417.511 474.42 cv
417.691 473.94 417.991 473.58 418.351 473.22 cv
418.651 472.92 419.011 472.62 419.371 472.32 cv
419.731 472.08 420.211 471.84 420.751 471.66 cv
421.291 471.48 422.011 471.36 422.791 471.24 cv
423.571 471.12 424.531 471.06 425.731 471.06 cv
428.971 471 li
424.591 466.62 li
424.591 466.62 424.531 466.56 424.531 466.5 cv
424.531 466.44 424.531 466.38 424.531 466.26 cv
424.531 466.2 424.591 466.14 424.651 466.08 cv
424.711 465.96 424.771 465.9 424.831 465.78 cv
cp
419.011 454.2 mo
419.191 454.02 419.311 453.9 419.431 453.84 cv
419.611 453.84 419.671 453.84 419.791 453.9 cv
427.231 461.34 li
427.291 461.46 427.351 461.58 427.291 461.7 cv
427.291 461.82 427.171 461.94 426.991 462.12 cv
426.811 462.3 426.631 462.42 426.511 462.48 cv
426.391 462.48 426.271 462.48 426.211 462.42 cv
418.771 454.98 li
418.651 454.86 418.651 454.74 418.711 454.62 cv
418.711 454.5 418.831 454.38 419.011 454.2 cv
cp
406.471 452.64 mo
407.011 452.1 407.551 451.74 408.151 451.5 cv
408.751 451.26 409.351 451.14 409.951 451.2 cv
410.611 451.26 411.211 451.44 411.811 451.74 cv
412.411 452.04 413.011 452.46 413.551 453.06 cv
413.851 453.36 414.091 453.66 414.331 453.96 cv
414.571 454.32 414.751 454.62 414.931 454.86 cv
415.111 455.16 415.171 455.4 415.291 455.58 cv
415.351 455.82 415.411 455.94 415.411 456 cv
415.411 456.12 415.411 456.18 415.351 456.18 cv
415.351 456.24 415.351 456.3 415.291 456.36 cv
415.291 456.42 415.231 456.48 415.171 456.54 cv
415.111 456.6 415.051 456.72 414.931 456.78 cv
414.871 456.9 414.751 456.96 414.691 457.02 cv
414.631 457.08 414.511 457.14 414.451 457.14 cv
414.391 457.14 414.331 457.2 414.331 457.14 cv
414.271 457.14 414.211 457.14 414.151 457.08 cv
414.151 457.08 414.091 456.96 414.031 456.78 cv
413.971 456.6 413.911 456.36 413.791 456.12 cv
413.671 455.88 413.551 455.58 413.311 455.22 cv
413.131 454.92 412.831 454.56 412.471 454.14 cv
412.111 453.84 411.751 453.54 411.391 453.36 cv
411.031 453.12 410.671 453 410.251 453 cv
409.891 452.94 409.531 453 409.111 453.18 cv
408.751 453.3 408.331 453.54 407.971 453.96 cv
407.671 454.26 407.431 454.62 407.311 454.92 cv
407.131 455.28 407.071 455.64 407.131 456 cv
407.191 456.36 407.311 456.78 407.551 457.14 cv
407.791 457.56 408.151 457.98 408.571 458.4 cv
408.931 458.76 409.171 459 409.471 459.18 cv
409.711 459.36 409.951 459.6 410.131 459.78 cv
410.251 459.9 410.311 460.08 410.311 460.2 cv
410.311 460.32 410.251 460.5 410.011 460.68 cv
405.991 464.76 li
405.811 464.88 405.631 465 405.451 465 cv
405.331 465 405.151 464.94 405.031 464.76 cv
400.591 460.38 li
400.531 460.32 400.531 460.26 400.471 460.2 cv
400.471 460.14 400.471 460.08 400.531 460.02 cv
400.531 459.9 400.591 459.84 400.651 459.78 cv
400.711 459.66 400.771 459.6 400.831 459.48 cv
401.071 459.3 401.191 459.18 401.371 459.12 cv
401.491 459.06 401.611 459.12 401.731 459.18 cv
405.271 462.78 li
408.091 459.96 li
407.911 459.78 407.731 459.66 407.551 459.48 cv
407.311 459.3 407.131 459.06 406.891 458.82 cv
406.351 458.28 405.931 457.74 405.631 457.2 cv
405.391 456.66 405.211 456.12 405.211 455.58 cv
405.151 455.04 405.271 454.56 405.451 454.08 cv
405.691 453.54 405.991 453.12 406.471 452.64 cv
f
448.891 443.34 mo
449.011 443.22 449.071 443.16 449.191 443.1 cv
449.251 443.04 449.371 442.98 449.431 442.98 cv
449.491 442.98 449.551 442.98 449.611 442.98 cv
449.671 442.98 449.731 443.04 449.791 443.04 cv
455.311 448.56 li
455.371 448.68 455.431 448.74 455.491 448.8 cv
455.491 448.86 455.491 448.92 455.491 449.04 cv
455.491 449.1 455.491 449.22 455.431 449.28 cv
455.371 449.4 455.251 449.46 455.191 449.58 cv
455.071 449.7 454.951 449.76 454.891 449.88 cv
454.771 449.94 454.711 450 454.651 450 cv
454.531 450.06 454.471 450.06 454.351 450.12 cv
454.231 450.12 454.111 450.12 453.991 450.12 cv
449.971 450.18 li
449.011 450.18 448.231 450.24 447.571 450.36 cv
446.911 450.42 446.371 450.54 445.891 450.72 cv
445.411 450.9 445.051 451.08 444.751 451.26 cv
444.451 451.5 444.211 451.68 443.971 451.92 cv
443.731 452.16 443.551 452.4 443.431 452.64 cv
443.311 452.94 443.251 453.18 443.251 453.48 cv
443.251 453.78 443.311 454.08 443.431 454.38 cv
443.551 454.68 443.731 454.98 444.031 455.22 cv
444.331 455.58 444.691 455.82 445.051 456 cv
445.351 456.18 445.711 456.3 446.011 456.36 cv
446.311 456.48 446.551 456.54 446.791 456.6 cv
446.971 456.6 447.151 456.66 447.211 456.72 cv
447.211 456.78 447.271 456.84 447.271 456.84 cv
447.271 456.9 447.271 456.96 447.211 457.02 cv
447.211 457.08 447.151 457.2 447.091 457.26 cv
447.031 457.38 446.911 457.44 446.851 457.56 cv
446.731 457.62 446.671 457.68 446.611 457.74 cv
446.551 457.8 446.491 457.86 446.431 457.86 cv
446.371 457.92 446.311 457.92 446.251 457.92 cv
446.251 457.98 446.131 457.98 446.011 457.98 cv
445.891 457.92 445.711 457.92 445.471 457.86 cv
445.231 457.8 444.931 457.68 444.631 457.56 cv
444.331 457.44 443.971 457.26 443.671 457.02 cv
443.311 456.84 443.011 456.54 442.711 456.24 cv
442.231 455.76 441.871 455.28 441.631 454.8 cv
441.391 454.26 441.271 453.78 441.271 453.3 cv
441.271 452.82 441.391 452.4 441.571 451.92 cv
441.751 451.5 442.051 451.14 442.411 450.78 cv
442.711 450.42 443.071 450.18 443.431 449.88 cv
443.791 449.64 444.271 449.4 444.811 449.22 cv
445.351 449.04 446.071 448.92 446.851 448.8 cv
447.631 448.68 448.591 448.62 449.791 448.62 cv
453.031 448.56 li
448.651 444.18 li
448.591 444.18 448.591 444.12 448.591 444.06 cv
448.531 444 448.531 443.94 448.591 443.82 cv
448.591 443.76 448.651 443.7 448.711 443.58 cv
448.771 443.52 448.831 443.46 448.891 443.34 cv
cp
436.111 439.38 mo
436.831 438.66 437.611 438 438.391 437.46 cv
439.111 436.98 439.891 436.62 440.611 436.44 cv
441.331 436.26 442.051 436.32 442.771 436.5 cv
443.491 436.68 444.151 437.16 444.811 437.82 cv
445.411 438.42 445.831 439.08 446.071 439.74 cv
446.251 440.4 446.311 441.06 446.131 441.72 cv
445.951 442.44 445.591 443.16 445.051 443.94 cv
444.511 444.66 443.851 445.44 443.071 446.28 cv
442.291 447.06 441.511 447.66 440.731 448.2 cv
440.011 448.68 439.231 449.04 438.511 449.22 cv
437.791 449.4 437.071 449.4 436.351 449.16 cv
435.691 448.98 434.971 448.56 434.311 447.9 cv
433.711 447.24 433.291 446.58 433.051 445.98 cv
432.871 445.32 432.871 444.6 432.991 443.94 cv
433.171 443.22 433.531 442.5 434.071 441.78 cv
434.611 441 435.271 440.22 436.111 439.38 cv
cp
437.551 440.7 mo
437.011 441.18 436.591 441.66 436.231 442.08 cv
435.871 442.5 435.571 442.92 435.331 443.28 cv
435.091 443.64 434.971 444 434.851 444.36 cv
434.731 444.66 434.671 444.96 434.671 445.26 cv
434.731 445.56 434.791 445.86 434.911 446.1 cv
435.031 446.34 435.271 446.64 435.511 446.88 cv
435.931 447.3 436.411 447.54 436.891 447.6 cv
437.371 447.72 437.851 447.6 438.331 447.42 cv
438.871 447.24 439.411 446.88 439.951 446.46 cv
440.491 446.04 441.031 445.56 441.571 445.02 cv
442.351 444.24 442.951 443.58 443.371 442.98 cv
443.851 442.38 444.151 441.84 444.271 441.36 cv
444.451 440.82 444.451 440.4 444.391 439.98 cv
444.271 439.56 444.031 439.2 443.671 438.78 cv
443.371 438.54 443.071 438.3 442.771 438.18 cv
442.411 438.06 442.111 438 441.811 438 cv
441.451 438.06 441.091 438.12 440.791 438.24 cv
440.431 438.42 440.071 438.6 439.711 438.78 cv
439.351 439.02 438.991 439.32 438.631 439.62 cv
438.271 439.98 437.911 440.28 437.551 440.7 cv
cp
432.931 427.26 mo
433.051 427.14 433.111 427.08 433.231 427.02 cv
433.291 426.96 433.351 426.96 433.411 426.96 cv
433.471 426.9 433.531 426.9 433.591 426.96 cv
433.651 426.96 433.711 426.96 433.711 427.02 cv
438.931 432.24 li
438.991 432.3 438.991 432.3 439.051 432.36 cv
439.051 432.42 439.051 432.48 439.051 432.54 cv
438.991 432.6 438.991 432.66 438.931 432.78 cv
438.871 432.84 438.811 432.96 438.691 433.02 cv
438.631 433.14 438.511 433.2 438.451 433.26 cv
438.391 433.32 438.271 433.32 438.211 433.38 cv
438.151 433.38 438.091 433.38 438.031 433.38 cv
437.971 433.38 437.911 433.32 437.911 433.32 cv
435.811 431.22 li
428.191 438.84 li
431.311 439.62 li
431.431 439.62 431.551 439.68 431.611 439.74 cv
431.671 439.8 431.731 439.86 431.731 439.92 cv
431.731 439.98 431.671 440.04 431.611 440.16 cv
431.551 440.22 431.491 440.34 431.371 440.46 cv
431.251 440.58 431.191 440.64 431.131 440.7 cv
431.071 440.76 431.011 440.76 430.951 440.82 cv
430.891 440.82 430.831 440.82 430.771 440.82 cv
430.711 440.82 430.651 440.82 430.531 440.82 cv
426.751 439.98 li
426.691 439.98 li
426.631 439.92 426.571 439.92 426.511 439.86 cv
426.451 439.86 426.391 439.8 426.331 439.74 cv
426.271 439.68 426.211 439.62 426.091 439.5 cv
425.971 439.38 425.851 439.26 425.791 439.2 cv
425.731 439.08 425.671 439.02 425.671 438.96 cv
425.611 438.9 425.611 438.84 425.611 438.78 cv
425.671 438.72 425.671 438.72 425.671 438.66 cv
434.491 429.9 li
432.691 428.1 li
432.631 428.04 432.631 427.98 432.571 427.92 cv
432.571 427.86 432.571 427.8 432.571 427.74 cv
432.631 427.68 432.631 427.62 432.691 427.5 cv
432.751 427.44 432.811 427.38 432.931 427.26 cv
cp
424.831 419.28 mo
424.951 419.22 425.011 419.1 425.131 419.04 cv
425.191 418.98 425.311 418.98 425.371 418.92 cv
425.431 418.92 425.491 418.92 425.551 418.92 cv
425.611 418.92 425.671 418.98 425.731 418.98 cv
431.251 424.5 li
431.311 424.62 431.371 424.68 431.431 424.74 cv
431.431 424.8 431.431 424.92 431.431 424.98 cv
431.431 425.04 431.431 425.16 431.371 425.22 cv
431.311 425.34 431.191 425.46 431.131 425.52 cv
431.011 425.64 430.891 425.76 430.831 425.82 cv
430.711 425.88 430.651 425.94 430.591 425.94 cv
430.471 426 430.411 426 430.291 426.06 cv
430.171 426.06 430.051 426.06 429.931 426.06 cv
425.911 426.12 li
424.951 426.12 424.171 426.18 423.511 426.3 cv
422.851 426.36 422.311 426.54 421.831 426.66 cv
421.351 426.84 420.991 427.02 420.691 427.2 cv
420.391 427.44 420.151 427.62 419.911 427.86 cv
419.671 428.1 419.551 428.34 419.371 428.58 cv
419.251 428.88 419.191 429.12 419.191 429.42 cv
419.191 429.72 419.251 430.02 419.371 430.32 cv
419.491 430.62 419.671 430.92 419.971 431.16 cv
420.271 431.52 420.631 431.76 420.991 431.94 cv
421.351 432.12 421.651 432.24 421.951 432.3 cv
422.251 432.42 422.491 432.48 422.731 432.54 cv
422.911 432.54 423.091 432.6 423.151 432.66 cv
423.151 432.72 423.211 432.78 423.211 432.84 cv
423.211 432.84 423.211 432.9 423.151 432.96 cv
423.151 433.02 423.091 433.14 423.031 433.2 cv
422.971 433.32 422.911 433.38 422.791 433.5 cv
422.671 433.56 422.611 433.62 422.551 433.68 cv
422.491 433.74 422.431 433.8 422.371 433.8 cv
422.311 433.86 422.311 433.86 422.251 433.86 cv
422.191 433.92 422.071 433.92 421.951 433.92 cv
421.831 433.86 421.651 433.86 421.411 433.8 cv
421.171 433.74 420.871 433.62 420.571 433.5 cv
420.271 433.38 419.911 433.2 419.611 432.96 cv
419.251 432.78 418.951 432.48 418.651 432.18 cv
418.171 431.7 417.811 431.22 417.571 430.74 cv
417.331 430.2 417.211 429.72 417.211 429.24 cv
417.211 428.76 417.331 428.34 417.511 427.92 cv
417.691 427.44 417.991 427.08 418.351 426.72 cv
418.651 426.42 419.011 426.12 419.371 425.82 cv
419.731 425.58 420.211 425.34 420.751 425.16 cv
421.291 424.98 422.011 424.86 422.791 424.74 cv
423.571 424.62 424.531 424.56 425.731 424.56 cv
428.971 424.5 li
424.591 420.12 li
424.591 420.12 424.531 420.06 424.531 420 cv
424.531 419.94 424.531 419.88 424.531 419.76 cv
424.531 419.7 424.591 419.64 424.651 419.52 cv
424.711 419.46 424.771 419.4 424.831 419.28 cv
cp
419.011 407.7 mo
419.191 407.52 419.311 407.4 419.431 407.34 cv
419.611 407.28 419.671 407.34 419.791 407.4 cv
427.231 414.84 li
427.291 414.96 427.351 415.02 427.291 415.2 cv
427.291 415.32 427.171 415.44 426.991 415.62 cv
426.811 415.8 426.631 415.92 426.511 415.98 cv
426.391 415.98 426.271 415.98 426.211 415.86 cv
418.771 408.42 li
418.651 408.36 418.651 408.24 418.711 408.12 cv
418.711 408 418.831 407.88 419.011 407.7 cv
cp
406.111 405.9 mo
406.591 405.42 407.071 405.06 407.611 404.82 cv
408.151 404.52 408.691 404.4 409.291 404.34 cv
409.891 404.34 410.491 404.4 411.091 404.64 cv
411.691 404.88 412.291 405.3 412.891 405.9 cv
413.311 406.32 413.611 406.74 413.851 407.16 cv
414.091 407.58 414.211 408 414.211 408.42 cv
414.271 408.84 414.271 409.26 414.151 409.74 cv
414.031 410.16 413.791 410.58 413.551 411.06 cv
413.311 411.48 412.951 411.96 412.591 412.38 cv
412.231 412.86 411.811 413.34 411.271 413.82 cv
410.851 414.24 410.431 414.66 409.951 415.08 cv
409.471 415.44 408.931 415.8 408.391 416.1 cv
407.911 416.34 407.371 416.58 406.771 416.76 cv
406.231 416.88 405.631 416.94 405.091 416.94 cv
404.491 416.88 403.951 416.7 403.351 416.46 cv
402.751 416.16 402.211 415.74 401.611 415.2 cv
401.431 415.02 401.251 414.78 401.071 414.54 cv
400.891 414.36 400.771 414.12 400.651 413.94 cv
400.531 413.76 400.411 413.58 400.351 413.4 cv
400.291 413.22 400.231 413.1 400.231 413.04 cv
400.231 412.98 400.231 412.92 400.231 412.86 cv
400.291 412.8 400.291 412.8 400.291 412.74 cv
400.351 412.68 400.411 412.62 400.411 412.56 cv
400.471 412.5 400.531 412.44 400.591 412.38 cv
400.711 412.32 400.771 412.2 400.831 412.14 cv
400.891 412.08 400.951 412.02 401.011 412.02 cv
401.071 412.02 401.131 411.96 401.191 412.02 cv
401.251 412.02 401.311 412.02 401.371 412.08 cv
401.371 412.14 401.431 412.2 401.551 412.38 cv
401.611 412.5 401.671 412.68 401.731 412.86 cv
401.851 413.04 401.971 413.22 402.151 413.46 cv
402.331 413.7 402.511 413.94 402.751 414.18 cv
403.231 414.66 403.771 415.02 404.311 415.14 cv
404.851 415.32 405.391 415.32 405.931 415.2 cv
406.471 415.08 407.011 414.9 407.551 414.54 cv
408.091 414.24 408.631 413.82 409.111 413.34 cv
408.931 413.34 408.691 413.22 408.451 413.16 cv
408.211 413.04 407.911 412.92 407.671 412.8 cv
407.431 412.68 407.131 412.5 406.891 412.32 cv
406.651 412.14 406.411 411.9 406.111 411.66 cv
405.571 411.12 405.211 410.58 404.971 410.1 cv
404.791 409.56 404.671 409.08 404.671 408.6 cv
404.731 408.12 404.851 407.64 405.151 407.16 cv
405.391 406.74 405.691 406.26 406.111 405.9 cv
cp
407.611 407.1 mo
407.311 407.4 407.071 407.7 406.891 408 cv
406.651 408.3 406.591 408.6 406.531 408.9 cv
406.531 409.2 406.591 409.56 406.711 409.86 cv
406.831 410.22 407.071 410.52 407.431 410.88 cv
407.611 411.06 407.791 411.24 408.031 411.36 cv
408.271 411.54 408.511 411.66 408.751 411.78 cv
408.991 411.9 409.231 412.02 409.471 412.08 cv
409.711 412.2 409.951 412.26 410.131 412.26 cv
410.791 411.6 411.331 411 411.691 410.52 cv
412.051 409.98 412.291 409.5 412.411 409.02 cv
412.531 408.6 412.531 408.24 412.351 407.88 cv
412.231 407.52 412.051 407.16 411.691 406.86 cv
411.391 406.5 411.031 406.26 410.671 406.14 cv
410.311 406.02 409.951 406.02 409.531 406.08 cv
409.171 406.08 408.811 406.2 408.511 406.38 cv
408.151 406.62 407.851 406.8 407.611 407.1 cv
f
448.891 396.84 mo
449.011 396.72 449.071 396.66 449.191 396.6 cv
449.251 396.54 449.371 396.48 449.431 396.48 cv
449.491 396.48 449.551 396.42 449.611 396.48 cv
449.671 396.48 449.731 396.48 449.791 396.54 cv
455.311 402.06 li
455.371 402.12 455.431 402.24 455.491 402.3 cv
455.491 402.36 455.491 402.42 455.491 402.54 cv
455.491 402.6 455.491 402.66 455.431 402.78 cv
455.371 402.9 455.251 402.96 455.191 403.08 cv
455.071 403.2 454.951 403.26 454.891 403.38 cv
454.771 403.44 454.711 403.5 454.651 403.5 cv
454.531 403.56 454.471 403.56 454.351 403.56 cv
454.231 403.62 454.111 403.62 453.991 403.62 cv
449.971 403.68 li
449.011 403.68 448.231 403.74 447.571 403.86 cv
446.911 403.92 446.371 404.04 445.891 404.22 cv
445.411 404.4 445.051 404.58 444.751 404.76 cv
444.451 404.94 444.211 405.18 443.971 405.42 cv
443.731 405.6 443.551 405.9 443.431 406.14 cv
443.311 406.44 443.251 406.68 443.251 406.98 cv
443.251 407.28 443.311 407.58 443.431 407.88 cv
443.551 408.18 443.731 408.48 444.031 408.72 cv
444.331 409.08 444.691 409.32 445.051 409.5 cv
445.351 409.62 445.711 409.8 446.011 409.86 cv
446.311 409.98 446.551 410.04 446.791 410.1 cv
446.971 410.1 447.151 410.16 447.211 410.22 cv
447.211 410.28 447.271 410.34 447.271 410.34 cv
447.271 410.4 447.271 410.46 447.211 410.52 cv
447.211 410.58 447.151 410.7 447.091 410.76 cv
447.031 410.88 446.911 410.94 446.851 411.06 cv
446.731 411.12 446.671 411.18 446.611 411.24 cv
446.551 411.3 446.491 411.36 446.431 411.36 cv
446.371 411.42 446.311 411.42 446.251 411.42 cv
446.251 411.42 446.131 411.48 446.011 411.42 cv
445.891 411.42 445.711 411.42 445.471 411.36 cv
445.231 411.3 444.931 411.18 444.631 411.06 cv
444.331 410.88 443.971 410.76 443.671 410.52 cv
443.311 410.28 443.011 410.04 442.711 409.74 cv
442.231 409.26 441.871 408.78 441.631 408.24 cv
441.391 407.76 441.271 407.28 441.271 406.8 cv
441.271 406.32 441.391 405.9 441.571 405.42 cv
441.751 405 442.051 404.64 442.411 404.28 cv
442.711 403.92 443.071 403.68 443.431 403.38 cv
443.791 403.14 444.271 402.9 444.811 402.72 cv
445.351 402.54 446.071 402.42 446.851 402.3 cv
447.631 402.18 448.591 402.12 449.791 402.12 cv
453.031 402.06 li
448.651 397.68 li
448.591 397.62 448.591 397.62 448.591 397.56 cv
448.531 397.5 448.531 397.38 448.591 397.32 cv
448.591 397.26 448.651 397.2 448.711 397.08 cv
448.771 397.02 448.831 396.9 448.891 396.84 cv
cp
436.111 392.88 mo
436.831 392.16 437.611 391.5 438.391 390.96 cv
439.111 390.48 439.891 390.12 440.611 389.94 cv
441.331 389.76 442.051 389.76 442.771 390 cv
443.491 390.18 444.151 390.6 444.811 391.32 cv
445.411 391.92 445.831 392.58 446.071 393.24 cv
446.251 393.84 446.311 394.56 446.131 395.22 cv
445.951 395.94 445.591 396.66 445.051 397.38 cv
444.511 398.16 443.851 398.94 443.071 399.78 cv
442.291 400.5 441.511 401.16 440.731 401.7 cv
440.011 402.18 439.231 402.54 438.511 402.72 cv
437.791 402.9 437.071 402.9 436.351 402.66 cv
435.691 402.48 434.971 402.06 434.311 401.4 cv
433.711 400.74 433.291 400.08 433.051 399.42 cv
432.871 398.82 432.871 398.1 432.991 397.44 cv
433.171 396.72 433.531 396 434.071 395.28 cv
434.611 394.5 435.271 393.72 436.111 392.88 cv
cp
437.551 394.14 mo
437.011 394.68 436.591 395.1 436.231 395.58 cv
435.871 396 435.571 396.42 435.331 396.78 cv
435.091 397.14 434.971 397.5 434.851 397.8 cv
434.731 398.16 434.671 398.46 434.671 398.76 cv
434.731 399.06 434.791 399.36 434.911 399.6 cv
435.031 399.84 435.271 400.14 435.511 400.38 cv
435.931 400.8 436.411 401.04 436.891 401.1 cv
437.371 401.16 437.851 401.1 438.331 400.92 cv
438.871 400.74 439.411 400.38 439.951 399.96 cv
440.491 399.54 441.031 399.06 441.571 398.52 cv
442.351 397.74 442.951 397.08 443.371 396.48 cv
443.851 395.88 444.151 395.34 444.271 394.86 cv
444.451 394.32 444.451 393.9 444.391 393.48 cv
444.271 393.06 444.031 392.7 443.671 392.28 cv
443.371 392.04 443.071 391.8 442.771 391.68 cv
442.411 391.56 442.111 391.5 441.811 391.5 cv
441.451 391.56 441.091 391.62 440.791 391.74 cv
440.431 391.86 440.071 392.1 439.711 392.28 cv
439.351 392.52 438.991 392.82 438.631 393.12 cv
438.271 393.42 437.911 393.78 437.551 394.14 cv
cp
432.931 380.76 mo
433.051 380.64 433.111 380.58 433.231 380.52 cv
433.291 380.46 433.351 380.46 433.411 380.46 cv
433.471 380.4 433.531 380.4 433.591 380.46 cv
433.651 380.46 433.711 380.46 433.711 380.52 cv
438.931 385.74 li
438.991 385.74 438.991 385.8 439.051 385.86 cv
439.051 385.92 439.051 385.98 439.051 386.04 cv
438.991 386.1 438.991 386.16 438.931 386.28 cv
438.871 386.34 438.811 386.46 438.691 386.52 cv
438.631 386.64 438.511 386.7 438.451 386.76 cv
438.391 386.82 438.271 386.82 438.211 386.88 cv
438.151 386.88 438.091 386.88 438.031 386.88 cv
437.971 386.88 437.911 386.82 437.911 386.82 cv
435.811 384.72 li
428.191 392.28 li
431.311 393.06 li
431.431 393.12 431.551 393.18 431.611 393.24 cv
431.671 393.3 431.731 393.36 431.731 393.42 cv
431.731 393.48 431.671 393.54 431.611 393.66 cv
431.551 393.72 431.491 393.84 431.371 393.96 cv
431.251 394.02 431.191 394.14 431.131 394.2 cv
431.071 394.2 431.011 394.26 430.951 394.32 cv
430.891 394.32 430.831 394.32 430.771 394.32 cv
430.711 394.32 430.651 394.32 430.531 394.32 cv
426.751 393.48 li
426.691 393.48 li
426.631 393.42 426.571 393.42 426.511 393.36 cv
426.451 393.36 426.391 393.3 426.331 393.24 cv
426.271 393.18 426.211 393.06 426.091 393 cv
425.971 392.88 425.851 392.76 425.791 392.7 cv
425.731 392.58 425.671 392.52 425.671 392.46 cv
425.611 392.4 425.611 392.34 425.611 392.28 cv
425.671 392.22 425.671 392.22 425.671 392.16 cv
434.491 383.4 li
432.691 381.6 li
432.631 381.54 432.631 381.48 432.571 381.42 cv
432.571 381.36 432.571 381.3 432.571 381.24 cv
432.631 381.18 432.631 381.12 432.691 381 cv
432.751 380.94 432.811 380.82 432.931 380.76 cv
cp
424.831 372.78 mo
424.951 372.66 425.011 372.6 425.131 372.54 cv
425.191 372.48 425.311 372.42 425.371 372.42 cv
425.431 372.42 425.491 372.42 425.551 372.42 cv
425.611 372.42 425.671 372.48 425.731 372.48 cv
431.251 378 li
431.311 378.12 431.371 378.18 431.431 378.24 cv
431.431 378.3 431.431 378.36 431.431 378.48 cv
431.431 378.54 431.431 378.66 431.371 378.72 cv
431.311 378.84 431.191 378.9 431.131 379.02 cv
431.011 379.14 430.891 379.2 430.831 379.32 cv
430.711 379.38 430.651 379.44 430.591 379.44 cv
430.471 379.5 430.411 379.5 430.291 379.5 cv
430.171 379.56 430.051 379.56 429.931 379.56 cv
425.911 379.62 li
424.951 379.62 424.171 379.68 423.511 379.8 cv
422.851 379.86 422.311 379.98 421.831 380.16 cv
421.351 380.34 420.991 380.52 420.691 380.7 cv
420.391 380.94 420.151 381.12 419.911 381.36 cv
419.671 381.54 419.551 381.84 419.371 382.08 cv
419.251 382.38 419.191 382.62 419.191 382.92 cv
419.191 383.22 419.251 383.52 419.371 383.82 cv
419.491 384.12 419.671 384.42 419.971 384.66 cv
420.271 385.02 420.631 385.26 420.991 385.44 cv
421.351 385.62 421.651 385.74 421.951 385.8 cv
422.251 385.92 422.491 385.98 422.731 386.04 cv
422.911 386.04 423.091 386.1 423.151 386.16 cv
423.151 386.22 423.211 386.28 423.211 386.28 cv
423.211 386.34 423.211 386.4 423.151 386.46 cv
423.151 386.52 423.091 386.64 423.031 386.7 cv
422.971 386.82 422.911 386.88 422.791 387 cv
422.671 387.06 422.611 387.12 422.551 387.18 cv
422.491 387.24 422.431 387.3 422.371 387.3 cv
422.311 387.36 422.311 387.36 422.251 387.36 cv
422.191 387.42 422.071 387.42 421.951 387.42 cv
421.831 387.36 421.651 387.36 421.411 387.3 cv
421.171 387.24 420.871 387.12 420.571 387 cv
420.271 386.88 419.911 386.7 419.611 386.46 cv
419.251 386.28 418.951 385.98 418.651 385.68 cv
418.171 385.2 417.811 384.72 417.571 384.24 cv
417.331 383.7 417.211 383.22 417.211 382.74 cv
417.211 382.26 417.331 381.84 417.511 381.36 cv
417.691 380.94 417.991 380.58 418.351 380.22 cv
418.651 379.86 419.011 379.62 419.371 379.32 cv
419.731 379.08 420.211 378.84 420.751 378.66 cv
421.291 378.48 422.011 378.36 422.791 378.24 cv
423.571 378.12 424.531 378.06 425.731 378.06 cv
428.971 378 li
424.591 373.62 li
424.591 373.62 424.531 373.56 424.531 373.5 cv
424.531 373.44 424.531 373.32 424.531 373.26 cv
424.531 373.2 424.591 373.14 424.651 373.02 cv
424.711 372.96 424.771 372.84 424.831 372.78 cv
cp
419.011 361.2 mo
419.191 361.02 419.311 360.9 419.431 360.84 cv
419.611 360.78 419.671 360.84 419.791 360.9 cv
427.231 368.34 li
427.291 368.46 427.351 368.52 427.291 368.64 cv
427.291 368.82 427.171 368.94 426.991 369.12 cv
426.811 369.3 426.631 369.42 426.511 369.42 cv
426.391 369.48 426.271 369.48 426.211 369.36 cv
418.771 361.92 li
418.651 361.86 418.651 361.74 418.711 361.62 cv
418.711 361.5 418.831 361.38 419.011 361.2 cv
cp
400.051 365.64 mo
400.111 365.58 400.231 365.52 400.291 365.4 cv
400.411 365.34 400.471 365.28 400.531 365.22 cv
400.651 365.16 400.711 365.16 400.831 365.1 cv
400.891 365.04 401.011 365.04 401.071 364.98 cv
413.011 360.3 li
413.071 360.24 413.131 360.24 413.251 360.24 cv
413.311 360.24 413.371 360.24 413.491 360.3 cv
413.551 360.3 413.671 360.36 413.731 360.48 cv
413.851 360.54 413.971 360.66 414.091 360.78 cv
414.271 360.96 414.391 361.08 414.511 361.2 cv
414.571 361.32 414.631 361.44 414.631 361.5 cv
414.631 361.56 414.631 361.62 414.571 361.68 cv
414.511 361.74 414.451 361.74 414.331 361.8 cv
402.091 366.48 li
406.891 371.28 li
406.951 371.4 407.011 371.52 406.951 371.64 cv
406.891 371.82 406.771 372 406.591 372.18 cv
406.471 372.3 406.411 372.36 406.291 372.42 cv
406.231 372.48 406.111 372.54 406.051 372.54 cv
405.991 372.54 405.931 372.54 405.871 372.54 cv
405.811 372.54 405.751 372.48 405.691 372.48 cv
399.871 366.66 li
399.811 366.54 399.751 366.48 399.691 366.42 cv
399.691 366.36 399.691 366.3 399.691 366.18 cv
399.691 366.12 399.751 366.06 399.811 365.94 cv
399.871 365.88 399.931 365.76 400.051 365.64 cv
f
448.891 350.34 mo
449.011 350.22 449.071 350.16 449.191 350.1 cv
449.251 350.04 449.371 349.98 449.431 349.98 cv
449.491 349.92 449.551 349.92 449.611 349.98 cv
449.671 349.98 449.731 349.98 449.791 350.04 cv
455.311 355.56 li
455.371 355.62 455.431 355.74 455.491 355.8 cv
455.491 355.86 455.491 355.92 455.491 356.04 cv
455.491 356.1 455.491 356.16 455.431 356.28 cv
455.371 356.4 455.251 356.46 455.191 356.58 cv
455.071 356.7 454.951 356.76 454.891 356.82 cv
454.771 356.94 454.711 356.94 454.651 357 cv
454.531 357.06 454.471 357.06 454.351 357.06 cv
454.231 357.12 454.111 357.12 453.991 357.12 cv
449.971 357.18 li
449.011 357.18 448.231 357.24 447.571 357.36 cv
446.911 357.42 446.371 357.54 445.891 357.72 cv
445.411 357.9 445.051 358.08 444.751 358.26 cv
444.451 358.44 444.211 358.68 443.971 358.92 cv
443.731 359.1 443.551 359.34 443.431 359.64 cv
443.311 359.94 443.251 360.18 443.251 360.48 cv
443.251 360.78 443.311 361.08 443.431 361.38 cv
443.551 361.68 443.731 361.98 444.031 362.22 cv
444.331 362.58 444.691 362.82 445.051 363 cv
445.351 363.12 445.711 363.3 446.011 363.36 cv
446.311 363.48 446.551 363.54 446.791 363.54 cv
446.971 363.6 447.151 363.66 447.211 363.72 cv
447.211 363.78 447.271 363.78 447.271 363.84 cv
447.271 363.9 447.271 363.96 447.211 364.02 cv
447.211 364.08 447.151 364.14 447.091 364.26 cv
447.031 364.32 446.911 364.44 446.851 364.56 cv
446.731 364.62 446.671 364.68 446.611 364.74 cv
446.551 364.8 446.491 364.86 446.431 364.86 cv
446.371 364.92 446.311 364.92 446.251 364.92 cv
446.251 364.92 446.131 364.92 446.011 364.92 cv
445.891 364.92 445.711 364.92 445.471 364.86 cv
445.231 364.8 444.931 364.68 444.631 364.56 cv
444.331 364.38 443.971 364.2 443.671 364.02 cv
443.311 363.78 443.011 363.54 442.711 363.24 cv
442.231 362.76 441.871 362.28 441.631 361.74 cv
441.391 361.26 441.271 360.78 441.271 360.3 cv
441.271 359.82 441.391 359.34 441.571 358.92 cv
441.751 358.5 442.051 358.08 442.411 357.78 cv
442.711 357.42 443.071 357.12 443.431 356.88 cv
443.791 356.64 444.271 356.4 444.811 356.22 cv
445.351 356.04 446.071 355.86 446.851 355.8 cv
447.631 355.68 448.591 355.62 449.791 355.62 cv
453.031 355.5 li
448.651 351.18 li
448.591 351.12 448.591 351.06 448.591 351 cv
448.531 350.94 448.531 350.88 448.591 350.82 cv
448.591 350.76 448.651 350.64 448.711 350.58 cv
448.771 350.52 448.831 350.4 448.891 350.34 cv
cp
436.111 346.38 mo
436.831 345.6 437.611 345 438.391 344.46 cv
439.111 343.98 439.891 343.62 440.611 343.44 cv
441.331 343.26 442.051 343.26 442.771 343.5 cv
443.491 343.68 444.151 344.1 444.811 344.76 cv
445.411 345.42 445.831 346.08 446.071 346.68 cv
446.251 347.34 446.311 348.06 446.131 348.72 cv
445.951 349.44 445.591 350.16 445.051 350.88 cv
444.511 351.66 443.851 352.44 443.071 353.28 cv
442.291 354 441.511 354.66 440.731 355.14 cv
440.011 355.68 439.231 356.04 438.511 356.22 cv
437.791 356.4 437.071 356.34 436.351 356.16 cv
435.691 355.98 434.971 355.5 434.311 354.9 cv
433.711 354.24 433.291 353.58 433.051 352.92 cv
432.871 352.26 432.871 351.6 432.991 350.94 cv
433.171 350.22 433.531 349.5 434.071 348.72 cv
434.611 348 435.271 347.22 436.111 346.38 cv
cp
437.551 347.64 mo
437.011 348.18 436.591 348.6 436.231 349.08 cv
435.871 349.5 435.571 349.92 435.331 350.28 cv
435.091 350.64 434.971 351 434.851 351.3 cv
434.731 351.66 434.671 351.96 434.671 352.26 cv
434.731 352.56 434.791 352.86 434.911 353.1 cv
435.031 353.34 435.271 353.64 435.511 353.88 cv
435.931 354.3 436.411 354.54 436.891 354.6 cv
437.371 354.66 437.851 354.6 438.331 354.42 cv
438.871 354.18 439.411 353.88 439.951 353.46 cv
440.491 353.04 441.031 352.56 441.571 351.96 cv
442.351 351.24 442.951 350.58 443.371 349.98 cv
443.851 349.38 444.151 348.84 444.271 348.3 cv
444.451 347.82 444.451 347.4 444.391 346.98 cv
444.271 346.56 444.031 346.14 443.671 345.78 cv
443.371 345.48 443.071 345.3 442.771 345.18 cv
442.411 345.06 442.111 345 441.811 345 cv
441.451 345 441.091 345.12 440.791 345.24 cv
440.431 345.36 440.071 345.54 439.711 345.78 cv
439.351 346.02 438.991 346.32 438.631 346.62 cv
438.271 346.92 437.911 347.28 437.551 347.64 cv
cp
432.931 334.26 mo
433.051 334.14 433.111 334.08 433.231 334.02 cv
433.291 333.96 433.351 333.96 433.411 333.9 cv
433.471 333.9 433.531 333.9 433.591 333.9 cv
433.651 333.96 433.711 333.96 433.711 334.02 cv
438.931 339.24 li
438.991 339.24 438.991 339.3 439.051 339.36 cv
439.051 339.42 439.051 339.48 439.051 339.54 cv
438.991 339.6 438.991 339.66 438.931 339.78 cv
438.871 339.84 438.811 339.9 438.691 340.02 cv
438.631 340.14 438.511 340.2 438.451 340.26 cv
438.391 340.32 438.271 340.32 438.211 340.38 cv
438.151 340.38 438.091 340.38 438.031 340.38 cv
437.971 340.38 437.911 340.32 437.911 340.26 cv
435.811 338.22 li
428.191 345.78 li
431.311 346.56 li
431.431 346.62 431.551 346.68 431.611 346.74 cv
431.671 346.8 431.731 346.86 431.731 346.92 cv
431.731 346.98 431.671 347.04 431.611 347.16 cv
431.551 347.22 431.491 347.34 431.371 347.46 cv
431.251 347.52 431.191 347.64 431.131 347.64 cv
431.071 347.7 431.011 347.76 430.951 347.76 cv
430.891 347.82 430.831 347.82 430.771 347.82 cv
430.711 347.82 430.651 347.82 430.531 347.82 cv
426.751 346.98 li
426.751 346.98 426.691 346.98 426.691 346.92 cv
426.631 346.92 426.571 346.92 426.511 346.86 cv
426.451 346.8 426.391 346.8 426.331 346.74 cv
426.271 346.68 426.211 346.56 426.091 346.5 cv
425.971 346.38 425.851 346.26 425.791 346.14 cv
425.731 346.08 425.671 346.02 425.671 345.96 cv
425.611 345.84 425.611 345.84 425.611 345.78 cv
425.671 345.72 425.671 345.66 425.671 345.66 cv
434.491 336.9 li
432.691 335.04 li
432.631 335.04 432.631 334.98 432.571 334.92 cv
432.571 334.86 432.571 334.8 432.571 334.74 cv
432.631 334.68 432.631 334.56 432.691 334.5 cv
432.751 334.44 432.811 334.32 432.931 334.26 cv
cp
424.831 326.28 mo
424.951 326.16 425.011 326.1 425.131 326.04 cv
425.191 325.98 425.311 325.92 425.371 325.92 cv
425.431 325.86 425.491 325.86 425.551 325.92 cv
425.611 325.92 425.671 325.92 425.731 325.98 cv
431.251 331.5 li
431.311 331.56 431.371 331.68 431.431 331.74 cv
431.431 331.8 431.431 331.86 431.431 331.98 cv
431.431 332.04 431.431 332.1 431.371 332.22 cv
431.311 332.34 431.191 332.4 431.131 332.52 cv
431.011 332.64 430.891 332.7 430.831 332.82 cv
430.711 332.88 430.651 332.94 430.591 332.94 cv
430.471 333 430.411 333 430.291 333 cv
430.171 333.06 430.051 333.06 429.931 333.06 cv
425.911 333.12 li
424.951 333.12 424.171 333.18 423.511 333.3 cv
422.851 333.36 422.311 333.48 421.831 333.66 cv
421.351 333.84 420.991 334.02 420.691 334.2 cv
420.391 334.38 420.151 334.62 419.911 334.86 cv
419.671 335.04 419.551 335.34 419.371 335.58 cv
419.251 335.88 419.191 336.12 419.191 336.42 cv
419.191 336.72 419.251 337.02 419.371 337.32 cv
419.491 337.62 419.671 337.92 419.971 338.16 cv
420.271 338.52 420.631 338.76 420.991 338.94 cv
421.351 339.06 421.651 339.24 421.951 339.3 cv
422.251 339.42 422.491 339.48 422.731 339.48 cv
422.911 339.54 423.091 339.6 423.151 339.66 cv
423.151 339.72 423.211 339.72 423.211 339.78 cv
423.211 339.84 423.211 339.9 423.151 339.96 cv
423.151 340.02 423.091 340.14 423.031 340.2 cv
422.971 340.26 422.911 340.38 422.791 340.5 cv
422.671 340.56 422.611 340.62 422.551 340.68 cv
422.491 340.74 422.431 340.8 422.371 340.8 cv
422.311 340.86 422.311 340.86 422.251 340.86 cv
422.191 340.86 422.071 340.92 421.951 340.86 cv
421.831 340.86 421.651 340.86 421.411 340.8 cv
421.171 340.74 420.871 340.62 420.571 340.5 cv
420.271 340.32 419.911 340.2 419.611 339.96 cv
419.251 339.72 418.951 339.48 418.651 339.18 cv
418.171 338.7 417.811 338.22 417.571 337.68 cv
417.331 337.2 417.211 336.72 417.211 336.24 cv
417.211 335.76 417.331 335.34 417.511 334.86 cv
417.691 334.44 417.991 334.08 418.351 333.72 cv
418.651 333.36 419.011 333.12 419.371 332.82 cv
419.731 332.58 420.211 332.34 420.751 332.16 cv
421.291 331.98 422.011 331.86 422.791 331.74 cv
423.571 331.62 424.531 331.56 425.731 331.56 cv
428.971 331.5 li
424.591 327.12 li
424.591 327.06 424.531 327.06 424.531 327 cv
424.531 326.94 424.531 326.82 424.531 326.76 cv
424.531 326.7 424.591 326.64 424.651 326.52 cv
424.711 326.46 424.771 326.34 424.831 326.28 cv
cp
419.011 314.64 mo
419.191 314.46 419.311 314.4 419.431 314.34 cv
419.611 314.28 419.671 314.34 419.791 314.4 cv
427.231 321.84 li
427.291 321.96 427.351 322.02 427.291 322.14 cv
427.291 322.26 427.171 322.44 426.991 322.62 cv
426.811 322.8 426.631 322.92 426.511 322.92 cv
426.391 322.98 426.271 322.98 426.211 322.86 cv
418.771 315.42 li
418.651 315.36 418.651 315.24 418.711 315.12 cv
418.711 315 418.831 314.82 419.011 314.64 cv
cp
406.831 312.24 mo
407.251 311.76 407.731 311.46 408.211 311.28 cv
408.691 311.1 409.231 311.04 409.711 311.1 cv
410.251 311.16 410.791 311.34 411.331 311.64 cv
411.871 311.94 412.411 312.42 412.951 312.96 cv
413.491 313.44 413.911 313.98 414.211 314.52 cv
414.511 315 414.691 315.54 414.751 316.02 cv
414.811 316.5 414.751 316.98 414.631 317.46 cv
414.451 317.88 414.211 318.3 413.791 318.72 cv
413.491 319.02 413.131 319.26 412.771 319.44 cv
412.411 319.56 411.991 319.68 411.571 319.68 cv
411.211 319.74 410.731 319.68 410.251 319.62 cv
409.771 319.5 409.291 319.38 408.751 319.2 cv
408.871 319.68 408.991 320.1 409.051 320.52 cv
409.111 320.94 409.111 321.36 409.111 321.72 cv
409.051 322.08 408.931 322.44 408.811 322.74 cv
408.631 323.1 408.451 323.4 408.151 323.64 cv
407.791 324 407.431 324.3 406.951 324.48 cv
406.531 324.66 406.111 324.72 405.631 324.66 cv
405.151 324.66 404.611 324.48 404.071 324.24 cv
403.591 324 403.051 323.58 402.511 323.04 cv
402.031 322.56 401.611 322.08 401.371 321.6 cv
401.131 321.06 401.011 320.64 400.951 320.16 cv
400.951 319.74 401.011 319.32 401.191 318.9 cv
401.371 318.48 401.611 318.12 401.911 317.82 cv
402.211 317.58 402.451 317.34 402.811 317.22 cv
403.111 317.04 403.471 316.92 403.891 316.86 cv
404.251 316.8 404.671 316.8 405.091 316.86 cv
405.511 316.92 405.931 317.04 406.411 317.16 cv
406.231 316.62 406.111 316.14 405.991 315.66 cv
405.931 315.18 405.871 314.7 405.931 314.28 cv
405.931 313.92 405.991 313.5 406.171 313.2 cv
406.291 312.84 406.531 312.48 406.831 312.24 cv
cp
403.351 319.02 mo
403.171 319.2 402.991 319.44 402.871 319.68 cv
402.811 319.98 402.751 320.22 402.751 320.46 cv
402.811 320.76 402.871 321 402.991 321.3 cv
403.171 321.6 403.351 321.84 403.651 322.14 cv
404.191 322.68 404.731 322.98 405.271 323.04 cv
405.811 323.04 406.291 322.86 406.771 322.38 cv
406.951 322.2 407.131 321.96 407.191 321.72 cv
407.311 321.48 407.371 321.24 407.371 320.94 cv
407.371 320.64 407.371 320.28 407.251 319.92 cv
407.191 319.56 407.071 319.14 406.951 318.66 cv
406.171 318.42 405.451 318.3 404.851 318.36 cv
404.251 318.42 403.771 318.6 403.351 319.02 cv
cp
408.331 313.44 mo
408.091 313.68 407.911 313.92 407.791 314.22 cv
407.671 314.46 407.611 314.76 407.671 315.12 cv
407.671 315.48 407.731 315.84 407.851 316.26 cv
407.911 316.68 408.091 317.16 408.271 317.7 cv
408.751 317.88 409.171 318 409.591 318.06 cv
410.011 318.18 410.371 318.18 410.671 318.18 cv
411.031 318.18 411.331 318.12 411.571 318 cv
411.871 317.88 412.111 317.7 412.291 317.52 cv
412.831 316.98 413.011 316.44 412.951 315.84 cv
412.891 315.24 412.531 314.58 411.811 313.86 cv
411.151 313.2 410.551 312.84 409.951 312.78 cv
409.291 312.72 408.751 312.96 408.331 313.44 cv
f
448.891 303.84 mo
449.011 303.72 449.071 303.66 449.191 303.6 cv
449.251 303.54 449.371 303.48 449.431 303.48 cv
449.491 303.42 449.551 303.42 449.611 303.42 cv
449.671 303.48 449.731 303.48 449.791 303.54 cv
455.311 309.06 li
455.371 309.12 455.431 309.18 455.491 309.3 cv
455.491 309.36 455.491 309.42 455.491 309.48 cv
455.491 309.6 455.491 309.66 455.431 309.78 cv
455.371 309.84 455.251 309.96 455.191 310.08 cv
455.071 310.2 454.951 310.26 454.891 310.32 cv
454.771 310.38 454.711 310.44 454.651 310.5 cv
454.531 310.5 454.471 310.56 454.351 310.56 cv
454.231 310.62 454.111 310.62 453.991 310.62 cv
449.971 310.68 li
449.011 310.68 448.231 310.74 447.571 310.8 cv
446.911 310.92 446.371 311.04 445.891 311.22 cv
445.411 311.34 445.051 311.52 444.751 311.76 cv
444.451 311.94 444.211 312.18 443.971 312.42 cv
443.731 312.6 443.551 312.84 443.431 313.14 cv
443.311 313.38 443.251 313.68 443.251 313.98 cv
443.251 314.28 443.311 314.58 443.431 314.88 cv
443.551 315.18 443.731 315.42 444.031 315.72 cv
444.331 316.02 444.691 316.32 445.051 316.44 cv
445.351 316.62 445.711 316.74 446.011 316.86 cv
446.311 316.92 446.551 317.04 446.791 317.04 cv
446.971 317.1 447.151 317.16 447.211 317.22 cv
447.211 317.28 447.271 317.28 447.271 317.34 cv
447.271 317.4 447.271 317.46 447.211 317.52 cv
447.211 317.58 447.151 317.64 447.091 317.76 cv
447.031 317.82 446.911 317.94 446.851 318.06 cv
446.731 318.12 446.671 318.18 446.611 318.24 cv
446.551 318.3 446.491 318.3 446.431 318.36 cv
446.371 318.36 446.311 318.42 446.251 318.42 cv
446.251 318.42 446.131 318.42 446.011 318.42 cv
445.891 318.42 445.711 318.42 445.471 318.36 cv
445.231 318.3 444.931 318.18 444.631 318.06 cv
444.331 317.88 443.971 317.7 443.671 317.52 cv
443.311 317.28 443.011 317.04 442.711 316.74 cv
442.231 316.26 441.871 315.78 441.631 315.24 cv
441.391 314.76 441.271 314.28 441.271 313.8 cv
441.271 313.32 441.391 312.84 441.571 312.42 cv
441.751 312 442.051 311.58 442.411 311.22 cv
442.711 310.92 443.071 310.62 443.431 310.38 cv
443.791 310.14 444.271 309.9 444.811 309.72 cv
445.351 309.54 446.071 309.36 446.851 309.3 cv
447.631 309.18 448.591 309.12 449.791 309.12 cv
453.031 309 li
448.651 304.68 li
448.591 304.62 448.591 304.56 448.591 304.5 cv
448.531 304.44 448.531 304.38 448.591 304.32 cv
448.591 304.26 448.651 304.14 448.711 304.08 cv
448.771 304.02 448.831 303.9 448.891 303.84 cv
cp
436.111 299.88 mo
436.831 299.1 437.611 298.5 438.391 297.96 cv
439.111 297.48 439.891 297.12 440.611 296.94 cv
441.331 296.76 442.051 296.76 442.771 297 cv
443.491 297.18 444.151 297.6 444.811 298.26 cv
445.411 298.92 445.831 299.52 446.071 300.18 cv
446.251 300.84 446.311 301.56 446.131 302.22 cv
445.951 302.94 445.591 303.66 445.051 304.38 cv
444.511 305.16 443.851 305.94 443.071 306.72 cv
442.291 307.5 441.511 308.16 440.731 308.64 cv
440.011 309.18 439.231 309.54 438.511 309.72 cv
437.791 309.9 437.071 309.84 436.351 309.66 cv
435.691 309.48 434.971 309 434.311 308.34 cv
433.711 307.74 433.291 307.08 433.051 306.42 cv
432.871 305.76 432.871 305.1 432.991 304.38 cv
433.171 303.72 433.531 303 434.071 302.22 cv
434.611 301.5 435.271 300.72 436.111 299.88 cv
cp
437.551 301.14 mo
437.011 301.68 436.591 302.1 436.231 302.52 cv
435.871 303 435.571 303.36 435.331 303.78 cv
435.091 304.14 434.971 304.5 434.851 304.8 cv
434.731 305.16 434.671 305.46 434.671 305.76 cv
434.731 306.06 434.791 306.3 434.911 306.6 cv
435.031 306.84 435.271 307.08 435.511 307.38 cv
435.931 307.8 436.411 308.04 436.891 308.1 cv
437.371 308.16 437.851 308.1 438.331 307.92 cv
438.871 307.68 439.411 307.38 439.951 306.96 cv
440.491 306.54 441.031 306.06 441.571 305.46 cv
442.351 304.74 442.951 304.08 443.371 303.48 cv
443.851 302.88 444.151 302.34 444.271 301.8 cv
444.451 301.32 444.451 300.84 444.391 300.48 cv
444.271 300.06 444.031 299.64 443.671 299.28 cv
443.371 298.98 443.071 298.8 442.771 298.68 cv
442.411 298.56 442.111 298.5 441.811 298.5 cv
441.451 298.5 441.091 298.62 440.791 298.74 cv
440.431 298.86 440.071 299.04 439.711 299.28 cv
439.351 299.52 438.991 299.82 438.631 300.12 cv
438.271 300.42 437.911 300.78 437.551 301.14 cv
cp
432.931 287.76 mo
433.051 287.64 433.111 287.58 433.231 287.52 cv
433.291 287.46 433.351 287.46 433.411 287.4 cv
433.471 287.4 433.531 287.4 433.591 287.4 cv
433.651 287.46 433.711 287.46 433.711 287.52 cv
438.931 292.74 li
438.991 292.74 438.991 292.8 439.051 292.86 cv
439.051 292.92 439.051 292.98 439.051 293.04 cv
438.991 293.1 438.991 293.16 438.931 293.28 cv
438.871 293.34 438.811 293.4 438.691 293.52 cv
438.631 293.64 438.511 293.7 438.451 293.76 cv
438.391 293.76 438.271 293.82 438.211 293.82 cv
438.151 293.88 438.091 293.88 438.031 293.88 cv
437.971 293.82 437.911 293.82 437.911 293.76 cv
435.811 291.72 li
428.191 299.28 li
431.311 300.06 li
431.431 300.12 431.551 300.18 431.611 300.24 cv
431.671 300.24 431.731 300.3 431.731 300.42 cv
431.731 300.48 431.671 300.54 431.611 300.66 cv
431.551 300.72 431.491 300.84 431.371 300.96 cv
431.251 301.02 431.191 301.08 431.131 301.14 cv
431.071 301.2 431.011 301.26 430.951 301.26 cv
430.891 301.32 430.831 301.32 430.771 301.32 cv
430.711 301.32 430.651 301.32 430.531 301.32 cv
426.751 300.48 li
426.751 300.48 426.691 300.48 426.691 300.42 cv
426.631 300.42 426.571 300.42 426.511 300.36 cv
426.451 300.3 426.391 300.3 426.331 300.24 cv
426.271 300.18 426.211 300.06 426.091 300 cv
425.971 299.88 425.851 299.76 425.791 299.64 cv
425.731 299.58 425.671 299.46 425.671 299.4 cv
425.611 299.34 425.611 299.28 425.611 299.28 cv
425.671 299.22 425.671 299.16 425.671 299.16 cv
434.491 290.34 li
432.691 288.54 li
432.631 288.54 432.631 288.48 432.571 288.42 cv
432.571 288.36 432.571 288.3 432.571 288.24 cv
432.631 288.18 432.631 288.06 432.691 288 cv
432.751 287.94 432.811 287.82 432.931 287.76 cv
cp
424.831 279.78 mo
424.951 279.66 425.011 279.6 425.131 279.54 cv
425.191 279.48 425.311 279.42 425.371 279.42 cv
425.431 279.36 425.491 279.36 425.551 279.42 cv
425.611 279.42 425.671 279.42 425.731 279.48 cv
431.251 285 li
431.311 285.06 431.371 285.18 431.431 285.24 cv
431.431 285.3 431.431 285.36 431.431 285.48 cv
431.431 285.54 431.431 285.6 431.371 285.72 cv
431.311 285.78 431.191 285.9 431.131 286.02 cv
431.011 286.14 430.891 286.2 430.831 286.26 cv
430.711 286.38 430.651 286.38 430.591 286.44 cv
430.471 286.5 430.411 286.5 430.291 286.5 cv
430.171 286.56 430.051 286.56 429.931 286.56 cv
425.911 286.62 li
424.951 286.62 424.171 286.68 423.511 286.8 cv
422.851 286.86 422.311 286.98 421.831 287.16 cv
421.351 287.34 420.991 287.52 420.691 287.7 cv
420.391 287.88 420.151 288.12 419.911 288.36 cv
419.671 288.54 419.551 288.78 419.371 289.08 cv
419.251 289.32 419.191 289.62 419.191 289.92 cv
419.191 290.22 419.251 290.52 419.371 290.82 cv
419.491 291.12 419.671 291.42 419.971 291.66 cv
420.271 292.02 420.631 292.26 420.991 292.44 cv
421.351 292.56 421.651 292.74 421.951 292.8 cv
422.251 292.92 422.491 292.98 422.731 292.98 cv
422.911 293.04 423.091 293.1 423.151 293.16 cv
423.151 293.22 423.211 293.22 423.211 293.28 cv
423.211 293.34 423.211 293.4 423.151 293.46 cv
423.151 293.52 423.091 293.58 423.031 293.7 cv
422.971 293.76 422.911 293.88 422.791 294 cv
422.671 294.06 422.611 294.12 422.551 294.18 cv
422.491 294.24 422.431 294.3 422.371 294.3 cv
422.311 294.3 422.311 294.36 422.251 294.36 cv
422.191 294.36 422.071 294.36 421.951 294.36 cv
421.831 294.36 421.651 294.36 421.411 294.3 cv
421.171 294.24 420.871 294.12 420.571 294 cv
420.271 293.82 419.911 293.64 419.611 293.46 cv
419.251 293.22 418.951 292.98 418.651 292.68 cv
418.171 292.2 417.811 291.72 417.571 291.18 cv
417.331 290.7 417.211 290.22 417.211 289.74 cv
417.211 289.26 417.331 288.78 417.511 288.36 cv
417.691 287.94 417.991 287.52 418.351 287.22 cv
418.651 286.86 419.011 286.56 419.371 286.32 cv
419.731 286.08 420.211 285.84 420.751 285.66 cv
421.291 285.48 422.011 285.3 422.791 285.24 cv
423.571 285.12 424.531 285.06 425.731 285.06 cv
428.971 284.94 li
424.591 280.62 li
424.591 280.56 424.531 280.5 424.531 280.44 cv
424.531 280.38 424.531 280.32 424.531 280.26 cv
424.531 280.2 424.591 280.08 424.651 280.02 cv
424.711 279.96 424.771 279.84 424.831 279.78 cv
cp
419.011 268.14 mo
419.191 267.96 419.311 267.9 419.431 267.84 cv
419.611 267.78 419.671 267.84 419.791 267.9 cv
427.231 275.34 li
427.291 275.4 427.351 275.52 427.291 275.64 cv
427.291 275.76 427.171 275.94 426.991 276.12 cv
426.811 276.3 426.631 276.42 426.511 276.42 cv
426.391 276.48 426.271 276.48 426.211 276.36 cv
418.771 268.92 li
418.651 268.86 418.651 268.74 418.711 268.62 cv
418.711 268.5 418.831 268.32 419.011 268.14 cv
cp
404.131 268.68 mo
404.551 268.26 405.031 267.84 405.511 267.48 cv
406.051 267.06 406.531 266.7 407.071 266.46 cv
407.611 266.16 408.151 265.92 408.751 265.8 cv
409.291 265.62 409.891 265.56 410.431 265.62 cv
411.031 265.68 411.631 265.86 412.231 266.16 cv
412.771 266.4 413.371 266.82 413.971 267.42 cv
414.151 267.66 414.391 267.9 414.571 268.14 cv
414.751 268.32 414.871 268.56 414.991 268.8 cv
415.171 268.98 415.231 269.16 415.291 269.34 cv
415.351 269.52 415.411 269.64 415.411 269.7 cv
415.411 269.82 415.411 269.94 415.351 270 cv
415.291 270.12 415.171 270.24 415.051 270.36 cv
414.931 270.48 414.871 270.6 414.751 270.66 cv
414.691 270.72 414.631 270.72 414.571 270.78 cv
414.511 270.78 414.511 270.78 414.451 270.78 cv
414.391 270.72 414.331 270.72 414.331 270.66 cv
414.271 270.6 414.211 270.54 414.151 270.36 cv
414.091 270.24 413.971 270.06 413.851 269.88 cv
413.791 269.64 413.611 269.4 413.431 269.16 cv
413.251 268.92 413.071 268.68 412.771 268.44 cv
412.291 267.9 411.751 267.6 411.211 267.42 cv
410.671 267.24 410.131 267.24 409.591 267.3 cv
408.991 267.42 408.451 267.6 407.911 267.96 cv
407.371 268.26 406.891 268.62 406.411 269.1 cv
406.831 269.22 407.311 269.4 407.791 269.64 cv
408.331 269.94 408.811 270.3 409.291 270.78 cv
409.831 271.32 410.251 271.86 410.491 272.4 cv
410.671 272.94 410.791 273.48 410.791 273.96 cv
410.731 274.44 410.611 274.92 410.311 275.4 cv
410.071 275.82 409.711 276.3 409.291 276.72 cv
408.871 277.14 408.391 277.5 407.851 277.8 cv
407.311 278.04 406.771 278.22 406.171 278.22 cv
405.631 278.28 405.031 278.16 404.431 277.92 cv
403.831 277.68 403.231 277.26 402.631 276.66 cv
402.211 276.24 401.911 275.82 401.671 275.4 cv
401.431 274.98 401.311 274.56 401.311 274.08 cv
401.251 273.66 401.311 273.24 401.431 272.76 cv
401.551 272.34 401.731 271.92 401.971 271.44 cv
402.211 270.96 402.511 270.54 402.931 270.06 cv
403.291 269.58 403.711 269.16 404.131 268.68 cv
cp
405.331 270.18 mo
404.671 270.84 404.191 271.44 403.831 271.98 cv
403.471 272.52 403.231 273 403.111 273.48 cv
402.991 273.9 402.991 274.32 403.111 274.68 cv
403.231 275.04 403.471 275.4 403.831 275.76 cv
404.131 276.06 404.491 276.3 404.851 276.42 cv
405.211 276.54 405.571 276.54 405.931 276.48 cv
406.291 276.48 406.591 276.36 406.951 276.12 cv
407.251 275.94 407.551 275.76 407.851 275.46 cv
408.151 275.16 408.391 274.86 408.571 274.56 cv
408.751 274.2 408.871 273.9 408.931 273.6 cv
408.931 273.24 408.871 272.94 408.751 272.58 cv
408.631 272.28 408.391 271.92 408.031 271.62 cv
407.671 271.2 407.251 270.9 406.771 270.66 cv
406.291 270.42 405.811 270.24 405.331 270.18 cv
f
191.371 209.82 mo
191.371 166.92 li
191.371 165.54 192.511 164.4 193.831 164.4 cv
195.211 164.4 196.351 165.54 196.351 166.92 cv
196.351 209.82 li
196.351 211.14 195.211 212.28 193.831 212.28 cv
192.511 212.28 191.371 211.14 191.371 209.82 cv
.728786 .437995 .0408331 0 cmyk
f
187.171 188.34 mo
193.891 181.68 li
200.551 188.34 li
193.891 195.06 li
.713222 .423743 .0417182 0 cmyk
ef
186.571 188.94 mo
186.271 188.58 186.271 188.1 186.571 187.8 cv
193.291 181.08 li
193.591 180.78 194.131 180.78 194.431 181.08 cv
201.151 187.8 li
201.451 188.1 201.451 188.58 201.151 188.94 cv
194.431 195.6 li
194.131 195.96 193.591 195.96 193.291 195.6 cv
cp
194.431 194.46 mo
193.291 194.46 li
200.011 187.8 li
200.011 188.94 li
193.291 182.22 li
194.431 182.22 li
187.711 188.94 li
187.711 187.8 li
.728786 .437995 .0408331 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LWYAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KEFOZY+Calibri gcheck setglobal} if
2 5164 894 <00010085fea701f3058b00230022401503100b014d03100f014d03100c0d
014c03151f0b85003f2f012f332b2b2b3130010602151412171616060623
222e02272e0335343e02373e0333321e0201ef5f5d5f5b05010e1d19121a
130c033652381c1f3952330109101c16171c10020562c9fe59d6d7fe5acb
0c110b050206080566d1d8dd7171dcd9d26704060603060a1000>KEFOZY+Calibri AddT42Char 
2 5310 895 <0001007afea701e7058b00210033b90012fff0b30b014d12b8fff0b30f01
4d12b8fff0b50c0d014c1200b8ffc0b60b014d001a0a85003f2f012f2b32
2b2b2b313001140e02070e03232226263637361235340227263e0233321e
0217161201e71c385136030c131a121a1d0d01055c5e5e5e0402101c1715
1c1108026775021971ddd8d16605080602050b110cca01a7d7d601a7c909
100a0603060604cdfe4f>KEFOZY+Calibri AddT42Char 
2 1716 272 <0001005affed032003c900350089b11c00b8ffc0b310014d00b8ffe0b30d
014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f014d27b8ff
eeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b400d2f0e01
0e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48312cb801
06b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b2b2b3231
3025140e0623222e0235343e0233321e0615140623222e0223220615141e
0233323e0233321e020320020507193c4b582f61966535417199592b5144
3518090602120d0f273c553a777f21405d3c39563f2b0c070a0703a21119
110d19251d12407bb37585bf7a3b101a22180e131812271f212821b7ae57
83582b242b2308131d00>KEFOZY+Calibri AddT42Char 
2 2298 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>KEFOZY+Calibri AddT42Char 
2 2620 349 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
2900>KEFOZY+Calibri AddT42Char 
2 2862 373 <00010099fffa05d003ca005000ea401b12100b014d13180b014d26100b0c
014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b014d13b8
fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8401e1e16
0d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f10014c0ab801
f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27b8fff0b3
10014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200100106b2
4b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f1239393f
ed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b2b2b2b39
31305d002b2b2b2b25140e0223222e023511342e022322060711140e0223
222e023511342e022322060711140e0223222e023511343e0233321e0215
15363633321e02173e0333321e021505d00812201819201308142c442e39
73450813201817211307162c432e397444081220191820130706121c1716
1d10074c8f4938594430102d514b47245776491f19080b080404080b0802
23395e44245855fd8b080b080404080b080223395e44245855fd8b080b08
0404080b080384080b090303090b0877554f1a2f412831442a133d66894c
>KEFOZY+Calibri AddT42Char 
2 3312 374 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>KEFOZY+Calibri AddT42Char 
2 3602 381 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>KEFOZY+Calibri AddT42Char 
2 4128 400 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>KEFOZY+Calibri AddT42Char 
2 4524 410 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>KEFOZY+Calibri AddT42Char 
KEFOZY+Calibri /CharStrings get begin
/parenleft 894 def
/parenright 895 def
/c 272 def
/e 286 def
/i 349 def
/m 373 def
/n 374 def
/o 381 def
/s 400 def
/t 410 def
end
KEFOZY+Calibri /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KEFOZY+Calibri*1 [40{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /three /four /five /six /seven /eight 42{/.notdef}rp /c /.notdef /e 3{/.notdef}rp /i 3{/.notdef}rp /m /n /o 3{/.notdef}rp /s /t 139{/.notdef}rp]KEFOZY+Calibri nfKEFOZY+Calibri*1 [0 -22.3666 -22.3666 0 0 0 ]msf200.371 162.36 mo(time)[-7.46387 -5.09296 -17.8418 0 ]ysh%ADOBeginSubsetFont: JIWAAA+Calibri-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (JIWAAA+Calibri)%%Title: (JIWAAA+Calibri Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /JIWAAA+Calibri def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-503 -307 1240 964} def/FontInfo 4 dict dup begin/FSType 8 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 3878 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 2 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B7A086528E2CBE7FD4F03CC1C545DFC3C53F52C692334252531335C4AFD91E9493A7B9787114ADBF50CAD0D8D8F4E0FD112CA0EDC244BC77AFB35E52902467E4B7D65BC23E8AB084EE08EDC3C9FE17948A4E93ECA5D5D8A99AF099DAB98A96A7EEC3487AD5909F63F36A9F52E364FE794F0586CEACB0693AEA3E3B131EDB924E9018AC085D5D058B3A8419D5096479413ADE107D9F5302816818EECEB683CD82FAAA79E358EAA71283CC02664EE09C62BDF6E0D9BC98D9F308DF8AEA61A9B7C090BD7FD96A3223C7AE0D3D1A8F2E623FA6B7C467CA6FECDBA0B792188DFEEBD3D01BCE6CC077D778842DE1B5E36F7F8EB4C68A439269E0981B28AD1790AA058065E4B6AD27A659E12C7322A5BE1E7DF9729C0030192F3688A380035351BB0945D5DC7515959F458727E2B8854977E466D6DDC900E997B52F6BAB4C73A178A3B47EBB3C3FC842F51CC6E114336F3E4E5E72B20D8F94A7BA3BA965E83BF37BAA664C34B8502BB9E9B9BEDD7EBC5DCBC4FFF5EBCA9C032449885D42A9DCCBA2A816B59D7978373DF4208E5608F69A2EAF492AC156CC637D5A11AF573B17CF9F38> |3 <001C60D8A8C9B888C146> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /JIWAAA+Calibri-Identity-H /Identity-H 0 [/JIWAAA+Calibri] ct_ComposeFont pop end end
%ADOEndSubsetFont
/KEFOZZ+Calibri /JIWAAA+Calibri-Identity-H findfont ct_VMDictPutKEFOZZ+Calibri [0 -22.3666 -22.3666 0 0 0 ]msf200.371 120.841 mo(\000\003)shKEFOZY+Calibri*1 [0 -22.3666 -22.3666 0 0 0 ]msf200.371 115.741 mo(cost\(min\))[-9.40973 -11.8116 -8.69403 -7.44153 -6.83508 -17.7635 -5.07056 -11.8116 0 ]ysh231.751 209.82 mo
231.751 166.92 li
231.751 165.54 232.891 164.4 234.211 164.4 cv
235.591 164.4 236.731 165.54 236.731 166.92 cv
236.731 209.82 li
236.731 211.14 235.591 212.28 234.211 212.28 cv
232.891 212.28 231.751 211.14 231.751 209.82 cv
.26978 .825711 .676448 0 cmyk
f
227.491 195.06 mo
240.871 195.06 li
240.871 181.68 li
227.491 181.68 li
cp
.260136 .804379 .644221 0 cmyk
f
227.491 195.84 mo
227.071 195.84 226.711 195.48 226.711 195.06 cv
226.711 181.68 li
226.711 181.2 227.071 180.84 227.491 180.84 cv
240.871 180.84 li
241.351 180.84 241.711 181.2 241.711 181.68 cv
241.711 195.06 li
241.711 195.48 241.351 195.84 240.871 195.84 cv
cp
240.871 194.22 mo
240.091 195.06 li
240.091 181.68 li
240.871 182.46 li
227.491 182.46 li
228.331 181.68 li
228.331 195.06 li
227.491 194.22 li
.26978 .825711 .676448 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LWYAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KEFOZY+Calibri gcheck setglobal} if
2 322 17 <000300ac00000401050e001e002b003800c8401a1f1810014d1f100f014d
1f100d014d1f180c014d1f200b014d1fb8022e40281a154010014d15400f
014d15150b2c1810014d2c100f014d2c100d014d2c180c014d2c200b014d
2cba02320000ffc0b50b014d002633b8ffe8b310014d33b8fff0b30f014d
33b8fff0b30d014d33b8fff6b30c014d33b8ffe8b30b014d33b80210400d
a00bc00b020b1a27f431310724b80109b2105134b8010bb10754003fed3f
ed12392fed39012f5de12b2b2b2b2b32d42be12b2b2b2b2b12392f2b2b39
e12b2b2b2b2b313001140e0423212226351134363321321e0215140e0207
1e0301342e0223231133323e0213342e0223231133323e0204011f384f63
7149feae17292917012674946332162b412a355c4528fefd1a385a4ab2c4
435236194e25476b51cefa3b58432601733d67523e2a151f270482271f2c
547a4d2e544738120a35526e02012f4c351cfe5d233b4ffddd3a583c1ffe
381c3752>KEFOZY+Calibri AddT42Char 
2 686 39 <0001005bffee04780520003f00a2401d1c1c0f181810014d18100f014d18
100d014d180a0c014d18100b014d18b80211400d00bf2701202740276027
03270fb8ffe8b310014d0fb8fff0b30f014d0fb8ffecb30d014d0fb8ffee
b30c014d0fb8ffe8b30b014d0fb80232b42f34013418b8010ab42222392f
3ebb010a0005000a0129b2395314b8012cb12f56003fed3ffdd4ed111239
2fed012f5de12b2b2b2b2bd45d5dc4e12b2b2b2b2b12392f313001140e02
23222e0223220e0215141e02333236371121222635343e023321321e0215
11140e0423222e0235343e0233321e04047804080c070c385e835a6baa76
3f457aa9653c7b35fed4111104090c09019b0b16120a123a5c62643196ec
a3565da9ed904a8265451a0a045e131d1308262e264e8abe6f7cc084441d
1d01792224131b110808101c12fe131a261d22180c5dacf0949afab0611a
23291a22>KEFOZY+Calibri AddT42Char 
2 3886 396 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>KEFOZY+Calibri AddT42Char 
2 4772 455 <00010022fe94037c03bc00240052b9001bfff040350b014d371b01291b01
18180b014d261801260e360e022709011a400b014d3a1a0119380b014d3b
19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b5d2b015d
5d5d2b5d5d2b2103060623222e023713262627012634363633321e021701
33133e023332161614070233780631321a201102067c091003febf081024
1e1e22140905010103f8061122201c241106feb51011050c140e01390412
0a035c15180e0503080f0dfd2e02d6130b05050e1812>KEFOZY+Calibri AddT42Char 
KEFOZY+Calibri /CharStrings get begin
/B 17 def
/G 39 def
/r 396 def
/y 455 def
end
KEFOZY+Calibri /Encoding get
dup 66 /B put
dup 71 /G put
dup 114 /r put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KEFOZY+Calibri*1 [40{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /three /four /five /six /seven /eight 9{/.notdef}rp /B 4{/.notdef}rp /G 27{/.notdef}rp /c /.notdef /e 3{/.notdef}rp /i 3{/.notdef}rp /m /n /o 2{/.notdef}rp /r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]KEFOZY+Calibri nfKEFOZY+Calibri*1 [0 -22.3666 -22.3666 0 0 0 ]msf240.691 162.36 mo(memery)[-17.8462 -11.114 -17.8463 -11.114 -7.78131 0 ]yshKEFOZZ+Calibri [0 -22.3666 -22.3666 0 0 0 ]msf240.691 86.5195 mo(\000\003)shKEFOZY+Calibri*1 [0 -22.3666 -22.3666 0 0 0 ]msf240.691 81.5988 mo(cost\(GB\))[-9.51038 -11.7512 -8.69855 -7.50189 -6.71436 -14.0439 -12.2168 0 ]ysh272.131 209.82 mo
272.131 166.92 li
272.131 165.54 273.271 164.4 274.591 164.4 cv
275.971 164.4 277.111 165.54 277.111 166.92 cv
277.111 209.82 li
277.111 211.14 275.971 212.28 274.591 212.28 cv
273.271 212.28 272.131 211.14 272.131 209.82 cv
.46891 .123842 .796139 0 cmyk
f
267.871 188.34 mo
281.311 181.68 li
281.311 195.06 li
.457588 .119387 .770962 0 cmyk
ef
267.511 189.06 mo
267.271 188.94 267.091 188.64 267.091 188.34 cv
267.091 188.04 267.271 187.74 267.511 187.62 cv
280.951 180.9 li
281.191 180.78 281.491 180.84 281.731 180.96 cv
281.971 181.14 282.091 181.38 282.091 181.68 cv
282.091 195.06 li
282.091 195.3 281.971 195.6 281.731 195.72 cv
281.491 195.9 281.191 195.9 280.951 195.78 cv
cp
281.671 194.34 mo
280.471 195.06 li
280.471 181.68 li
281.671 182.4 li
268.231 189.06 li
268.231 187.62 li
.46891 .123842 .796139 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LWYAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KEFOZY+Calibri gcheck setglobal} if
2 1020 68 <000100acfffa062b050e003c00ac4010603e703e020d3030172f2f0a2e18
181ab8ffe8b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b3
0c014d1ab8ffe8b30b014d1ab80211401e24310c0c0a1810014d0a100f01
4d0a100d014d0a0a0c014d0a180b014d0aba02110000ffc040190b014d00
2436510b18170d2f18312e061f28511f5512550555003f3f3f3f12173911
333f012fd42be12b2b2b2b2b32113310e12b2b2b2b2b32113311393d2f33
33113331305d25140e0223222e02351123010e0323222e0227012311140e
0223222e02351134363333321e02170133013e033333321e0215062b0814
1f191721130802fe33030b151d14151e140b02fe47010814201918201307
2c1b68203024180901770501860b1a1f26196d0f1b130c1a080c07050507
0c080467fb94070a070304070a06046cfb99080c070505070c0804a62a24
0c1a281bfc5703a61e2a190b09131d15>KEFOZY+Calibri AddT42Char 
2 1366 258 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>KEFOZY+Calibri AddT42Char 
2 1996 282 <00020060ffed039c056d00260039008b401f3f3b010b1b39100d014d390a
0c014d391010014d39100f014d39180b014d39bb01f90000002fffe0b30d
014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d2fb8ffe8
b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a34b80104
b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b2b
323931305d25140e0223222e023535060623222e0235343e023332161711
343e0233321e021503262623220e0215141e0233323e0237039c07111c14
151c120847995b638c57283262915f4f834007141f1819201209a6437d44
3f58371915345641213d40462719080c070404070c08774d564d83b16274
bb84474543020b070d070505070d07fd4553573c627c404482653d122a43
3100>KEFOZY+Calibri AddT42Char 
2 4974 460 <00010059000002d703b7002b003bb90010fff040160c0d014c26100c0d01
4c2f0001003409440902092511b80102b319480f27b80102b1054b003fed
323fed32012f5dcd5d31302b2b25140e02232122263535343e0237012122
2635343e023321321e021515140e02070121321e0202d706080e08fdd615
1b04080e0a018dfe7f101304090d0902040b110c0704080e0afe7501a608
0d090646131b11071c21220e16161910026a2125121b1107060e1611200e
18171a10fd9607101b00>KEFOZY+Calibri AddT42Char 
KEFOZY+Calibri /CharStrings get begin
/M 68 def
/a 258 def
/d 282 def
/z 460 def
end
KEFOZY+Calibri /Encoding get
dup 77 /M put
dup 97 /a put
dup 100 /d put
dup 122 /z put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KEFOZY+Calibri*1 [40{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /three /four /five /six /seven /eight 9{/.notdef}rp /B 4{/.notdef}rp /G 5{/.notdef}rp /M 19{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 3{/.notdef}rp /m /n /o 2{/.notdef}rp /r /s /t 4{/.notdef}rp /y /z 133{/.notdef}rp]KEFOZY+Calibri nfKEFOZY+Calibri*1 [0 -22.3666 -22.3666 0 0 0 ]msf281.071 162.36 mo(data)[-11.7826 -10.5593 -7.53326 0 ]yshKEFOZZ+Calibri [0 -22.3666 -22.3666 0 0 0 ]msf281.071 121.801 mo(\000\003)shKEFOZY+Calibri*1 [0 -22.3666 -22.3666 0 0 0 ]msf281.071 116.701 mo(size\(MB\))[-8.70972 -5.08624 -8.79913 -11.1028 -6.74115 -19.1994 -12.1318 0 ]ysh-6.80934 721.92 mo
-7.28934 721.92 -7.64934 721.56 -7.64934 721.08 cv
-7.64934 -18.2403 li
-7.64934 -18.6603 -7.28934 -19.0803 -6.80934 -19.0803 cv
475.351 -19.0803 li
475.771 -19.0803 476.191 -18.6603 476.191 -18.2403 cv
476.191 721.08 li
476.191 721.56 475.771 721.92 475.351 721.92 cv
cp
475.351 720.24 mo
474.511 721.08 li
474.511 -18.2403 li
475.351 -17.4003 li
-6.80934 -17.4003 li
-5.96935 -18.2403 li
-5.96935 721.08 li
-6.80934 720.24 li
0 0 0 .602747 cmyk
f
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/KEFOZY+Calibri*1 uf/KEFOZY+Calibri uf/LWYAAA+Calibri uf/KEFOZZ+Calibri-Identity-H uf/KEFOZZ+Calibri /CIDFont urAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
